{
    "how many italians finished in the top ten?": "## Target type: {number of Italians}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the row_number of entities in the top ten\nQuery2: \"get_information(relation='row_number', tail_entity<='10')\"\nStep3: Find the intersection of output_of_query2 and output_of_query1\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query1')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times after the year 1989 did she come in 1st position?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is greater than 1989\nQuery1: \"get_information(relation='Year', tail_entity>'1989')\"\nStep2: Find the entity that Position is 1st\nQuery2: \"get_information(relation='Position', tail_entity='1st')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what were the total number of songs that peaked at number one according to this chart?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity that Peak is 1\nQuery1: \"get_information(relation='Peak', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many drivers were italian?": "None",
    "what was the total number of winning drivers for italy?": "None",
    "how many drivers were from italy?": "None",
    "what are the total number of gold medals italy earned?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many gold medals did italy receive?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many silver medals were won by italy?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how many drivers are from italy?": "None",
    "what is the number of italian riders that placed in the top 10?": "None",
    "how many peaks are listed in italy?": "None",
    "what is the number of silver medals won by italy?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the number of silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how many drivers drove a ferrari in the race?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity that drove a Ferrari.\nQuery1: \"get_information(relation='Constructor', tail_entity='Ferrari')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of stars italy has?": "## Target type: {number}\n## Query:\nStep1: Find the entity that represents Title(s)\nQuery1: \"get_information(relation='Title(s) represented')\"\nStep2: Find the entity named Italy\nQuery2: \"get_information(relation='National Team', tail_entity='Italy')\"\nStep3: Find the Number of stars of output_of_query2\nQuery3: \"get_information(relation='Number of stars', head_entity='output_of_query2')\"",
    "how many more medals did italy win than the soviet union?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Country', tail_entity='Italy')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Soviet Union\nQuery3: \"get_information(relation='Country', tail_entity='Soviet Union')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many were held in the us?": "None",
    "what were the total number of times the venue was located in the united states?": "None",
    "what is the total number of games played in the united states?": "None",
    "what is the total number of events held during november?": "None",
    "how many cities are in the united states?": "None",
    "number of worldcons held outside the united states": "None",
    "what were the number of times the venue was located in the united states?": "None",
    "how many wikimanias have been held in the usa?": "None",
    "how many events were there in total?": "None",
    "what are the number of times a competition took place in the united states?": "None",
    "how many venues are there?": "## Target type: {number of venues}\n## Query:\nStep1: Find all the venues\nQuery1: \"get_information(relation='Venue')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the total number of competitions held in march?": "None",
    "what is the total number of events?": "None",
    "how many festivals were held after 2012?": "## Target type: {number of festivals}\n## Query:\nStep1: Find the festivals held after 2012\nQuery1: \"get_information(relation='Year', tail_entity>'2012')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of these conventions are held outside of the usa? (hawaii is in the usa)": "None",
    "how many countries have one more than 10 gold medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity with the relation of Gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many stamp sets had at least 50,000 issued?": "## Target type: {number}\n## Query:\nStep1: Find the stamp sets with at least 50,000 issued\nQuery1: \"get_information(relation='Qty. Issued', tail_entity>='50000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams had more points than silex?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that is S\u00edlex\nQuery1: \"get_information(relation='Team', tail_entity='S\u00edlex')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entities with more points than output_of_query2\nQuery3: \"get_information(relation='Points', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many countries have at least 10 total medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries with at least 10 total medals\nQuery1: \"get_information(relation='Total', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations received a medal in each gold, silver, and bronze?": "None",
    "how many drivers earned at least 20 points or more?": "## Target type: {number}\n## Query:\nStep1: Find the drivers who earned at least 20 points\nQuery1: \"get_information(relation='Points', tail_entity>='20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players have a total above 10?": "None",
    "how many denominations never dropped below 20%?": "None",
    "how many more bronze medals were awarded than silver?": "None",
    "what are the number of times there were more than 10,000 contestants?": "None",
    "which was the only stamp set to have more than 200,000 issued?": "## Target type: {stamp set}\n## Query:\nStep1: Find the entity with the relation of Qty. Issued\nQuery1: \"get_information(relation='Qty. Issued')\"\nStep2: Find the entity with Qty. Issued greater than 200,000\nQuery2: \"get_information(relation='Qty. Issued', tail_entity>'200000')\"\nStep3: Find the Stamp set of output_of_query2\nQuery3: \"get_information(relation='Stamp set', head_entity='output_of_query2')\"",
    "how many athletes earned more than 5,000 total points?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the total points of all athletes\nQuery1: \"get_information(relation='Total', tail_entity>'5000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many riders got more than 10 points?": "None",
    "how many countries won more than 3 bronze metals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity that has more than 3 bronze medals\nQuery1: \"get_information(relation='Bronze', tail_entity>'3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which track plays before \"felonies\"?": "None",
    "what song was performed before \"fire\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is \"Fire\"\nQuery1: \"get_information(relation='Title', tail_entity='Fire')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what track comes after \"say something\"?": "None",
    "tell me a song that was released in 1955 but was not on \"after dark\".": "None",
    "after street glory, what song is listed?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"Street Glory\"\nQuery1: \"get_information(relation='Title', tail_entity='Street Glory')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what is the track before \"melodies from heaven\"?": "## Target type: {track}\n## Query:\nStep1: Find the entity that Title is \"Melodies from Heaven\"\nQuery1: \"get_information(relation='Title', tail_entity='Melodies from Heaven')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which track was recorded before all the others?": "None",
    "which song is longer, \"turn tha party out\" or \"only when i'm drunk\"?": "None",
    "what is the title of the song before track #4": "## Target type: {title}\n## Query:\nStep1: Find the entity with the relation of #\nQuery1: \"get_information(relation='#', tail_entity='4')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which title has the same notes as night with a sky full of stars?": "None",
    "which song comes directly before \"down the charts\"?": "## Target type: {Title of the song}\n## Query:\nStep1: Find the entity that Title is \"Down the Charts\"\nQuery1: \"get_information(relation='Title', tail_entity='Down the Charts')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which song is the only one that is shorter than \"where the spirit is?\"": "None",
    "what song is longer in terms of time, \"it's murda\" or \"son of niah\"?": "## Target type: {song}\n## Query:\nStep1: Find the length of \"It's Murda\"\nQuery1: \"get_information(relation='Title', tail_entity='It's Murda')\"\nStep2: Find the length of \"Son of Niah\"\nQuery2: \"get_information(relation='Title', tail_entity='Son of Niah')\"\nStep3: Compare the length of output_of_query1 and output_of_query2\nQuery3: \"if output_of_query1 > output_of_query2, then 'It's Murda', else 'Son of Niah'\"",
    "which track has the same producer as the track \"say something\"?": "None",
    "what is the first song on this album?": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which countries each won 3 gold medals?": "## Target type: {list of countries}\n## Query:\nStep1: Find the entity that Gold is 3\nQuery1: \"get_information(relation='Gold', tail_entity='3')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the only nation to receive three gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that received three gold medals\nQuery1: \"get_information(relation='Gold', tail_entity='3')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what was the only country to win three silver medals in this competition?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that has Total silver medals as 3\nQuery1: \"get_information(relation='Silver', tail_entity='3')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many countries scored at least 3 gold medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries with at least 3 gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of silver medals won by russia, norway, and sweden combined?": "None",
    "who won more gold medals than spain?": "None",
    "what country won more gold medals than any other?": "None",
    "how many bronzes did finland win?": "## Target type: {number of bronzes}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Nation', tail_entity='Finland')\"\nStep2: Find the number of bronzes of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "who won more gold medals than the united states?": "None",
    "how many countries earned only one gold medal?": "## Target type: {number}\n## Query:\nStep1: Find the countries with only one gold medal\nQuery1: \"get_information(relation='Gold', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which countries had the same number of gold medals as belarus?": "None",
    "which countries won at least 3 silver medals?": "None",
    "how many countries received more bronze medals than sweden?": "None",
    "how many nations won at least three silver medals?": "None",
    "which country won the same amount of silver medals as the french and the russians?": "None",
    "what is the last competition they competed in?": "## Target type: {competition}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "who is the previous team to italy (ita) italy ii?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team is Italy (ITA) Italy II\nQuery1: \"get_information(relation='Team', tail_entity='Italy (ITA) Italy II')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "what was the last competition this competitor competed in?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "when was the last season?": "## Target type: {'Season'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "what was the last race of the season?": "None",
    "what was the last competition they took place in?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what was the last year mario an\u00e8i\u00e6 had an atp win?": "None",
    "where was the last competition held according to this chart?": "## Target type: {venue}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many laps did scuderia ferrari with driver robert manzon complete?": "To calculate the laps completed by Scuderia Ferrari with driver Robert Manzon, we can follow these steps:\n\n1. Find the entity with the relation of Team being Scuderia Ferrari and the driver being Robert Manzon.\n2. Get the number of laps completed by the output of the previous query.\n\nThe conditional graph query for this question would be:\n```python\nStep1: Find the entity with the relation of Team being Scuderia Ferrari and the driver being Robert Manzon.\nQuery1: \"get_information(relation='Team', tail_entity='Scuderia Ferrari', head_entity='Robert Manzon')\"\nStep2: Get the number of laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\n```",
    "who was the only italian driver in the top 10 of the 2013 rali vinho da madeira?": "None",
    "which year was rosi mittermaier's last season?": "None",
    "who was the only driver to win in a car other than a subaru impreza after the year 2005?": "None",
    "where was the last competition held?": "## Target type: {Venue}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "which driver was listed as the winning driver more than any other driver?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that appears the most as winning driver\nQuery1: \"get_information(relation='Winning Driver', tail_entity>='most')\"\nStep2: Find the Winning Driver of output_of_query1\nQuery2: \"get_information(relation='Winning Driver', head_entity='output_of_query1')\"",
    "who was the winning driver after nigel mansell?": "## Target type: {winning driver}\n## Query:\nStep1: Find the entity named Nigel Mansell\nQuery1: \"get_information(relation='Winning Driver', tail_entity='Nigel Mansell')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Winning Driver of output_of_query4\nQuery5: \"get_information(relation='Winning Driver', head_entity='output_of_query4')\"",
    "what driver finished first?": "None",
    "what type of engine did drivers use the most in this race?": "None",
    "which driver scored the top number of points?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which driver scored the most points?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which driver earned 4th place?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that has the position of 4th place\nQuery1: \"get_information(relation='Pos.', tail_entity='4')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "who was the first driver to finish?": "## Target type: {Driver}\n## Query:\nStep1: Find the entity with the relation of Pos. is 1\nQuery1: \"get_information(relation='Pos.', tail_entity='1')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "lit the total number of wins listed from the various drivers?": "None",
    "what driver earned the most points?": "None",
    "how many drivers ended the race early because of engine problems?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the drivers who retired early\nQuery1: \"get_information(relation='Pos', tail_entity='Ret')\"\nStep2: Find the drivers with engine problems from output_of_query1\nQuery2: \"get_information(relation='Time/Retired', tail_entity='Engine')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many drivers received points from the race?": "None",
    "which driver finished after jack brabham?": "None",
    "which driver scored the least amount of points?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which year is previous to 2011": "## Target type: {year}\n## Query:\nStep1: Find the previous year to 2011\nQuery1: \"get_information(relation='Year', tail_entity<'2011')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what is next date that is listed after august 7th?": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is August 7th\nQuery1: \"get_information(relation='Date', tail_entity='August 7th')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what is the last date listed?": "## Target type: {Date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which date comes before 12 march 1983?": "None",
    "what was the next date after 20 february 2008?": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is 20 February 2008\nQuery1: \"get_information(relation='Date', tail_entity='20 February 2008')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "which date is listed after july 20th, 2012?": "None",
    "what is the date above 19 october 2013?": "None",
    "what is the next date after september 12 1998?": "## Target type: {date}\n## Query:\nStep1: Find the entity named September 12, 1998\nQuery1: \"get_information(relation='Date', tail_entity='September 12, 1998')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what is the year coming after 2011?": "None",
    "what date is after october 1st?": "None",
    "what is the next date after april 8?": "None",
    "what is the last date shown for february 2010?": "None",
    "what is the date of the last event listed?": "## Target type: {date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "all the dates are no later than what year?": "## Target type: {year}\n## Query:\nStep1: Find all the Premi\u00e8re dates\nQuery1: \"get_information(relation='Premi\u00e8re date')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Extract the year from output_of_query2\nQuery3: \"extract_year(date='output_of_query2')\"",
    "which country had the least bronze medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country won the least amount of bronze medals?": "None",
    "which country received the least bronze medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the Nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which nation won the least number of bronze medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bronze medals\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which nation received the least bronze medals": "## Target type: {nation}\n## Query:\nStep1: Find the entity that has the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what country won the least amount of gold medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='NPC', head_entity='output_of_query3')\"",
    "which nation received the least number of gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min gold medals\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country won the least number of medals?": "## Target type: {country}\n## Query:\nStep1: Get the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which nation has earned the least amount of gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Gold medals\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what is the numerical difference of total medals between the countries with the most and least amount of medals?": "None",
    "what is the difference between the nation with the most medals and the nation with the least amount of medals?": "None",
    "what is the difference between the number of medals earned by the highest-earning country and the lowest-earning country?": "None",
    "which country scored the least medals?": "## Target type: {country}\n## Query:\nStep1: Find the total medals of all countries\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min total medals\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country won the least medals?": "## Target type: {country}\n## Query:\nStep1: Find the total medals of all countries\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min total medals\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country had the highest total amount of medals?": "None",
    "which country had the most medals in the competition?": "None",
    "which countries won the least amount of medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country had the highest number of medals?": "None",
    "what country had the most medals?": "None",
    "which countries have the least amount of total medals?": "## Target type: {countries}\n## Query:\nStep1: Find the total medals of all countries\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the min total medals\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the countries with the min total medals\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country won the most medals?": "None",
    "which country won the most medals total?": "None",
    "what country ranks first in total medals won?": "None",
    "tell me the number of hard surface courts.": "None",
    "what number of championships had hard surfaces?": "None",
    "how many matches were played on a hard surface?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Surface as 'Hard'\nQuery1: \"get_information(relation='Surface', tail_entity='Hard')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many were played on a hard surface?": "## Target type: {number}\n## Query:\nStep1: Find the games played on a hard surface\nQuery1: \"get_information(relation='Surface', tail_entity='Hard')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was each tournament on a hard surface?": "## Target type: {Boolean}\n## Query:\nStep1: Find all the Tournaments\nQuery1: \"get_information(relation='Tournament')\"\nStep2: Find the Surface of output_of_query1\nQuery2: \"get_information(relation='Surface', head_entity='output_of_query1')\"\nStep3: Check if all the Surfaces are Hard\nQuery3: \"check_if_all_equal(set='output_of_query2', value='Hard')\"",
    "how many courts are clay?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Surface is Clay\nQuery1: \"get_information(relation='Surface', tail_entity='Clay')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of times a hard surface was used?": "None",
    "what is the number of games played on hard surfaces this season?": "None",
    "how many consecutive years was there a hard surface at the championship?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Surface as Hard\nQuery1: \"get_information(relation='Surface', tail_entity='Hard')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what's the total of grass and hard surfaces listed?": "## Target type: {surface}\n## Query:\nStep1: Find the surfaces listed\nQuery1: \"get_information(relation='Surface')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of times hard appears as the surface?": "None",
    "how many surfaces are grass?": "## Target type: {number of surfaces}\n## Query:\nStep1: Find the surfaces that are grass\nQuery1: \"get_information(relation='Surface', tail_entity='Grass')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of victories this player has had on hard surfaces?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has played on hard surfaces and won\nQuery1: \"get_information(relation='Surface', tail_entity='Hard', head_entity='winner')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the cause of the most deaths?": "None",
    "what year had the highest total number?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which year was responsible for 4,140 deaths?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of deaths\nQuery1: \"get_information(relation='deaths', tail_entity='4,140')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='year', head_entity='output_of_query1')\"",
    "in what year were there the most births?": "None",
    "how many causes were responsible for more than 50,000 confirmed deaths?": "None",
    "what is the largest number of births recorded?": "None",
    "how many years had more than 500 deaths but less than 502?": "None",
    "which year had more deaths, 1998 or 2006?": "None",
    "which country had the least number of recorded births?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Region/Country', head_entity='output_of_query3')\"",
    "in which year did spain show the highest number of live births over deaths?": "None",
    "what year had the highest unemployment rate?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Unemployment Rate\nQuery1: \"get_information(relation='Unemployment Rate %')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Unemployment Rate\nQuery3: \"get_information(relation='Unemployment Rate %', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which event had the most casualties?": "## Target type: {event}\n## Query:\nStep1: Find the entity with the relation of Casualties\nQuery1: \"get_information(relation='Casualties')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Casualties\nQuery3: \"get_information(relation='Casualties', tail_entity='output_of_query2')\"\nStep4: Find the event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "which country had the larger total of births?": "None",
    "what was the average number of victims for all places?": "None",
    "how many events had at least 100 fatalities/dead?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Casualties\nQuery1: \"get_information(relation='Casualties')\"\nStep2: Find the casualties that have at least 100 fatalities/dead\nQuery2: \"get_information(relation='Casualties', tail_entity>='100')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "is oregon route 69 newer than oregon route 90?": "None",
    "which route existed longer, us route 630 or us route 30n?": "None",
    "which route was eliminated first?": "None",
    "how many intersecting roads come after highway 9?": "None",
    "what is the last intersecting road on the chart?": "## Target type: {intersecting road}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the intersecting road of output_of_query3\nQuery4: \"get_information(relation='Intersecting road', head_entity='output_of_query3')\"",
    "which portion has the same intersecting route as rabin boulevard?": "None",
    "where is the only intersecting highway over 20 km?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Intersecting highway\nQuery1: \"get_information(relation='Interescting highway')\"\nStep2: Find the km of output_of_query1\nQuery2: \"get_information(relation='km', head_entity='output_of_query1')\"\nStep3: Find the entity whose km is over 20\nQuery3: \"get_information(relation='km', tail_entity>'20')\"\nStep4: Get the location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "are any of the lanes in consecutive order?": "## Target type: {lane}\n## Query:\nStep1: Find all the lanes\nQuery1: \"get_information(relation='Lane')\"\nStep2: Find the consecutive order of lanes\nQuery2: \"consecutive_order(set='output_of_query1')\"",
    "what was the first route formed in the 1960's?": "None",
    "what is the last intersecting road?": "## Target type: {Intersecting road}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Intersecting road of output_of_query3\nQuery4: \"get_information(relation='Intersecting road', head_entity='output_of_query3')\"",
    "which routes were at least 100 km?": "None",
    "which bridge is in delaware and carries de 9?": "## Target type: {bridge}\n## Query:\nStep1: Find the entity that carries DE 9\nQuery1: \"get_information(relation='Carries', tail_entity='DE 9')\"\nStep2: Find the bridge in Delaware\nQuery2: \"get_information(relation='Location', tail_entity='Delaware')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "how many routes have below 100 km total?": "None",
    "at least how many aerial tramways were inaugurated after 1970?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year of inauguration\nQuery1: \"get_information(relation='Year of inauguration')\"\nStep2: Find the entities whose inauguration year is after 1970\nQuery2: \"get_information(relation='Year of inauguration', tail_entity>'1970')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of miles that number sr-3 has?": "None",
    "what was the total number of laps for ecurie savin-calberson and dana chevrolet inc.?": "None",
    "how many trains on this graph do not mention alco or alco-brooks as its builder?": "## Target type: {count of trains}\n## Query:\nStep1: Find all the trains\nQuery1: \"get_information(relation='Model')\"\nStep2: Find the trains with Alco or Alco-Brooks as its builder\nQuery2: \"get_information(relation='Year, Builder', head_entity='Alco')\"\nQuery3: \"get_information(relation='Year, Builder', head_entity='Alco-Brooks')\"\nStep3: Get the union of output_of_query2 and output_of_query3\nQuery3: \"set_union(set1='output_of_query2', set2='output_of_query3')\"\nStep4: Find the difference of output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query1', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was the last team he raced for?": "## Target type: {'Team'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what team is listed above diamond racing?": "None",
    "how many drivers were retired before the race could end?": "None",
    "how many drivers did team rahal have in the race?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity named Team Rahal\nQuery1: \"get_information(relation='Team', tail_entity='Rahal')\"\nStep2: Find the drivers of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "previous to 1965, when did jones have a number 5 start at the indy 500?": "None",
    "how many racers did not start?": "None",
    "what chassis was on the last team on the chart's car?": "## Target type: {chassis}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Chassis of output_of_query3\nQuery4: \"get_information(relation='Chassis', head_entity='output_of_query3')\"",
    "which team had the most number of laps?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "the number of cars finishing in the top ten for braun racing.": "None",
    "how many total races has this racer competed in?": "None",
    "what other team only completed 183 laps with holman & moody?": "None",
    "what was the number of drivers that did not finish the race?": "None",
    "what was the number of the car greg murphy competed with in the 2012 hamilton street circuit?": "## Target type: {car number}\n## Query:\nStep1: Find the entity named Greg Murphy\nQuery1: \"get_information(relation='Team', tail_entity='Greg Murphy')\"\nStep2: Find the car number of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Year and Track\nQuery3: \"get_information(relation='Year', tail_entity='2012', key='Track', value='Hamilton Street Circuit')\"\nStep4: Find the car number of output_of_query3\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"",
    "how many games were in uefa or world cup qualifying matches?": "None",
    "how many goals were scored at the euro 2012 qualifying competition?": "None",
    "what number of players scored in the league cup?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity with the relation of League Cup\nQuery1: \"get_information(relation='League Cup')\"\nStep2: Get the total number of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many total goals have been scored against croatia in the world cup?": "None",
    "what is the total number of matches in the uefa cup?": "None",
    "how many players had at least 20 league goals scored?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with at least 20 league goals\nQuery1: \"get_information(relation='Goals', tail_entity>='20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in how many seasons were there at least 20 goals scored?": "None",
    "how many teams had above 20 matches in the season?": "None",
    "how many games only had one goal scored total?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with a score of \"1\u20130\"\nQuery1: \"get_information(relation='Score', tail_entity='1\u20130')\"\nStep2: Find the games with a score of \"0\u20131\"\nQuery2: \"get_information(relation='Score', tail_entity='0\u20131')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many total goals were scored?": "None",
    "how many players scored at least 2 goals during the fa cup?": "None",
    "how many goals were scored against spain on november 2005?": "None",
    "how many games had less than 5 total goals scored?": "None",
    "how many players scored at least 30 goals?": "## Target type: {number}\n## Query:\nStep1: Find the players with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Find the players who scored at least 30 goals\nQuery2: \"get_information(relation='Goals', tail_entity>='30')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the most goals scored in one game?": "None",
    "who has won the most league cups ?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity with the relation of Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the count of each entity in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity that appears the most in output_of_query2\nQuery3: \"get_information(relation='Winner', tail_entity>='most')\"",
    "which competition comes above uefa europa league": "## Target type: {competition}\n## Query:\nStep1: Find the entity named UEFA Europa League\nQuery1: \"get_information(relation='Competition', tail_entity='UEFA Europa League')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "how many european cups has this team been a part of?": "None",
    "how many spanish champions have there been?": "None",
    "what's the number of teams that won the cup four times?": "None",
    "list the other competitions besides european u23 championship that came in 1st position?": "None",
    "how many different clubs have won?": "None",
    "how many number of competitions were played?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the unique row numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many competitions took place outside of europe?": "None",
    "how many clubs were runner-ups after the year 2000?": "None",
    "what is the number of countries that played during the 2011-12 uefa europa league?": "## Target type: {number of countries}\n## Query:\nStep1: Find the season of UEFA Europa League with the value of 2011-12\nQuery1: \"get_information(relation='Season', tail_entity='2011\u201312')\"\nStep2: Find the entity with the relation of Competition as UEFA Europa League\nQuery2: \"get_information(relation='Competition', tail_entity='UEFA Europa League')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many competitions were not for the fifa world cup?": "None",
    "which film made the most worldwide gross income?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Worldwide Gross\nQuery1: \"get_information(relation='Worldwide Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max gross income\nQuery3: \"get_information(relation='Worldwide Gross', tail_entity='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what film grossed the most money.": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Gross\nQuery1: \"get_information(relation='Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gross\nQuery3: \"get_information(relation='Gross', tail_entity='output_of_query2')\"\nStep4: Find the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "which film had the largest single week gross?": "## Target type: {film}\n## Query:\nStep1: Find the film with the relation of Weekend Gross\nQuery1: \"get_information(relation='Weekend Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gross\nQuery3: \"get_information(relation='Weekend Gross', tail_entity='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what is the top grossing film?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Gross (worldwide)\nQuery1: \"get_information(relation='Gross (worldwide)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gross (worldwide)\nQuery3: \"get_information(relation='Gross (worldwide)', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which film was the highest grossing?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Gross\nQuery1: \"get_information(relation='Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gross\nQuery3: \"get_information(relation='Gross', tail_entity='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "which country or region had the most releases?": "None",
    "what is the top-grossing film on this list?": "## Target type: {film}\n## Query:\nStep1: Find the top-grossing film on the list\nQuery1: \"get_information(relation='Gross', tail_entity>='highest')\"\nStep2: Find the film of output_of_query1\nQuery2: \"get_information(relation='Film', head_entity='output_of_query1')\"",
    "which country had the highest total?": "None",
    "what movie grossed the most amount of money in one weekend?": "## Target type: {movie}\n## Query:\nStep1: Find the entity with the relation of Weekend Gross\nQuery1: \"get_information(relation='Weekend Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max gross\nQuery3: \"get_information(relation='Weekend Gross', tail_entity='output_of_query2')\"\nStep4: Find the movie of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what movie was the highest grossing film the most consecutive weekends?": "None",
    "which film had the least opening weekend?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Opening Weekend (three day)\nQuery1: \"get_information(relation='Opening Weekend (three day)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Opening Weekend\nQuery3: \"get_information(relation='Opening Weekend (three day)', tail_entity='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what is his highest number of consecutive wins?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Outcome is Winner\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the number of consecutive wins by calculating the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the longest consecutive win streak?": "None",
    "what was the highest number of consecutive wins?": "None",
    "how many total wins has he had?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Outcome as \"Winner\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games was the longest consecutive win streak?": "None",
    "what was the largest number of consecutive wins?": "None",
    "how many consecutive wins did the team have?": "None",
    "how many times did he finish in the top three?": "## Target type: {number}\n## Query:\nStep1: Find all the ranks where finish is less than or equal to 3.\nQuery1: \"get_information(relation='Finish', tail_entity<='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the most consecutive wins?": "None",
    "what was his greatest number of wins in a year?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many consecutive races in a row was ayrton senna the winning driver?": "None",
    "what is the largest number of consecutive wins?": "## Target type: {number of consecutive wins}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Get the list of consecutive wins from output_of_query1\nQuery2: \"consecutive_wins(set='output_of_query1')\"\nStep3: Get the max number of consecutive wins from output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "how long was their longest winning streak?": "None",
    "how many consecutive tour of qatar did tom boonen win a stage?": "None",
    "how many races was she above the top 10?": "None",
    "what is the longest streak of consecutive finishes below 10th place?": "None",
    "who had the most weeks at number one, according to the table?": "None",
    "how many races did she compete in each of the following years: 2009, 2010, and 2011.": "None",
    "how many singles peaked above number ten on the charts?": "None",
    "what was the first race where he placed in the top 10?": "None",
    "in how many races did he not place in the top 10?": "None",
    "how many times was 1st position achieved?": "None",
    "how many competitions did he place in the top three?": "## Target type: {number}\n## Query:\nStep1: Find all the competitions where the position is in top three\nQuery1: \"get_information(relation='Position', tail_entity<='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me the number of times he finished above 10th place.": "None",
    "how many consecutive years did the singer not have a single on a chart?": "None",
    "which song stayed at no.1 for the most amount of weeks.": "None",
    "which year held the most tournaments?": "## Target type: {year}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the year with the most tournaments\nQuery2: \"get_information(relation='Year', tail_entity>='most')\"",
    "what month were the most tournaments held in?": "## Target type: {month}\n## Query:\nStep1: Find all the Date entities\nQuery1: \"get_information(relation='Date')\"\nStep2: Extract the month from each Date in output_of_query1\nQuery2: \"extract_month(date='output_of_query1')\"\nStep3: Calculate the frequency of each month in output_of_query2\nQuery3: \"calculate_frequency(set='output_of_query2')\"\nStep4: Find the month with the highest frequency in output_of_query3\nQuery4: \"find_max_frequency(set='output_of_query3')\"",
    "which month hosts the most tournaments?": "None",
    "in what country were the most games held?": "## Target type: {country}\n## Query:\nStep1: Find all the countries where games were held\nQuery1: \"get_information(relation='Venue')\"\nStep2: Find the country that appears the most in output_of_query1\nQuery2: \"mode(set='output_of_query1')\"",
    "which country had the most wins?": "None",
    "which country has the most pga championships.": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of PGA\nQuery1: \"get_information(relation='PGA')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max PGA\nQuery3: \"get_information(relation='PGA', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "how many opponents played in their own country?": "None",
    "which country have they played against the most?": "None",
    "which tournament has the largest number?": "None",
    "which country had the most competitors?": "None",
    "the most matches were in what year?": "None",
    "which year held the most competitions?": "None",
    "which country scored the most points?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "which country was the venue in the most number of times?": "None",
    "which tournament offered the most prize money?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity with the relation of Prize Money\nQuery1: \"get_information(relation='Prize Money')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Prize Money\nQuery3: \"get_information(relation='Prize Money', tail_entity='output_of_query2')\"\nStep4: Find the tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "what are the number of titles written by patrick massett and john zinman?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity with the relation of Written by:Patrick Massett & John Zinman\nQuery1: \"get_information(relation='Written by', tail_entity='Patrick Massett & John Zinman')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which book won the award a total of 2 times?": "None",
    "who wrote with o.c. the most?": "None",
    "which part was published latest?": "## Target type: {Part}\n## Query:\nStep1: Find the latest public release date\nQuery1: \"get_information(relation='Latest public release date (edition)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max release date\nQuery3: \"get_information(relation='Latest public release date (edition)', tail_entity='output_of_query2')\"\nStep4: Find the Part of output_of_query3\nQuery4: \"get_information(relation='Part', head_entity='output_of_query3')\"",
    "were more episodes written by michael piller & bill dial or by bob shane & ron friedman?": "## Target type: {comparison}\n## Query:\nStep1: Find the episodes written by Michael Piller & Bill Dial\nQuery1: \"get_information(relation='Written by', tail_entity='Michael Piller & Bill Dial')\"\nStep2: Find the episodes written by Bob Shane & Ron Friedman\nQuery2: \"get_information(relation='Written by', tail_entity='Bob Shane & Ron Friedman')\"\nStep3: Compare the count of output_of_query1 and output_of_query2\nQuery3: \"compare_count(set1='output_of_query1', set2='output_of_query2')\"",
    "how many reviews were in print?": "## Target type: {number}\n## Query:\nStep1: Find the reviews that are in print\nQuery1: \"get_information(relation='Review', tail_entity='print')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many other episodes were written by john zinman other than \"reunion\"?": "## Target type: {number}\n## Query:\nStep1: Find the entity named John Zinman\nQuery1: \"get_information(relation='Written by', tail_entity='John Zinman')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Reunion\nQuery3: \"get_information(relation='Title', tail_entity='Reunion')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the set difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many seasons of play-by-play did chris schenkel and chuck thompson host combined?": "None",
    "what is the total number of episodes that were written by craig o'neill?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity with the relation Written by 'Craig O'Neill'\nQuery1: \"get_information(relation='Written by', tail_entity='Craig O'Neill')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what volume is previous to the volume that included contents such as lunar lagoon, 4-dimensional vistas, the moderator, skywatch-7?": "None",
    "what number of publications are indicated as being in print?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Review being 'print'\nQuery1: \"get_information(relation='Review', tail_entity='print')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many titles are listed?": "## Target type: {number of titles}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what religious group is the only one with at least 90% literacy %?": "## Target type: {religious group}\n## Query:\nStep1: Find the religious groups with at least 90% literacy\nQuery1: \"get_information(relation='Literacy (%)', tail_entity>='90')\"\nStep2: Find the religious group of output_of_query1\nQuery2: \"get_information(relation='Religious group', head_entity='output_of_query1')\"",
    "how many of these religious groups have a literacy rate of above 60%?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Religious group\nQuery1: \"get_information(relation='Religious group')\"\nStep2: Find the literacy rate of output_of_query1\nQuery2: \"get_information(relation='Literacy', head_entity='output_of_query1')\"\nStep3: Find the entity whose literacy rate is above 60%\nQuery3: \"get_information(relation='Literacy', tail_entity>'60%')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which is the only religious group to have a literacy rate above 90%?": "## Target type: {'Religious group'}\n## Query:\nStep1: Find the entity that has a Literacy rate above 90%\nQuery1: \"get_information(relation='Literacy', tail_entity>'90%')\"\nStep2: Find the Religious group of output_of_query1\nQuery2: \"get_information(relation='Religious group', head_entity='output_of_query1')\"",
    "which school offers the most grades?": "None",
    "what is the number of scores that are under 20%?": "None",
    "how many state has an average under 8.5?": "## Target type: {number of states}\n## Query:\nStep1: Find the entities with the relation of Average\nQuery1: \"get_information(relation='Average')\"\nStep2: Find the entities with an average under 8.5\nQuery2: \"get_information(relation='Average', tail_entity<'8.5')\"\nStep3: Find the states of output_of_query2\nQuery3: \"get_information(relation='State', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which score consecutively had the highest percentage of students in it each year?": "None",
    "how many had voter turnouts more than 50%?": "None",
    "the school with the most students?": "None",
    "how many average scores were below 8.700?": "## Target type: {number of average scores}\n## Query:\nStep1: Find the average scores that are below 8.700\nQuery1: \"get_information(relation='Average', tail_entity<'8.700')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which school has the least amount of student enrollment between 2010-2011 and 2011-2012?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Enrollment\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Enrollment\nQuery3: \"get_information(relation='Enrollment', tail_entity='output_of_query2')\"\nStep4: Find the School of output_of_query3\nQuery4: \"get_information(relation='School', head_entity='output_of_query3')\"",
    "how many times were the % of constituency votes at least 1.0?": "None",
    "what is the total number of schools listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the schools listed in the table\nQuery1: \"get_information(relation='School')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which institution has the highest amount of enrollment?": "## Target type: {Institution}\n## Query:\nStep1: Find the max enrollment\nQuery1: \"get_information(relation='Enrollment', tail_entity>='max')\"\nStep2: Find the institution with the max enrollment\nQuery2: \"get_information(relation='Institution', head_entity='output_of_query1')\"",
    "what is the total number of teams to have 4 total wins?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Total Wins\nQuery1: \"get_information(relation='Won', tail_entity='4')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams won at least 4 matches?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Matches won at least 4\nQuery1: \"get_information(relation='Won', tail_entity>='4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players had a total of 4?": "## Target type: {count of players}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total', tail_entity='4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total titles were won?": "None",
    "at most how many championships were won consecutively?": "None",
    "how many teams won at least 1 title?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams with the relation of Titles greater than or equal to 1\nQuery1: \"get_information(relation='Titles', tail_entity>='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total championships are included?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Championship\nQuery1: \"get_information(relation='Championship')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive times did they play in tier 4?": "## Target type: {number}\n## Query:\nStep1: Find the consecutive times they played in tier 4\nQuery1: \"get_information(relation='Level', tail_entity='Tier 4')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which teams at most have 4 players?": "None",
    "how many schools have at least 5 outright titles?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools that have at least 5 outright titles\nQuery1: \"get_information(relation='Outright Titles', tail_entity>='5')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many championships are listed?": "None",
    "which teams have the most number of wins?": "## Target type: {teams}\n## Query:\nStep1: Find the entity with the relation of Winners\nQuery1: \"get_information(relation='Winners')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Wins\nQuery3: \"get_information(relation='Winners', tail_entity='output_of_query2')\"",
    "what is the first season listed on the table?": "None",
    "what is the total of the first population?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the lowest row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "after 800 ce, how many other periods existed?": "None",
    "what is the first year listed?": "## Target type: {Year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the total of dates?": "## Target type: {number}\n## Query:\nStep1: Find all the dates\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of dates listed?": "To calculate the total number of dates listed, the following steps can be taken:\n\n1. Retrieve all the dates listed.\n2. Count the total number of dates.\n\nQuery:\nStep 1: Retrieve all the dates listed\nQuery1: \"get_information(relation='Date')\"\nStep 2: Count the total number of dates\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of year begun?": "None",
    "how many years are listed?": "## Target type: {number of years}\n## Query:\nStep1: Find all the years listed\nQuery1: \"get_information(relation='Year')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many dates are listed?": "## Target type: {number}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who has the most goals?": "None",
    "which player has the highest number of goals?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals\nQuery3: \"get_information(relation='Goals', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who had the most goal scores?": "None",
    "what player has the most number of goals?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals\nQuery3: \"get_information(relation='Goals', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what team has the most goals?": "None",
    "what season has the most goals?": "None",
    "which team scored the most goals?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Goals Scored\nQuery1: \"get_information(relation='Goals Scored')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals Scored\nQuery3: \"get_information(relation='Goals Scored', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "the most goals scored in a game": "None",
    "what game had the most total goals scored?": "None",
    "which club scored the highest number of goals?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Goals for\nQuery1: \"get_information(relation='Goals for')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals for\nQuery3: \"get_information(relation='Goals for', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "who has the most goals plus caps?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the most goals plus caps\nQuery1: \"get_information(relation='goals')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max goals plus caps\nQuery3: \"get_information(relation='goals', tail_entity='output_of_query2')\"",
    "who is the player with the greatest number of matches played?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Matches played\nQuery1: \"get_information(relation='Matches played')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Matches played\nQuery3: \"get_information(relation='Matches played', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who scored the most points?": "## Target type: {'Artist'}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "what is the total number of singles released?": "## Target type: {number}\n## Query:\nStep1: Find all the singles\nQuery1: \"get_information(relation='Single')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me the number of non-album singles.": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Album as \"Non-album singles\"\nQuery1: \"get_information(relation='Album', tail_entity='Non-album singles')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of singles released since 1994?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year that is greater than or equal to 1994\nQuery1: \"get_information(relation='Year', tail_entity>='1994')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year does the artist have the most charted singles?": "None",
    "which album had the most singles releases?": "## Target type: {Album}\n## Query:\nStep1: Find all the albums and their singles releases\nQuery1: \"get_information(relation='Album', tail_entity='Singles Releases')\"\nStep2: Find the album with the most singles releases\nQuery2: \"get_information(relation='Album', tail_entity>='most')\"",
    "which single is the most in terms of how many times it charted?": "None",
    "which album produced the most singles?": "None",
    "how many albums garnered chart positions?": "None",
    "what is the most compilation albums released in one year?": "None",
    "what is the total number of albums listed?": "## Target type: {number}\n## Query:\nStep1: Find all the albums listed\nQuery1: \"get_information(relation='Album')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of singles that the band released?": "None",
    "how many singles were released as part of an album?": "None",
    "what is the total number of albums that were released?": "None",
    "who is the only driver from switzerland?": "None",
    "which team was american but had a french driver?": "None",
    "which country did most drivers represent?": "None",
    "who was the last co-driver from portugal?": "None",
    "which country were most of the drivers from?": "None",
    "how many competitors were from france?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Country', tail_entity='France')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which country is represented by the most drivers?": "None",
    "how many drivers are racing with a co-driver from a different country?": "## Target type: {number of drivers}\n## Query:\nStep1: Find all the drivers\nQuery1: \"get_information(relation='Driver')\"\nStep2: Find the co-drivers of output_of_query1\nQuery2: \"get_information(relation='Co-driver', tail_entity='output_of_query1')\"\nStep3: Find the country of driver and co-driver and check if they are different\nQuery3: \"get_information(relation='Co-driver country', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what are the total number of players from france?": "None",
    "has cochet raced for gd racing and renault?": "## Target type: {Yes/No}\n## Query:\nStep 1: Find the entity that has raced for GD Racing\nQuery1: \"get_information(relation='Team', tail_entity='GD Racing')\"\nStep2: Find the entity that has raced for Renault\nQuery2: \"get_information(relation='Team', tail_entity='Renault')\"\nStep3: Check if the output_of_query1 intersects with output_of_query2\nQuery3: \"check_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "find a driver from finland or brazil.": "None",
    "name the only player from france.": "None",
    "who is the only cyclist from brazil?": "## Target type: {cyclist}\n## Query:\nStep1: Find the entity that Nationality is Brazil\nQuery1: \"get_information(relation='Nationality', tail_entity='Brazil')\"\nStep2: Find the cyclist of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "how many world championships were held previous to the world championships in 2001?": "## Target type: {number of world championships}\n## Query:\nStep1: Find the world championships before 2001\nQuery1: \"get_information(relation='Year', tail_entity<'2001', head_entity='World Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the last competition he was in before the 2012 olympics?": "None",
    "the european championships and the 2000 olympic games both involved this competitor in what type of competition?": "None",
    "what was the only tournament that karolina sprem was runner-up in 2001?": "None",
    "what are the number of times she came in 2nd position for the european championships?": "None",
    "how many races did she run after the 2008 olympics?": "None",
    "what was the name of the competition that took place before the olympic games in 1996?": "None",
    "which competition did this person compete in immediately before the east asian games in 2001?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Year is 2001\nQuery1: \"get_information(relation='Year', tail_entity='2001')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "how many competitions were held after 1992?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity that has a year after 1992\nQuery1: \"get_information(relation='Year', tail_entity>'1992')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what competition did this competitor compete at after participating in the central american games in 2001?": "None",
    "what competition is listed after the world junior championships 2002?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Competition that is World Junior Championships 2002\nQuery1: \"get_information(relation='Competition', tail_entity='World Junior Championships 2002')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "which competition came before the olympic games in atlanta, united states?": "## Target type: {Competition}\n## Query:\nStep1: Find the entity with the relation of Venue as \"Atlanta, United States\"\nQuery1: \"get_information(relation='Venue', tail_entity='Atlanta, United States')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "how many championships did he compete in?": "None",
    "how many times did they participate in the world championships?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition as World Championships\nQuery1: \"get_information(relation='Competition', tail_entity='World Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the next competition this competitor went to after the olympic trials in 2008?": "None",
    "how many of these congressmen were re-elected?": "## Target type: {number of congressmen}\n## Query:\nStep1: Find the congressmen who were re-elected\nQuery1: \"get_information(relation='Result', tail_entity='Re-elected')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many re-elected republicans had at least 53% of the vote?": "None",
    "how many republicans were re-elected after 1920?": "None",
    "how many democrats were re-elected?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Find the entity with the relation of Result as Re-elected\nQuery2: \"get_information(relation='Result', tail_entity='Re-elected')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many republicans were elected after 2000?": "None",
    "what are the number of times re-elected is listed as the result?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result', tail_entity='Re-elected')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the only president to match his senate support numbers and house support with his years served?": "None",
    "which party has the most house members?": "None",
    "which congressman took office the most times?": "None",
    "which party had the greatest number of new seats in this election?": "None",
    "which party had the most candidates win in this election?": "## Target type: {Party}\n## Query:\nStep1: Find the entity with the relation Party\nQuery1: \"get_information(relation='Party')\"\nStep2: Find the party with the most winner candidate\nQuery2: \"get_information(relation='Party', tail_entity>='most')\"",
    "how much later as wendell beitzel elected than john donoghue?": "None",
    "which party had the most consecutive candidates?": "None",
    "which party had the highest number of house members in 2000?": "None",
    "what year had the most candidates elected?": "## Target type: {'Year of election'}\n## Query:\nStep1: Find the entity with the relation of Candidates elected\nQuery1: \"get_information(relation='Candidates elected')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Candidates elected\nQuery3: \"get_information(relation='Candidates elected', tail_entity='output_of_query2')\"\nStep4: Find the Year of election of output_of_query3\nQuery4: \"get_information(relation='Year of election', head_entity='output_of_query3')\"",
    "what was the last year where this team was a part of the usl a-league?": "## Target type: {Year}\n## Query:\nStep1: Find the entity with the relation of League as 'USL A-League'\nQuery1: \"get_information(relation='League', tail_entity='USL A-League')\"\nStep2: Find the max year of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many times did the usl a-league reach the quarterfinals?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of League as USL A-League\nQuery1: \"get_information(relation='League', tail_entity='USL A-League')\"\nStep2: Find the entity with the relation of Playoffs as Quarterfinals\nQuery2: \"get_information(relation='Playoffs', tail_entity='Quarterfinals')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what year did usl a-league finish 1st?": "None",
    "of those years in which the team did not qualify for the quarterfinals, in which year was the team not in the usl first division?": "None",
    "what was the number of times usl a-league did not qualify for the playoffs?": "None",
    "what is the last year the last \"usl second division\" is listed?": "## Target type: {year}\n## Query:\nStep1: Find all the \"usl second division\" leagues\nQuery1: \"get_information(relation='League', tail_entity='USL second division')\"\nStep2: Find the max year of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what was the last year this team played in the league?": "## Target type: {'Year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many 3rd place finishes has npsl had?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of League is NPSL\nQuery1: \"get_information(relation='League', tail_entity='NPSL')\"\nStep2: Find the entity with the relation of Regular Season is 3rd\nQuery2: \"get_information(relation='Regular Season', tail_entity='3rd')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long did this team remain in the 3a division after the 2002/2003 season?": "None",
    "how many times have the seattle sounders finished the regular season higher than 4th place?": "None",
    "other than npsl, what league has ny mens soccer team played in?": "None",
    "how many years was the team in the 3 a division?": "None",
    "what year is the first \"usl second division league\" listed?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of League is \"USL Second Division League\"\nQuery1: \"get_information(relation='League', tail_entity='USL Second Division League')\"\nStep2: Get the min Year of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "the division 1 team (according to the 2010 northern football league season) that was founded previous to the lalor football club was which team?": "None",
    "what is the number of times the seattle sounders has reached the 2nd round of the open cup?": "None",
    "how many encodings have a decimal above 200 for the capital letter em?": "None",
    "which baseplates has the most numbers?": "None",
    "how many races are 100?": "None",
    "the number of religious groups with a sex ratio of more than 1000 is how many?": "## Target type: {number of religious groups}\n## Query:\nStep1: Find the religious groups with a sex ratio of more than 1000\nQuery1: \"get_information(relation='Sex ratio (total)', tail_entity>'1000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the year of the license plate that has the largest amount of alphanumeric digits.": "## Target type: {year}\n## Query:\nStep1: Find the entity with the most alphanumeric digits in the Serial format\nQuery1: \"get_information(relation='Serial format', tail_entity>='most alphanumeric digits')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='First issued', head_entity='output_of_query1')\"",
    "is the ibm 8525-001 processor speed above or below 10 mhz?": "## Target type: {processor speed comparison}\n## Query:\nStep1: Find the entity IBM 8525-001\nQuery1: \"get_information(relation='IBM Model Number', tail_entity='8525-001')\"\nStep2: Find the processor speed of output_of_query1\nQuery2: \"get_information(relation='Processor', head_entity='output_of_query1')\"\nStep3: Compare the processor speed of output_of_query2 with 10 mhz\nQuery3: \"compare(set='output_of_query2', value='10 mhz')\"",
    "what is listed next after the 1/1.6\" type?": "None",
    "other than m1 how many notations have \"1\" in them?": "None",
    "does the 21st or the 25th have the most symbols?": "## Target type: {'21st', '25th'}\n## Query:\nStep1: Find the number of symbols of the 21st\nQuery1: \"get_information(relation='symbol', head_entity='21st')\"\nStep2: Find the number of symbols of the 25th\nQuery2: \"get_information(relation='symbol', head_entity='25th')\"\nStep3: Compare the number of symbols of output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "what color is next to blue?": "None",
    "how many towns have a population higher than 1000?": "## Target type: {number of towns}\n## Query:\nStep1: Find the towns with population higher than 1000\nQuery1: \"get_information(relation='Population', tail_entity>'1000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which has a unicode of u+22a1, the benchmark symbol or the factory symbol?": "None",
    "how many groups have above 100 members?": "None",
    "how many civil parishes have population counts of at least 10,000?": "## Target type: {number}\n## Query:\nStep1: Find the entities with a relation of Population and a value of at least 10,000\nQuery1: \"get_information(relation='Population', value>='10000')\"\nStep2: Find the entities with a relation of Status and a value of Civil Parish\nQuery2: \"get_information(relation='Status', value='Civil Parish')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many baseplates have a slogan?": "None",
    "which mountain peak has the most isolation?": "None",
    "which mountain peak has the least isolation?": "None",
    "what is the tallest peak in the sierra nevadas?": "None",
    "how many peaks are taller than 4,500 m?": "## Target type: {number of peaks}\n## Query:\nStep1: Find the peaks with elevation taller than 4,500 m\nQuery1: \"get_information(relation='Elevation (m)', tail_entity>'4500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which mountain peak is no higher than 13,149 ft?": "None",
    "which mountain peak has a prominence more than 10,000 ft?": "## Target type: {mountain peak}\n## Query:\nStep1: Find the entity with the relation of Prominence\nQuery1: \"get_information(relation='Prominence')\"\nStep2: Find the entity with Prominence more than 10,000 ft\nQuery2: \"get_information(relation='Prominence', tail_entity>'10000')\"\nStep3: Get the entity with Prominence more than 10,000 ft\nQuery3: \"get_information(relation='Mountain Peak', head_entity='output_of_query2')\"",
    "what is the highest city in terms of altitude?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the highest altitude\nQuery1: \"get_information(relation='Altitude', tail_entity>='highest')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "how many mountains have a height higher than 8,000 meters?": "## Target type: {number of mountains}\n## Query:\nStep1: Find the mountains with a height higher than 8,000 meters\nQuery1: \"get_information(relation='Height (m)', tail_entity>'8000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the mountains have an elevation above 3,300 ft?": "None",
    "which peaks are below 2500 meters in height?": "## Target type: {peak}\n## Query:\nStep1: Find the entity that Elevation is below 2500 meters\nQuery1: \"get_information(relation='Elevation (m)', tail_entity<='2500')\"\nStep2: Get the peaks of output_of_query1\nQuery2: \"get_information(relation='Peak', head_entity='output_of_query1')\"",
    "in feet, what is the difference between the tallest peak and the 9th tallest peak in california?": "## Target type: {difference in feet}\n## Query:\nStep1: Find the tallest peak in California\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the height of the output_of_query1\nQuery2: \"get_information(relation='Elevation', head_entity='output_of_query1')\"\nStep3: Find the 9th tallest peak in California\nQuery3: \"get_information(relation='Rank', tail_entity='9')\"\nStep4: Find the height of the output_of_query3\nQuery4: \"get_information(relation='Elevation', head_entity='output_of_query3')\"\nStep5: Get the difference in height between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "which peak is higher, mont blanc or monte rosa?": "## Target type: {peak}\n## Query:\nStep1: Find the entity Mont Blanc\nQuery1: \"get_information(relation='Peak', tail_entity='Mont Blanc')\"\nStep2: Find the elevation of output_of_query1\nQuery2: \"get_information(relation='Elevation (m)', head_entity='output_of_query1')\"\nStep3: Find the entity Monte Rosa\nQuery3: \"get_information(relation='Peak', tail_entity='Monte Rosa')\"\nStep4: Find the elevation of output_of_query3\nQuery4: \"get_information(relation='Elevation (m)', head_entity='output_of_query3')\"\nStep5: Compare the elevation of Mont Blanc and Monte Rosa\nQuery5: \"if elevation_of_output_of_query2 > elevation_of_output_of_query4: return 'Mont Blanc'; else: return 'Monte Rosa'\"",
    "how many peaks are taller than 2500 meters?": "None",
    "which lake has the greatest elevation?": "None",
    "how many peaks in the dolomites are above 10,000 feet?": "## Target type: {number of peaks}\n## Query:\nStep1: Find the peaks in the Dolomites\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the peaks with feet greater than 10,000\nQuery2: \"get_information(relation='feet', tail_entity>'10000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many people were eliminated?": "None",
    "how many contestants were eliminated in week one?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the contestants with the relation of Status as \"Eliminated Week 1\"\nQuery1: \"get_information(relation='Status', tail_entity='Eliminated Week 1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the worst dancers scored less than 15 points for their dance?": "## Target type: {number}\n## Query:\nStep1: Find the entity of Worst dancer(s)\nQuery1: \"get_information(relation='Worst dancer(s)')\"\nStep2: Find the worst dancers' score\nQuery2: \"get_information(relation='Worst score', head_entity='output_of_query1')\"\nStep3: Find the dancers whose score is less than 15\nQuery3: \"get_information(relation='Worst score', tail_entity<'15')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many people were eliminated in week 1?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Status and value of \"Week 1\"\nQuery1: \"get_information(relation='Status', value='Week 1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "give the number of people eliminated in week 1?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity that is Week 1\nQuery1: \"get_information(relation='Status', tail_entity='Week 1')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the least number of guest casts on an episode?": "None",
    "how many dancers achieved a best score of at least 40?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Best score\nQuery1: \"get_information(relation='Best score', tail_entity>='40')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which competition had the top number of contestants?": "None",
    "how many players withdrew due to surgery?": "None",
    "the first person eliminated was who?": "## Target type: {Finalist}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Finalist of output_of_query3\nQuery4: \"get_information(relation='Finalist', head_entity='output_of_query3')\"",
    "how many players were withdrawn due to a surgery?": "None",
    "how many of the contestants were students?": "None",
    "how many different performers appeared during this season?": "None",
    "how many eliminations are listed in all?": "None",
    "who got eliminated before leanne dobinson?": "## Target type: {finalist}\n## Query:\nStep1: Find the entity named Leanne Dobinson\nQuery1: \"get_information(relation='Finalist', tail_entity='Leanne Dobinson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the finalist of output_of_query4\nQuery5: \"get_information(relation='Finalist', head_entity='output_of_query4')\"",
    "which service has the lowest bit rate?": "## Target type: {service}\n## Query:\nStep1: Find the entity with the relation of Bit rate\nQuery1: \"get_information(relation='Bit rate')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min bit rate\nQuery3: \"get_information(relation='Bit rate', tail_entity='output_of_query2')\"\nStep4: Find the service of output_of_query3\nQuery4: \"get_information(relation='Service', head_entity='output_of_query3')\"",
    "which chip has the highest frequency?": "## Target type: {chip}\n## Query:\nStep1: Find the entity with the relation of Frequency [MHz]\nQuery1: \"get_information(relation='Frequency [MHz]')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Frequency\nQuery3: \"get_information(relation='Frequency [MHz]', tail_entity='output_of_query2')\"\nStep4: Find the chip of output_of_query3\nQuery4: \"get_information(relation='Chip', head_entity='output_of_query3')\"",
    "which denomination has the highest margin?": "None",
    "which is the next highest points after 14?": "None",
    "which had the highest individual number?": "## Target type: {event}\n## Query:\nStep1: Find the entity with the highest Individual number\nQuery1: \"get_information(relation='Individual', tail_entity>='highest')\"\nStep2: Find the event of output_of_query1\nQuery2: \"get_information(relation='Event', head_entity='output_of_query1')\"",
    "what is the greatest difference in scores?": "None",
    "what township has the highest population?": "## Target type: {township}\n## Query:\nStep1: Find the township with the highest population\nQuery1: \"get_information(relation='Population', tail_entity>='highest')\"\nStep2: Find the township of output_of_query1\nQuery2: \"get_information(relation='Township', head_entity='output_of_query1')\"",
    "which name had the highest number?": "## Target type: {name}\n## Query:\nStep1: Find the entity with relation Number\nQuery1: \"get_information(relation='Number')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Number\nQuery3: \"get_information(relation='Number', tail_entity='output_of_query2')\"\nStep4: Find the name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the highest place that is listed in the table?": "## Target type: {place}\n## Query:\nStep1: Find the max place\nQuery1: \"get_information(relation='Place', tail_entity>='max')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "which game date had the highest winning score?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Parse the scores and get the winning scores\nQuery2: \"calculator(expression='parse_scores(output_of_query1)[winning_scores]')\"\nStep3: Get the max winning score from output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the relation of Score and the winning score of output_of_query3\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "who has the most and best score?": "None",
    "what year has the highest scoring game?": "None",
    "which star has the highest distance at maximum?": "## Target type: {'Star'}\n## Query:\nStep1: Find the entity with the relation of Distance at maximum (LY)\nQuery1: \"get_information(relation='Distance at maximum (LY)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max distance at maximum\nQuery3: \"get_information(relation='Distance at maximum (LY)', tail_entity='output_of_query2')\"\nStep4: Find the star of output_of_query3\nQuery4: \"get_information(relation='Star', head_entity='output_of_query3')\"",
    "which team was the last team that this team faced in the regular season?": "None",
    "when was their first loss of the season?": "None",
    "on which date did the red raiders score the least points?": "None",
    "what was the last team this team played against in the 1990s?": "None",
    "what was the last season they finished first?": "None",
    "who did the tigers face for their first win of the 2008 season?": "None",
    "who was their last opponent of the season?": "## Target type: {opponent}\n## Query:\nStep1: Find the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent#', head_entity='output_of_query3')\"",
    "who was the first team that the badgers faced this season?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "when was their first win of the season?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of Result is Win\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first_row of output_of_query2\nQuery3: \"first_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what was the last team this team played against in this season?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "how many times did this team lose in the conference finals?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Playoffs is Champions\nQuery1: \"get_information(relation='Playoffs', tail_entity='Champions')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Playoffs is \"Conference Finals\"\nQuery5: \"get_information(relation='Playoffs', tail_entity='Conference Finals')\"\nStep6: Find the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who was this team's first opponent of the season?": "None",
    "which team won the last game in 1989?": "None",
    "what year was the only year the team qualified for the playoffs?": "None",
    "who did the raiders play after unh on 10/9/2009?": "None",
    "how many locomotives were built for the construction of the ashworth moor reservoir?": "None",
    "in which year were the most steam locomotives built?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Year Built that appears the most.\nQuery1: \"get_information(relation='Year Built', tail_entity>='most')\"\nStep2: Find the Year Built of output_of_query1.\nQuery2: \"get_information(relation='Year Built', head_entity='output_of_query1')\"",
    "tell me the number of years that hydro power had an annual generation over 4,000.": "None",
    "how many bridges are listed in total?": "None",
    "which area has the river severn and the exmoor as two of the seven wonders?": "## Target type: {Area}\n## Query:\nStep 1: Find the entity with the relation of Seven wonders covered including River Severn and Exmoor\nQuery1: \"get_information(relation='Seven wonders covered', tail_entity='River Severn, Exmoor')\"\nStep 2: Get the area of output_of_query1\nQuery2: \"get_information(relation='Area', head_entity='output_of_query1')\"",
    "how many years did the total available grid capacity fall below 2500?": "None",
    "how many times did they face the bournmouth?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Bournemouth\nQuery1: \"get_information(relation='Opponents', tail_entity='Bournemouth')\"\nStep2: Count the occurrences of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after 1940, how many steam locomotives were built?": "None",
    "which tornado outbreak on the list killed the most people?": "## Target type: {tornado outbreak}\n## Query:\nStep1: Find the entity with the relation of Casualties\nQuery1: \"get_information(relation='Casualties')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Casualties\nQuery3: \"get_information(relation='Casualties', tail_entity='output_of_query2')\"\nStep4: Find the Tornado Outbreak of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "how many countries had at least 10,000 tons of total shipping sunk?": "None",
    "who was the only player to place 6th?": "## Target type: {Player}\n## Query:\nStep1: Find the entity with the relation of Place as 6th\nQuery1: \"get_information(relation='Place', tail_entity='6')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who ranked number 8 after jose meolans finished in 7th?": "This question requires finding the entity that ranked number 8 after Jose Meolans finished 7th.\n\n## Target type: {Name}\n## Query:\nStep 1: Find the entity with the rank of 7\nQuery1: \"get_information(relation='Rank', tail_entity='7')\"\nStep 2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep 3: Find the next row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep 4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', tail_entity='output_of_query3')\"\nStep 5: Find the entity with the rank of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who finished in first place?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "who was the top finisher?": "None",
    "when was the only 8th place?": "## Target type: {season}\n## Query:\nStep1: Find the entity that Place is 8th\nQuery1: \"get_information(relation='Place', tail_entity='8th')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "who finished in last place?": "## Target type: {'Athlete'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "what was the last year 3rd place finished with less than 25 points?": "None",
    "who placed first?": "None",
    "rice finished 10th. who finished next?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Rice\nQuery1: \"get_information(relation='Driver', tail_entity='Rice')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "in season 2008/09 was the place above or below 10th?": "## Target type: {place comparison}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='2008/09')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Compare the place of output_of_query2 with 10th\nQuery3: \"compare_place(set='output_of_query2', value='10th')\"",
    "who was in last place?": "None",
    "who was the last player in the top 10?": "## Target type: {player}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "where was the next venue after athens, greece?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is Athens, Greece\nQuery1: \"get_information(relation='Venue', tail_entity='Athens, Greece')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "what venue appears most on the list?": "## Target type: {venue}\n## Query:\nStep1: Find the venue that appears the most on the list\nQuery1: \"get_information(relation='Venue', tail_entity>='most')\"",
    "what is the top listed venue in the table?": "## Target type: {venue}\n## Query:\nStep1: Find the top listed row in the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "which venue is listed the most?": "None",
    "what was the name of the venue after rome, italy?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Rome, Italy\nQuery1: \"get_information(relation='Venue', tail_entity='Rome, Italy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "what years had the most venues?": "None",
    "what was the venue when he placed first?": "## Target type: {'Venue'}\n## Query:\nStep1: Find the entity with the relation of Position\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the Venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "what venue came before gothenburg, sweden?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is Gothenburg, Sweden\nQuery1: \"get_information(relation='Venue', tail_entity='Gothenburg, Sweden')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "which competition comes after the french venue?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Venue as French\nQuery1: \"get_information(relation='Venue', tail_entity='French')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "which location has the most destinations?": "None",
    "which venue has the largest result": "## Target type: {venue}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Result\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Find the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "what year had the least net profit?": "None",
    "in 2010, who has the least amount of sales?": "None",
    "which month had the least amount of games?": "None",
    "which years had the least number of singles released?": "None",
    "which album had the least amount of sales?": "None",
    "in which year was the least amount of earnings won?": "## Target type: {Year}\n## Query:\nStep1: Find the entity with the relation of Earnings (US$)\nQuery1: \"get_information(relation='Earnings (US$)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Earnings\nQuery3: \"get_information(relation='Earnings (US$)', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which month had the least games played?": "None",
    "what year had the least percent of the popular vote?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of % of popular vote\nQuery1: \"get_information(relation='% of popular vote')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min % of popular vote\nQuery3: \"get_information(relation='% of popular vote', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year of election', head_entity='output_of_query3')\"",
    "what is the difference in sales from the highest sales to the lowest sales?": "None",
    "which year(s) saw the greatest average audience share?": "None",
    "what year had the least us peak chart positions?": "None",
    "which year did they win their least amount of games?": "## Target type: {Year}\n## Query:\nStep1: Find the entity with the relation of Record\nQuery1: \"get_information(relation='Record')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Record\nQuery3: \"get_information(relation='Record', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "which year had the lowest position?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Position\nQuery1: \"get_information(relation='Position')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Position\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which company had the least revenue?": "## Target type: {company}\n## Query:\nStep1: Find the entity with the relation of Revenue\nQuery1: \"get_information(relation='Revenue')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Revenue\nQuery3: \"get_information(relation='Revenue', tail_entity='output_of_query2')\"\nStep4: Find the company of output_of_query3\nQuery4: \"get_information(relation='Name of concern', head_entity='output_of_query3')\"",
    "which month had the most games?": "None",
    "what are the number of kickoff attempts in 2008?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Year as 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the Kickoff Attempts of output_of_query1\nQuery2: \"get_information(relation='Kickoff Attempts', head_entity='output_of_query1')\"",
    "how many occur in the last six months of the year?": "None",
    "how many films were made in 2008": "## Target type: {number of films}\n## Query:\nStep1: Find the films made in 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many days were there between episode 1 and 2?": "None",
    "how many games were played before 2008?": "None",
    "how many days are between the first and last program dates?": "None",
    "what is the difference in attendance between november 5 and november 25": "None",
    "how many years are listed above 2007?": "None",
    "what is the total role in the year 2008?": "## Target type: {number}\n## Query:\nStep1: Find the entity in the Year that is 2008.\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the total roles of output_of_query1\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "previous to october 5, 2008 how many matches were won?": "None",
    "which month had the most air dates?": "None",
    "what were the number of starters in 2008?": "## Target type: {number of starters}\n## Query:\nStep1: Find the entity with the relation of Year is 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the number of starters of output_of_query1\nQuery2: \"get_information(relation='Starters', head_entity='output_of_query1')\"",
    "what is the total number of games played in november?": "None",
    "how many months had the same amount of average rainy days?": "None",
    "how many defensive backs are there?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Position as Defensive back\nQuery1: \"get_information(relation='Position', tail_entity='Defensive back')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many positions are assigned per player?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Zeke Motta\nQuery1: \"get_information(relation='Player', tail_entity='Zeke Motta')\"\nStep2: Find the positions of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many different positions are there?": "None",
    "how many defensive back players were picked?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Position as Defensive Back\nQuery1: \"get_information(relation='Position', tail_entity='Defensive Back')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different colleges did the players come from?": "## Target type: {number of colleges}\n## Query:\nStep1: Find all the colleges of the players\nQuery1: \"get_information(relation='College')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players play a position other than guard?": "None",
    "how many players were drafted?": "## Target type: {number of players}\n## Query:\nStep1: Find the row_numbers of the entity with relation Player\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many goalies were selected?": "## Target type: {number of goalies}\n## Query:\nStep1: Find the entity with the relation of Position as Goalie\nQuery1: \"get_information(relation='Position', tail_entity='Goalie')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the total number of players?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity with the relation of Player\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players were from the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Nationality is United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the most players picked came from which nationality?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity with the relation of Nationality\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Nationality', tail_entity>='most')\"",
    "how many consecutive numbers are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long from the first date listed to the last date listed?": "None",
    "how many consecutive notes are there?": "None",
    "how long is each term?": "None",
    "how long is the shortest name of one of the teams?": "None",
    "how long is the entire race (how many months)?": "None",
    "what is the total number of years?": "## Target type: {number of years}\n## Query:\nStep1: Find all the Year entities\nQuery1: \"get_information(relation='Year')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are all the years consecutive?": "## Target type: {yes/no}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Year')\"\nStep2: Check if the years are consecutive\nQuery2: \"check_consecutive(set='output_of_query1')\"",
    "how long is four hands in the metric system?": "None",
    "how many total row entries are there?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number entries\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the longest time on the table?": "## Target type: {'Performance'}\n## Query:\nStep1: Find the max Performance\nQuery1: \"get_information(relation='Performance', tail_entity>='max')\"",
    "how many notes are there?": "None",
    "how long is track number 11?": "## Target type: {track length}\n## Query:\nStep1: Find the entity with the relation of row_number is 11\nQuery1: \"get_information(relation='row_number', tail_entity='11')\"\nStep2: Find the track length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "which team has the most championships?": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of Championships\nQuery1: \"get_information(relation='Championships')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Championships\nQuery3: \"get_information(relation='Championships', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "which team has the most championship wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the entity that appears the most in the output_of_query1\nQuery2: \"get_information(relation='Winner', tail_entity>='most')\"",
    "which month were the most championships played?": "## Target type: {'month'}\n## Query:\nStep1: Find all the Date values\nQuery1: \"get_information(relation='Date')\"\nStep2: Extract the month from output_of_query1\nQuery2: \"extract_month(date='output_of_query1')\"\nStep3: Find the month that appears the most\nQuery3: \"mode(set='output_of_query2')\"",
    "which team has the most titles?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Titles\nQuery1: \"get_information(relation='Titles')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Titles\nQuery3: \"get_information(relation='Titles', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many different champions were there in the 2000 - 2005 seasons?": "None",
    "which year had the most competitions?": "None",
    "which year is the year with the most titles?": "None",
    "in what year did he win the most titles?": "None",
    "which year had the most matches, 1998 or 2002?": "## Target type: {year}\n## Query:\nStep1: Find the matches of year 1998\nQuery1: \"get_information(relation='Matches', head_entity='1998')\"\nStep2: Find the matches of year 2002\nQuery2: \"get_information(relation='Matches', head_entity='2002')\"\nStep3: Compare the counts of output_of_query1 and output_of_query2\nQuery3: \"compare(operation='max', set1='output_of_query1', set2='output_of_query2')\"",
    "which season held the most wins?": "None",
    "which country won the same amount of medals as bulgaria in these olympics?": "None",
    "which countries won more total medals than bulgaria?": "None",
    "how many more bronze medals does france have compared to russia?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity named Russia\nQuery3: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep4: Find the bronze medals of output_of_query3\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "which country had more competitions, germany or greece?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the entity named Greece\nQuery2: \"get_information(relation='Country', tail_entity='Greece')\"\nStep3: Find the competitions of output_of_query1\nQuery3: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep4: Find the competitions of output_of_query2\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query2')\"\nStep5: Get the count of output_of_query3\nQuery5: \"count(set='output_of_query3')\"\nStep6: Get the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the counts of output_of_query5 and output_of_query6\nQuery7: \"set_compare(set1='output_of_query5', set2='output_of_query6', operator='>')\"\nStep8: Return the country with more competitions if the output_of_query7 is true, otherwise return None\nQuery8: \"if_else(condition='output_of_query7', true_value='output_of",
    "which country scored the most gold medals--iran or indonesia?": "None",
    "which team finished first, romania or belarus?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Country\nQuery1: \"get_information(relation='Country')\"\nStep2: Find the entity named Romania\nQuery2: \"get_information(relation='Country', tail_entity='Romania')\"\nStep3: Find the entity named Belarus\nQuery3: \"get_information(relation='Country', tail_entity='Belarus')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Find the row_number of output_of_query3\nQuery5: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep6: Compare the row_number of output_of_query2 and output_of_query3\nQuery6: \"compare(set1='output_of_query4', set2='output_of_query5')\"",
    "who had more gold medals, russia or georgia?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the gold medal count of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Georgia\nQuery3: \"get_information(relation='Nation', tail_entity='Georgia')\"\nStep4: Find the gold medal count of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Compare the gold medal count of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "what country won the most medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country had more athletes, belarus or lithuania?": "None",
    "what country won the most silver medals?": "None",
    "what was the difference between the attendance in week two and the attendance in week one?": "None",
    "what is the difference in attendance between the first two entries?": "None",
    "which date had the most attendance?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what was the date that had the least attendance?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what is the total amount of attendance between the first and second weeks?": "## Target type: {total amount of attendance}\n## Query:\nStep1: Find the entity in Week that is '1'\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the entity in Week that is '2'\nQuery2: \"get_information(relation='Week', tail_entity='2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "which date had the least attendance?": "None",
    "which date had the highest attendance?": "In this case, we need to find the date with the highest attendance.\n\n## Target type: {Date}\n## Query:\nStep 1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep 2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep 3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep 4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which year had the largest number of students who scored 5s?": "None",
    "in what year did the highest number of points occur?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which date had the most people in attendance?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what week had the most attendance?": "None",
    "what was the difference in attendance from week 1 and week 12?": "## Target type: {difference in attendance}\n## Query:\nStep1: Find the attendance in week 1\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Get the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the attendance in week 12\nQuery3: \"get_information(relation='Week', tail_entity='12')\"\nStep4: Get the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(value1='output_of_query4', value2='output_of_query2')\"",
    "how many locations are listed on the chart total?": "## Target type: {number of locations}\n## Query:\nStep1: Find all the locations listed on the chart\nQuery1: \"get_information(relation='Location')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many names are listed on the chart?": "## Target type: {number of names}\n## Query:\nStep1: Find all the names listed on the chart\nQuery1: \"get_information(relation='name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which location is listed the most according to this chart?": "## Target type: {Location}\n## Query:\nStep1: Find the entity with the relation of Location\nQuery1: \"get_information(relation='Location')\"\nStep2: Find the location that appears the most\nQuery2: \"get_information(relation='Location', tail_entity>='most')\"",
    "which one has the most elevation (mountain station) on the chart": "None",
    "list the mountains that do not have an elevation above 3,100 ft.": "None",
    "what is the total number of peaks listed on the list of alpine peaks by prominence?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Peak\nQuery1: \"get_information(relation='Peak')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did they rank below 8th place?": "None",
    "how many seasons did they finish above 5th place?": "None",
    "for how many year was grissom ranked a in a top 10 position in the nationwide series?": "None",
    "how many consecutive years was the result 4th place?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Regular Season\nQuery1: \"get_information(relation='Regular Season', tail_entity='4th')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many times did they finish ninth?": "## Target type: {number}\n## Query:\nStep 1: Find the entity that finished ninth\nQuery1: \"get_information(relation='Position', tail_entity='9th')\"\nStep 2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which school has placed fourth the most times?": "None",
    "how many times did they place at least 12th?": "None",
    "what was the first season with more than 10 second place finishes?": "None",
    "how many consecutive years did parnelli place in the top 5?": "None",
    "how many times was his average finish below 18?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Avg. Finish\nQuery1: \"get_information(relation='Avg. Finish')\"\nStep2: Find the output_of_query1 that is below 18\nQuery2: \"get_information(relation='Avg. Finish', tail_entity<'18')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times did the team come in 9th place?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Place as '9th'\nQuery1: \"get_information(relation='Place', tail_entity='9th')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did the team finish in 2nd position?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the position of 2nd\nQuery1: \"get_information(relation='Position', tail_entity='2nd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what score did tiger woods achieve in his third round?": "None",
    "how long separated the playoff victory at bmw international open and the 4 stroke victory at the klm open?": "None",
    "which player won by the least number of strokes?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Margin of victory\nQuery1: \"get_information(relation='Margin of victory')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min margin of victory\nQuery3: \"get_information(relation='Margin of victory', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "in which tournament did he have the biggest margin of victory?": "None",
    "who had the top score in the pga championship?": "## Target type: {player}\n## Query:\nStep1: Find the entity named PGA Championship\nQuery1: \"get_information(relation='Tournament', tail_entity='PGA Championship')\"\nStep2: Find the winning score of output_of_query1\nQuery2: \"get_information(relation='Winning score', head_entity='output_of_query1')\"\nStep3: Find the entity with the score equal to output_of_query2\nQuery3: \"get_information(relation='Winning score', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Runner(s)-up', head_entity='output_of_query3')\"",
    "what was al espinosa's total stroke count at the final of the 1929 us open?": "None",
    "how many more strokes were in the klm open than the barclays scottish open?": "None",
    "how many players tied for 4th place?": "None",
    "who is the only player to get one point in the race?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with Points equal to 1\nQuery1: \"get_information(relation='Points', tail_entity='1')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "who has the most years won of players who missed the cut?": "None",
    "how many players tied for fourth place?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place as \"T4\"\nQuery1: \"get_information(relation='Place', tail_entity='T4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "besides tiger woods what other player won between 2007 and 2009?": "None",
    "was the margin of victory in the lpga championship the same as in the sunstar classic?": "## Target type: {margin of victory}\n## Query:\nStep1: Find the margin of victory in the LPGA Championship\nQuery1: \"get_information(relation='Tournament', tail_entity='LPGA Championship', key='Margin of victory')\"\nStep2: Find the margin of victory in the Sunstar Classic\nQuery2: \"get_information(relation='Tournament', tail_entity='Sunstar Classic', key='Margin of victory')\"\nStep3: Check if the output_of_query1 is the same as output_of_query2\nQuery3: \"check_equality(value1='output_of_query1', value2='output_of_query2')\"",
    "which golfers other than tim clark shot 3 over par at the 2010 us open?": "None",
    "which winner won more tournaments, jeff maggert or tiger woods?": "## Target type: {winner}\n## Query:\nStep1: Find the entity named Jeff Maggert\nQuery1: \"get_information(relation='Winner', tail_entity='Jeff Maggert')\"\nStep2: Find the entity named Tiger Woods\nQuery2: \"get_information(relation='Winner', tail_entity='Tiger Woods')\"\nStep3: Find the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Find the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Find the output_of_query1 if it is larger than output_of_query2\nQuery5: \"if(set1>'output_of_query3', set1='output_of_query1', set2='output_of_query2')\"",
    "where was the first preseason game held?": "None",
    "what was the first race?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find the entity with the relation of row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Race Name of output_of_query1\nQuery2: \"get_information(relation='Race Name', head_entity='output_of_query1')\"",
    "where was the first tournament held?": "This question can be answered through a straightforward query. Here is the breakdown of the query:\n\n## Target type: {Location}\n\nQuery:\nStep 1: Find the location of the first tournament\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep 2: Get the location of output_of_query1\nQuery2: \"get_information(relation='Tournament', head_entity='output_of_query1')\"",
    "where did this team play their first game of the season?": "## Target type: {game site}\n## Query:\nStep1: Find the entity named First game of the season\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the game site of output_of_query1\nQuery2: \"get_information(relation='Game site', head_entity='output_of_query1')\"",
    "which division is listed only once?": "None",
    "in what city was the first race?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the City/Location of output_of_query1\nQuery2: \"get_information(relation='City/Location', head_entity='output_of_query1')\"",
    "which division has the largest number of ranks?": "None",
    "how many times is division 2 listed as the division?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Division\nQuery1: \"get_information(relation='Division', tail_entity='Division 2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which division had the larger area?": "## Target type: {division}\n## Query:\nStep1: Find the entity named Area (Km2)\nQuery1: \"get_information(relation='Area (Km2)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max area\nQuery3: \"get_information(relation='Area (Km2)', tail_entity='output_of_query2')\"\nStep4: Find the division of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "where was the first competition held according to this chart?": "## Target type: {venue}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "which was the first competition?": "None",
    "how many division 1 teams were founded before 1950?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams in Division 1 that were founded before 1950\nQuery1: \"get_information(relation='Founded', tail_entity<'1950')\"\nStep2: Find the division of output_of_query1\nQuery2: \"get_information(relation='Division', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many venues did the league play during this particular season?": "## Target type: {number}\n## Query:\nStep1: Find the position in 1993-94\nQuery1: \"get_information(relation='Position in 1993\u201394')\"\nStep2: Find the entity with the relation of Venue\nQuery2: \"get_information(relation='Venue')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games were played in the season?": "None",
    "how many home games did they play?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Opponent\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Find the entity with the relation of '@'\nQuery2: \"get_information(relation='Opponent', tail_entity='@')\"\nStep3: Get the difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many teams had the most seasons?": "None",
    "how many games did the team win while not at home?": "None",
    "how many home games were played?": "## Target type: {number}\n## Query:\nStep1: Find the games with the relation of Location\nQuery1: \"get_information(relation='Location')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams won only one game?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Won\nQuery1: \"get_information(relation='Won')\"\nStep2: Find the entity with the value of 1 in output_of_query1\nQuery2: \"get_information(relation='Won', tail_entity='1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many consecutive games were played in houston, tx?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Location is Houston, TX\nQuery1: \"get_information(relation='Location', tail_entity='Houston, TX')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many times did the team play at home but did not win?": "None",
    "how many games did this team win during this season?": "None",
    "how many home games did the rangers play?": "None",
    "how many teams won, at most, 1 time?": "## Target type: {number}\n## Query:\nStep1: Find the teams that won at most 1 time\nQuery1: \"get_information(relation='Winners', tail_entity='<=1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were played in the regular season?": "None",
    "how many games did they play total?": "## Target type: {number of games}\n## Query:\nStep1: Find all the rows with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which engines were used after 1999?": "None",
    "how many different types of diesel locomotives are dated after 1980?": "None",
    "name a model that has the most versions.": "None",
    "how many v6 engines are on this list?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Engine that contains \"V6\"\nQuery1: \"get_information(relation='Engine', tail_entity>='V6')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "of which utility vehicle model do they have more than 50 in service?": "None",
    "what is the name of the last model listed on this chart?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which utility vehicle has the most number in service?": "None",
    "how many different types of diesel locomotives came from baldwin locomotive works?": "## Target type: {number of types}\n## Query:\nStep1: Find the entity with the relation of Builder as Baldwin Locomotive Works\nQuery1: \"get_information(relation='Builder', tail_entity='Baldwin Locomotive Works')\"\nStep2: Get the number of unique types in output_of_query1\nQuery2: \"count_unique(set='output_of_query1', key='Type')\"",
    "besides australia which other countries produced more than 100 in the year 2000?": "None",
    "which model had the most production during the years of manufacture?": "None",
    "how many different drivers are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the drivers listed\nQuery1: \"get_information(relation='Driver')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many yachts were launched in 2000?": "## Target type: {number}\n## Query:\nStep1: Find the yachts launched in 2000\nQuery1: \"get_information(relation='Launch year', tail_entity='2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many singles were released before 2001 but after 1997?": "## Target type: {number}\n## Query:\nStep1: Find the singles released before 2001\nQuery1: \"get_information(relation='Year', tail_entity<'2001')\"\nStep2: Find the singles released after 1997\nQuery2: \"get_information(relation='Year', tail_entity>'1997')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which country has more vehicles listed?": "None",
    "how many times was the championship in miami?": "None",
    "how many games during the season were attended by at least 50,000 people?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance of at least 50,000 people\nQuery1: \"get_information(relation='Attendance', value>='50000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many home games were won in total?": "None",
    "what was the last game to be attended by more than 2000 people?": "None",
    "how many games were attended by at least 8,000 people?": "None",
    "what was their total number of wins at home?": "None",
    "how many games had attendance of over 50,000?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance over 50,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'50000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive championships occurred in baltimore, u.s.?": "## Target type: {number of consecutive championships}\n## Query:\nStep1: Find the entity named Baltimore, U.S.\nQuery1: \"get_information(relation='Championship', tail_entity='Baltimore, U.S.')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is he number of times that san diego state hosted the championship?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Host or site is San Diego State\nQuery1: \"get_information(relation='Host or site', tail_entity='San Diego State')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many championship games were held in the same stadium as the one on 4 march 2000?": "None",
    "which football stadium holds the most people?": "None",
    "how many games were attended by more that 70,000 people?": "None",
    "which team had the most consecutive wins?": "None",
    "how many consecutive wins took place in october?": "None",
    "which is the only to hold the record for a year?": "None",
    "when is the last year as listed?": "None",
    "what is the order of the last year listed?": "None",
    "what is the last year on the chart?": "## Target type: {Year}\n## Query:\nStep1: Find all the Years\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the max Year\nQuery2: \"max(set='output_of_query1')\" ",
    "what is the last year listed?": "## Target type: {year}\n## Query:\nStep1: Find all the years listed\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the max year from output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what is the last year listed on this chart?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "who won the most consecutive number of races during the year?": "None",
    "how many consecutive years are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Year')\"\nStep2: Calculate the number of consecutive years\nQuery2: \"consecutive_years_count(set='output_of_query1')\"",
    "how many years are listed in this competition record chart?": "None",
    "was 2008's score above or below 2013?": "## Target type: {'above' or 'below'}\n## Query:\nStep1: Find the row_number of 2008\nQuery1: \"get_information(relation='row_number', tail_entity='2008')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the row_number of 2013\nQuery3: \"get_information(relation='row_number', tail_entity='2013')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Compare the Scores of output_of_query2 and output_of_query4\nQuery5: \"compare(score1='output_of_query2', score2='output_of_query4')\"",
    "what year is at least on the list?": "## Target type: {year}\n## Query:\nStep1: Find all the Season entities\nQuery1: \"get_information(relation='Season')\"\nStep2: Get the distinct years from output_of_query1\nQuery2: \"distinct(set='output_of_query1')\"\nStep3: Get the min year from output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "which country has the most gold medals?": "None",
    "what country won the largest number of gold medals?": "None",
    "which country won the most gold medals?": "None",
    "which country earned the most gold medals?": "None",
    "which nation had the most gold medals?": "None",
    "which nation earned the most gold medals?": "None",
    "which nation won the most gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what nation had the most gold medals?": "None",
    "which nation received the largest amount of gold medals?": "None",
    "what number of silver medals was won by the nation with the most gold medals?": "None",
    "which country won the most gold events?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which country has the most number of medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which team was the previous winner before ballyroan abbey in 2008?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Ballyroan Abbey\nQuery1: \"get_information(relation='Team', tail_entity='Ballyroan Abbey')\"\nStep2: Find the Years won of output_of_query1\nQuery2: \"get_information(relation='Years won', head_entity='output_of_query1')\"\nStep3: Find the previous_year of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity with the relation of Years won\nQuery4: \"get_information(relation='Years won', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "which team was the previous winner before dublin in 2013?": "None",
    "who won the trinidad and tobago league cup the most times between 2000 and 2012?": "## Target type: {team}\n## Query:\nStep 1: Find the seasons between 2000 and 2012\nQuery1: \"get_information(relation='Season', tail_entity>='2000', tail_entity<='2012')\"\nStep 2: Find the winners of the seasons from output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"\nStep 3: Count the occurrences of each team in output_of_query2\nQuery3: \"count_occurrences(set='output_of_query2')\"\nStep 4: Find the team with the most occurrences\nQuery4: \"find_max(set='output_of_query3')\"",
    "what is the only team to have 2005 in qld cup premierships?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Qld Cup Premierships\nQuery1: \"get_information(relation='Qld Cup Premierships', tail_entity='2005')\"\nStep2: Get the entity with the only 1 count in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the team of output_of_query1\nQuery3: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which team won after ballymore eustace?": "None",
    "who was the most recent winner?": "## Target type: {winner}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Year\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "when was the last year bo'ness united made the roll of honour for east superleague?": "None",
    "how many teams have had no queensland cup premierships?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entities with Qld Cup Premierships as Nil\nQuery1: \"get_information(relation='Qld Cup Premierships', tail_entity='Nil')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team has had the most queensland cup premierships?": "None",
    "in what year did joe public win the trinidad and tobago league cup after losing the prior year?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Joe Public\nQuery1: \"get_information(relation='Winner', tail_entity='Joe Public')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Find the entity named Joe Public in the Runners-up relation\nQuery3: \"get_information(relation='Runners\u2013up', tail_entity='Joe Public')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"\nStep5: Find the year that is one year after output_of_query4\nQuery5: \"Calculator(function='add', number='output_of_query4', value='1')\"\nStep6: Get the intersection of output_of_query2 and output_of_query5\nQuery6: \"set_intersection(set1='output_of_query2', set2='output_of_query5')\"",
    "who was the last team to win?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who was the winner after 2007?": "None",
    "in what year did they win them?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Result is \"Won\"\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what is the total number of districts created in the 1900's?": "None",
    "how many games in the records happened before 1920?": "None",
    "how many games had the attendance of at least 20,000?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance of at least 20,000\nQuery1: \"get_information(relation='Attendance', tail_entity>='20000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many locomotives were built after 1900?": "## Target type: {number}\n## Query:\nStep1: Find the locomotives that were built after 1900.\nQuery1: \"get_information(relation='Date', tail_entity>'1900')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me a year that total availability was not over 1900.": "None",
    "when was the first time the attendance was below 20,000?": "None",
    "for how many consecutive games was attendance above 20,000?": "None",
    "after 1879 how many races are there?": "None",
    "how many games did not have at least 15,000 in attendance?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance less than 15,000\nQuery1: \"get_information(relation='Attendance', tail_entity<'15000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many days did the attendance not reach 10,000?": "## Target type: {number of days}\n## Query:\nStep1: Find the dates where the attendance did not reach 10,000\nQuery1: \"get_information(relation='Attendance', tail_entity<'10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive wins occurred in october?": "None",
    "how many games had an attendance of more than 10,000?": "## Target type: {number}\n## Query:\nStep1: Find the games with an attendance of more than 10,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what date had the largest attendance?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which athlete from kenya participated but came in third place?": "None",
    "who is the only swimmer from australia to compete?": "Given the schema provided, the `Nationality` attribute can be utilized to identify the swimmer from Australia. Here's the breakdown of the query:\n\n## Target type: {Name}\n## Query:\nStep 1: Find the entity with the nationality of Australia\nQuery1: \"get_information(relation='Nationality', tail_entity='Australia')\"",
    "who was the only medalist not from ethiopia?": "None",
    "who is the last athlete?": "## Target type: {athlete}\n## Query:\nStep1: Find the max row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "how many athletes are from kenya?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that Nationality is Kenya\nQuery1: \"get_information(relation='Nationality', tail_entity='Kenya')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which athlete has only won silver medals?": "None",
    "who was the only player from australia?": "## Target type: {Player}\n## Query:\nStep1: Find the entity with the relation of Country is Australia\nQuery1: \"get_information(relation='Country', tail_entity='Australia')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who was the only racer from south korea?": "## Target type: {Athlete}\n## Query:\nStep1: Find the entity whose Country is South Korea\nQuery1: \"get_information(relation='Country', tail_entity='South Korea')\"\nStep2: Get the output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "who was the first runner to place from kenya?": "None",
    "which athlete was from south korea after the year 2010?": "None",
    "how many medalists came from kenya?": "None",
    "who was the only competitor to come from great britain?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with Nationality as Great Britain\nQuery1: \"get_information(relation='Nationality', tail_entity='Great Britain')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "name the only athlete from sri lanka.": "## Target type: {athlete}\n## Query:\nStep1: Find the entity that Athlete is from Sri Lanka\nQuery1: \"get_information(relation='Athlete', tail_entity='Sri Lanka')\"\nStep2: Find the Athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "tell me the only player from new zealand on the list.": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality as New Zealand\nQuery1: \"get_information(relation='Nationality', tail_entity='New Zealand')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "are the dates in a consecutive order?": "None",
    "are the years in a consecutive order?": "None",
    "are the dates in consecutive order?": "None",
    "are the years in consecutive order?": "None",
    "are the years in consecutive order/": "None",
    "are the years listed in consecutive order or not?": "None",
    "true/false: all years go in consecutive order?": "None",
    "what is the total number of dates?": "## Target type: {number}\n## Query:\nStep1: Find all the dates\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs are longer than 3:00?": "None",
    "how many songs end before 2 minutes?": "## Target type: {count}\n## Query:\nStep1: Find the songs that end before 2 minutes\nQuery1: \"get_information(relation='Length (m:ss)', tail_entity<'02:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tracks last more than 5:00?": "None",
    "how many songs are at most 3 minutes long?": "None",
    "which is the only track under two minutes?": "None",
    "which song is listed first in the table?": "## Target type: {song}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the English Title of output_of_query3\nQuery4: \"get_information(relation='English Title', head_entity='output_of_query3')\"",
    "are there at least 10 songs in the table?": "None",
    "how many songs total are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the songs listed\nQuery1: \"get_information(relation='Song')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which song has the most time?": "## Target type: {song}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the song of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many songs in total?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the last song listed on the table?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many episodes are below 2.00?": "None",
    "how many songs were on the track list?": "## Target type: {number of songs}\n## Query:\nStep1: Find all the row numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the only song that got over 20 points?": "## Target type: {Song}\n## Query:\nStep1: Find the entity where Points > 20\nQuery1: \"get_information(relation='Points', tail_entity>'20')\"\nStep2: Find the song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "which college was the most attended by players?": "## Target type: {'College'}\n## Query:\nStep1: Find the entity with the relation of College\nQuery1: \"get_information(relation='College')\"\nStep2: Find the entity that appears the most\nQuery2: \"get_information(relation='College', tail_entity>='most')\"",
    "how many drafted players were quarterbacks?": "## Target type: {number}\n## Query:\nStep1: Find the players who were quarterbacks\nQuery1: \"get_information(relation='Pos.', tail_entity='QB')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players were not signed from the academy?": "None",
    "total number of players whose home town was in north carolina (nc)": "None",
    "how many players were drafted by the 06-07 islanders from the us?": "None",
    "how many players went to the miami dolphins?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named Miami Dolphins\nQuery1: \"get_information(relation='NFL Team', tail_entity='Miami Dolphins')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did the hoyas score 50 or more points?": "None",
    "how many players were drafted by the st. louis blues?": "None",
    "who was drafted before robert alford?": "None",
    "what was the number of freshmen on the team?": "## Target type: {number of freshmen}\n## Query:\nStep1: Find the entity with the relation of Year as \"Freshman\"\nQuery1: \"get_information(relation='Year', tail_entity='Freshman')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which player was the first player to be drafted?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the total number of players from ohio state?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity from Ohio State\nQuery1: \"get_information(relation='College', tail_entity='Ohio State')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the first winner in 2004?": "## Target type: {Winner}\n## Query:\nStep1: Find the entity with the relation Year and the value of \"2004\"\nQuery1: \"get_information(relation='Year', tail_entity='2004')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first row with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "who was the next winner after the 2005 year?": "## Target type: {winner}\n## Query:\nStep1: Find the entity with the relation of Year is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the winner of output_of_query4\nQuery5: \"get_information(relation='Winner', head_entity='output_of_query4')\"",
    "they placed third in 2003. when did they place third before that?": "None",
    "was there a result of 1st place after the year 2006?": "## Target type: {yes/no}\n## Query:\nStep1: Find the row_number where Year is greater than 2006\nQuery1: \"get_information(relation='Year', tail_entity>'2006')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Check if \"1st\" is in output_of_query2\nQuery3: \"check_inclusion(value='1st', set='output_of_query2')\"",
    "which season came in last place?": "None",
    "who placed first in 2007?": "## Target type: {Nation}\n## Query:\nStep1: Find the placement of 2007\nQuery1: \"get_information(relation='2007')\"\nStep2: Find the entity with relation 2007 is 1st\nQuery2: \"get_information(relation='2007', tail_entity='1st')\"",
    "they placed 1st in 2003. how did they place the next year?": "None",
    "did she get the same award in 2005, as she did in 2006?": "None",
    "is 2003 or 2004 did not qualify?": "## Target type: {yes or no}\n## Query:\nStep1: Find the row_number of Year 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Find the Playoffs of output_of_query1\nQuery2: \"get_information(relation='Playoffs', tail_entity='output_of_query1')\"\nStep3: Find the row_number of Year 2004\nQuery3: \"get_information(relation='Year', tail_entity='2004')\"\nStep4: Find the Playoffs of output_of_query3\nQuery4: \"get_information(relation='Playoffs', tail_entity='output_of_query3')\"\nStep5: Check if the value of output_of_query2 or output_of_query4 is \"Did not qualify\"\nQuery5: \"check(value='Did not qualify', set='output_of_query2|output_of_query4')\"",
    "in 2004, 4th position was achieved. in this same year, what other position was also achieved?": "None",
    "who was the opponent during for first week?": "None",
    "who would the next opponent be after week 4?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the entity that Week is 4\nQuery1: \"get_information(relation='Week', tail_entity='4')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "who was an opponent in 1996 and 1997?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity in 1996\nQuery1: \"get_information(relation='Year', tail_entity='1996')\"\nStep2: Find the entity in 1997\nQuery2: \"get_information(relation='Year', tail_entity='1997')\"\nStep3: Find the opponent of output_of_query1\nQuery3: \"get_information(relation='Opponent', head_entity='output_of_query1')\"\nStep4: Find the opponent of output_of_query2\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query2')\"\nStep5: Get the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"",
    "who was the first opponent of the season?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Week equals 1\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "who was the opponent during the last week of the season?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "how many times did he get 1st place in 1997?": "None",
    "what was the number of wins the team had in the 1998 season?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Season equals 1998\nQuery1: \"get_information(relation='Season', tail_entity='1998')\"\nStep2: Find the Overall Record of output_of_query1\nQuery2: \"get_information(relation='Overall Record', head_entity='output_of_query1')\"\nStep3: Extract the number of wins from output_of_query2\nQuery3: \"extract_number(text='output_of_query2')\"",
    "which competitor only lasted two weeks?": "## Target type: {competitor}\n## Query:\nStep1: Find the entity that was eliminated in Week 2\nQuery1: \"get_information(relation='Eliminated', tail_entity='Week 2')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what week was the first bye opponent?": "## Target type: {week}\n## Query:\nStep1: Find the entity named Bye\nQuery1: \"get_information(relation='Opponent', tail_entity='Bye')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Week of output_of_query2\nQuery3: \"get_information(relation='Week', tail_entity='output_of_query2')\"",
    "how many different people scored in the 1997 game?": "None",
    "who was the first opponent on this list?": "None",
    "\"quiz show\" aired on march 21, 1997. what was the name of the next episode?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Original air date\nQuery1: \"get_information(relation='Original air date')\"\nStep2: Find the entity with the value of \"March 21, 1997\" in output_of_query1\nQuery2: \"get_information(relation='Original air date', tail_entity='March 21, 1997')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the next_row of output_of_query3\nQuery4: \"next_row(set='output_of_query3')\"\nStep5: Find the entity with the row_number of output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Find the Title of output_of_query5\nQuery6: \"get_information(relation='Title', head_entity='output_of_query5')\"",
    "how long does grishma last?": "None",
    "how long did it take for sandeno to finish?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Sandeno\nQuery1: \"get_information(relation='Name', tail_entity='Sandeno')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how long did taiki tsuchiya last?": "None",
    "how long was stanislas le tourneur d'ison in office?": "None",
    "how long did it take giandomenico basso to finish the 2013 rali vinho da madeira?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Giandomenico Basso\nQuery1: \"get_information(relation='Driver', tail_entity='Giandomenico Basso')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how long did byamba enkh-amgalan take to ski the race?": "## Target type: {ski time}\n## Query:\nStep1: Find the entity named Byamba Enkh-Amgalan\nQuery1: \"get_information(relation='Athlete', tail_entity='Byamba Enkh-Amgalan')\"\nStep2: Find the ski time of output_of_query1\nQuery2: \"get_information(relation='Ski time', head_entity='output_of_query1')\"",
    "how long was it until briscu was voted out?": "None",
    "how long did it take for lyubomir popov to finish the giant slalom in race 1?": "None",
    "how long is the combined days reigned for genichiro tenryu?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Genichiro Tenryu\nQuery1: \"get_information(relation='Wrestler', tail_entity='Genichiro Tenryu')\"\nStep2: Find the combined days reigned of output_of_query1\nQuery2: \"get_information(relation='Combined days', head_entity='output_of_query1')\"",
    "how long did it take for olena pidhrushna's team to finish?": "None",
    "how long is the song from the lion king?": "## Target type: {length of the song}\n## Query:\nStep1: Find the entity named The Lion King\nQuery1: \"get_information(relation='Film', tail_entity='The Lion King')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "how long did russia use the habbo service?": "None",
    "how long was there between tarpan seasons and antologie?": "## Target type: {time duration}\n## Query:\nStep1: Find the album named \"Tarpan Seasons\"\nQuery1: \"get_information(relation='Album', tail_entity='Tarpan Seasons')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the album named \"Antologie\"\nQuery3: \"get_information(relation='Album', tail_entity='Antologie')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Calculate the time duration between output_of_query2 and output_of_query4\nQuery5: \"calculate_duration(start_year='output_of_query2', end_year='output_of_query4')\"",
    "how long did bottka paul serve?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Bottka Paul\nQuery1: \"get_information(relation='First Name', tail_entity='Bottka Paul')\"\nStep2: Find the Beginning of service of output_of_query1\nQuery2: \"get_information(relation='Beginning of service', head_entity='output_of_query1')\"\nStep3: Find the End of service of output_of_query1\nQuery3: \"get_information(relation='End of service', head_entity='output_of_query1')\"\nStep4: Calculate the duration between output_of_query2 and output_of_query3\nQuery4: \"duration(start_date='output_of_query2', end_date='output_of_query3')\"",
    "how long was uladzimir kazlou's furthest competition throw?": "None",
    "how many episodes had less than .9 viewers?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the episodes with less than 0.9 viewers\nQuery1: \"get_information(relation='Viewers', tail_entity<'0.9')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many episodes had at least an average of 0.70?": "None",
    "how many episodes had an average over 0.75?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the episodes with an average over 0.75\nQuery1: \"get_information(relation='Average', tail_entity>'0.75')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what episode had the most viewers?": "None",
    "how many episodes are listed?": "## Target type: {number of episodes}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many episodes had a consecutive rating over 11%?": "None",
    "which episode has the most viewers?": "None",
    "which episode had at least 1.0 viewers?": "None",
    "how many shows had at least 10 million viewers?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose viewers is at least 10 million.\nQuery1: \"get_information(relation='Viewers (m)', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which air date had the least viewers?": "## Target type: {Air Date}\n## Query:\nStep1: Find the entity with the relation of Viewers (m)\nQuery1: \"get_information(relation='Viewers (m)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min viewers\nQuery3: \"get_information(relation='Viewers (m)', tail_entity='output_of_query2')\"\nStep4: Find the Air Date of output_of_query3\nQuery4: \"get_information(relation='Air Date', head_entity='output_of_query3')\"",
    "which airing had the least number of viewers?": "None",
    "which month aired the most episodes according to this chart?": "None",
    "how many series had 8 episodes?": "## Target type: {number of series}\n## Query:\nStep1: Find the entity with the relation of No. of Ep. being 8\nQuery1: \"get_information(relation='No. of Ep.', tail_entity='8')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many episodes had their original airdate in february?": "None",
    "how many episodes aired in may 1997?": "None",
    "how many episodes aired in february?": "None",
    "how many of the episodes were broadcast in july?": "None",
    "how many episodes aired originally but not in english?": "None",
    "what were the total number of titles aired in november?": "None",
    "how many of the episodes did not air in the u.s.?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the episodes with relation of Original Air date\nQuery1: \"get_information(relation='Original Air date')\"\nStep2: Find the episodes that are unaired in the U.S.\nQuery2: \"get_information(relation='Original Air date', tail_entity='Unaired in U.S')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many episodes aired in july 1995?": "None",
    "what number of tornadoes occurred in 1965?": "## Target type: {number of tornadoes}\n## Query:\nStep1: Find the entity with the relation of Date as January 1, 1965\nQuery1: \"get_information(relation='Date', tail_entity='January 1, 1965')\"\nStep2: Find the tornadoes of output_of_query1\nQuery2: \"get_information(relation='Tornadoes', head_entity='output_of_query1')\"",
    "how many shows aired before 1992?": "None",
    "how many episodes aired in may 1995?": "None",
    "how many episodes were there?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many titles only had one episode?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Episodes as 1\nQuery1: \"get_information(relation='Episodes', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total laps were there in the 2008 canadian grand prix?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named 2008 Canadian Grand Prix\nQuery1: \"get_information(relation='Year', tail_entity='2008', relation='Pos', tail_entity='1', relation='Constructor', tail_entity='Ferrari', relation='Driver', tail_entity='Felipe Massa')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many points total did pastor maldonado earn in races in 2008?": "None",
    "which competition took place in 2008 but had only one event?": "None",
    "how many consecutive wins did they have in january 2009?": "None",
    "which team scored the most points in 2008?": "None",
    "which race was last in 2008": "None",
    "how many games did the tigers lose in the 2008 season?": "None",
    "what was the total attendance for the tigers' first three games of 2008?": "None",
    "how many games did they win in 2009?": "None",
    "how many games have a winning result (w) before november 25, 2007?": "None",
    "what is the only type of event listed?": "## Target type: {Event}\n## Query:\nStep1: Find all the unique event types\nQuery1: \"get_information(relation='Event')\"\nStep2: If there is only one unique event type, return that as the answer.",
    "which are they only two names that have spain as their country of origin?": "## Target type: {names}\n## Query:\nStep1: Find the entities with the Country of Origin as Spain\nQuery1: \"get_information(relation='Country of Origin', tail_entity='Spain')\"\nStep2: Find the names of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"\nStep3: Get the intersection of output_of_query2 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query2')\"",
    "which town or village is listed after akar?": "## Target type: {Town/Village}\n## Query:\nStep1: Find the entity named Akar\nQuery1: \"get_information(relation='Town/Village', tail_entity='Akar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Town/Village of output_of_query4\nQuery5: \"get_information(relation='Town/Village', head_entity='output_of_query4')\"",
    "what is the number of names listed?": "## Target type: {number}\n## Query:\nStep1: Find all the names\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only name listed without a location?": "None",
    "which is the most recent source for the name?": "## Target type: {'Source'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Source of output_of_query3\nQuery4: \"get_information(relation='Source', head_entity='output_of_query3')\"",
    "what is the number of last names listed that have an english origin?": "None",
    "which nationality had the larger amount of names listed?": "None",
    "how many different nationality's are on the list?": "## Target type: {count of nationalities}\n## Query:\nStep1: Find all the nationalities\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year appears the most?": "None",
    "which was earlier, lucia di lammermoor or lucrezia borgia?": "None",
    "which event is the most recurring on this list?": "None",
    "how many were listed no later than 2010?": "None",
    "what club is listed after az?": "None",
    "how many games did the eagles lose by more than 10 points?": "None",
    "on what date did the eagles score the least points?": "None",
    "how many points did the eagles score in week 13?": "None",
    "which team won in the game in which the highest number of points was scored?": "## Target type: {'Home' or 'Visitor'}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Home or Visitor', head_entity='output_of_query3')\"",
    "what was their highest points scored in a game?": "None",
    "in what week was the eagles' first victory of the season?": "## Target type: {week}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of 'W'\nQuery3: \"get_information(relation='Result', tail_entity='W')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the min output_of_query4\nQuery5: \"min(set='output_of_query4')\" \nStep6: Find the week of output_of_query5\nQuery6: \"get_information(relation='Week', tail_entity='output_of_query5')\"",
    "what is the greatest number of points this team has won by?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Split the scores into two separate values\nQuery2: \"split(set='output_of_query1', delimiter='\u2013')\"\nStep3: Calculate the difference between the two scores\nQuery3: \"calculate_difference(value1='output_of_query2[0]', value2='output_of_query2[1]')\"\nStep4: Get the max difference of output_of_query3\nQuery4: \"max(set='output_of_query3')\"",
    "for how many teams was the win percentage below 90%": "None",
    "how many games did the winning team score above 3 points?": "None",
    "which game had the most points scored?": "None",
    "in how many games did one of the teams score below 100 points?": "None",
    "what was the most points the team scored?": "None",
    "what was their total number of wins in the preseason?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Result as Win\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number is less than or equal to 2 (preseason games)\nQuery3: \"get_information(relation='row_number', tail_entity<='2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "highest number of points by a team in a game.": "None",
    "how many games did the eagles win after december 1, 1968?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that is December 1, 1968\nQuery1: \"get_information(relation='Date', tail_entity='December 1, 1968')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the games after output_of_query2 that the Result is \"W\"\nQuery3: \"get_information(relation='Result', tail_entity='W', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what district has the least amount of population?": "## Target type: {district}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the district of output_of_query3\nQuery4: \"get_information(relation='Districts', head_entity='output_of_query3')\"",
    "which district has the most density?": "## Target type: {district}\n## Query:\nStep1: Find the entity with the relation of Density (persons/km\u00b2)\nQuery1: \"get_information(relation='Density (persons/km\u00b2)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Density\nQuery3: \"get_information(relation='Density (persons/km\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the district of output_of_query3\nQuery4: \"get_information(relation='District', head_entity='output_of_query3')\"",
    "which of the 11 districts has the highest population density?": "None",
    "what city has the least amount of population?": "None",
    "what is the least population listed in the table?": "## Target type: {population}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"",
    "which area has the least number of residents?": "## Target type: {area}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what province has the least population?": "## Target type: {province}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the province of output_of_query3\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "which is the largest district in terms of population?": "## Target type: {district}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the District of output_of_query3\nQuery4: \"get_information(relation='Districts', head_entity='output_of_query3')\"",
    "which district has the highest population density?": "## Target type: {district}\n## Query:\nStep1: Find the maximum population density\nQuery1: \"get_information(relation='Density per km\u00b2', tail_entity>='max')\"\nStep2: Find the district with the maximum population density from output_of_query1\nQuery2: \"get_information(relation='District', head_entity='output_of_query1')\"",
    "which city had the least people at the 2002 census?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population (2002 census)\nQuery1: \"get_information(relation='Population (2002 census)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min population at the 2002 census\nQuery3: \"get_information(relation='Population (2002 census)', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what are the categories at the top of the table?": "None",
    "at the top of the table, list the categories given.": "None",
    "what name is at the top of the list?": "## Target type: {name}\n## Query:\nStep1: Find the row_number that is at the top of the list\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the entity of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what are the number of times nc appears under the comp column?": "None",
    "what is the name on top of the list?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is listed previous to in iso 15919, &#7735; is used to represent &#2355;. under comments?": "## Target type: {Comment}\n## Query:\nStep1: Find the entity that Comment is \"In ISO 15919, \u1e37 is used to represent \u0933.\"\nQuery1: \"get_information(relation='Comment', tail_entity='In ISO 15919, \u1e37 is used to represent \u0933.')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Comment of output_of_query4\nQuery5: \"get_information(relation='Comment', head_entity='output_of_query4')\"",
    "name the location used the most number of times in the table.": "None",
    "how many consecutive rankings are listed?": "## Target type: {number of rankings}\n## Query:\nStep1: Find the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "on average how many times was w listed as the result?": "None",
    "how many names are listed?": "## Target type: {number}\n## Query:\nStep1: Find the names in the schema\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average number of losses for the first three on the list?": "None",
    "what name is listed at the top?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many categories are listed on this chart?": "## Target type: {number of categories}\n## Query:\nStep1: Find all the categories\nQuery1: \"get_information(relation='Kategori')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the only position that san diego drafted more than one of.": "## Target type: {position}\n## Query:\nStep1: Find the entity that the NFL team is San Diego Chargers\nQuery1: \"get_information(relation='NFL team', tail_entity='San Diego Chargers')\"\nStep2: Find the positions of output_of_query1\nQuery2: \"get_information(relation='Pos.', head_entity='output_of_query1')\"\nStep3: Find the positions that appear more than once\nQuery3: \"get_duplicates(set='output_of_query2')\"",
    "who was the only player drafted in the top 10?": "None",
    "larry rentz was drafted to the san diego chargers, but what was his college?": "## Target type: {college}\n## Query:\nStep1: Find the entity named Larry Rentz\nQuery1: \"get_information(relation='Player', tail_entity='Larry Rentz')\"\nStep2: Find the college of output_of_query1\nQuery2: \"get_information(relation='College', head_entity='output_of_query1')\"",
    "who was the first pick in the draft?": "## Target type: {player}\n## Query:\nStep1: Find the entity that is the first pick in the draft\nQuery1: \"get_information(relation='Pick #', tail_entity='1')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who is the first detroit lions pick not from the pac-10?": "None",
    "which nfl team picked the first player": "## Target type: {'NFL team'}\n## Query:\nStep1: Find the entity that is the first player\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the NFL team of output_of_query1\nQuery2: \"get_information(relation='NFL team', head_entity='output_of_query1')\"",
    "who was the first pick by the golden seals?": "None",
    "how many players hometowns are outside of california?": "None",
    "who was the highest draft choice?": "None",
    "other draftee that attended tennessee state besides dick barnett": "None",
    "who was the only draftee to come from clemson?": "## Target type: {player}\n## Query:\nStep1: Find the entity that College is Clemson\nQuery1: \"get_information(relation='College', tail_entity='Clemson')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what was the name of the college that the player who was the fourth pick attended?": "## Target type: {college}\n## Query:\nStep1: Find the player who was the fourth pick\nQuery1: \"get_information(relation='Pick', tail_entity='4')\"\nStep2: Find the college of the output of query 1\nQuery2: \"get_information(relation='College', head_entity='output_of_query1')\"",
    "which competition came in last position out of all of the competitions shown?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the position of all competitions\nQuery1: \"get_information(relation='Position')\"\nStep2: Get the max position from output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max position\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what winner received the least number of votes?": "None",
    "how many points did the top team finish ahead of the bottom team?": "None",
    "what was the total score of the runner-up?": "## Target type: {Total score}\n## Query:\nStep1: Find the entity with the relation of Result is \"Runner-up\"\nQuery1: \"get_information(relation='Result', tail_entity='Runner-up')\"\nStep2: Find the Total score of output_of_query1\nQuery2: \"get_information(relation='Total score', head_entity='output_of_query1')\"",
    "name one team who was eliminatedat most twice": "None",
    "which game date shows the least in the final score for a win?": "None",
    "what winning team has the least number of letters?": "None",
    "what winner is listed last in the table?": "## Target type: {'Winner'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "which winner won the lowest grand prize?": "## Target type: {Winner}\n## Query:\nStep1: Find the entity with the relation of Grand Prize\nQuery1: \"get_information(relation='Grand Prize')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Grand Prize\nQuery3: \"get_information(relation='Grand Prize', tail_entity='output_of_query2')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "which winning team won the least?": "## Target type: {winning team}\n## Query:\nStep1: Find all the winning teams\nQuery1: \"get_information(relation='Winning team')\"\nStep2: Find the winning team with the least row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the winning team with the least row_number\nQuery3: \"get_information(relation='Winning team', tail_entity='output_of_query2')\"",
    "how many semi-finals had points more than 10?": "## Target type: {number of semi-finals}\n## Query:\nStep1: Find the semi-final points more than 10\nQuery1: \"get_information(relation='Semi-Final Points', tail_entity>'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the best winning score?": "None",
    "during the second leg, what game had the most goals?": "None",
    "during the second leg, in how many matches was the winning score above 4?": "## Target type: {number of matches}\n## Query:\nStep1: Find the row_number of the second leg\nQuery1: \"get_information(relation='row_number', tail_entity='2')\"\nStep2: Find the winning score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the matches with winning score above 4\nQuery3: \"get_information(relation='Score', tail_entity>'4')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times was the score 1-0 in the 1st leg?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of 1st leg\nQuery1: \"get_information(relation='1st leg')\"\nStep2: Find the times the score was 1-0 in the output_of_query1\nQuery2: \"get_information(relation='1st leg', tail_entity='1-0')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "during the second leg, what number of matches ended in a draw?": "None",
    "which was the only team to score 5 points in the 1st match?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of 1st match score as 5\nQuery1: \"get_information(relation='1st match', tail_entity='5')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team #1', head_entity='output_of_query1') or get_information(relation='Team #2', head_entity='output_of_query1')\"",
    "who were the opponents in the first and second round?": "None",
    "which team was the top scorer in the 1st leg?": "None",
    "who was the opponent in the first game of the season?": "None",
    "who was the opponent on the first game of the season?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent#', head_entity='output_of_query3')\"",
    "in how many games did the opponent score at least two points?": "None",
    "what is the total points scored in the second round by all teams?": "None",
    "which teams were in the first replay match?": "None",
    "what are the total number of points scored by the first place team?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position is 1\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "which team first won the first round?": "None",
    "which county has the most representation?": "## Target type: {county}\n## Query:\nStep1: Find the entity with the most representation\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "which representative represented the most counties?": "None",
    "which party has the most mps?": "None",
    "what party has the highest number of mps?": "None",
    "how many total representatives have there been?": "None",
    "which party hold the most number of seats?": "None",
    "what party has the most mp's?": "None",
    "what is the total number of representatives?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which party had the most number of seats?": "## Target type: {Party name}\n## Query:\nStep1: Find the party with the max Seats\nQuery1: \"get_information(relation='Seats', tail_entity>='max')\"\nStep2: Find the party name of output_of_query1\nQuery2: \"get_information(relation='Party name', head_entity='output_of_query1')\"",
    "what party had the most seats?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Seat\nQuery1: \"get_information(relation='Seat')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"\nStep3: Find the party that appears the most\nQuery3: \"get_information(relation='Party', tail_entity>='most')\"\nStep4: Get the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "how many republicans are listed as representatives?": "None",
    "which party has the most members?": "## Target type: {party}\n## Query:\nStep1: Find the entities with the relation of Party\nQuery1: \"get_information(relation='Party')\"\nStep2: Find the party that appears the most\nQuery2: \"get_information(relation='Party', tail_entity>='most')\"",
    "which party has the most seats in parliament?": "None",
    "what party is represented the most?": "## Target type: {'Party Affiliation'}\n## Query:\nStep1: Find the entity with the relation of Party Affiliation\nQuery1: \"get_information(relation='Party Affiliation')\"\nStep2: Find the party with the most occurrences\nQuery2: \"mode(set='output_of_query1')\"",
    "for how many years did hallgrimur sveinsson serve as the bishop of iceland?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Hallgrimur Sveinsson\nQuery1: \"get_information(relation='Name', tail_entity='Hallgrimur Sveinsson')\"\nStep2: Find the Office started of output_of_query1\nQuery2: \"get_information(relation='Office started', head_entity='output_of_query1')\"\nStep3: Find the Office ended of output_of_query1\nQuery3: \"get_information(relation='Office ended', head_entity='output_of_query1')\"\nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(start='output_of_query2', end='output_of_query3')\"",
    "who among iceland's lutheran bishops has held the longest tenure to date?": "None",
    "how many years did karl rove stay in office?": "None",
    "who served more terms in office, mauno koivisto or martti ahtisaari?": "## Target type: {president of the republic}\n## Query:\nStep1: Find the entity named Mauno Koivisto\nQuery1: \"get_information(relation='president of the republic', tail_entity='Mauno Koivisto')\"\nStep2: Find the entity named Martti Ahtisaari\nQuery2: \"get_information(relation='president of the republic', tail_entity='Martti Ahtisaari')\"\nStep3: Find the order in position of output_of_query1\nQuery3: \"get_information(relation='order in position', head_entity='output_of_query1')\"\nStep4: Find the order in position of output_of_query2\nQuery4: \"get_information(relation='order in position', head_entity='output_of_query2')\"\nStep5: Check the condition if output_of_query3 is greater than output_of_query4\nQuery5: \"greater_than(value1='output_of_query3', value2='output_of_query4')\"\nStep6: If output_of_query5 is True, then the answer is Mauno Koivisto. Otherwise, the answer is Martti Ahtisaari.",
    "who served the most years as director?": "None",
    "how many total years did sir patrick duncan serve in office?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Sir Patrick Duncan\nQuery1: \"get_information(relation='Name', tail_entity='Sir Patrick Duncan')\"\nStep2: Find the Took office of output_of_query1\nQuery2: \"get_information(relation='Took office', head_entity='output_of_query1')\"\nStep3: Find the Left office of output_of_query1\nQuery3: \"get_information(relation='Left office', head_entity='output_of_query1')\"\nStep4: Calculate the difference between output_of_query3 and output_of_query2 in years\nQuery4: \"calculate_difference(date1='output_of_query2', date2='output_of_query3', unit='years')\"",
    "how long was his professional career?": "None",
    "who was in office for the most amount of time?": "None",
    "how many people served in this office?": "None",
    "who served the most years as mayor?": "None",
    "how long was the longest presidential action by any president of finland?": "None",
    "in how many films did henrik malberg appear?": "None",
    "how many people stayed at least 3 years in office?": "None",
    "what director served the longest term?": "None",
    "when was the first season?": "None",
    "what was the name of the first episode?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that has the relation row_number of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what was the air date of the first episode?": "## Target type: {Airdate}\n## Query:\nStep1: Find the entity that is the first episode\nQuery1: \"get_information(relation='Episode', tail_entity='1')\"\nStep2: Get the Airdate of output_of_query1\nQuery2: \"get_information(relation='Airdate', head_entity='output_of_query1')\"",
    "what is the name of the first episode?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "on what date was the first episode broadcast?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the row_number of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Original Broadcast Date of output_of_query1\nQuery2: \"get_information(relation='Original Broadcast Date', head_entity='output_of_query1')\"",
    "what was the name of the first episode of this show?": "None",
    "what year was the first title released?": "None",
    "who wrote the first episode of the season?": "## Target type: {writer}\n## Query:\nStep1: Find the row_number of the first episode in the season\nQuery1: \"get_information(relation='No. in\\nSeason', tail_entity='1')\"\nStep2: Find the Written by of the output_of_query1\nQuery2: \"get_information(relation='Written by', head_entity='output_of_query1')\"",
    "when is the first game?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which year did they release their first album?": "None",
    "what was the first air date of season 1?": "## Target type: {air date}\n## Query:\nStep1: Find the entity with the relation of No. in season\nQuery1: \"get_information(relation='No. in season', tail_entity='1')\"\nStep2: Find the air date of output_of_query1\nQuery2: \"get_information(relation='Original air date', head_entity='output_of_query1')\"",
    "what is the date of the first episode?": "Since the \"Original air date (UK)\" directly provides the information needed, we can use the straightforward query to obtain the date.\n\n## Target type: {date}\n## Query:\nStep1: Find the Original air date of the first episode\nQuery1: \"get_information(relation='Episode #', tail_entity='1-01')\"\nStep2: Get the Original air date of output_of_query1\nQuery2: \"get_information(relation='Original air date (UK)', head_entity='output_of_query1')\"",
    "which city has the most people?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "how many hospitals have at least 1,000 beds?": "## Target type: {number of hospitals}\n## Query:\nStep1: Find the hospitals with at least 1,000 beds\nQuery1: \"get_information(relation='# Beds', tail_entity>='1000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which city has the largest population?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Official Name of output_of_query3\nQuery4: \"get_information(relation='Official Name', head_entity='output_of_query3')\"",
    "which city is the most densely populated?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the highest density\nQuery1: \"get_information(relation='Density (inhabitants/km2)', tail_entity>='highest')\"\nStep2: Find the city with the highest density\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "what city has the largest population?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the largest population\nQuery1: \"get_information(relation='Population', tail_entity>='largest')\"\nStep2: Get the city with the largest population of output_of_query1\nQuery2: \"get_information(relation='Township', head_entity='output_of_query1')\"",
    "how many cities are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which region has the most population?": "None",
    "which city has the most density?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the highest Density\nQuery1: \"get_information(relation='Density', tail_entity>='highest')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many hospital's have at least 600 beds?": "## Target type: {number of hospitals}\n## Query:\nStep1: Find the hospitals with at least 600 beds\nQuery1: \"get_information(relation='# Beds', tail_entity>='600')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which engines are the same as the first entry ('89 u12 bluebird ltd)?": "None",
    "which car's power measured at higher than 6000 rpm?": "None",
    "how many models have a capacity other than 600?": "## Target type: {number of models}\n## Query:\nStep1: Find the models with a capacity other than 600\nQuery1: \"get_information(relation='Capacity', tail_entity<>'600')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which car is the only one with more than 230 hp?": "None",
    "what's the total design variations with vacuum brakes?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Brakes\nQuery1: \"get_information(relation='Brakes', tail_entity='vacuum')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what wast the previous model launched before voodoo3 1000?": "## Target type: {Model}\n## Query:\nStep1: Find the entity named Voodoo3 1000\nQuery1: \"get_information(relation='Model', tail_entity='Voodoo3 1000')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model of output_of_query4\nQuery5: \"get_information(relation='Model', head_entity='output_of_query4')\"",
    "which engine(s) has the least amount of power?": "None",
    "how many total honda engines were there?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose engine is Honda\nQuery1: \"get_information(relation='Engine', tail_entity='Honda')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many more kw of power does the en71 use than the en57?": "None",
    "are there any other engines listed besides cosworth or brm?": "None",
    "how many engines were not cosworth's?": "None",
    "how many more seats were available in 1975 than 1963?": "None",
    "which power supply can handle the most consecutive watts?": "## Target type: {Power Supply}\n## Query:\nStep1: Find the entity with the relation of Power [W]\nQuery1: \"get_information(relation='Power\\n[W]')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Watts\nQuery3: \"get_information(relation='Power\\n[W]', tail_entity='output_of_query2')\"\nStep4: Find the Power Supply of output_of_query3\nQuery4: \"get_information(relation='Type', head_entity='output_of_query3')\"",
    "how many male and female german speakers are there?": "None",
    "how many germans finished in the top five?": "None",
    "how many players have german as their nationality?": "None",
    "how many german racers finished the race?": "None",
    "what is the total number of names listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "germany had how many consecutive athletes ranked?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query4 and output_of_query2\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query2')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many total names are listed as having french nationality?": "## Target type: {number of names}\n## Query:\nStep1: Find the entity with the relation of Nationality as French\nQuery1: \"get_information(relation='Nationality', tail_entity='French')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total amount of names listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many ethnicity is there?": "None",
    "what is the number of nationalities listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the Nationality\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of players listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total of names are listed?": "## Target type: {number of names}\n## Query:\nStep1: Find all the names listed\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who has more number ones in 2014, ed sheeran or pitbull?": "## Target type: {performer}\n## Query:\nStep1: Find the entity named Ed Sheeran\nQuery1: \"get_information(relation='Performer', tail_entity='Ed Sheeran')\"\nStep2: Find the number ones of output_of_query1 in 2014\nQuery2: \"get_information(relation='Number Ones', tail_entity='output_of_query1', key='Year', value='2014')\"\nStep3: Find the entity named Pitbull\nQuery3: \"get_information(relation='Performer', tail_entity='Pitbull')\"\nStep4: Find the number ones of output_of_query3 in 2014\nQuery4: \"get_information(relation='Number Ones', tail_entity='output_of_query3', key='Year', value='2014')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare_count(set1='output_of_query2', set2='output_of_query4')\"",
    "who was the next highest scorer after max twigg?": "None",
    "who ranked above mark corrigan?": "## Target type: {Player}\n## Query:\nStep1: Find the entity named Mark Corrigan\nQuery1: \"get_information(relation='Player', tail_entity='Mark Corrigan')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity whose rank is smaller than output_of_query2\nQuery3: \"get_information(relation='Rank', tail_entity<'output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who was the top scorer from ireland?": "None",
    "how many players that are represented in the top scorers chart are from england?": "None",
    "who was the highest leading goalkicker from the year 1997-2014?": "None",
    "who has more number one singles, ed sheeran or ace wilder?": "## Target type: {'Performer'}\n## Query:\nStep1: Find the entity named Ed Sheeran\nQuery1: \"get_information(relation='Performer', tail_entity='Ed Sheeran')\"\nStep2: Find the number of number-one singles of output_of_query1\nQuery2: \"get_information(relation='Number One Singles', head_entity='output_of_query1')\"\nStep3: Find the entity named Ace Wilder\nQuery3: \"get_information(relation='Performer', tail_entity='Ace Wilder')\"\nStep4: Find the number of number-one singles of output_of_query3\nQuery4: \"get_information(relation='Number One Singles', head_entity='output_of_query3')\"\nStep5: Compare the number of number-one singles of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what scorer is above lochin soliev?": "None",
    "who has won the most best young rider awards?": "## Target type: {'Best Young Rider'}\n## Query:\nStep1: Find the entity with relation 'Best Young Rider' that appears the most\nQuery1: \"get_information(relation='Best Young Rider', tail_entity>='most')\"\nStep2: Find the Best Young Rider of output_of_query1\nQuery2: \"get_information(relation='Best Young Rider', head_entity='output_of_query1')\"",
    "how many scorers from england scored above 15 points?": "None",
    "what is the top listed player?": "## Target type: {Player}\n## Query:\nStep1: Find the top listed player\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who was the top goal scorer?": "None",
    "after liam reilly which artist had the next highest point total?": "None",
    "who is the last ranking player?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who has a higher total, brendan cummins or ger cuddy?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Brendan Cummins\nQuery1: \"get_information(relation='Player', tail_entity='Brendan Cummins')\"\nStep2: Find the total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Ger Cuddy\nQuery3: \"get_information(relation='Player', tail_entity='Ger Cuddy')\"\nStep4: Find the total of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the totals of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', comparison='higher')\"",
    "how many circuits are listed?": "None",
    "how many circuits did were run?": "## Target type: {number of circuits}\n## Query:\nStep1: Find all the circuits\nQuery1: \"get_information(relation='Circuit')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of circuits listed on the chart?": "None",
    "how many circuits have at least 2,000 screens?": "None",
    "how many chips total are there?": "## Target type: {number of chips}\n## Query:\nStep1: Find the number of unique chips\nQuery1: \"get_information(relation='Chip')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many buildings are there total?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of networks listed in the table?": "None",
    "what is the total number of transmitters listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the transmitters in the table\nQuery1: \"get_information(relation='Transmitter')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams are there in total?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Club\nQuery1: \"get_information(relation='Club')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many lines exist in total?": "None",
    "how many total names are there?": "## Target type: {number}\n## Query:\nStep1: Find all the names\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in total , how many teams are there?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entities with the relation Team #1\nQuery1: \"get_information(relation='Team #1')\"\nStep2: Find the entities with the relation Team #2\nQuery2: \"get_information(relation='Team #2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many intersecting highways are there total?": "None",
    "how many total events will occur in all?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were not played in venue h?": "## Target type: {number of games}\n## Query:\nStep1: Find the games that were played in Venue H\nQuery1: \"get_information(relation='Venue', tail_entity='H')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times is attendance over 30,000?": "This question involves counting the number of times the attendance is over 30,000.\n\n## Target type: {number of times}\n## Query:\nStep 1: Find the instances where the attendance is over 30,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'30000')\"\nStep 2: Calculate the count of instances from output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "is the total number of venues above or below 6?": "None",
    "which venue hosted the largest amount of events within this table?": "## Target type: {venue}\n## Query:\nStep1: Find the entity in Venue that appears the most.\nQuery1: \"get_information(relation='Venue', tail_entity>='most')\"\nStep2: Find the Venue of output_of_query1.\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "count the number of venues and give the total.": "None",
    "name a venue that hosted at least five times.": "None",
    "how many games have an attendance below 25,000?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance below 25,000\nQuery1: \"get_information(relation='Attendance', tail_entity<'25000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of losses?": "None",
    "what was the total number of losses?": "None",
    "what is the total number losses?": "None",
    "who has the least amount of losses?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Losses\nQuery1: \"get_information(relation='Losses')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Losses\nQuery3: \"get_information(relation='Losses', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what was the total number of losses brazil suffered?": "## Target type: {number of losses}\n## Query:\nStep1: Find the entity with the relation of Result as 'L'\nQuery1: \"get_information(relation='Result', tail_entity='L')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many losses were there in the season?": "None",
    "number of losses": "## Target type: {number of losses}\n## Query:\nStep1: Find the games where the Result is \"L\"\nQuery1: \"get_information(relation='Result', tail_entity='L')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of loses?": "This question can be answered by counting the number of occurrences where the \"Result\" is \"Lose\".\n\n## Target type: {number}\n## Query:\nStep 1: Find all the occurrences where the Result is Lose\nQuery1: \"get_information(relation='Result', tail_entity='Lose')\"\nStep 2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the average number of games lost?": "None",
    "were the highest unemployment rates in japan before or after the year 2000?": "## Target type: {Year}\n## Query:\nStep1: Find the entity that represents Japan\nQuery1: \"get_information(relation='Country', tail_entity='Japan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Unemployment Rate of output_of_query2\nQuery3: \"get_information(relation='Unemployment Rate', tail_entity='output_of_query2')\"\nStep4: Find the entity that represents the year 2000\nQuery4: \"get_information(relation='Year', tail_entity='2000')\"\nStep5: Find the row_number of output_of_query4\nQuery5: \"get_information(relation='row_number', head_entity='output_of_query4')\"\nStep6: Compare the row_number of output_of_query5 with output_of_query2\nQuery6: \"compare(row1='output_of_query5', row2='output_of_query2')\"",
    "what is the average number of losses an opponent has?": "None",
    "in what years, between 1990 and 2004, did japan's unemployment rate reach 5% or higher?": "None",
    "how many losses were there in the month of september?": "None",
    "how many consecutive losses took place?": "## Target type: {number}\n## Query:\nStep1: Find the result of all row_number\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the consecutive losses in output_of_query1\nQuery2: \"consecutive_losses(set='output_of_query1')\"",
    "which year had a lower amount of losses, 1998 or 2006?": "None",
    "what was the top attendance for this season?": "## Target type: {attendance}\n## Query:\nStep1: Find the attendance of this season\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max attendance of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what is the most amount of people to attend a single game this season?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"",
    "how many games attendance was under 1000?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Find the entity with Attendance under 1000\nQuery2: \"get_information(relation='Attendance', tail_entity<'1000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "for how many games was attendance above 40,000?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance above 40,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'40000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average attendance for all stadiums?": "None",
    "how much higher was the attendance in week 15 as compared to in week 14?": "None",
    "which game has the least attendance?": "None",
    "what is the difference in attendance between the first and last game of the season?": "None",
    "which team had top attendance through 2005?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Opponent#', head_entity='output_of_query3')\"",
    "what is the number of games with the attendance of at least 7,500?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance of at least 7,500\nQuery1: \"get_information(relation='Attendance', tail_entity>='7500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team has at least 100 wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins', tail_entity>='100')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what was the only team to win more than 100 games?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation Wins that has more than 100 wins\nQuery1: \"get_information(relation='Wins', tail_entity>'100')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many seasons did the teams score above 40 points?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the seasons where the points scored above 40\nQuery1: \"get_information(relation='Points', tail_entity>'40')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons did they win at least 10 games?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Win at least 10 games\nQuery1: \"get_information(relation='Win', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did each team score over 20 points?": "None",
    "in how many games did this team have more than 80 points?": "None",
    "how many teams had less than 10 wins?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Find the teams with less than 10 wins\nQuery2: \"get_information(relation='Wins', tail_entity<'10')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games did they win by at least 5 points?": "None",
    "in how many games did they score at least 20 points?": "None",
    "how many wins were there in seasons with less than 400 points?": "## Target type: {number of wins}\n## Query:\nStep1: Find the seasons with less than 400 points\nQuery1: \"get_information(relation='Points', tail_entity<'400')\"\nStep2: Get the wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many teams won at most 50% of their games?": "None",
    "between 2009 and 2010, which driver had the larger amount of points?": "None",
    "what is the number of races won in in 2012 by etienne bax?": "None",
    "what was the round result of the year after the k-mart racing team got 3rd?": "None",
    "aspen and lienz in 2009 are the only races where this racer got what position?": "None",
    "who had the fastest lap in the last grand prix of the season?": "None",
    "how many times did s\u00e9bastien bourdais win the champ car world series between 2005 and 2007?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity named S\u00e9bastien Bourdais\nQuery1: \"get_information(relation='Driver', tail_entity='S\u00e9bastien Bourdais')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the season of output_of_query3\nQuery4: \"get_information(relation='Season', tail_entity='output_of_query3')\"\nStep5: Find the next_row of output_of_query2\nQuery5: \"next_row(set='output_of_query2')\"\nStep6: Find the season of output_of_query5\nQuery6: \"get_information(relation='Season', tail_entity='output_of_query5')\"\nStep7: Find the rows between 2005 and 2007\nQuery7: \"get_information(relation='Season', tail_entity>='2005', head_entity<='2007')\"\nStep8: Get the intersection of output_of_query4 and output_of_query7\nQuery8: \"",
    "which month had the same number of road wins as december?": "None",
    "which sports network has aired the most races in this season?": "None",
    "what was the greatest number of years that grissom racing enterprises had consecutive wins?": "None",
    "was the team that had the most laps above or below 250?": "None",
    "in february was there at least 1 road win?": "## Target type: {'road win'}\n## Query:\nStep1: Find the records in February\nQuery1: \"get_information(relation='February')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the road win of output_of_query2\nQuery3: \"get_information(relation='road win', tail_entity='output_of_query2')\"\nStep4: Check if there is at least 1 road win in output_of_query3\nQuery4: \"exists(set='output_of_query3')\"",
    "what team was lost to after the miami dolphins in week 6?": "None",
    "how many points did the ravens win by in week 13?": "## Target type: {points}\n## Query:\nStep1: Find the entity with the relation of Week as \"13\"\nQuery1: \"get_information(relation='Week', tail_entity='13')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Split the Result to get the points\nQuery3: \"split_string(string='output_of_query2', delimiter=' ')\", output: ['L', '35\u201317']\nStep4: Calculate the points the Ravens won by\nQuery4: \"abs(int(output_of_query3[1].split('\u2013')[0]) - int(output_of_query3[1].split('\u2013')[1]))\"",
    "how many points did the dolphins score against the buffalo bills total?": "None",
    "did the broncos on september 29th win by less than 5 points?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity that is September 29th\nQuery1: \"get_information(relation='Date', tail_entity='September 29')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Calculate the difference between the winning score and losing score in output_of_query2\nQuery3: \"calculate_difference(set='output_of_query2')\"\nStep4: Check if the difference in output_of_query3 is less than 5\nQuery4: \"less_than(set='output_of_query3', value='5')\"",
    "in how many games did the red raiders score at least 20 points?": "None",
    "who did this team face in the only game that ended in a tie this season?": "None",
    "who did the broncos play against during the last game of the season?": "None",
    "what was the last game of the 2013 season?": "None",
    "which teams did they lose to?": "None",
    "number of points dolphins scored against tampa bay buccaneers in week 4": "None",
    "who scored the least?": "None",
    "what was the least amount of points scored by a leading scorer?": "None",
    "how many top scorers do not appear twice?": "None",
    "which team scored the least?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who scored the least amount of points?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which athlete scored the most points?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "who had the most points?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which player ranked the most?": "None",
    "who has the most score?": "None",
    "of those in the top 15 positions, who earned the least number of points?": "## Target type: {rider}\n## Query:\nStep1: Find the entities in the top 15 positions\nQuery1: \"get_information(relation='row_number', tail_entity<='15')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Get the entities with the min points\nQuery4: \"get_information(relation='Points', tail_entity='output_of_query3')\"\nStep5: Find the riders of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "who was the top goalscorer on this team?": "None",
    "which week had the least amount of people in attendance?": "None",
    "who had the least amount of attendees?": "None",
    "when did the least amount of fans attend?": "None",
    "which year had the most attendance?": "## Target type: {Year}\n## Query:\nStep1: Find the entity with the relation of Avg. Attendance\nQuery1: \"get_information(relation='Avg. Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Avg. Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which game had the most attendance?": "None",
    "which game had the least number of people in attendance?": "None",
    "which game had the most in attendance?": "None",
    "who was the last driver listed to receive points?": "None",
    "which driver is the only driver who retired because of collision damage?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the reason of retirement as collision damage\nQuery1: \"get_information(relation='Time/Retired', tail_entity='collision damage')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what driver placed last?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Pos\nQuery1: \"get_information(relation='Pos')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Pos\nQuery3: \"get_information(relation='Pos', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what is the number of drivers who didn't finish the race due to engine trouble?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity with the relation of Time/Retired and value of 'Engine'\nQuery1: \"get_information(relation='Time/Retired', value='Engine')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last driver to actually finish the race?": "None",
    "of all the retired drivers, which of them completed the least amount of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Time/Retired\nQuery1: \"get_information(relation='Time/Retired')\"\nStep2: Find the entity that contains the \"+\" sign in output_of_query1\nQuery2: \"get_information(relation='Time/Retired', value='+')\"\nStep3: Get the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Laps\nQuery4: \"get_information(relation='Laps')\"\nStep5: Find the min output_of_query4\nQuery5: \"min(set='output_of_query4')\" \nStep6: Get the entity with the min Laps\nQuery6: \"get_information(relation='Laps', tail_entity='output_of_query5')\"\nStep7: Find the Driver of output_of_query6\nQuery7: \"get_information(relation='Driver', head_entity='output_of_query6')\"",
    "how many drivers did not have a top ten position?": "None",
    "which driver in the top 8, drives a mclaran-mercedes but is not in first place?": "None",
    "which driver placed highest for roush racing?": "None",
    "which driver did not score less than 7 points?": "None",
    "which rider who was not from the united kingdom had the least final points?": "None",
    "who is listed below onn jaafar?": "None",
    "what is the first episode to air in 1996?": "None",
    "who was the main presenter before barbara d'urso?": "None",
    "which title was published before 1921?": "## Target type: {Title}\n## Query:\nStep1: Find the entities with the relation of Date less than 1921\nQuery1: \"get_information(relation='Date', tail_entity<'1921')\"\nStep2: Find the title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what was the last episode called?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "who was the main presenter previous to barbara d'urso?": "None",
    "how many episodes are there total?": "## Target type: {number}\n## Query:\nStep1: Find all the episodes\nQuery1: \"get_information(relation='Ep#')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was china's first publication?": "None",
    "were more magazines founded before or after 2000?": "## Target type: {comparison}\n## Query:\nStep1: Find the magazines founded before 2000\nQuery1: \"get_information(relation='Founded', tail_entity<'2000')\"\nStep2: Find the magazines founded after 2000\nQuery2: \"get_information(relation='Founded', tail_entity>'2000')\"\nStep3: Compare the count of output_of_query1 and output_of_query2\nQuery3: \"compare_count(set1='output_of_query1', set2='output_of_query2')\"",
    "which magazine was founded the earliest?": "None",
    "when did the last episode air?": "## Target type: {'Original airdate'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Original airdate of output_of_query3\nQuery4: \"get_information(relation='Original airdate', head_entity='output_of_query3')\"",
    "what is the english dubbed title of the first episode to air in english in october of 1995?": "None",
    "what publication scored the most?": "None",
    "which year did switzerland not win 10 gold metals in the winter paralympics? 1976, 1992, or 1998?": "None",
    "in the biathlon at the winter paralympics, how many total medals have non-european teams won?": "None",
    "which country was first in rank at the 1972 olympics?": "## Target type: {Nation}\n## Query:\nStep1: Find the rank of the first country\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country with the rank of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "the amount of silver metals won by switzerland in the 2010 winter paralympics is the same as was won in what year?": "None",
    "which country won more total medals than tue french, but less than the germans in the 1994 winter olympic biathlon?": "None",
    "number of silver medals earned the year switzerland earned no gold medals": "None",
    "what were the only 3 countries to win gold medals at the the 1994 winter olympics biathlon?": "None",
    "how many runners in the 2002 european athletics indoor championships completed the men's 3000 metres event in under 8 minutes?": "None",
    "which olympics had the most participants?": "## Target type: {'Games'}\n## Query:\nStep1: Find the entity with the relation of Participants\nQuery1: \"get_information(relation='Participants')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max participants\nQuery3: \"get_information(relation='Participants', tail_entity='output_of_query2')\"\nStep4: Find the Games of output_of_query3\nQuery4: \"get_information(relation='Games', head_entity='output_of_query3')\"",
    "who came in last place during the 1980 winter olympic women's 1000 metres in speed skating?": "None",
    "only year in which switzerland earned 9 silver medals": "None",
    "how many spanish runners total placed in the top 10 in the men's 3000 metres event at the 2002 european athletics indoor championships?": "None",
    "which country had the most competitors ranked in the top three in the event?": "None",
    "who came in first place at the 1980 winter olympic women's 1000 metres in speed skating?": "None",
    "who is the only one in 4th place in the 1986 masters tournament?": "None",
    "how many fifth place winners were there in the second round of the 1979 masters tournament?": "None",
    "in masters 1000 tournament did the table show more losses than wins?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named Tournament\nQuery1: \"get_information(relation='Tournament', tail_entity='Grand Slam W-L')\"\nStep2: Find the Win-Loss record of output_of_query1\nQuery2: \"get_information(relation='Tournament W-L', tail_entity='output_of_query1')\"\nStep3: Calculate the Wins and Losses and compare them\nQuery3: \"compare(Wins, Losses)\"",
    "who was the first player to win at wimbledon?": "None",
    "what is the total margin of victory in 1963 tucson open invitational?": "None",
    "who was the previous tournament winner before andres romero at the september 29 salta open?": "## Target type: {Winner}\n## Query:\nStep1: Find the entity named Andres Romero\nQuery1: \"get_information(relation='Winner', tail_entity='Andres Romero')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Winner of output_of_query4\nQuery5: \"get_information(relation='Winner', head_entity='output_of_query4')\"",
    "who came in first place during the 2007 worlds qualification tournament?": "None",
    "who was the only spanish tennis player to win during 1929?": "None",
    "who won the first world darts championship?": "None",
    "what was the number of people in the t* category of the 1986 masters tournament?": "None",
    "which tournament this year had the highest purse reward offered?": "None",
    "what championship was played just before the us open?": "## Target type: {Championship}\n## Query:\nStep1: Find the entity named US Open\nQuery1: \"get_information(relation='Championship', tail_entity='US Open')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Championship of output_of_query4\nQuery5: \"get_information(relation='Championship', head_entity='output_of_query4')\"",
    "what was the difference in score for the tenth game of the season against the oakland raiders?": "None",
    "were there more games played at home or away during the 1969 season?": "None",
    "what is the difference in points scored during the november 19, 1978 against the denver broncos?": "## Target type: {points}\n## Query:\nStep1: Find the entity on November 19, 1978\nQuery1: \"get_information(relation='Date', tail_entity='November 19, 1978')\"\nStep2: Find the points scored of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the entity against the Denver Broncos\nQuery3: \"get_information(relation='Opponent', tail_entity='Denver Broncos')\"\nStep4: Find the points scored of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"calc_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which teams had at least 3 wins in the 1970's?": "None",
    "what was the point difference between the two teams in 1975?": "None",
    "what is the number of fans who attended the december 7, 1969 game against the broncos?": "None",
    "what was the difference in attendance between the december 11 game against depaul and the december 30 game against colgate?": "None",
    "on which date did the bombers score the least points?": "None",
    "who was the opponent in the first game the san antonio spurs won in december 1976?": "None",
    "the most points the kansas city chiefs scored in the 1997 season was in a game against which team?": "## Target type: {opponent team}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Result\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Find the opponent team of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "which season had a better winning record, 1970 or 1975?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Year as 1970\nQuery1: \"get_information(relation='Year', tail_entity='1970')\"\nStep2: Find the entity with the relation of Year as 1975\nQuery2: \"get_information(relation='Year', tail_entity='1975')\"\nStep3: Get the Record of output_of_query1\nQuery3: \"get_information(relation='Record', head_entity='output_of_query1')\"\nStep4: Get the Record of output_of_query2\nQuery4: \"get_information(relation='Record', head_entity='output_of_query2')\"\nStep5: Make a calculator function to compare the winning records of output_of_query3 and output_of_query4\nQuery5: \"if_calculator(value1='output_of_query3', value2='output_of_query4', operation='greater')\"",
    "which game date only had 31,840 people in attendance?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance', tail_entity='31,840')\"\nStep2: Find the game date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "in 1974 the chiefs played the denver broncos a total of how many times?": "None",
    "which mountain has a larger height, lhotse or makalu?": "## Target type: {mountain}\n## Query:\nStep1: Find the entity named Lhotse\nQuery1: \"get_information(relation='Mountain', tail_entity='Lhotse')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height (m)', head_entity='output_of_query1')\"\nStep3: Find the entity named Makalu\nQuery3: \"get_information(relation='Mountain', tail_entity='Makalu')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height (m)', head_entity='output_of_query3')\"\nStep5: Compare the height between output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='greater')\"",
    "which name has the largest displacement?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Displacement\nQuery1: \"get_information(relation='Displacement')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max displacement\nQuery3: \"get_information(relation='Displacement', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which is taller, mount humphreys or mount kaweah.": "## Target type: {mountain peak}\n## Query:\nStep1: Find the entity named Mount Humphreys\nQuery1: \"get_information(relation='Mountain Peak', tail_entity='Mount Humphreys')\"\nStep2: Find the entity named Mount Kaweah\nQuery2: \"get_information(relation='Mountain Peak', tail_entity='Mount Kaweah')\"\nStep3: Find the elevation of output_of_query1\nQuery3: \"get_information(relation='Elevation', head_entity='output_of_query1')\"\nStep4: Find the elevation of output_of_query2\nQuery4: \"get_information(relation='Elevation', head_entity='output_of_query2')\"\nStep5: Compare the elevation of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4', operator='greater')\"",
    "is koli larger than lemmenjoki?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity named Koli\nQuery1: \"get_information(relation='National park', tail_entity='Koli')\"\nStep2: Find the land area of output_of_query1\nQuery2: \"get_information(relation='Land area (km\u00b2)', head_entity='output_of_query1')\"\nStep3: Find the entity named Lemmenjoki\nQuery3: \"get_information(relation='National park', tail_entity='Lemmenjoki')\"\nStep4: Find the land area of output_of_query3\nQuery4: \"get_information(relation='Land area (km\u00b2)', head_entity='output_of_query3')\"\nStep5: Compare the land area of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "which other mountains were ascended in the same year as makalu?": "None",
    "which lake has the largest elevation?": "None",
    "according to usgs estimates of mine production, which nation in 2005 produced a larger quantity of niobium mineral production, nigeria or rwanda?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Nigeria\nQuery1: \"get_information(relation='Country', tail_entity='Nigeria')\"\nStep2: Find the mineral production of Nigeria in 2005\nQuery2: \"get_information(relation='2005', head_entity='output_of_query1')\"\nStep3: Find the entity named Rwanda\nQuery3: \"get_information(relation='Country', tail_entity='Rwanda')\"\nStep4: Find the mineral production of Rwanda in 2005\nQuery4: \"get_information(relation='2005', head_entity='output_of_query3')\"\nStep5: Compare the mineral production of Nigeria and Rwanda in 2005\nQuery5: \"if output_of_query2 > output_of_query4 then 'Nigeria' else 'Rwanda'\"",
    "is the population of brandfort the same as the population of boipatong?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Brandfort\nQuery1: \"get_information(relation='Place', tail_entity='Brandfort')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Boipatong\nQuery3: \"get_information(relation='Place', tail_entity='Boipatong')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Check if the output_of_query2 is equal to output_of_query4\nQuery5: \"is_equal(value1='output_of_query2', value2='output_of_query4')\"",
    "where is there a population larger than klaksvik?": "Given the lack of a direct 'Population' comparison between different 'Town/Village' entities, the query needs to be approached differently. We can first find the population of Klaksvik and then find the towns/villages with a larger population.\n\n## Target type: {Town/Village}\n## Query:\nStep 1: Find the population of Klaksvik\nQuery1: \"get_information(relation='Town/Village', tail_entity='Klaksvik')\"\nStep 2: Get the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep 3: Find the towns/villages with a population larger than output_of_query2\nQuery3: \"get_information(relation='Population', tail_entity>'output_of_query2')\"\nStep 4: Get the Town/Villages of output_of_query3\nQuery4: \"get_information(relation='Town/Village', head_entity='output_of_query3')\"",
    "what two peaks are taller than dumlong?": "None",
    "where is the largest lake located?": "None",
    "which golfer was not from the united states?": "None",
    "who was from the same country as stowers?": "None",
    "gene sarazen and denny shute are both from which country?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Gene Sarazen\nQuery1: \"get_information(relation='Player', tail_entity='Gene Sarazen')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Find the entity named Denny Shute\nQuery3: \"get_information(relation='Player', tail_entity='Denny Shute')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "marcus hellner and calle halfvarsson both came from which country?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Marcus Hellner\nQuery1: \"get_information(relation='Athlete', tail_entity='Marcus Hellner')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Find the entity named Calle Halfvarsson\nQuery3: \"get_information(relation='Athlete', tail_entity='Calle Halfvarsson')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "name someone else from scotland inducted before alan brazil.": "None",
    "what other country were players drafted from other then sweden?": "None",
    "who was the only player listed from outside the u.s.?": "None",
    "who is from outside of great britain?": "None",
    "who is the only player to have denmark listed as their nationality?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality as Denmark\nQuery1: \"get_information(relation='Nationality', tail_entity='Denmark')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which gay, lesbian, or bisexual famous person with a last name from i-j is from the same country as maja ivarsson?": "None",
    "played on the same team as rune \"killing\" emanuelsson": "None",
    "what was the last malayalam film this actor starred in?": "None",
    "after 2008 how many films did he help make?": "None",
    "what is the last film govinda appeared in before the new millenium?": "None",
    "what was the actor's only movie in 2006?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity with the relation of Year as 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the Film of output_of_query1\nQuery2: \"get_information(relation='Film', head_entity='output_of_query1')\"\nStep3: Find the actor's only movie in 2006\nQuery3: \"get_information(relation='Film', tail_entity='output_of_query2')\"",
    "in what year was henrik malberg's last film released?": "## Target type: {Year}\n## Query:\nStep1: Find the entity that is Henrik Malberg\nQuery1: \"get_information(relation='Role', tail_entity='Henrik Malberg')\"\nStep2: Get the max Year of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what was the last film of the year?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what year was the last movie sridhar directed?": "## Target type: {'Year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what movie did this actor star in after they starred in dil vil pyar vyar in 2002?": "None",
    "what is the last piece of filmography that he has worked on to date?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many films did he release in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many roles did this actor have before 2010?": "None",
    "how many times has he been either a producer or director?": "None",
    "when was the last time he scored an international goal?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which year has the most film appearances?": "## Target type: {Year}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the entity with the most film appearances\nQuery2: \"get_information(relation='Year', tail_entity>='most')\"",
    "how many points earned by bob neyret?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Bob Neyret\nQuery1: \"get_information(relation='Driver', tail_entity='Bob Neyret')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how many games did he score but his team lost?": "None",
    "how many consecutive wins did bob senneker have?": "None",
    "how many wins are there?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Result as 'Win'\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "at least how many wins did they have?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Result as Win\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did ricky stenhouse, jr. win before 10-03-2008?": "None",
    "how many total awards did he win?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity that Result is Won\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wins are there in total?": "The query for this question can be directly answered using the \"Result\" relation to find all the \"Win\" entries and then counting the total. Here's the breakdown:\n\n## Target type: {number of wins}\n## Query:\nStep 1: Find all the rows where the result is \"Win\"\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep 2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total wins did they have in july?": "None",
    "which artists won in 2008 and 2009 respectively?": "None",
    "how many combined goals were scored on november 15, 2008?": "None",
    "how many consecutive events took place in bangkok, thailand starting 20 may, 2008?": "None",
    "how much more people were in attendance at the orlando lotusphere conference in 2001 than the one in 2004?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity that is Orlando Lotusphere conference in 2001\nQuery1: \"get_information(relation='Year', tail_entity='2001')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that is Orlando Lotusphere conference in 2004\nQuery3: \"get_information(relation='Year', tail_entity='2004')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(a='output_of_query2', b='output_of_query4')\"",
    "is year 2008 or 2009 viewed on network mnet?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity that Network is Mnet and Year is 2008\nQuery1: \"get_information(relation='Network', tail_entity='Mnet', key='Year', value='2008')\"\nStep2: Find the entity that Network is Mnet and Year is 2009\nQuery2: \"get_information(relation='Network', tail_entity='Mnet', key='Year', value='2009')\"\nStep3: Find the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Check if the output_of_query3 is empty\nQuery4: \"is_empty(set='output_of_query3')\"",
    "how many of the songs in the 2008 ogae second chance contest were in english?": "None",
    "what was the number of season tickets in 2007?": "## Target type: {number of season tickets}\n## Query:\nStep1: Find the row_number of Season 2007\nQuery1: \"get_information(relation='Season', tail_entity='2007')\"\nStep2: Find the number of season tickets of output_of_query1\nQuery2: \"get_information(relation='Season tickets', head_entity='output_of_query1')\"",
    "who had the most televotes on the eurovision song contest 2008?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Televote\nQuery1: \"get_information(relation='Televote')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Televote\nQuery3: \"get_information(relation='Televote', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "name a year with more than one game listed.": "None",
    "name a season that did not have events listed.": "None",
    "what was the date of the first loss of the season?": "None",
    "what is the season listed after 2002?": "None",
    "which month is listed the least on this chart?": "## Target type: {month}\n## Query:\nStep1: Find all the Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Extract the month from the output_of_query1\nQuery2: \"extract_month(date='output_of_query1')\"\nStep3: Count the occurrences of each month\nQuery3: \"count_occurrences(set='output_of_query2')\"\nStep4: Find the month with the least occurrences\nQuery4: \"min(set='output_of_query3')\"",
    "what is the difference between the number of games won and the number of games lost?": "None",
    "how many games was loss?": "None",
    "was the first loss of the season at home or away?": "None",
    "which month has the least number of episodes?": "None",
    "what is the difference in number of spectators between the best attended match and least attended match (of all matches listed)?": "None",
    "what is the only game that had an attendance over 80,000?": "None",
    "which club had the highest average attendance?": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of Average attendance\nQuery1: \"get_information(relation='Average attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Average attendance\nQuery3: \"get_information(relation='Average attendance', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "which was the only stadium where attendance was greater than 70,000?": "None",
    "which match had the least in attendance?": "None",
    "how many games had less than 30,000 people in attendance?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Find the entity whose Attendance is less than 30,000\nQuery2: \"get_information(relation='Attendance', tail_entity<'30000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games had an attendance of 10,000 at most?": "None",
    "how many games had an attendance less than 45,000 people": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that has an attendance less than 45,000\nQuery1: \"get_information(relation='Attendance', tail_entity<'45000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which games had an attendance of below 14,000?": "None",
    "what is the only game stadium to record more than 100,000?": "None",
    "how many games had attendance with at least 10,000 people?": "Since the schema does not contain the exact attendance numbers for each game, it is not possible to directly query the number of games with attendance of at least 10,000 people. However, if the exact attendance numbers were available, the query could be formulated as follows:\n\n## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance of at least 10,000 people\nQuery1: \"get_information(relation='Attendance', tail_entity>='10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\n\nIn this case, it seems that the attendance numbers are not directly available in the given schema. Therefore, it's not possible to answer the question using the provided data.",
    "how many games had at least 10,000 people in attendance?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with attendance of at least 10,000 people\nQuery1: \"get_information(relation='Attendance', tail_entity>='10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were scheduled from 10/9/2009 to 2/20/2010?": "None",
    "what was the total number of people who attended the first game of the season?": "None",
    "how many games had more than 10,000 in attendance?": "## Target type: {number}\n## Query:\nStep1: Find the Attendances that are more than 10,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many matches were played in the 2009-10 season?": "## Target type: {number of matches}\n## Query:\nStep1: Find the row_number of the 2009-10 season\nQuery1: \"get_information(relation='League', tail_entity='2009-10')\"\nStep2: Find the number of matches of output_of_query1\nQuery2: \"get_information(relation='Matches', head_entity='output_of_query1')\"",
    "what were the total number of times 4th was listed as a result in this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the result as 4th\nQuery1: \"get_information(relation='Result', tail_entity='4th')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of her 2nd place finishes on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place and the value of 2nd\nQuery1: \"get_information(relation='Place', tail_entity='2nd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did imma clopes compete before she came in 7th place?": "None",
    "how many third place finishes has kathrin zettel had?": "None",
    "how many times did they place 1st after 2008?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is after 2008\nQuery1: \"get_information(relation='Year', tail_entity>'2008')\"\nStep2: Find the entity that is 1st place\nQuery2: \"get_information(relation='Position', tail_entity='1st')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the greatest number of consecutive wins of the women's tournament between 2003 and 2013?": "None",
    "how many 4th position seasons were there before 2004?": "None",
    "how many women had consecutive third place wins?": "None",
    "how many more bronze medals did canada earn than venezuela?": "None",
    "what country has the most bronze?": "None",
    "which country had the top bronze metal count?": "None",
    "switzerland won at least 8 bronze metals in how many winter paralympics?": "## Target type: {number of Winter Paralympics}\n## Query:\nStep1: Find the entity with at least 8 bronze medals\nQuery1: \"get_information(relation='Bronze', tail_entity>='8')\"\nStep2: Get the Event of output_of_query1\nQuery2: \"get_information(relation='Event', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is total number of bronze medals for slovakia?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity that is Slovakia\nQuery1: \"get_information(relation='Nation', tail_entity='Slovakia')\"\nStep2: Find the total number of bronze medals for output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "which country has the highest number of bronze wins?": "None",
    "which country has the most bronze medals?": "None",
    "which nation received more bronze metals than mexico?": "None",
    "which country/countries has the same number of total metals as thailand?": "None",
    "who has the most bronze medals?": "None",
    "which division as the most entries?": "## Target type: {Division}\n## Query:\nStep1: Find all the divisions\nQuery1: \"get_information(relation='Division')\"\nStep2: Count the occurrences of each Division\nQuery2: \"count(set='output_of_query1', group_by='Division')\"\nStep3: Find the division with the most entries\nQuery3: \"get_information(relation='Division', tail_entity>='most')\"",
    "what is the number of communities established after 1900?": "## Target type: {number of communities}\n## Query:\nStep1: Find the entity with the relation of Date established\nQuery1: \"get_information(relation='Date established')\"\nStep2: Find the entities established after 1900\nQuery2: \"get_information(relation='Date established', tail_entity>'1900')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many tracks have at least two performers?": "None",
    "how many tracks are listed in this table?": "## Target type: {number of tracks}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of tracks that contained no lead vocals?": "None",
    "how many songs have kyza and skriblah as the featured guests?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity named Kyza\nQuery1: \"get_information(relation='Featured guest(s)', tail_entity='Kyza')\"\nStep2: Find the entity named Skriblah\nQuery2: \"get_information(relation='Featured guest(s)', tail_entity='Skriblah')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of tracks on the album?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of drivers that finished with times under 7 minutes?": "None",
    "how many tracks on trae's album \"life goes on\"?": "None",
    "how many songs in the table only reached position number 2?": "## Target type: {number}\n## Query:\nStep1: Find the songs that reached position number 2\nQuery1: \"get_information(relation='Highest pos. reached', tail_entity='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what performers were in the last track?": "## Target type: {performer}\n## Query:\nStep1: Find all row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Performers of output_of_query3\nQuery4: \"get_information(relation='Performer(s)', head_entity='output_of_query3')\"",
    "number of weeks that there were no \"chumps\"": "None",
    "what is the number of songs produced by k-def on the album?": "None",
    "how many different people are a part of the lead vocals on this album?": "None",
    "how many contestants are 20 years old?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the entity that is 20 years old\nQuery1: \"get_information(relation='Age', tail_entity='20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many finalists are under the age of 25?": "## Target type: {number of finalists}\n## Query:\nStep1: Find the entity with the relation of Age that is less than 25\nQuery1: \"get_information(relation='Age', tail_entity<'25')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many contestants are at least 21 years old?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the contestants who are at least 21 years old\nQuery1: \"get_information(relation='Age', tail_entity>='21')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is at least 25 years or older?": "None",
    "how many finalist were 28 years old?": "## Target type: {number of finalists}\n## Query:\nStep1: Find the entity with the relation of Age as 28\nQuery1: \"get_information(relation='Age', tail_entity='28')\"\nStep2: Find the finalists with the age of output_of_query1\nQuery2: \"get_information(relation='Finalist', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many competitors were under the age of 30?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity with the relation of Age\nQuery1: \"get_information(relation='Age')\"\nStep2: Find the entities that are under the age of 30\nQuery2: \"get_information(relation='Age', tail_entity<'30')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many delegates are at most 20 years old?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Age\nQuery1: \"get_information(relation='Age')\"\nStep2: Find the entity whose age is less than or equal to 20\nQuery2: \"get_information(relation='Age', tail_entity<='20')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many players are age 21 or 33?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Age and the value of 21 or 33.\nQuery1: \"get_information(relation='Age', value='21' or '33')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name each contestant whose age is 21?": "## Target type: {contestant}\n## Query:\nStep1: Find the entity whose Age is 21\nQuery1: \"get_information(relation='Age', tail_entity='21')\"\nStep2: Find the Contestant of output_of_query1\nQuery2: \"get_information(relation='Contestant', head_entity='output_of_query1')\"",
    "how many winners have been at least 30 years old?": "None",
    "how many players scored at least 25 or more points?": "None",
    "how many years were there more than 156 contestants but less than 1,000?": "## Target type: {number of years}\n## Query:\nStep 1: Find the years where the number of contestants is more than 156\nQuery1: \"get_information(relation='Number of contestants', tail_entity>'156')\"\nStep 2: Find the years where the number of contestants is less than 1,000\nQuery2: \"get_information(relation='Number of contestants', tail_entity<'1000')\"\nStep 3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep 4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which rider is listed in the position after loris capirossi?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Loris Capirossi\nQuery1: \"get_information(relation='Rider', tail_entity='Loris Capirossi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "alex zanardi came in first place, what is his number?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Alex Zanardi\nQuery1: \"get_information(relation='Driver', tail_entity='Alex Zanardi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of output_of_query2\nQuery3: \"get_information(relation='No', head_entity='output_of_query2')\"",
    "how many points did emerson fittipaldi receive?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Emerson Fittipaldi\nQuery1: \"get_information(relation='Driver', tail_entity='Emerson Fittipaldi')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "who was the only rider with more points than doriano romboni?": "None",
    "at the 2006 gran premio telmex, who scored the highest number of points?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that has the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "how many more points did erik zabel score than franciso ventoso?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Erik Zabel\nQuery1: \"get_information(relation='Rider', tail_entity='Erik Zabel')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Francisco Ventoso\nQuery3: \"get_information(relation='Rider', tail_entity='Francisco Ventoso')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "what label was appears the most?": "## Target type: {label}\n## Query:\nStep1: Find the entity that is in the Label\nQuery1: \"get_information(relation='Label')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_highest_frequency_entity(set='output_of_query1')\"",
    "what record label appears the most on the chart?": "## Target type: {record label}\n## Query:\nStep1: Find the record labels on the chart\nQuery1: \"get_information(relation='Record label')\"\nStep2: Find the entity that appears the most\nQuery2: \"get_information(relation='Record label', tail_entity>='most')\"",
    "which format had the most releases?": "None",
    "how many titles do not have an album?": "None",
    "which publisher had the most projects?": "## Target type: {'Publisher'}\n## Query:\nStep1: Find the entity with the relation of Publisher\nQuery1: \"get_information(relation='Publisher')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Publisher', tail_entity>='most')\"\nStep3: Find the Publisher of output_of_query2\nQuery3: \"get_information(relation='Publisher', head_entity='output_of_query2')\"",
    "prior to 1993 how many releases were in album format?": "## Target type: {number of releases}\n## Query:\nStep1: Find the releases prior to 1993\nQuery1: \"get_information(relation='Year', tail_entity<'1993')\"\nStep2: Find the releases that are in Album format\nQuery2: \"get_information(relation='Format(s)', tail_entity='Album')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many albums held a chart position of at least 10 or less?": "None",
    "what year had the most titles released?": "None",
    "what year were the most titles produced?": "None",
    "which format was used the most according to this chart?": "None",
    "what is the number of delegates younger than 20?": "## Target type: {number of delegates}\n## Query:\nStep1: Find the entity that has the relation of age and age is less than 20\nQuery1: \"get_information(relation='Age', tail_entity<'20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many qualifying scores were above 15.2?": "## Target type: {number}\n## Query:\nStep1: Find the qualifying scores that are above 15.2\nQuery1: \"get_information(relation='Qualifying Score', tail_entity>'15.2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of contestants that were male?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the entities with the relation of Gender as Male\nQuery1: \"get_information(relation='Gender', tail_entity='Male')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs reached the us main charts?": "None",
    "what is the number of singles that made the billboards?": "None",
    "how many songs made it into the top 10 us charts?": "None",
    "how many singles were on the uk singles chart?": "None",
    "what is the total number of titles on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the titles\nQuery1: \"get_information(relation='Title')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many countries are on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the countries on the chart\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs charted on both the us cashbox and us hot 100 but not the uk singles?": "None",
    "how many singles reached the us mainstream rock chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of US Mainstream Rock\nQuery1: \"get_information(relation='US Mainstream Rock')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many singles had a peak chart position of less than 60?": "None",
    "how many single titles were on both the irish and german charts?": "None",
    "what is the name of the last race?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Race Name of output_of_query3\nQuery4: \"get_information(relation='Race Name', head_entity='output_of_query3')\"",
    "which group has the most derivation?": "None",
    "what is the last name listed on this chart?": "## Target type: {last name}\n## Query:\nStep1: Find all the row numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max row number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the last name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which surname originated in england, but belongs to fewer than one million people?": "## Target type: {surname}\n## Query:\nStep1: Find the entity where Country of Origin is England - 2001\nQuery1: \"get_information(relation='Country of Origin', tail_entity='England - 2001')\"\nStep2: Find the entity where Number is less than 1 million\nQuery2: \"get_information(relation='Number', tail_entity<'1000000')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the surname of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what race name comes in last?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find all the races\nQuery1: \"get_information(relation='Race')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the race with max row_number \nQuery3: \"get_information(relation='Race', tail_entity='output_of_query2')\"\nStep4: Get the Race Name of output_of_query3\nQuery4: \"get_information(relation='Race Name', head_entity='output_of_query3')\"",
    "which title came first?": "## Target type: {Title}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which year(s) received the lowest rank in the ratings?": "None",
    "does ranking 7 or 3 have the least amount of listings?": "## Target type: {ranking}\n## Query:\nStep1: Find the count of listings for ranking 7\nQuery1: \"get_information(relation='Rank', tail_entity='7')\"\nStep2: Find the count of listings for ranking 3\nQuery2: \"get_information(relation='Rank', tail_entity='3')\"\nStep3: Compare the counts of output_of_query1 and output_of_query2 to find the one with the least amount of listings.",
    "how many times did the club place 4th in the tier 4?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place as 4th\nQuery1: \"get_information(relation='Place', tail_entity='4th')\"\nStep2: Find the entity with the relation of Tier as 4\nQuery2: \"get_information(relation='Tier', tail_entity='4')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times was the final position above 20?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Pos. and value above 20\nQuery1: \"get_information(relation='Pos.', tail_entity>'20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of games that had a score of 2-0?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Find the games with a score of 2-0\nQuery2: \"get_information(relation='Score', tail_entity='2 \u2013 0')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games had a score of 2-3 or 3-2?": "None",
    "how many games had at least a score of two or more points?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with a score of two or more points\nQuery1: \"get_information(relation='Score', tail_entity>='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of games did both teams score no points?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity where both teams scored no points\nQuery1: \"get_information(relation='Score', tail_entity='0\u20130')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of games that a team had a score of at least three or more?": "None",
    "how many teams won by a margin of two or more points?": "None",
    "what was the total number of players?": "## Target type: {number of players}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the first year they scored 6th position in tier 3 division 3?": "None",
    "how many times did they finish above 5th place in division 2 tier 3?": "None",
    "how many first place regular season finishes did the team have from 2004-2013": "None",
    "how many seasons were finished in 3rd place?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity in Place that is '3rd'\nQuery1: \"get_information(relation='Place', tail_entity='3rd')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which team finished top of the league?": "None",
    "how many films grossed more than $80,000,000": "None",
    "how many films grossed over five million in their first week?": "None",
    "how many times is 20th century fox on the top grossing films (u.s.) list?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that is 20th Century Fox\nQuery1: \"get_information(relation='Studio', tail_entity='20th Century Fox')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many films grosses above 2.5 million dollars but below 3.5 million dollars?": "None",
    "what is the total number of films released?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different competitions are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the competitions listed\nQuery1: \"get_information(relation='Competition')\"\nStep2: Count the distinct competitions in output_of_query1\nQuery2: \"count(set='output_of_query1', distinct=True)\"",
    "what is the number of competitions listed on the table?": "None",
    "which competition is listed the most in this chart?": "## Target type: {competition}\n## Query:\nStep1: Find the entity in Competition that appears the most.\nQuery1: \"get_information(relation='Competition', tail_entity>='most')\"",
    "what is the number of competitions that have been competed in?": "## Target type: {number}\n## Query:\nStep1: Find all the competitions\nQuery1: \"get_information(relation='Competition')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of competitions on this chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the last competition listed on the table?": "## Target type: {Competition}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "which type of competition was listed the most?": "## Target type: {type of competition}\n## Query:\nStep1: Find all the types of competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Find the type of competition that appears the most\nQuery2: \"get_information(relation='Competition', tail_entity>='most')\"",
    "how many games had at least 5,000 attendees?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with Attendance greater than or equal to 5,000\nQuery1: \"get_information(relation='Attendance', tail_entity>='5000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which games has the largest amount of people attending?": "None",
    "how many games total are listed?": "## Target type: {number}\n## Query:\nStep1: Find all row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which date was attended by the most people?": "None",
    "which date has the most attendance?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "how many episodes were shown in season 1?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity with the relation of No. in season\nQuery1: \"get_information(relation='No. in season')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which ambassador served after 1980, more than three years, and lived on the east coast?": "None",
    "who was the first ambassador extraordinary and plenipotentiary to serve in this millennium?": "None",
    "who became the ambassador after the completion of hewson ryan's mission?": "## Target type: {'Representative'}\n## Query:\nStep1: Find the entity named Hewson Ryan\nQuery1: \"get_information(relation='Representative', tail_entity='Hewson Ryan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Representative of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "who was the opponent after the toronto rock?": "None",
    "what was the first team that toronto lost to?": "None",
    "what was the number of points scored in the december 26th game by the toronto arenas?": "None",
    "did toronto or ottawa senators win on january 6th?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Date is January 6th\nQuery1: \"get_information(relation='Date', tail_entity='January 6th')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\n\nIf Score includes the winning team information:\nStep5: Find the entity whose Score is output_of_query4\nQuery5: \"get_information(relation='Score', tail_entity='output_of_query4')\"\n\nIf Score only includes the scores:\nStep5: Find the Home team of output_of_query3\nQuery5: \"get_information(relation='Home', head_entity='output_of_query3')\"\nStep6: Find the Visitor team of output_of_query3\nQuery6: \"get_information(relation='Visitor', head_entity='output_of",
    "which hawker had more in service. the hawker hart or the hawker hind?": "## Target type: {hawker model}\n## Query:\nStep1: Find the entity named Hawker Hart\nQuery1: \"get_information(relation='Name', tail_entity='Hawker Hart')\"\nStep2: Find the number used of output_of_query1\nQuery2: \"get_information(relation='# used', head_entity='output_of_query1')\"\nStep3: Find the entity named Hawker Hind\nQuery3: \"get_information(relation='Name', tail_entity='Hawker Hind')\"\nStep4: Find the number used of output_of_query3\nQuery4: \"get_information(relation='# used', head_entity='output_of_query3')\"\nStep5: Compare the number used of output_of_query2 and output_of_query4\nQuery5: \"compare_numbers(number1='output_of_query2', number2='output_of_query4')\"",
    "how many consecutive victories included an enemy aircraft as the foe?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Foe as \"Enemy aircraft\"\nQuery1: \"get_information(relation='Foe', tail_entity='Enemy aircraft')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "are there any other aircraft listed besides the nieuport 17?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Nieuport 17\nQuery1: \"get_information(relation='Aircraft', tail_entity='Nieuport 17')\"\nStep2: Find all the Aircraft entities\nQuery2: \"get_information(relation='Aircraft')\"\nStep3: Find set difference of output_of_query2 and output_of_query1\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\"\nStep4: Check if output_of_query3 is empty\nQuery4: \"check_empty(set='output_of_query3')\"",
    "how many avro ansons were used from 1940-1947?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Avro Anson\nQuery1: \"get_information(relation='Name', tail_entity='Avro Anson')\"\nStep2: Find the Service period of output_of_query1\nQuery2: \"get_information(relation='Service period', head_entity='output_of_query1')\"\nStep3: Find the number used of output_of_query1\nQuery3: \"get_information(relation='# used', head_entity='output_of_query1')\"\nStep4: Find the entity with the relation of Service period and the value between 1940 and 1947\nQuery4: \"get_information(relation='Service period', tail_entity>='1940', tail_entity<='1947')\"\nStep5: Get the sum of output_of_query3 where Service period is output_of_query4\nQuery5: \"sum(set='output_of_query3', condition='output_of_query4')\"",
    "who took office after the earl of athlone?": "None",
    "who was appointed before h.w. whillock?": "None",
    "name one person that served under the same monarch as the viscount buxton.": "None",
    "who held the seat after the death of his father?": "None",
    "when will the next solar saros be after the may 24, 2199 solar saros occurs?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Date is May 24, 2199\nQuery1: \"get_information(relation='Date', tail_entity='May 24, 2199')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what is the year with the most events?": "None",
    "what is the difference in magnitude between the may 13, 2181 solar saros and the may 24, 2199 solar saros?": "None",
    "which month had the most rainfall?": "None",
    "what has the least percentage in india?": "None",
    "which urban area ranks first in population density?": "## Target type: {urban area}\n## Query:\nStep1: Find the entity with the relation of Rank being 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the urban area of output_of_query1\nQuery2: \"get_information(relation='Urban Area', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Density being the maximum\nQuery3: \"get_information(relation='Density (People/km\u00b2)', tail_entity>='maximum')\"\nStep4: Find the urban area of output_of_query3\nQuery4: \"get_information(relation='Urban Area', head_entity='output_of_query3')\"",
    "which district has the highest population?": "None",
    "what is the next most populous district after haridwar?": "None",
    "what is the name of the line with the most stations?": "None",
    "how many areas have at least 5 stations?": "None",
    "how many stations have a distance below 15km?": "## Target type: {number}\n## Query:\nStep1: Find the entities that have a distance below 15km\nQuery1: \"get_information(relation='Distance', tail_entity<='15')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name only the stations that have connections to other lines.": "None",
    "how many stations are from canton?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entity that Location is Canton\nQuery1: \"get_information(relation='Location', tail_entity='Canton')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which area has the largest number of stations serving it?": "None",
    "how many stations opened after 1917?": "None",
    "what is the number of riders listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of lines opened with no extensions listed": "None",
    "what is the total number of stations serving the the cape girardeau area?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entity named Cape Girardeau\nQuery1: \"get_information(relation='Area served', tail_entity='Cape Girardeau')\"\nStep2: Find the stations serving output_of_query1\nQuery2: \"get_information(relation='Callsign', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which nation had their sailors as robert scheidt and bruno prada?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Robert Scheidt\nQuery1: \"get_information(relation='Sailor', tail_entity='Robert Scheidt')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"\nStep3: Find the entity named Bruno Prada\nQuery3: \"get_information(relation='Sailor', tail_entity='Bruno Prada')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "christine aaron at the meeting gaz de france paris and veronica campbell at the weltklasse zurich both won at what event?": "None",
    "who scored higher in total score of the two athletes from the soviet union (urs)?": "None",
    "kaija mustonen was the number one speed skiing contender at the 1968 winter olympics, what country is she from?": "None",
    "david kone&#269;n\u00fd and kamil bar\u00e1nek are of which nationality?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity named David Kone\u010dn\u00fd\nQuery1: \"get_information(relation='Name', tail_entity='David Kone\u010dn\u00fd')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Kamil Bar\u00e1nek\nQuery3: \"get_information(relation='Name', tail_entity='Kamil Bar\u00e1nek')\"\nStep4: Find the nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many athletes were from the soviet union in this competition?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the athletes from the Soviet Union\nQuery1: \"get_information(relation='Nation', tail_entity='Soviet Union')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what cities did the competitor participate in the olympics?": "None",
    "how many stadiums are above 60,000 people?": "## Target type: {number}\n## Query:\nStep1: Find the stadiums with capacity above 60,000\nQuery1: \"get_information(relation='Capacity', tail_entity>'60000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many stadiums have a capacity of more than 70,000?": "## Target type: {number}\n## Query:\nStep1: Find the stadiums with a capacity more than 70,000\nQuery1: \"get_information(relation='Capacity', tail_entity>'70000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which is the only stadium with a capacity of larger than 20,000?": "None",
    "which country has the most stadiums with a capacity of more than 70,000?": "None",
    "how many stadiums have a capacity of at least 8,000?": "## Target type: {number}\n## Query:\nStep1: Find the stadiums with capacity at least 8,000\nQuery1: \"get_information(relation='Capacity', tail_entity>='8000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which stadium has the highest capacity?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity that has the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the Stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"",
    "which stadium has the largest number of seats?": "None",
    "which stadium can seat the most people?": "## Target type: {'Stadium'}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the Stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"",
    "how many stadiums have a capacity between 6000 and 8000?": "None",
    "which stadium only has a capacity of 20,000?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity', tail_entity='20,000')\"\nStep2: Get the stadium of output_of_query1\nQuery2: \"get_information(relation='Home stadium', head_entity='output_of_query1')\"",
    "what is the title listed before mary jane?": "## Target type: {Title}\n## Query:\nStep1: Find the entity that Title is Mary Jane\nQuery1: \"get_information(relation='Title', tail_entity='Mary Jane')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what title is listed in the top of the table?": "None",
    "what is the last title listed in the table?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the name of the last title listed in this chart?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which title was the last title?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the english title listed before sun over denmark?": "None",
    "what is the first title listed on the chart?": "None",
    "what is the first original title listed on this chart?": "## Target type: {original title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Original title of output_of_query3\nQuery4: \"get_information(relation='Original title', head_entity='output_of_query3')\"",
    "what is the last title?": "None",
    "what title is below dhaasippen or jothi malar?": "None",
    "where was the location for the first five consecutive tests?": "## Target type: {location}\n## Query:\nStep1: Find the first five row_number\nQuery1: \"get_information(relation='row_number', tail_entity<='5')\"\nStep2: Find the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "which was the first episode to drop the average below 0.60?": "## Target type: {'Episode'}\n## Query:\nStep1: Find the entity with the relation of Average\nQuery1: \"get_information(relation='Average')\"\nStep2: Find the first output_of_query1 that is below 0.60\nQuery2: \"get_information(relation='Average', tail_entity<'0.60')\"\nStep3: Find the Episode of output_of_query2\nQuery3: \"get_information(relation='Episode', head_entity='output_of_query2')\"",
    "when did the first drop in the experiment fall?": "## Target type: {Date}\n## Query:\nStep1: Find the event named \"1st drop fell\"\nQuery1: \"get_information(relation='Event', tail_entity='1st drop fell')\"\nStep2: Get the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "which test method is used the most?": "## Target type: {Test method}\n## Query:\nStep1: Find the entity in Test method that appears the most.\nQuery1: \"get_information(relation='Test method', tail_entity>='most')\"",
    "when did the third drop in the experiment fall?": "None",
    "when did the second drop in the experiment fall?": "None",
    "what technical challenge was featured in 2013-2014 but not 2014-2015?": "## Target type: {technical challenge}\n## Query:\nStep1: Find the row_number of 2013-2014\nQuery1: \"get_information(relation='Season', tail_entity='2013-2014')\"\nStep2: Find the row_number of 2014-2015\nQuery2: \"get_information(relation='Season', tail_entity='2014-2015')\"\nStep3: Find the technical challenge of output_of_query1\nQuery3: \"get_information(relation='Technical', head_entity='output_of_query1')\"\nStep4: Find the technical challenge of output_of_query2\nQuery4: \"get_information(relation='Technical', head_entity='output_of_query2')\"\nStep5: Find the set difference of output_of_query3 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query3', set2='output_of_query4')\"",
    "which scientific challenge came two years before \"spinning a tale\"?": "None",
    "which competition took place after the game in egypt?": "## Target type: {competition}\n## Query:\nStep1: Find the game in Egypt\nQuery1: \"get_information(relation='Opponent', tail_entity='Egypt')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "which purse has the most money?": "None",
    "which collection was the most collectable?": "None",
    "what is the largest evening gown amount?": "## Target type: {amount}\n## Query:\nStep1: Find the largest evening gown amount\nQuery1: \"get_information(relation='Evening Gown', tail_entity>='largest')\"\nStep2: Get the amount of output_of_query1\nQuery2: \"get_information(relation='Evening Gown', head_entity='output_of_query1')\"",
    "is the south open purse the same as the center open purse?": "## Target type: {'Purse ($)'}\n## Query:\nStep1: Find the entity named South Open\nQuery1: \"get_information(relation='Tournament', tail_entity='South Open')\"\nStep2: Find the purse of output_of_query1\nQuery2: \"get_information(relation='Purse ($)', head_entity='output_of_query1')\"\nStep3: Find the entity named Center Open\nQuery3: \"get_information(relation='Tournament', tail_entity='Center Open')\"\nStep4: Find the purse of output_of_query3\nQuery4: \"get_information(relation='Purse ($)', head_entity='output_of_query3')\"\nStep5: Perform a comparison to check if output_of_query2 is equal to output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='equal')\"",
    "is four 5s worth more or less than four 2s?": "## Target type: {worth}\n## Query:\nStep1: Find the entity with the relation of 5 credits\nQuery1: \"get_information(relation='5 credits')\"\nStep2: Find the entity with the relation of 4 credits\nQuery2: \"get_information(relation='4 credits')\"\nStep3: Compare the output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "is leonard messel or royalty larger in size?": "None",
    "which had a higher metric value, a great cubit or a league?": "## Target type: {Unit}\n## Query:\nStep1: Find the entity with the Relation to previous unit\nQuery1: \"get_information(relation='Relation to previous unit')\"\nStep2: Find the Metric Value of output_of_query1\nQuery2: \"get_information(relation='Metric Value', tail_entity='output_of_query1')\"\nStep3: Find the entity with the Persian unit equals to \"great cubit\"\nQuery3: \"get_information(relation='Persian unit', tail_entity='great cubit')\"\nStep4: Find the Metric Value of output_of_query3\nQuery4: \"get_information(relation='Metric Value', tail_entity='output_of_query3')\"\nStep5: Find the entity with the Persian unit equals to \"league\"\nQuery5: \"get_information(relation='Persian unit', tail_entity='league')\"\nStep6: Find the Metric Value of output_of_query5\nQuery6: \"get_information(relation='Metric Value', tail_entity='output_of_query5')\"\nStep7: Compare the Metric Value of output_of_query4 and output_of_query6\nQuery7: \"compare(metric_value1='output_of_query4', metric_value2='output_of_query6')\"",
    "is a 2 credit full house the same as a 5 credit three of a kind?": "This question involves comparing the poker hands based on the credits associated with them. To answer this, we can use a combination of set operations and comparison.\n\n## Target type: {comparison}\n## Query:\nStep 1: Find the hand associated with 2 credits\nQuery1: \"get_information(relation='2 credits')\"\nStep 2: Find the hand associated with 5 credits\nQuery2: \"get_information(relation='5 credits')\"\nStep 3: Compare the hands to determine if they are the same\nQuery3: \"compare(output_of_query1, output_of_query2)\"",
    "did 2010/11 or 2011/12 make more in grand total value?": "## Target type: {year}\n## Query:\nStep1: Find the value of 2010/11\nQuery1: \"get_information(relation='2010/11')\"\nStep2: Find the value of 2011/12\nQuery2: \"get_information(relation='2011/12')\"\nStep3: Calculate the sum of output_of_query1\nQuery3: \"sum(set='output_of_query1')\"\nStep4: Calculate the sum of output_of_query2\nQuery4: \"sum(set='output_of_query2')\"\nStep5: Compare the sum of 2010/11 and 2011/12\nQuery5: \"compare(output_of_query3, output_of_query4, operator='greater than')\"",
    "at most, what could a person earn for having a full house?": "## Target type: {number of credits}\n## Query:\nStep1: Find the entity with the relation of Hand as Full house\nQuery1: \"get_information(relation='Hand', tail_entity='Full house')\"\nStep2: Find the credits of output_of_query1\nQuery2: \"get_information(relation='1 credit', head_entity='output_of_query1')\"\nStep3: Find the credits of output_of_query1\nQuery3: \"get_information(relation='2 credits', head_entity='output_of_query1')\"\nStep4: Find the credits of output_of_query1\nQuery4: \"get_information(relation='3 credits', head_entity='output_of_query1')\"\nStep5: Find the credits of output_of_query1\nQuery5: \"get_information(relation='4 credits', head_entity='output_of_query1')\"\nStep6: Find the credits of output_of_query1\nQuery6: \"get_information(relation='5 credits', head_entity='output_of_query1')\"\nStep7: Find the max of output_of_query2, output_of_query3, output_of_query4, output_of_query5, output_of_query6\nQuery7: \"max(set='output_of_query2,output_of_query3,output_of_query4,output",
    "what was the first year that net profit was above \u00a3120 million?": "None",
    "who is the first player listed?": "None",
    "list only the american players.": "## Target type: {list of American players}\n## Query:\nStep1: Find the entity that has the Nationality 'United States'\nQuery1: \"get_information(relation='Nationality', tail_entity='United States', key='Player')\"\nStep2: Get the output_of_query1\nQuery2: \"output_of_query1\"",
    "what team was the opponent in the first game with over 35,000 attendees?": "None",
    "which team came in first?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who is the first home team listed as having a score of 3-1?": "None",
    "what type of surface was played on in the first game where the opponent in the final included an american?": "None",
    "how many singles did she release in all?": "None",
    "how many albums were released under the emi record label?": "## Target type: {number of albums}\n## Query:\nStep1: Find the entity with the relation of Label\nQuery1: \"get_information(relation='Label')\"\nStep2: Find the albums released under the EMI record label\nQuery2: \"get_information(relation='Label', tail_entity='EMI')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many singles were released in total?": "## Target type: {number of singles}\n## Query:\nStep1: Find the entity with the relation of Title\nQuery1: \"get_information(relation='Title')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what month was the last episode broadcast?": "## Target type: {month}\n## Query:\nStep1: Find all the Original Broadcast Date\nQuery1: \"get_information(relation='Original Broadcast Date')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the Original Broadcast Date of output_of_query2\nQuery3: \"get_information(relation='Original Broadcast Date', tail_entity='output_of_query2')\"\nStep4: Extract the month from output_of_query3\nQuery4: \"extract_month(date='output_of_query3')\"",
    "what was the date of the last episode that was broadcast?": "None",
    "what was the name of the last episode to come out in september 1995?": "None",
    "what is the name of the last episode of season 1?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the name of the next episode after goodbye mother?": "None",
    "when was the next episodes broadcast date after the may 27th, 2012 episode?": "## Target type: {'Original Broadcast Date'}\n## Query:\nStep1: Find the entity with the relation of Original Broadcast Date is May 27th, 2012\nQuery1: \"get_information(relation='Original Broadcast Date', tail_entity='May 27th, 2012')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Original Broadcast Date of output_of_query4\nQuery5: \"get_information(relation='Original Broadcast Date', head_entity='output_of_query4')\"",
    "what was the result of the game before the game of march 9, 1968?": "None",
    "what was the rank of the last episode broadcasted?": "None",
    "what is the title to the last song?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the only episode that aired in august 1995?": "## Target type: {episode}\n## Query:\nStep1: Find the entity with the relation of Broadcast Date and value of August 1995\nQuery1: \"get_information(relation='Broadcast Date', value='August 1995')\"\nStep2: Find the entity with the relation of Title and row_number of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "who had the least gold medals but the most silver medals?": "None",
    "what country had the top number of silver medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Silver medals\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "who finished with the top rank in total medals won?": "## Target type: {Nation}\n## Query:\nStep1: Find the entity with the top Rank\nQuery1: \"get_information(relation='Rank', tail_entity='top')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "who had the most bronze medals?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "who won the most silver medals?": "None",
    "how many silver medals were awarded?": "None",
    "what nation had the most silver medals?": "None",
    "what is the total amount of silver medals given out?": "None",
    "what country has the largest number of silver medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the largest number of silver medals\nQuery1: \"get_information(relation='Silver', tail_entity>='largest')\"\nStep2: Get the country with the largest number of silver medals\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "who won the largest amount of bronze medals?": "None",
    "after france, who has the next highest amount of silver medals?": "None",
    "was there more gold medals won than silver?": "## Target type: {comparison result}\n## Query:\nStep1: Find the number of gold medals\nQuery1: \"get_information(relation='Medal', tail_entity='Gold')\"\nStep2: Find the number of silver medals\nQuery2: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep3: Compare the count of gold and silver medals\nQuery3: \"compare(count('output_query1'), count('output_query2'))\"",
    "how many symbols are not shown?": "None",
    "on how many dates was the sum of the scores at most 10?": "None",
    "how many devices have no notes?": "None",
    "what is the difference between the five star prediction device's date of creation and the han comet diagrams' date of creation?": "None",
    "how many people from ethiopia ranked in the top 9?": "None",
    "how many with a face value of 0.01 were circulating in 2010?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Face Value\nQuery1: \"get_information(relation='Face Value', tail_entity='2010')\"\nStep2: Find the number of 0.01 face value of output_of_query1\nQuery2: \"get_information(relation='\u20ac0.01', head_entity='output_of_query1')\"",
    "which source was used before may 2010?": "None",
    "what is the score difference for the game in week 10?": "None",
    "how many games are listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the top ranked swimmer in the semifinals?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "who scored the highest in the swimsuit round?": "## Target type: {individual}\n## Query:\nStep1: Find the entity with the relation of Swimsuit\nQuery1: \"get_information(relation='Swimsuit')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max swimsuit score\nQuery3: \"get_information(relation='Swimsuit', tail_entity='output_of_query2')\"",
    "how many divers were involved in the preliminary round but not the final?": "None",
    "who finished at the top with a gold medal?": "None",
    "which country had the competitor with the least amount of points?": "None",
    "which competitor was the last to place?": "## Target type: {competitor}\n## Query:\nStep1: Find all the row numbers and ranks.\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the competitor of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which diver score more final points than ingrid kramer?": "None",
    "which team placed in first with the most earned medals?": "None",
    "which mainland has the least population?": "None",
    "which country has the most people?": "None",
    "which country has the most plants?": "None",
    "what number of mainlands have populations under 100,000?": "None",
    "which area has the largest population?": "None",
    "which province has the most area?": "None",
    "which kingdom has the most villages?": "## Target type: {Name of Kingdom}\n## Query:\nStep1: Find the entity with the relation of No. of villages\nQuery1: \"get_information(relation='No. of villages')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max villages\nQuery3: \"get_information(relation='No. of villages', tail_entity='output_of_query2')\"\nStep4: Find the Name of Kingdom of output_of_query3\nQuery4: \"get_information(relation='Name of Kingdom', head_entity='output_of_query3')\"",
    "which municipality has the largest area?": "## Target type: {municipality}\n## Query:\nStep1: Find the largest area\nQuery1: \"get_information(relation='Area (km\u00b2)', tail_entity>='largest')\"\nStep2: Find the municipality with the largest area\nQuery2: \"get_information(relation='City/Municipality', head_entity='output_of_query1')\"",
    "what canton is the most populated?": "## Target type: {canton}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the Canton of output_of_query3\nQuery4: \"get_information(relation='Canton', head_entity='output_of_query3')\"",
    "what is the province with the most municipalities?": "## Target type: {province}\n## Query:\nStep1: Find the entity with the relation of Municipalities\nQuery1: \"get_information(relation='Municipalities')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Municipalities\nQuery3: \"get_information(relation='Municipalities', tail_entity='output_of_query2')\"\nStep4: Find the province of output_of_query3\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "before 2010 what was their best position?": "None",
    "what was the first year where the position was higher than 3rd place?": "None",
    "prior to 2007, what was the highest place achieved?": "None",
    "which year had a higher round placement, 2006 or 2010?": "None",
    "what was there top ranked position of the season?": "None",
    "what year was the best year end ranking in?": "None",
    "when was their best finish?": "## Target type: {Season}\n## Query:\nStep1: Find the entity that has the best finish\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "in what year was the best year end ranking achieved?": "None",
    "at what competition was the only 1st place position won?": "## Target type: {Competition}\n## Query:\nStep1: Find the position that is 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Get the entity of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "who was evicted in the first episode?": "None",
    "who was the last contestant to be voted out in week 7?": "None",
    "who was eliminated immediately before daniela gheorghe?": "None",
    "who was the first player picked in round four?": "None",
    "which wrestlers did not get eliminated in part two of battle royal?": "None",
    "who was the first contestant to be eliminated on season 9 of food network star?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Eliminated and Week 1\nQuery1: \"get_information(relation='Eliminated', tail_entity='Week 1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many trains other than the transrapid 07 can go faster than 450km/h?": "## Target type: {number of trains}\n## Query:\nStep1: Find the trains that can go faster than 450km/h\nQuery1: \"get_information(relation='Top speed (km/h)', tail_entity>'450')\"\nStep2: Find the entity named Transrapid 07\nQuery2: \"get_information(relation='Train', tail_entity='Transrapid 07')\"\nStep3: Get the difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many trains are passenger?": "## Target type: {number}\n## Query:\nStep1: Find the trains with the relation of Train Name as \"passenger\"\nQuery1: \"get_information(relation='Train Name', tail_entity='passenger')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many trains listed have the same speed as the hmb2?": "## Target type: {number of trains}\n## Query:\nStep1: Find the speed of the train HMB2\nQuery1: \"get_information(relation='Train', tail_entity='HMB2')\"\nStep2: Find the trains with the same speed as output_of_query1\nQuery2: \"get_information(relation='Top speed (km/h)', tail_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the number of passenger trains that left mangalore central is how many?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Train Name as Passenger and Origin as Mangalore Central\nQuery1: \"get_information(relation='Train Name', tail_entity='Passenger', key='Origin', value='Mangalore Central')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was the locomotive type ds4-4-750 in service with the railroad?": "None",
    "bangkok, thailand held the 2002 asian junior championships. what was the next year they held another event?": "None",
    "the 2009 asian championships were located in guangzhou, china. what city and country were the asian championships held in before guangzhou, china?": "None",
    "in the 2003 summer universiade, which country won the most medals other than gold?": "None",
    "in the 2003 summer universiade, which countries had more gold medals than japan?": "None",
    "how many players were playing in 1990?": "None",
    "how many games were n october 1990?": "None",
    "what is the difference between vladimir gadzhev and yordan miliev's scores?": "None",
    "who scored more than liliya dusmetova but less than lee young-sun?": "None",
    "what is the difference between andrey moiseev's total score and marcin horbacz's total score?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Andrey Moiseev\nQuery1: \"get_information(relation='Athlete', tail_entity='Andrey Moiseev')\"\nStep2: Find the total score of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Marcin Horbacz\nQuery3: \"get_information(relation='Athlete', tail_entity='Marcin Horbacz')\"\nStep4: Find the total score of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "did elvir rhimic score more goals during his time in the anxhi makhachkala club or the cska moscow club?": "None",
    "who was the other athlete who tied in rank with lyubomir popov?": "None",
    "who was the top scorer after sukhrob nematov?": "None",
    "which team's score was better than sanaye arak?": "None",
    "which country's team ranked first?": "## Target type: {country}\n## Query:\nStep1: Find the team that ranked first\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which team took first place?": "## Target type: {Club}\n## Query:\nStep1: Find the entity that Position is 1\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the team with output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "in which tournament did the team score the most points per game?": "None",
    "did they beat canada in more or less than 3 matches?": "## Target type: {comparison: more or less than 3 matches}\n## Query:\nStep1: Find the entity that Opponent Team is Canada\nQuery1: \"get_information(relation='Opponent Team', tail_entity='Canada')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Set condition to compare the count of output_of_query3 with 3\nQuery4: \"if count(set='output_of_query3') > 3: 'more than 3 matches' else: 'less than 3 matches'\"",
    "how many players scored at least ten goals?": "## Target type: {number of players}\n## Query:\nStep1: Find the players who scored at least ten goals\nQuery1: \"get_information(relation='Goals', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which language had the most number of people speaking it.": "None",
    "which language had the smallest number of females speaking it.": "None",
    "which is the least spoken language?": "None",
    "what language is spoken in the place with the largest population?": "## Target type: {language}\n## Query:\nStep1: Find the place with the largest population\nQuery1: \"get_information(relation='Population', tail_entity>='largest')\"\nStep2: Find the language spoken in the output_of_query1\nQuery2: \"get_information(relation='Most spoken language', head_entity='output_of_query1')\"",
    "which language had the least female speakers?": "None",
    "which ethnicity has the biggest population in 1992?": "None",
    "what is the number of russian participants?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nationality as Russia\nQuery1: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of prisoners that hrazdan is designed to hold?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Hrazdan\nQuery1: \"get_information(relation='Name', tail_entity='Hrazdan')\"\nStep2: Find the number of prisoners designed for output_of_query1\nQuery2: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query1')\"",
    "how many russians lived in south ossetia in 1970?": "None",
    "how many athletes are from russia?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that has Nationality as Russia\nQuery1: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many prisons are in nubarashen?": "None",
    "how many competitors were from russia?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity that is Russia\nQuery1: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which facility hold the most inmates?": "## Target type: {facility}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the facility of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many correctional facilities are listed in yerevan?": "None",
    "how many world performance cars were entered in 2009?": "None",
    "how many rounds were held in the 2011 season?": "## Target type: {number of rounds}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='2011')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of rounds in 2011 season\nQuery3: \"count(set='output_of_query2')\"",
    "how many total world performance cars are there for 2007?": "None",
    "how many rounds did he fight cody goodale before finally losing by unanimous decision?": "None",
    "did niki lauda receive more points than james hunt?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Niki Lauda\nQuery1: \"get_information(relation='Driver', tail_entity='Niki Lauda')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named James Hunt\nQuery3: \"get_information(relation='Driver', tail_entity='James Hunt')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "at what competition did david receive the least position?": "None",
    "which rider rode a suzuki and has a total of nine points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Manufacturer as Suzuki\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Suzuki')\"\nStep2: Find the entity with the relation of Points as 9\nQuery2: \"get_information(relation='Points', tail_entity='9')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "david oliver has come in 3rd place in how many competitions?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity with the relation of Position as 3rd\nQuery1: \"get_information(relation='Position', tail_entity='3rd')\"\nStep2: Find the competitions of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times was fabio fabiani jay-ten winner?": "None",
    "did james toseland score more or less points than shinichi nakatomi?": "## Target type: {points}\n## Query:\nStep1: Find the entity that refers to James Toseland\nQuery1: \"get_information(relation='Rider', tail_entity='James Toseland')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity that refers to Shinichi Nakatomi\nQuery3: \"get_information(relation='Rider', tail_entity='Shinichi Nakatomi')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which airport has no more than 30,000 passengers handled among the 10 busiest routes to and from london southend airport in 2012?": "## Target type: {airport}\n## Query:\nStep1: Find the 10 busiest routes to and from London Southend Airport in 2012\nQuery1: \"get_information(relation='Airport', tail_entity='London Southend Airport', key='Passengers handled', value<='30000')\"\nStep2: Get the airport with passengers handled no more than 30,000\nQuery2: \"get_information(relation='Passengers handled', tail_entity<='30000')\"\nStep3: Get the airport of output_of_query2\nQuery3: \"get_information(relation='Airport', head_entity='output_of_query2')\"",
    "how many at most flights were canceled according to the chart?": "This question can be answered directly by a count query without the need for any intermediate steps.\n\n## Target type: {number of flights}\n## Query:\nStep1: Find the flights that were canceled\nQuery1: \"get_information(relation='Flight', head_entity='Canceled')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "looking at the top 10 busiest routes to and from london southend airport what is the average number of passengers handled?": "None",
    "total destinations that been ended as of 2009": "None",
    "what was the only flight to be cancelled?": "## Target type: {Flight}\n## Query:\nStep1: Find the entity with the relation of Result being \"Cancelled\"\nQuery1: \"get_information(relation='Result', value='Cancelled')\"\nStep2: Get the flight number of output_of_query1\nQuery2: \"get_information(relation='Flight', head_entity='output_of_query1')\"",
    "what year had the greatest number of international passengers?": "## Target type: {Year}\n## Query:\nStep1: Find the entity with the relation of International passengers\nQuery1: \"get_information(relation='International passengers')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max International passengers\nQuery3: \"get_information(relation='International passengers', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which airline carries the most passengers?": "## Target type: {airline}\n## Query:\nStep1: Find the entity with the relation of Passengers\nQuery1: \"get_information(relation='Passengers')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max passengers\nQuery3: \"get_information(relation='Passengers', tail_entity='output_of_query2')\"",
    "where is the most popular destination for passengers leaving london southend airport?": "None",
    "what was the total number of matches played from 2001 to 2014?": "None",
    "what was the total number of wins in the season?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Result as 'Win'\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "total number of wins from 2011-2014?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of Season 2011\nQuery1: \"get_information(relation='Season', tail_entity='2011')\"\nStep2: Find the row_number of Season 2014\nQuery2: \"get_information(relation='Season', tail_entity='2014')\"\nStep3: Find the wins between output_of_query1 and output_of_query2\nQuery3: \"get_information(relation='Wins', tail_entity>='output_of_query1', head_entity<='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which album was the first to peak in the top ten positions?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity that Peak positions is in the top ten.\nQuery1: \"get_information(relation='Peak positions', tail_entity<='10')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "which album did not have more than one song reach the charts?": "None",
    "which album had the most chart-reaching singles?": "## Target type: {album}\n## Query:\nStep1: Find the entity with the relation of Peak chart positions\nQuery1: \"get_information(relation='Peak chart positions')\"\nStep2: Find the album with the most chart-reaching singles\nQuery2: \"get_information(relation='Album', tail_entity>='most')\"",
    "in what city did piotr's last 1st place finish occur?": "None",
    "what's the difference between adam cole's first run and his second run?": "This question involves calculating the difference between two values associated with the same entity.\n\n## Target type: {difference between two runs}\n## Query:\nStep1: Find the entity named Adam Cole\nQuery1: \"get_information(relation='Athlete', tail_entity='Adam Cole')\"\nStep2: Find the first run time of output_of_query1\nQuery2: \"get_information(relation='Run 1', head_entity='output_of_query1')\"\nStep3: Find the second run time of output_of_query1\nQuery3: \"get_information(relation='Run 2', head_entity='output_of_query1')\"\nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(value1='output_of_query2', value2='output_of_query3')\"",
    "what was the time difference between the first place finisher and the eighth place finisher?": "None",
    "what was the difference in time between the 8th place finisher and the first place finisher?": "None",
    "what is the score difference between 6th place and 2nd place?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity in Place that is 6th place\nQuery1: \"get_information(relation='Place', tail_entity='6')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity in Place that is 2nd place\nQuery3: \"get_information(relation='Place', tail_entity='2')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what region is listed before the midwest?": "None",
    "what country is listed before france?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Nation is France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what is the last region listed on the table?": "## Target type: {region}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Region of output_of_query3\nQuery4: \"get_information(relation='Region', head_entity='output_of_query3')\"",
    "which region appears more on this list, france or united states?": "## Target type: {region}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Region', tail_entity='France')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity named United States\nQuery3: \"get_information(relation='Region', tail_entity='United States')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "which conference had the most bids?": "## Target type: {conference}\n## Query:\nStep1: Find the entity with the relation of Bids\nQuery1: \"get_information(relation='Bids')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Bids\nQuery3: \"get_information(relation='Bids', tail_entity='output_of_query2')\"\nStep4: Find the Conference of output_of_query3\nQuery4: \"get_information(relation='Conference', head_entity='output_of_query3')\"",
    "which conference had the same number of bids as the colonial athletic association?": "None",
    "after winning on september 29, who was the next opponent they won against?": "None",
    "which is the first best score on the chart": "None",
    "which season did they finish the highest?": "None",
    "what is the number of years with a quantity of 10?": "## Target type: {number of years}\n## Query:\nStep1: Find the entities with the relation of Quantity being 10\nQuery1: \"get_information(relation='Quantity', tail_entity='10')\"\nStep2: Get the set of Years of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the combined result on 9/28?": "## Target type: {combined result}\n## Query:\nStep1: Find the entity with the relation of Date that matches '09/28'\nQuery1: \"get_information(relation='Date', tail_entity='09/28')\"\nStep2: Get the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"",
    "what is the total amount of districts listed?": "## Target type: {number}\n## Query:\nStep1: Find all the districts listed\nQuery1: \"get_information(relation='District')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which district is listed last on this chart?": "## Target type: {district}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the District of output_of_query3\nQuery4: \"get_information(relation='District', head_entity='output_of_query3')\"",
    "which city is ranked first on the list?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Rank that is first\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "which surname on the list belongs to the smallest number of people?": "## Target type: {surname}\n## Query:\nStep1: Find the entity with the relation of Number\nQuery1: \"get_information(relation='Number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Number\nQuery3: \"get_information(relation='Number', tail_entity='output_of_query2')\"\nStep4: Find the surname of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which candidate got the least votes in the entire districts?": "None",
    "what township has the largest population?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "when ranking the counties from first to last in terms of median family income, the first would be...?": "None",
    "what city is listed at the top of the table as having the highest population?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population (2011)\nQuery1: \"get_information(relation='Population (2011)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population (2011)\nQuery3: \"get_information(relation='Population (2011)', tail_entity='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "how many total points did russia win in this competition?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity with the relation of Country as Russia\nQuery1: \"get_information(relation='Country', tail_entity='Russia')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how long is the time between the times the championship was held in moscow?": "## Target type: {time interval}\n## Query:\nStep1: Find the entity that Location is Moscow\nQuery1: \"get_information(relation='Location', tail_entity='Moscow')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the entity that Location is Moscow, and row_number is larger than output_of_query3\nQuery4: \"get_information(relation='Location', tail_entity='Moscow', key='row_number', value>'output_of_query3')\"\nStep5: Find the year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"\nStep6: Calculate the time interval between output_of_query2 and output_of_query5\nQuery6: \"calculate_time_interval(time1='output_of_query2', time2='output_of_query5')\"",
    "how many total medals did russia win?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many gold medals did russia earn?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity that is Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many bronze medals did russia earn?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity that is Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "what is the total of medals earned by russia?": "## Target type: {total of medals}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which area in ranked first in population in 2012?": "None",
    "which urban area is ranked first overall?": "## Target type: {urban area}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the urban area of output_of_query3\nQuery4: \"get_information(relation='Urban Area', head_entity='output_of_query3')\"",
    "what is the largest area in terms of population?": "## Target type: {area}\n## Query:\nStep1: Find the area with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the area with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='District', head_entity='output_of_query3')\"",
    "which urban area has the largest population?": "## Target type: {urban area}\n## Query:\nStep1: Find the entity with the relation of Population (2001 Census)\nQuery1: \"get_information(relation='Population\\n(2001 Census)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population\\n(2001 Census)', tail_entity='output_of_query2')\"\nStep4: Find the Urban Area of output_of_query3\nQuery4: \"get_information(relation='Urban Area', head_entity='output_of_query3')\"",
    "what were the dates of the last event of the year?": "None",
    "which month has the most precipitation?": "None",
    "which month held the most precipitation?": "None",
    "which month had the most sunny days?": "None",
    "between january, october and december which month had the most rainfall?": "None",
    "how many games were after 14 august 2013?": "None",
    "how many solar saros events lasted longer than 4 minutes?": "None",
    "what date is shown before march 24, 2013?": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is March 24, 2013\nQuery1: \"get_information(relation='Date', tail_entity='March 24, 2013')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many games were held after june?": "None",
    "how many total races are held in june?": "None",
    "at the 2006 gran premio telmex, how many drivers completed less than 60 laps?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity for the 2006 gran premio telmex\nQuery1: \"get_information(relation='No', tail_entity='2006 gran premio telmex')\"\nStep2: Find the Laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity whose Laps is less than 60\nQuery3: \"get_information(relation='Laps', tail_entity<'60')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many drivers participated in the race?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity with the relation of Driver\nQuery1: \"get_information(relation='Driver')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many drivers used maserati as their constructor?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity with the relation of Constructor being Maserati\nQuery1: \"get_information(relation='Constructor', tail_entity='Maserati')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the only grand prix to be won by benneton-ford?": "## Target type: {'Grand Prix'}\n## Query:\nStep1: Find the entity whose Constructor is Benetton-Ford\nQuery1: \"get_information(relation='Constructor', tail_entity='Benetton-Ford')\"\nStep2: Find the Grand Prix of output_of_query1\nQuery2: \"get_information(relation='Grand Prix', head_entity='output_of_query1')\"",
    "what is the total number dallara chassis listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Chassis\nQuery1: \"get_information(relation='Chassis')\"\nStep2: Find the entity that is \"Dallara\" in output_of_query1\nQuery2: \"get_information(relation='Chassis', tail_entity='Dallara')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "luis serrado and jose camacho both drove what time of car in the race?": "## Target type: {car}\n## Query:\nStep1: Find the entity named Luis Serrado\nQuery1: \"get_information(relation='Driver', tail_entity='Luis Serrado')\"\nStep2: Find the car of output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"\nStep3: Find the entity named Jos\u00e9 Camacho\nQuery3: \"get_information(relation='Driver', tail_entity='Jos\u00e9 Camacho')\"\nStep4: Find the car of output_of_query3\nQuery4: \"get_information(relation='Car', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the total number of goals scored by all of the national team players in the 1947/1948 season?": "None",
    "how many games total were played?": "## Target type: {number}\n## Query:\nStep1: Find the number of games played\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of games played by all teams?": "None",
    "how many games were played in total?": "## Target type: {number}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total players played?": "## Target type: {number}\n## Query:\nStep1: Find all the Player entities\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many had a total goals scored over 6?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity that has a total goals scored over 6\nQuery2: \"get_information(relation='Scorers', tail_entity>'6')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many players scored more than 10 goals?": "None",
    "how many players played more than 10 matches?": "## Target type: {number}\n## Query:\nStep1: Find the matches that is more than 10\nQuery1: \"get_information(relation='Matches', tail_entity>'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "high noise generation and too large consumption led to what train being scrapped?": "## Target type: {Train}\n## Query:\nStep1: Find the entity that has high noise generation and too large consumption\nQuery1: \"get_information(relation='Comments', tail_entity='high noise generation and too large consumption')\"\nStep2: Find the Train of output_of_query1\nQuery2: \"get_information(relation='Train', head_entity='output_of_query1')\"",
    "what is the destination of the first passenger train to leave mangalore central?": "## Target type: {destination}\n## Query:\nStep1: Find the entity with the relation of Train Name being \"Passenger\"\nQuery1: \"get_information(relation='Train Name', tail_entity='Passenger')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is 1\nQuery3: \"get_information(relation='row_number', tail_entity='1')\"\nStep4: Find the destination of output_of_query3\nQuery4: \"get_information(relation='Destination', head_entity='output_of_query3')\"",
    "how many total trains were destined for new delhi?": "## Target type: {number of trains}\n## Query:\nStep1: Find the entity that Destination is New Delhi\nQuery1: \"get_information(relation='Destination', tail_entity='New Delhi')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of trains that are still in service?": "## Target type: {count}\n## Query:\nStep1: Find the entity that has the relation of Status equals \"In Service\"\nQuery1: \"get_information(relation='Status', tail_entity='In Service')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who finished faster--canada or slovakia?": "## Target type: {'Country'}\n## Query:\nStep1: Find the entity named Canada\nQuery1: \"get_information(relation='Country', tail_entity='Canada')\"\nStep2: Find the entity named Slovakia\nQuery2: \"get_information(relation='Country', tail_entity='Slovakia')\"\nStep3: Find the Total time of output_of_query1\nQuery3: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep4: Find the Total time of output_of_query2\nQuery4: \"get_information(relation='Total', head_entity='output_of_query2')\"\nStep5: Compare the Total time of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4', operator='<')\"",
    "which woman finished last in the 1971 world figured skating championships?": "## Target type: {woman}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the woman who finished last in the 1971 world figure skating championships\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which competition did this competitor compete in next after the world indoor championships in 2008?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Competition and Year of the world indoor championships in 2008\nQuery1: \"get_information(relation='Competition', tail_entity='World Indoor Championships', head_entity='2008')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "in 2008 in track and field events who broke more world records, usain bolt or haile gebrselassie?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Usain Bolt\nQuery1: \"get_information(relation='Athlete', tail_entity='Usain Bolt')\"\nStep2: Find the world records broken by output_of_query1\nQuery2: \"get_information(relation='World Record', tail_entity='output_of_query1')\"\nStep3: Find the entity named Haile Gebrselassie\nQuery3: \"get_information(relation='Athlete', tail_entity='Haile Gebrselassie')\"\nStep4: Find the world records broken by output_of_query3\nQuery4: \"get_information(relation='World Record', tail_entity='output_of_query3')\"\nStep5: Find the athlete who broke more world records between output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', comparator='greater')\"",
    "what is the total population in dzhebariki-khaya?": "None",
    "what is the number of russian participants in this set of semifinals?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Russia\nQuery1: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep2: Find the number of output_of_query1 in the set of semifinals\nQuery2: \"count(set='output_of_query1', relation='row_number')\"",
    "number of male russian speakers": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Russian\nQuery1: \"get_information(relation='Language', tail_entity='Russian')\"\nStep2: Find the males of output_of_query1\nQuery2: \"get_information(relation='males', head_entity='output_of_query1')\"",
    "what year had the most singles?": "None",
    "which years saw the release of three singles?": "None",
    "how many times was the album released?": "None",
    "which city has the stadium that can hold the most people?": "None",
    "how many stadiums seat more than 2,000 people?": "## Target type: {number}\n## Query:\nStep1: Find the stadiums with Capacity more than 2,000\nQuery1: \"get_information(relation='Capacity', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what stadium has the least capacity?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"",
    "who finished first?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Position that is 1\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which athlete placed top?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Place equal to 1\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Find the Athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "in those years in which the team finished its regular season lower than 2nd place, which year also had the least average attendance?": "## Target type: {year}\n## Query:\nStep1: Find the entity that finished regular season lower than 2nd place\nQuery1: \"get_information(relation='Regular Season', tail_entity<'2nd')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation Avg. Attendance\nQuery3: \"get_information(relation='Avg. Attendance')\"\nStep4: Find the min output_of_query3\nQuery4: \"min(set='output_of_query3')\"\nStep5: Find the entity with the min attendance\nQuery5: \"get_information(relation='Avg. Attendance', tail_entity='output_of_query4')\"\nStep6: Find the year of output_of_query5\nQuery6: \"get_information(relation='Year', head_entity='output_of_query5')\"",
    "which teams were playing in the game with the least amount of people in attendance?": "None",
    "who had the the lowest single game attendance?": "None",
    "which team played the least number of games?": "None",
    "what nation was the top scoring in the games?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the Nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "who had the highest single game attendance of the team's averaging less than 500?": "## Target type: {team}\n## Query:\nStep1: Find the entities with Average less than 500.\nQuery1: \"get_information(relation='Average', tail_entity<500)\"\nStep2: Find the High attendance of output_of_query1\nQuery2: \"get_information(relation='High', head_entity='output_of_query1')\"\nStep3: Find the team with the max High attendance\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max High attendance\nQuery4: \"get_information(relation='High', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "which game had the highest attendance?": "None",
    "what team(s) has the highest win/lose ratio?": "None",
    "what country has the last listed aircraft?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the country of output_of_query3\nQuery4: \"get_information(relation='Origin', head_entity='output_of_query3')\"",
    "the douglas c-47 skytrain and the de haviland canada dhc-2 beaver were both replaced by which model?": "None",
    "which flight was the least successful of the h-ii flights?": "## Target type: {'Flight'}\n## Query:\nStep1: Find all the flights with relation 'Flight'\nQuery1: \"get_information(relation='Flight')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the failures with relation 'Result'\nQuery3: \"get_information(relation='Result', tail_entity='Failure')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Find the flights that are not in output_of_query3\nQuery5: \"set_difference(set1='output_of_query1', set2='output_of_query3')\"\nStep6: Find the flight with the least count\nQuery6: \"min(set='output_of_query5')\"",
    "number of years with no victories": "None",
    "which airliner attack on the list had the most dead?": "None",
    "where there more avro 504s or douglas digbys?": "## Target type: {aircraft}\n## Query:\nStep1: Find the entity named Avro 504\nQuery1: \"get_information(relation='Name', tail_entity='Avro 504')\"\nStep2: Find the number of Avro 504 used\nQuery2: \"get_information(relation='#used', head_entity='output_of_query1')\"\nStep3: Find the entity named Douglas Digby\nQuery3: \"get_information(relation='Name', tail_entity='Douglas Digby')\"\nStep4: Find the number of Douglas Digby used\nQuery4: \"get_information(relation='#used', head_entity='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "how many years passed between flight tf2 and flight f8?": "## Target type: {number of years}\n## Query:\nStep1: Find the row_number of flight TF2\nQuery1: \"get_information(relation='Flight', tail_entity='TF2')\"\nStep2: Find the row_number of flight F8\nQuery2: \"get_information(relation='Flight', tail_entity='F8')\"\nStep3: Find the Date of output_of_query1\nQuery3: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep4: Find the Date of output_of_query2\nQuery4: \"get_information(relation='Date', head_entity='output_of_query2')\"\nStep5: Calculate the difference in years between output_of_query3 and output_of_query4\nQuery5: \"year_difference(date1='output_of_query3', date2='output_of_query4')\"",
    "which years have an average population of no less than 50,000?": "None",
    "which year had an average population of less than 38?": "None",
    "which month had the most snowfall?": "None",
    "how many japanese-made cars finished in the top 10 of the 2013 rali vinho da madeira?": "None",
    "was the average speed in the year 2011 of the indycar series above or below the average speed of the year before?": "## Target type: {above or below}\n## Query:\nStep1: Find the entity with the relation of Season as 2011\nQuery1: \"get_information(relation='Season', tail_entity='2011')\"\nStep2: Find the Average Speed of output_of_query1\nQuery2: \"get_information(relation='Average Speed (mph)', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Season as 2010\nQuery3: \"get_information(relation='Season', tail_entity='2010')\"\nStep4: Find the Average Speed of output_of_query3\nQuery4: \"get_information(relation='Average Speed (mph)', head_entity='output_of_query3')\"\nStep5: Compare the average speeds of output_of_query2 and output_of_query4\nQuery5: \"compare(output1='output_of_query2', output2='output_of_query4')\"",
    "how many races were in 2010?": "None",
    "how many laps does v10 kleber have?": "## Target type: {'laps'}\n## Query:\nStep1: Find the entity named V10 Kleber\nQuery1: \"get_information(relation='Team', tail_entity='V10 Kleber')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "what number of competitions were held in 2010?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps were required to successfully complete the 125cc classification of the 2010 catalan motorcycle grand prix?": "None",
    "how has the most golds?": "None",
    "which dukedom did not have red in the coat of arms?": "None",
    "which bank has four times as many assets at taib yatirim bank?": "None",
    "did true romance make more or less money than diabolique?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named True Romance\nQuery1: \"get_information(relation='Title', tail_entity='True Romance')\"\nStep2: Find the Gross of output_of_query1\nQuery2: \"get_information(relation='Gross (worldwide)', head_entity='output_of_query1')\"\nStep3: Find the entity named Diabolique\nQuery3: \"get_information(relation='Title', tail_entity='Diabolique')\"\nStep4: Find the Gross of output_of_query3\nQuery4: \"get_information(relation='Gross (worldwide)', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4')\"",
    "total number of markers from in callicoon, new york and forestburg, new york, combined.": "None",
    "how many wards are listed?": "None",
    "what is the number of markers listed in highkand, new york ?": "None",
    "how many places have no zip code listed?": "None",
    "how many churches are listed ?": "None",
    "how many creatures are included at least as high as page 42?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Page\nQuery1: \"get_information(relation='Page')\"\nStep2: Find the entities that are at least as high as page 42\nQuery2: \"get_information(relation='Page', head_entity>='42')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many buildings has the same year of listing as 1974?": "None",
    "how many locations were listed in total?": "None",
    "what is the longest track in terms of time?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how long is the longest track listed?": "## Target type: {length of track}\n## Query:\nStep1: Find all the lengths of the tracks\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max length from output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "which event ended with the longest time?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "which was the longest running?": "None",
    "how long was the fastest time in the race?": "## Target type: {'Time'}\n## Query:\nStep1: Find the fastest time in the race\nQuery1: \"get_information(relation='Time', tail_entity>='fastest')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "which event was the longest amount of days held?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity that has the relation 'Days held' and maximum value\nQuery1: \"get_information(relation='Days held', tail_entity>='max')\"\nStep2: Find the Event of output_of_query1\nQuery2: \"get_information(relation='Event', head_entity='output_of_query1')\"",
    "which train ran for the longest time?": "None",
    "how long was the longest time?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"",
    "which section is longest??": "## Target type: {section}\n## Query:\nStep1: Find all the Kilometers\nQuery1: \"get_information(relation='Kilometers')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Kilometers\nQuery3: \"get_information(relation='Kilometers', tail_entity='output_of_query2')\"\nStep4: Find the section of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how long was the shortest event?": "## Target type: {duration}\n## Query:\nStep1: Find the entity with the relation of Event\nQuery1: \"get_information(relation='Event')\"\nStep2: Find the shortest duration of output_of_query1\nQuery2: \"min(set='output_of_query1', key='Notes')\"",
    "which year was more successful, 2007 or 2002?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Season and value of 2007\nQuery1: \"get_information(relation='Season', tail_entity='2007')\"\nStep2: Find the entity with the relation of Season and value of 2002\nQuery2: \"get_information(relation='Season', tail_entity='2002')\"\nStep3: Find the position of output_of_query1\nQuery3: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep4: Find the position of output_of_query2\nQuery4: \"get_information(relation='Position', head_entity='output_of_query2')\"\nStep5: Find the year with greater position\nQuery5: \"if(set1='output_of_query3', set2='output_of_query4', comparison='greater')\"\nStep6: Return the year\nQuery6: \"value(set='output_of_query5')\"",
    "did she play in more matches in 2007 or 2008?": "None",
    "what year was more successful, 2012 or 2007?": "None",
    "which season was more successful, 2007-2008 or 2005-2006?": "None",
    "what was the only title she was featured in in 2007?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Year is 2007\nQuery1: \"get_information(relation='Year', tail_entity='2007')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what was the finishing place of the team before the 2007-2008?": "## Target type: {place}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='2007/08')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "which year had a higher position, 2008 or 2004?": "## Target type: {year}\n## Query:\nStep1: Find the position of the year 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the position of the year 2004\nQuery2: \"get_information(relation='Year', tail_entity='2004')\"\nStep3: Compare the positions of output_of_query1 and output_of_query2\nQuery3: \"output_of_query1 if int(output_of_query1) > int(output_of_query2) else output_of_query2\"",
    "what is the difference in position from the year 2007 and 2008?": "None",
    "what was the last tournament she won?": "None",
    "war pass won in 2007. who won the previous year?": "## Target type: {winner}\n## Query:\nStep1: Find the entity named War Pass\nQuery1: \"get_information(relation='Winner', tail_entity='War Pass')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity='output_of_query3')\"\nStep5: Find the winner of output_of_query4\nQuery5: \"get_information(relation='Winner', head_entity='output_of_query4')\"",
    "who placed first in the 2006 asian games finals??": "None",
    "what was the first venue for the asian games?": "None",
    "where was the match held immediately before 2014's at guizhou olympic stadium?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity named 2014's at Guizhou Olympic Stadium\nQuery1: \"get_information(relation='Stadium', tail_entity='2014's at Guizhou Olympic Stadium')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the stadium of output_of_query4\nQuery5: \"get_information(relation='Stadium', head_entity='output_of_query4')\"",
    "in the 2003 summer universiade, which countries earned the highest total numbers of medals?": "None",
    "in the 2003 summer universiade, which three countries had at least 18 bronze medals?": "None",
    "how many of the competitions were held in thailand before 2006?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity named Thailand\nQuery1: \"get_information(relation='Venue', tail_entity='Thailand')\"\nStep2: Find the competitions before 2006\nQuery2: \"get_information(relation='Year', tail_entity<'2006')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which year had a university as the venue, 2004 or 1998?": "## Target type: {year}\n## Query:\nStep1: Find the venue with relation as University\nQuery1: \"get_information(relation='Venue', tail_entity='University')\"\nStep2: Find the year of output_of_query1 for year 2004\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the year of output_of_query1 for year 1998\nQuery3: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep4: Get the union of output_of_query2 and output_of_query3\nQuery4: \"set_union(set1='output_of_query2', set2='output_of_query3')\"",
    "how many competitions were held in 2002?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is 2002\nQuery1: \"get_information(relation='Year', tail_entity='2002')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was china's average position in the asian championships between 2002 and 2009?": "## Target type: {average position}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Venue', tail_entity='China')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Competition as 'Asian Championships' and the Year between 2002 and 2009\nQuery3: \"get_information(relation='Competition', tail_entity='Asian Championships', key='Year', value>='2002', value<='2009')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Calculate the average of output_of_query4\nQuery5: \"average(set='output_of_query4')\"",
    "in the 2009 asian championships, china took 3rd. what place did china take in the previous asian championships?": "None",
    "what tournament was played after the kremlin cup?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity named Kremlin Cup\nQuery1: \"get_information(relation='Tournament', tail_entity='Kremlin Cup')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tournament of output_of_query4\nQuery5: \"get_information(relation='Tournament', head_entity='output_of_query4')\"",
    "who won both the st.petersburg open and the atp world tour finals?": "## Target type: {partner}\n## Query:\nStep1: Find the entity that won the St. Petersburg Open\nQuery1: \"get_information(relation='Tournament', tail_entity='St. Petersburg Open')\"\nStep2: Find the partner of output_of_query1\nQuery2: \"get_information(relation='Partner', head_entity='output_of_query1')\"\nStep3: Find the entity that won the ATP World Tour Finals\nQuery3: \"get_information(relation='Tournament', tail_entity='ATP World Tour Finals')\"\nStep4: Find the partner of output_of_query3\nQuery4: \"get_information(relation='Partner', head_entity='output_of_query3')\"",
    "the world championships were not held in moscow, russia before what year?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Venue is Moscow, Russia\nQuery1: \"get_information(relation='Venue', tail_entity='Moscow, Russia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "which happened first: a closing date for australia or or an opening date for russia?": "## Target type: {date}\n## Query:\nStep1: Find the closing date for Australia\nQuery1: \"get_information(relation='Country', tail_entity='Australia')\"\nStep2: Find the closing date of output_of_query1\nQuery2: \"get_information(relation='Closing date', head_entity='output_of_query1')\"\nStep3: Find the opening date for Russia\nQuery3: \"get_information(relation='Country', tail_entity='Russia')\"\nStep4: Find the opening date of output_of_query3\nQuery4: \"get_information(relation='Opening date', head_entity='output_of_query3')\"\nStep5: Compare the dates of output_of_query2 and output_of_query4\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4')\"",
    "the spartak, bobruisk venue is has a larger capacity than which other venues?": "None",
    "which team is previous to cska moscow on team 1": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team 1 is CSKA Moscow\nQuery1: \"get_information(relation='Team 1', tail_entity='CSKA Moscow')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team 1 of output_of_query4\nQuery5: \"get_information(relation='Team 1', head_entity='output_of_query4')\"",
    "how many women competed during the 1980 winter olympic women's 1000 metres in speed skating?": "None",
    "how many people finished the 1997 budapest half marathon?": "## Target type: {number of finishers}\n## Query:\nStep1: Find the entity in Year that is 1997\nQuery1: \"get_information(relation='Year', tail_entity='1997')\"\nStep2: Find the Finishers of output_of_query1\nQuery2: \"get_information(relation='Finishers', head_entity='output_of_query1')\"",
    "how many women clocked less than 13 secs the women's heat of 100m hurdles?": "None",
    "how many women from england were ranked in top 14 in the heats of 100m women's hurdles?": "None",
    "number of japanese athletes that finished with total time less than 1:10:00": "None",
    "how many athletes finished with the time less than 40.00?": "None",
    "how many times did she finish above her result from the 1995 world indoor championships?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Year as 1995\nQuery1: \"get_information(relation='Year', tail_entity='1995')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the result of the query as output_of_query2\nQuery3: \"get_information(relation='Result', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "her best time for the 1500 m was 4:04.06 in 2013. what was her previous best time?": "None",
    "how many finished the race in less than 1:02?": "None",
    "how many runners finished with their time below 2:01?": "None",
    "how many athletes finished the race in less than 5:00:00?": "None",
    "how many are still in service?": "## Target type: {number}\n## Query:\nStep1: Find the entity that its Status is \"In Service\"\nQuery1: \"get_information(relation='Status', tail_entity='In Service')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many number were in service in 1910?": "None",
    "how many of these cars are operational?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the attribute Current status as 'Operational'\nQuery1: \"get_information(relation='Current status', tail_entity='Operational')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which number was in service the least amount of time?": "None",
    "how many locomotives were still in service after the year 1950?": "None",
    "how many boats were launched after april 1945?": "None",
    "how many served in the 20th century?": "None",
    "how many people served in the canadian army?": "None",
    "how many were released after 2005-02-24?": "None",
    "what is the number of operational vehicles listed?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation Current status is Operational\nQuery1: \"get_information(relation='Current status', tail_entity='Operational')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many ships were launched in the year 1944?": "None",
    "how many times is in service listed as the status?": "None",
    "how many were released after 2004?": "None",
    "which nation came in last place?": "None",
    "which country finished last?": "None",
    "which country took last place?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Place\nQuery1: \"get_information(relation='Place')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Place\nQuery3: \"get_information(relation='Place', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "which country came in last place in 2009?": "None",
    "which country came in last?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"",
    "which three countries are tied for last place?": "None",
    "which nation was ranked last?": "None",
    "which country's team ranked last?": "## Target type: {country}\n## Query:\nStep1: Find the row_number of last row\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which country came in first place?": "## Target type: {country}\n## Query:\nStep1: Find the entity that is in first place with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "which country rank last?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the Country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "from what country did the last place compete for?": "## Target type: {country}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"",
    "what country is last on the list?": "## Target type: {'Country'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "who was the next minister of transport after c.d. howe?": "## Target type: {minister of transport}\n## Query:\nStep1: Find the entity named C. D. Howe\nQuery1: \"get_information(relation='Name', tail_entity='C. D. Howe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who was the party leader before colin eglin?": "None",
    "how many years after sir carne rasch's election was john macnamara elected?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Sir Carne Rasch\nQuery1: \"get_information(relation='Member', tail_entity='Sir Carne Rasch')\"\nStep2: Find the election year of output_of_query1\nQuery2: \"get_information(relation='Election', head_entity='output_of_query1')\"\nStep3: Find the entity named John Macnamara\nQuery3: \"get_information(relation='Member', tail_entity='John Macnamara')\"\nStep4: Find the election year of output_of_query3\nQuery4: \"get_information(relation='Election', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(year1='output_of_query2', year2='output_of_query4', unit='years')\"",
    "who was appointed after dirk kempthorne?": "## Target type: {appointed successor}\n## Query:\nStep1: Find the entity named Dirk Kempthorne\nQuery1: \"get_information(relation='Incumbent', tail_entity='Dirk Kempthorne')\"\nStep2: Find the appointed successor of output_of_query1\nQuery2: \"get_information(relation='Appointed Successor', head_entity='output_of_query1')\"",
    "who became commissioner after george p. larrick?": "## Target type: {commissioner}\n## Query:\nStep1: Find the entity named George P. Larrick\nQuery1: \"get_information(relation='Name', tail_entity='George P. Larrick')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the commissioner of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which governor-general served the longest term from 1910 to 1961?": "None",
    "who was the first prime minister?": "## Target type: {prime minister}\n## Query:\nStep1: Find the entity with the relation of row_number = 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the prime minister of output_of_query1\nQuery2: \"get_information(relation='Prime Minister', head_entity='output_of_query1')\"",
    "was macdonald prime minister before or after bowell?": "## Target type: {prime minister}\n## Query:\nStep1: Find the entity named MacDonald\nQuery1: \"get_information(relation='Prime Minister', tail_entity='MacDonald')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity named Bowell\nQuery5: \"get_information(relation='Prime Minister', tail_entity='Bowell')\"\nStep6: Find the row_number of output_of_query5\nQuery6: \"get_information(relation='row_number', head_entity='output_of_query5')\"\nStep7: Compare the row_number of output_of_query2 and output_of_query6\nQuery7: \"if output_of_query2 < output_of_query6: return 'before' else: return 'after'\"",
    "which secretary of state came after jack pkckersgill?": "## Target type: {secretary of state}\n## Query:\nStep1: Find the entity named Jack Pickersgill\nQuery1: \"get_information(relation='Secretary of State', tail_entity='Jack Pickersgill')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Secretary of State of output_of_query4\nQuery5: \"get_information(relation='Secretary of State', head_entity='output_of_query4')\"",
    "who was the first to take office?": "## Target type: {'Menteri Besar'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Menteri Besar of output_of_query3\nQuery4: \"get_information(relation='Menteri Besar', head_entity='output_of_query3')\"",
    "what's the number of schools listed?": "None",
    "what's the number of schools represented in the table?": "## Target type: {number of schools}\n## Query:\nStep1: Find all the School names\nQuery1: \"get_information(relation='School')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "a total of how many schools were established in the 21st century?": "## Target type: {number of schools}\n## Query:\nStep1: Find the establishment year that is in the 21st century\nQuery1: \"get_information(relation='Establishment', tail_entity>='2000')\" \nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of schools that are now vacant?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools with the Building Status of 'vacant'\nQuery1: \"get_information(relation='Building Status', tail_entity='vacant')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many schools have at least 2,000 enrolled?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools with Enrollment at least 2,000\nQuery1: \"get_information(relation='Enrollment', tail_entity>='2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many churches have schools?": "None",
    "how many schools were established before 1955?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools that were established before 1955\nQuery1: \"get_information(relation='Establishment', tail_entity<'1955')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of schools to join before 1960?": "None",
    "how many schools are vacant?": "## Target type: {number}\n## Query:\nStep1: Find all the Building Status with a value of 'Vacant'\nQuery1: \"get_information(relation='Building Status', value='Vacant')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of universities with more than 1,000 in academic staff?": "## Target type: {number of universities}\n## Query:\nStep1: Find the universities with more than 1,000 in academic staff\nQuery1: \"get_information(relation='Academic staff', tail_entity>'1000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last driver on the list?": "## Target type: {driver}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what is the name of the last driver on this chart?": "## Target type: {'Driver'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what driver was last on the list?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "who is the last cyclist listed?": "## Target type: {'Cyclist'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Cyclist of output_of_query3\nQuery4: \"get_information(relation='Cyclist', head_entity='output_of_query3')\"",
    "who is the last yachts skipper?": "## Target type: {skipper}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Skipper of output_of_query3\nQuery4: \"get_information(relation='Skipper', head_entity='output_of_query3')\"",
    "who is the first driver on the list?": "## Target type: {driver}\n## Query:\nStep1: Find the first row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "who is the owner of the first yacht on the list?": "## Target type: {owner}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the owner of output_of_query3\nQuery4: \"get_information(relation='Owner', head_entity='output_of_query3')\"",
    "what is the name of the last rider on this chart?": "## Target type: {rider}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "what was the highest number of fans in attendance?": "None",
    "which game had the largest attendance?": "## Target type: {game}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"",
    "what is the next largest attendance record after 74,854?": "None",
    "did the team win more home games or away games?": "None",
    "how many points did toronto have more than montreal in their first game?": "None",
    "which game was won by the largest margin?": "None",
    "who won by the most points at home?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Home\nQuery1: \"get_information(relation='Home')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Home points\nQuery3: \"get_information(relation='Home', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "what was the largest difference of points in a single game?": "None",
    "which margin of victory was the largest?": "None",
    "what playoff result occurred the most?": "None",
    "how many home games did toronto play?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Toronto as Home\nQuery1: \"get_information(relation='Home', tail_entity='Toronto')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are the wins for finland more/less than their losses at home?": "## Target type: {'Result'}\n## Query:\nStep1: Find the entity with the relation of Home team as Finland\nQuery1: \"get_information(relation='Home team', tail_entity='Finland')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the wins of output_of_query2\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Find the losses of output_of_query2\nQuery4: \"get_information(relation='Result', head_entity='output_of_query2')\"\nStep5: Find the count of wins of output_of_query3\nQuery5: \"count(set='output_of_query3')\"\nStep6: Find the count of losses of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the count of wins and losses\nQuery7: \"compare(output_of_query5, output_of_query6)\"",
    "who had the largest margin of winning?": "None",
    "did they win more and home or away?": "## Target type: {'Home/Away'}\n## Query:\nStep1: Find the entity with the relation of Result that starts with 'W'\nQuery1: \"get_information(relation='Result', value='W%')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Result that starts with 'L'\nQuery3: \"get_information(relation='Result', value='L%')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "which season has the least number of appearances?": "None",
    "which player has the most appearances with the club?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Appearances\nQuery1: \"get_information(relation='Appearances')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Appearances\nQuery3: \"get_information(relation='Appearances', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who played for the most years?": "## Target type: {player}\n## Query:\nStep1: Find the entity with relation of Years Played\nQuery1: \"get_information(relation='Years Played')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Years Played\nQuery3: \"get_information(relation='Years Played', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "for which team did this player have the least amount of games played?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Games\nQuery1: \"get_information(relation='Games')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Games\nQuery3: \"get_information(relation='Games', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what year did he score more goals than any other year?": "None",
    "who played the most amount of matches?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Matches played\nQuery1: \"get_information(relation='Matches played')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Matches played\nQuery3: \"get_information(relation='Matches played', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the total number of seasons that scott pfeifer was in second?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity named Scott Pfeifer\nQuery1: \"get_information(relation='Second', tail_entity='Scott Pfeifer')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "team he played most games with.": "None",
    "who had the most seasons in third?": "## Target type: {Third}\n## Query:\nStep1: Find the entity in Third that appears the most.\nQuery1: \"get_information(relation='Third', tail_entity>='most')\"\nStep2: Find the Third of output_of_query1.\nQuery2: \"get_information(relation='Third', head_entity='output_of_query1')\"",
    "how many seasons did the team score at least third?": "None",
    "how many years did this team become league champion?": "None",
    "how many years did the team finish the regular season in at least 4th place?": "None",
    "what was the team's playoff result in the year after being champions?": "None",
    "how many seasons did the team finish above .500 for winning percentage?": "None",
    "were they league champions at least 5 times?": "None",
    "when was the first year the team qualified for the playoffs?": "None",
    "how many years did they not qualify for the playoffs?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that Playoffs is \"Did not qualify\"\nQuery1: \"get_information(relation='Playoffs', tail_entity='Did not qualify')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wins did the team have before march 4,2005?": "None",
    "tell me the number of times they qualified for the playoffs.": "None",
    "how many consecutive wins did the team have in the regular season?": "None",
    "how long did the team stay in first place?": "None",
    "what is the number of years that the team did not qualify for playoffs?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that Playoffs is 'Did not qualify'\nQuery1: \"get_information(relation='Playoffs', tail_entity='Did not qualify')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what location had the most games?": "## Target type: {location}\n## Query:\nStep1: Find all the row_number.\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what is the total number of multiplayer maps released during this time?": "None",
    "which month were the least amount of games held in?": "None",
    "which games featured the least amount of events?": "## Target type: {'Games'}\n## Query:\nStep1: Find the entity with the relation of Events\nQuery1: \"get_information(relation='Events')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min events\nQuery3: \"get_information(relation='Events', tail_entity='output_of_query2')\"\nStep4: Find the games of output_of_query3\nQuery4: \"get_information(relation='Games', head_entity='output_of_query3')\"",
    "how many games were released for smartphones?": "None",
    "how many games were played?": "None",
    "where was the site of the first game?": "None",
    "how many areas were featured?": "## Target type: {number of areas}\n## Query:\nStep1: Find the entity named 'Area'\nQuery1: \"get_information(relation='Area')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year had the most game releases?": "## Target type: {year}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Release')\"\nStep2: Count the occurrences of each year\nQuery2: \"count(set='output_of_query1', group_by='output_of_query1')\"\nStep3: Find the year with the maximum count\nQuery3: \"argmax(set='output_of_query2')\"",
    "who is listed before jon taylor?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Jon Taylor\nQuery1: \"get_information(relation='Name', tail_entity='Jon Taylor')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who is listed before keith walker?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity named Keith Walker\nQuery1: \"get_information(relation='Wrestler', tail_entity='Keith Walker')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Wrestler of output_of_query4\nQuery5: \"get_information(relation='Wrestler', head_entity='output_of_query4')\"",
    "who is the presenter listed before chris jackson?": "## Target type: {presenter}\n## Query:\nStep1: Find the entity named Chris Jackson\nQuery1: \"get_information(relation='Presenter', tail_entity='Chris Jackson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Presenter of output_of_query4\nQuery5: \"get_information(relation='Presenter', head_entity='output_of_query4')\"",
    "who is below richard kuhn on the list?": "## Target type: {Laureate}\n## Query:\nStep1: Find the entity named Richard Kuhn\nQuery1: \"get_information(relation='Laureate', tail_entity='Richard Kuhn')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number below output_of_query2\nQuery3: \"next_row(set='output_of_query2')\" \nStep4: Find the entity with the row_number output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Laureate of output_of_query4\nQuery5: \"get_information(relation='Laureate', head_entity='output_of_query4')\"",
    "which player is listed previous to joe reekie?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Joe Reekie\nQuery1: \"get_information(relation='Player', tail_entity='Joe Reekie')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "whose name is listed before chris ashton?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Chris Ashton\nQuery1: \"get_information(relation='Name', tail_entity='Chris Ashton')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "whom is listed last?": "None",
    "who is listed before don randall?": "## Target type: {member}\n## Query:\nStep1: Find the entity named Don Randall\nQuery1: \"get_information(relation='Member', tail_entity='Don Randall')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Member of output_of_query4\nQuery5: \"get_information(relation='Member', head_entity='output_of_query4')\"",
    "who is next on the list after alexander krein?": "## Target type: {composer}\n## Query:\nStep1: Find the entity named Alexander Krein\nQuery1: \"get_information(relation='Composer', tail_entity='Alexander Krein')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Composer of output_of_query4\nQuery5: \"get_information(relation='Composer', head_entity='output_of_query4')\"",
    "which song of his reached number 1 in the us charts?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity in Chart Positions with value \"1\"\nQuery1: \"get_information(relation='Chart Positions', value='1')\"\nStep2: Find the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "compare \"i can go deep\" with \"don't rush\". which was higher on the us and us r&b charts?": "## Target type: {'Single'}\n## Query:\nStep1: Find the entity named \"I Can Go Deep\"\nQuery1: \"get_information(relation='Single', tail_entity='I Can Go Deep')\"\nStep2: Find the peak chart positions of output_of_query1\nQuery2: \"get_information(relation='Peak chart positions', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Don't Rush\"\nQuery3: \"get_information(relation='Single', tail_entity='Don't Rush')\"\nStep4: Find the peak chart positions of output_of_query3\nQuery4: \"get_information(relation='Peak chart positions', head_entity='output_of_query3')\"\nStep5: Get the comparison of output_of_query2 and output_of_query4\nQuery5: \"compare(output1='output_of_query2', output2='output_of_query4')\"",
    "how many songs reached position 1 at their highest point?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Highest Position equals 1\nQuery1: \"get_information(relation='Highest Position', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many albums had a higher position on either chart than 50?": "None",
    "which album by the magnetic fields reached higher than 100 on the billboard chart?": "None",
    "how many consecutive singles were released under the epic label?": "None",
    "what episode had the highest rating?": "## Target type: {'Air Date'}\n## Query:\nStep1: Find the entity with the relation of Rating\nQuery1: \"get_information(relation='Rating')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Rating\nQuery3: \"get_information(relation='Rating', tail_entity='output_of_query2')\"\nStep4: Find the Air Date of output_of_query3\nQuery4: \"get_information(relation='Air Date', head_entity='output_of_query3')\"",
    "what is the total number of episodes in the season?": "## Target type: {number}\n## Query:\nStep1: Find the entity in No. in season\nQuery1: \"get_information(relation='No. in\\\\nseason')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many episode total are there?": "None",
    "which episode is listed at the top of the list?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with relation row_number that is at the top of the list\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many viewers watched the season finale?": "## Target type: {number of viewers}\n## Query:\nStep1: Find the entity named Season Finale\nQuery1: \"get_information(relation='Title', tail_entity='Season Finale')\"\nStep2: Find the viewers of output_of_query1\nQuery2: \"get_information(relation='Viewers', head_entity='output_of_query1')\"",
    "how many times was there a loss by more than 5 points?": "None",
    "how many games were won by at least 5 points?": "None",
    "how many times was his average start below 20?": "## Target type: {number}\n## Query:\nStep1: Find the entity of Average Start that is below 20\nQuery1: \"get_information(relation='Avg. Start', tail_entity<'20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams scored at least 25 points or more?": "## Target type: {number}\n## Query:\nStep1: Find the teams with Points greater than or equal to 25\nQuery1: \"get_information(relation='Points', tail_entity>='25')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players have spans above three years?": "None",
    "in how many games did they score at least 30 points?": "None",
    "in how many games did they score at least twice as many points as their opponent?": "None",
    "what was the first gain on may 30th, 1963?": "## Target type: {gain}\n## Query:\nStep1: Find the entity with the relation of Date equals \"May 30, 1963\"\nQuery1: \"get_information(relation='Date', tail_entity='May 30, 1963')\"\nStep2: Find the gain of output_of_query1\nQuery2: \"get_information(relation='Gain', head_entity='output_of_query1')\"",
    "which candidate had the most votes?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity with the relation of Votes\nQuery1: \"get_information(relation='Votes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Votes\nQuery3: \"get_information(relation='Votes', tail_entity='output_of_query2')\"\nStep4: Find the candidate of output_of_query3\nQuery4: \"get_information(relation='Candidate', head_entity='output_of_query3')\"",
    "what is the number of democratic victories?": "None",
    "who had a higher percentage of the votes, clare g. fenerty or william h. wilson?": "None",
    "what number of elections were a democratic gain?": "None",
    "which candidate had the least votes by percentage?": "None",
    "which candidate came in first place, with the most votes?": "None",
    "who won on january 26, 1982 and may 27, 1982?": "None",
    "tell me the total number of votes the female candidates got.": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity with the relation of Gender as F (female)\nQuery1: \"get_information(relation='Gender', tail_entity='F')\"\nStep2: Find the Votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "was the match against allesandro campagna or andy souwer shorter?": "None",
    "who won the game the day before the january 5, 1994 game?": "## Target type: {Winning Team}\n## Query:\nStep1: Find the entity on Date January 5, 1994\nQuery1: \"get_information(relation='Date', tail_entity='January 5, 1994')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Winning Team of output_of_query4\nQuery5: \"get_information(relation='Winning Team', head_entity='output_of_query4')\"",
    "how many presidents served more than one year?": "None",
    "how many total senators are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "each president of the republic that served for 5 years served how many terms?": "None",
    "at most how many people took office their second time": "None",
    "how many senators were replaced between december 25, 1976, and january 2, 1977?": "## Target type: {number of senators}\n## Query:\nStep1: Find the entity that is December 25, 1976\nQuery1: \"get_information(relation='Date of successor\\'s formal installation', tail_entity='December 25, 1976')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that is January 2, 1977\nQuery3: \"get_information(relation='Date of successor\\'s formal installation', tail_entity='January 2, 1977')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the entities between the row_numbers output_of_query2 and output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity>='output_of_query2', head_entity<='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who was the last president to serve consecutive years?": "## Target type: {'Name of President'}\n## Query:\nStep1: Find the entity with the relation of Year of Presidency\nQuery1: \"get_information(relation='Year of Presidency')\"\nStep2: Sort the output_of_query1 in descending order\nQuery2: \"sort(set='output_of_query1', order='descending')\"\nStep3: Find the entity with the max Years of Presidency\nQuery3: \"get_information(relation='Year of Presidency', tail_entity='output_of_query2')\"\nStep4: Find the Name of President of output_of_query3\nQuery4: \"get_information(relation='Name of President', head_entity='output_of_query3')\"",
    "what is the total amount of senators i all departments?": "None",
    "how many louisiana state senators are democrats?": "## Target type: {number of senators}\n## Query:\nStep1: Find the entity with the relation of Party as Democrat\nQuery1: \"get_information(relation='Party', tail_entity='Democrat')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many democrats are in office?": "## Target type: {number of Democrats}\n## Query:\nStep1: Find the entity with the relation of Party as Democrat\nQuery1: \"get_information(relation='Party', tail_entity='Dem')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of rows in the first column with something in it?": "None",
    "how many total symbols are shown?": "None",
    "how many numbers start with 7 in the list?": "None",
    "what is the number of columns in the table?": "None",
    "what are the total number of terms in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of records at the start?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Record as Start\nQuery1: \"get_information(relation='Record', tail_entity='Start')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is listed last in the first column?": "None",
    "yosemite national park shares the same zip code with how many counties?": "None",
    "how many highways are near littlefield, arizona?": "None",
    "how many intersecting roads are there in rocky view county?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Rocky View County\nQuery1: \"get_information(relation='County', tail_entity='Rocky View County')\"\nStep2: Find the intersecting roads in output_of_query1\nQuery2: \"get_information(relation='Intersecting road', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "other than dixon, name a city in larimer county.": "## Target type: {Name of place}\n## Query:\nStep1: Find the entity that Principal county is Larimer County\nQuery1: \"get_information(relation='Principal county', tail_entity='Larimer County')\"\nStep2: Find the Name of place of output_of_query1\nQuery2: \"get_information(relation='Name of place', head_entity='output_of_query1')\"\nStep3: Get the set difference between output_of_query2 and \"Dixon\"\nQuery3: \"set_difference(set1='output_of_query2', set2=['Dixon'])\"\nStep4: Get any element from output_of_query3\nQuery4: \"set_element(set='output_of_query3')\"",
    "what county is just before del norte on the list?": "## Target type: {county}\n## Query:\nStep1: Find the entity named Del Norte\nQuery1: \"get_information(relation='County', tail_entity='Del Norte')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the County of output_of_query4\nQuery5: \"get_information(relation='County', head_entity='output_of_query4')\"",
    "which place has the highest number of counties?": "## Target type: {name of place}\n## Query:\nStep1: Find the entity with the relation of Number of counties\nQuery1: \"get_information(relation='Number of counties')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max counties\nQuery3: \"get_information(relation='Number of counties', tail_entity='output_of_query2')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Name of place', head_entity='output_of_query3')\"",
    "how many places have a larger amount that 1 county?": "## Target type: {number}\n## Query:\nStep1: Find the places that have a larger amount than 1 county\nQuery1: \"get_information(relation='Number of counties', tail_entity>'1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of counties are named for us presidents?": "None",
    "which jurisdiction has the most courthouses?": "None",
    "which county has the largest population?": "None",
    "how many counties have a population greater than 500,000?": "None",
    "what is the location of the only courthouse to be destroyed by fire?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Courthouse\nQuery1: \"get_information(relation='Courthouse')\"\nStep2: Find the entity with the relation of Dates of use is 1904\u20131948\nQuery2: \"get_information(relation='Dates of use', tail_entity='1904\u20131948')\"\nStep3: Find the entity with the relation of Street address\nQuery3: \"get_information(relation='Street address', head_entity='output_of_query2')\"\nStep4: Find the entity with the relation of City\nQuery4: \"get_information(relation='City', head_entity='output_of_query2')\"",
    "what was the total population of all 6 counties combined in 2009?": "None",
    "where is the location (city) of the last u.s. post office and court house on the chart?": "None",
    "who is the only ambassadors to honduras appointed by barack obama?": "## Target type: {ambassadors to honduras}\n## Query:\nStep1: Find the entity named Barack Obama\nQuery1: \"get_information(relation='Appointed by', tail_entity='Barack Obama')\"\nStep2: Find the ambassadors to honduras appointed by output_of_query1\nQuery2: \"get_information(relation='Ambassador to Honduras', head_entity='output_of_query1')\"",
    "who was the first ambassador the united states has sent to mexico?": "None",
    "who was the last senior advisor to be named in 2013?": "## Target type: {Name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which ambassador to honduras served the longest term?": "None",
    "which united states president appointed the most ambassador's to mexico": "None",
    "which envoy was the first appointed by woodrow wilson?": "## Target type: {envoy}\n## Query:\nStep1: Find the entity that Appointed by Woodrow Wilson\nQuery1: \"get_information(relation='Appointed by', tail_entity='Woodrow Wilson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first_row of output_of_query2\nQuery3: \"first_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "who was the last representative to take office?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Took Office\nQuery1: \"get_information(relation='Took Office')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Took Office\nQuery3: \"get_information(relation='Took Office', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who was mayor of seattle, washington before being appointed to department of transportation during the nixon administration?": "None",
    "who was the next appointed director after lee p. brown?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Lee P. Brown\nQuery1: \"get_information(relation='Name', tail_entity='Lee P. Brown')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who was the last president from the republican party?": "None",
    "which judge was last appointed by president truman?": "None",
    "who was the last flag bearer?": "None",
    "who was the last celebrity guest in the 2010 season?": "## Target type: {celebrity guest}\n## Query:\nStep1: Find the entity that has Original airdate in 2010\nQuery1: \"get_information(relation='Original airdate', tail_entity='2010')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\" \nStep4: Get the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Celebrity guest of output_of_query4\nQuery5: \"get_information(relation='Celebrity guest(s)', head_entity='output_of_query4')\"",
    "what was the date the last person on the list left office?": "## Target type: {date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Left office date of output_of_query3\nQuery4: \"get_information(relation='Left office', head_entity='output_of_query3')\"",
    "when was the last doctor who classics volume published?": "## Target type: {'Published'}\n## Query:\nStep1: Find the entity with the relation of Title\nQuery1: \"get_information(relation='Title')\"\nStep2: Get the max row_number of output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='Title', tail_entity='output_of_query2')\"\nStep4: Get the Published date of output_of_query3\nQuery4: \"get_information(relation='Published', head_entity='output_of_query3')\"",
    "when was his last match?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which club was represented the most?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Club\nQuery1: \"get_information(relation='Club')\"\nStep2: Find the club that appears the most\nQuery2: \"get_information(relation='Club', tail_entity>='most')\"",
    "which club scored the most points?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "what club has the most players?": "## Target type: {'Current Club'}\n## Query:\nStep1: Find all the Current Clubs\nQuery1: \"get_information(relation='Current Club')\"\nStep2: Find the entity that appears the most in Current Clubs\nQuery2: \"get_information(relation='Current Club', tail_entity>='most')\"",
    "which club had the least amount of points?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "which club had the most losses?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Lost\nQuery1: \"get_information(relation='Lost')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Losses\nQuery3: \"get_information(relation='Lost', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "which team won the most number of games?": "None",
    "which team had the most wins?": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the winner of output_of_query3\nQuery4: \"get_information(relation='winner', head_entity='output_of_query3')\"",
    "how many songs were produced by will.i.am?": "None",
    "how many tracks were produced by milanna miles and rick long?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Milanna Miles\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Milanna Miles')\"\nStep2: Find the entity that is Rick Long\nQuery2: \"get_information(relation='Producer(s)', tail_entity='Rick Long')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many titles are on the album?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tracks are in the album?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the track\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many singles were released after 2010?": "None",
    "how many songs from this album were produced by rick long?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity named Rick Long\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Rick Long')\"\nStep2: Calculate the count of the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many promotional releases were there?": "## Target type: {number of promotional releases}\n## Query:\nStep1: Find the entity named \"Promotional Releases\"\nQuery1: \"get_information(relation='Album', tail_entity='Promotional Releases')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tracks does the album have?": "## Target type: {number of tracks}\n## Query:\nStep1: Find all row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which film/show had the most award ceremonies?": "None",
    "which film/show only had two award ceremonies?": "None",
    "which film was before the audacity of democracy?": "## Target type: {film}\n## Query:\nStep1: Find the entity named \"The Audacity of Democracy\"\nQuery1: \"get_information(relation='Film', tail_entity='The Audacity of Democracy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what films had their weekend end dates in january?": "None",
    "in which ceremony did the film win the most awards?": "None",
    "what documentary film was produced before the year 2011 but after 2008?": "None",
    "what venue was before beijing, china?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is Beijing, China\nQuery1: \"get_information(relation='Venue', tail_entity='Beijing, China')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "which festival participated for three consecutive awards?": "None",
    "what is the name of the last festival?": "## Target type: {'Festival'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Festival of output_of_query3\nQuery4: \"get_information(relation='Festival', head_entity='output_of_query3')\"",
    "what was the location of the next event after the summer 1975 one?": "## Target type: {location}\n## Query:\nStep1: Find the entity that Dates is \"Summer 1975\"\nQuery1: \"get_information(relation='Dates', tail_entity='Summer 1975')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "what was the venue before dakar, senegal?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is Dakar, Senegal\nQuery1: \"get_information(relation='Venue', tail_entity='Dakar, Senegal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "where was the competition held immediately before the one in turkey?": "None",
    "when was the last premier date of academy fantasia?": "## Target type: {date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Premiere date of output_of_query3\nQuery4: \"get_information(relation='Premiere date', head_entity='output_of_query3')\"",
    "what are the total number of times the soviet union is listed under the gold column?": "None",
    "what are the number of times antonov is listed as the manufacturer?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Antonov\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Antonov')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of different teams listed on the chart": "## Target type: {number}\n## Query:\nStep1: Find all the teams listed on the chart\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive times was the opponent team shakhtar donetsk?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Shakhtar Donetsk\nQuery1: \"get_information(relation='Opponent team', tail_entity='Shakhtar Donetsk')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent team of output_of_query4\nQuery5: \"get_information(relation='Opponent team', head_entity='output_of_query4')\"\n\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what was the name of the last team listed on this chart?": "## Target type: {'Team'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what is the total number of seasons fc shakhtyor salihorsk had played in europe?": "None",
    "which is the last russian to be ranked?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Nation is Russian\nQuery1: \"get_information(relation='Nation', tail_entity='Russian')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max Rank\nQuery4: \"get_information(relation='Rank', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many titles does the last team on this chart have?": "## Target type: {number of titles}\n## Query:\nStep1: Find the last team on the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Titles of output_of_query3\nQuery4: \"get_information(relation='Titles', head_entity='output_of_query3')\"",
    "what time slot did the show have for its first 6 episodes?": "## Target type: {time slot}\n## Query:\nStep1: Find the row_number of the first 6 episodes\nQuery1: \"get_information(relation='row_number', tail_entity<='6')\"\nStep2: Find the time slot of output_of_query1\nQuery2: \"get_information(relation='Timeslot (EST)', head_entity='output_of_query1')\"",
    "how many aired in may?": "None",
    "what is the first show to play on monday mornings?": "## Target type: {'Program'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Program of output_of_query3\nQuery4: \"get_information(relation='Program', head_entity='output_of_query3')\"",
    "which episode aired first--\"birth of a legend\" or \"skeletons in the closest\"?": "None",
    "did the season finish at an earlier or later timeslot?": "None",
    "what was the first game of the year?": "## Target type: {'Game of the Year'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Game of the Year of output_of_query3\nQuery4: \"get_information(relation='Game of the Year', head_entity='output_of_query3')\"",
    "what is the date that the last ship was built?": "## Target type: {'Built'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Built of output_of_query3\nQuery4: \"get_information(relation='Built', head_entity='output_of_query3')\"",
    "which was the last ship in service?": "## Target type: {'Ship Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Ship Name of output_of_query3\nQuery4: \"get_information(relation='Ship Name', head_entity='output_of_query3')\"",
    "according to the chart what was the last ship built?": "## Target type: {'Ship'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Ship of output_of_query3\nQuery4: \"get_information(relation='Ship', head_entity='output_of_query3')\"",
    "what is the next ship after yamal?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity named Yamal\nQuery1: \"get_information(relation='Ship Name', tail_entity='Yamal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ship Name of output_of_query4\nQuery5: \"get_information(relation='Ship Name', head_entity='output_of_query4')\"",
    "what is the number of ships sold for scrap?": "## Target type: {number of ships}\n## Query:\nStep1: Find the entity with the relation of Fate contains 'scrap'\nQuery1: \"get_information(relation='Fate', value='scrap')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in years between the first ship put into service and the last?": "None",
    "what is the name of the last ship that was scrapped?": "None",
    "which year saw the most ships produced?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Year Built\nQuery1: \"get_information(relation='Year Built')\"\nStep2: Find the entity that appears the most\nQuery2: \"get_information(relation='Year Built', tail_entity>='most')\"\nStep3: Find the year of output_of_query2\nQuery3: \"get_information(relation='Year Built', head_entity='output_of_query2')\"",
    "what is the only cruise ship listed?": "None",
    "which ship is the only container ship listed?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity with the relation of Type that is \"Container Ship\"\nQuery1: \"get_information(relation='Type', tail_entity='Container Ship')\"\nStep2: Get the output_of_query1\nQuery2: \"get_information(relation='Ship Name', head_entity='output_of_query1')\"",
    "what hard drive has up to 1,200,000 iops but is not a ssd?": "None",
    "which license is listed more, os or c?": "## Target type: {license}\n## Query:\nStep1: Find the occurrences of 'OS' in the relation License\nQuery1: \"get_information(relation='Licence', tail_entity='OS')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the occurrences of 'C' in the relation License\nQuery3: \"get_information(relation='Licence', tail_entity='C')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts from output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "what is the number of multiplayer browser games released in 2003?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Release\nQuery1: \"get_information(relation='Release', tail_entity='2003')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was the release date gap between the xbox 360 release of overwatch and the playstation 3 release?": "None",
    "the version 2 spots after 0.8": "## Target type: {version}\n## Query:\nStep1: Find the entity with the relation Version that is 0.8\nQuery1: \"get_information(relation='Version', tail_entity='0.8')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Version of output_of_query4\nQuery5: \"get_information(relation='Version', head_entity='output_of_query4')\"",
    "how many beta versions were released before the first full release?": "None",
    "what is the name of the circuit with the least amount of sites?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Sites\nQuery1: \"get_information(relation='Sites')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Sites\nQuery3: \"get_information(relation='Sites', tail_entity='output_of_query2')\"\nStep4: Find the circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "how many were released after 2006-02-24?": "None",
    "which 16-bit cello version was released before june 10, 1993?": "None",
    "were drops 4-6 released on xbox 360 after they were released on playstation 3?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that Drop is 4-6\nQuery1: \"get_information(relation='Drop', tail_entity='4-6')\"\nStep2: Find the Xbox 360 release date of output_of_query1\nQuery2: \"get_information(relation='Xbox 360 release date', head_entity='output_of_query1')\"\nStep3: Find the entity that Drop is 4-6\nQuery3: \"get_information(relation='Drop', tail_entity='4-6')\"\nStep4: Find the PlayStation 3 release date of output_of_query3\nQuery4: \"get_information(relation='PlayStation 3 release date', head_entity='output_of_query3')\"\nStep5: Compare the release dates to determine if Xbox 360 release is after PlayStation 3 release\nQuery5: \"Xbox 360 release date > PlayStation 3 release date\"",
    "what is the last xbox 360 release date?": "## Target type: {'Xbox 360 release date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Xbox 360 release date of output_of_query3\nQuery4: \"get_information(relation='Xbox 360 release date', head_entity='output_of_query3')\"",
    "does the simple slc ssd have the same interface as the g.skill?": "None",
    "which position did the montreal alouettes fill with their draft previous to their draft of peter moore?": "None",
    "which team did they play first during this season?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "which team was the first one the black hawks lost to?": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Visitor team of output_of_query3\nQuery4: \"get_information(relation='Visitor', head_entity='output_of_query3')\"",
    "what was the date of the first game that the black hawks lost in the playoffs?": "None",
    "the team lost on november 14. what was the date of the previous loss?": "None",
    "which opponent did they play against before the play date of april 12?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity whose Date is \"April 12\"\nQuery1: \"get_information(relation='Date', tail_entity='April 12')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "22,303 people attende the game on october 7. how many were at the previous game?": "None",
    "which team played the same amount of seasons as the canadiens?": "None",
    "who was the next team that the boston bruins played after november 11?": "None",
    "on december 14 was the home team the chicago black hawks or the boston bruins?": "## Target type: {home team}\n## Query:\nStep1: Find the game on December 14\nQuery1: \"get_information(relation='Date', tail_entity='December 14')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home', head_entity='output_of_query1')\"",
    "was the game versus canada later than the game versus belgium?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity that is Canada\nQuery1: \"get_information(relation='Opponent Team', tail_entity='Canada')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number of the game versus Belgium\nQuery3: \"get_information(relation='row_number', tail_entity='Belgium')\"\nStep4: Check if output_of_query3 is less than output_of_query2\nQuery4: \"if(output_of_query3 < output_of_query2, 'yes', 'no')\"",
    "in 1931, which two ethnic groups were represented by at least 100,000 people within the population of the serbian banat?": "None",
    "in 2002, how many people in the serbian banat were either slovaks or romanians?": "None",
    "how many more hungarians lived in the serbian banat region than romanians in 1910?": "None",
    "what was the first year that the romanian population was less than 51,000?": "None",
    "what year was the highest population recorded in northern dobruja?": "None",
    "what was the difference between the number of germans living in the serbian banat in 1931 and 1948?": "None",
    "which year had the top percentage in romanian population?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Romanian population\nQuery1: \"get_information(relation='Romanians')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Romanian population\nQuery3: \"get_information(relation='Romanians', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "in what year was there the largest percentage of hungarians?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Hungarians\nQuery1: \"get_information(relation='Hungarians')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Hungarians\nQuery3: \"get_information(relation='Hungarians', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the first census that saw a russian population of over 2,000?": "None",
    "what was the last year that romanians were 5,5%?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Romanians\nQuery1: \"get_information(relation='Romanians')\"\nStep2: Find the last row_number of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Find the Romanians with the percentage of 5.5\nQuery5: \"get_information(relation='Romanians', tail_entity='5.5%')\"\nStep6: Find the Year of output_of_query5\nQuery6: \"get_information(relation='Year', head_entity='output_of_query5')\"",
    "in 2002 did rasnov have more than 10000 people?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Rasnov\nQuery1: \"get_information(relation='Name', tail_entity='Rasnov')\"\nStep2: Find the population in 2002 of output_of_query1\nQuery2: \"get_information(relation='Population (2002 census)', head_entity='output_of_query1')\"\nStep3: Check if the population in 2002 of output_of_query1 is more than 10000\nQuery3: \"if(output_of_query2 > 10000, 'yes', 'no')\"",
    "what were the total number of times the romanians had a population percentage above 70%?": "None",
    "which year is previous to the year that had 74.1% in romanian population?": "## Target type: {year}\n## Query:\nStep1: Find the year that had 74.1% in Romanian population\nQuery1: \"get_information(relation='Romanians', tail_entity='74.1%')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "which year had a total of 6,981 and 19.4% hungarians?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the entity with the relation of Hungarians\nQuery2: \"get_information(relation='Hungarians')\"\nStep3: Find the entity with the relation of Year\nQuery3: \"get_information(relation='Year')\"\nStep4: Find the entity with the relation of Total equals 6,981\nQuery4: \"get_information(relation='Total', tail_entity='6,981')\"\nStep5: Find the entity with the relation of Hungarians equals 19.4%\nQuery5: \"get_information(relation='Hungarians', tail_entity='19.4%')\"\nStep6: Get the intersection of output_of_query4 and output_of_query5\nQuery6: \"set_intersection(set1='output_of_query4', set2='output_of_query5')\"",
    "what percent of the population were romanians according to the last year on this chart?": "## Target type: {percent}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Year\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Find the percent of Romanians in output_of_query3\nQuery4: \"get_information(relation='Romanians', head_entity='output_of_query3')\"",
    "how many individuals held the office within this table?": "None",
    "give the number of players covered by the table.": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tables are in asia?": "## Target type: {number of tables}\n## Query:\nStep1: Find the entities with the relation of Region as Asia\nQuery1: \"get_information(relation='Region', tail_entity='Asia')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many records are on the table?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are there more or less than 8 columns in the table?": "None",
    "how many different teams are represented in the table?": "None",
    "what is the total number of players listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Player\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "were there more locations in mexico or the usa?": "## Target type: {'Location'}\n## Query:\nStep1: Find the number of locations in Mexico\nQuery1: \"get_information(relation='Location', tail_entity='Mexico')\"\nStep2: Find the number of locations in the USA\nQuery2: \"get_information(relation='Location', tail_entity='USA')\"\nStep3: Compare the number of output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "how many matches were played in mexico?": "None",
    "how many swimmers are from mexico?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mexico\nQuery1: \"get_information(relation='Country', tail_entity='Mexico')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which ranking is mexico?": "## Target type: {ranking}\n## Query:\nStep1: Find the entity that is Mexico\nQuery1: \"get_information(relation='Nation', tail_entity='Mexico')\"\nStep2: Get the ranking of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"",
    "how many partners from spain are listed?": "None",
    "who was the next to last winner of the mexican grand prix?": "None",
    "how many matches were held in mexico city?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Location contains \"Mexico City\"\nQuery1: \"get_information(relation='Location', tail_entity>='Mexico City')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total fights took place in mexico city, mexico?": "## Target type: {number}\n## Query:\nStep1: Find the entity where Location is Mexico City, Mexico\nQuery1: \"get_information(relation='Location', tail_entity='Mexico City, Mexico')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many managers from uruguay?": "None",
    "are there more special indigenous or campesino deputies from cochabamba or chuquisaca?": "## Target type: {answer}\n## Query:\nStep1: Find the entity for Cochabamba\nQuery1: \"get_information(relation='Department', tail_entity='Cochabamba')\"\nStep2: Find the entity for Chuquisaca\nQuery2: \"get_information(relation='Department', tail_entity='Chuquisaca')\"\nStep3: Find the number of Special Indigenous or Campesino Deputies from output_of_query1\nQuery3: \"get_information(relation='Special Indigenous or Campesino Deputies', head_entity='output_of_query1')\"\nStep4: Find the number of Special Indigenous or Campesino Deputies from output_of_query2\nQuery4: \"get_information(relation='Special Indigenous or Campesino Deputies', head_entity='output_of_query2')\"\nStep5: Compare the number of Special Indigenous or Campesino Deputies from output_of_query1 and output_of_query2\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "which is the only year that mexico is on a venue": "None",
    "what number of the athletes are from spain?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Nationality', tail_entity='Spain')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is taller, the delegate from jalapa or from villa nueva?": "None",
    "what is the name of the first women's winner?": "None",
    "what was the last year that they received first?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Position is \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the max year of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what was the first year she won a nomination?": "## Target type: {year}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the first year that the country of the men's winner was the same as the country of the women's winner?": "None",
    "in which year did she have the least amount of awards or nominations?": "None",
    "his/ her efforts awarded them the 416th oak leaves?": "None",
    "what nationality was the woman who won first place?": "None",
    "what was the name of the honor/award title given after the international kim il sung prize certificate?": "None",
    "whose name is listed before mary zorn's?": "None",
    "what was the total number of times she was nominated but did not win an award?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Result as \"Nominated\"\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Find the entity with the relation of Result as \"Won\"\nQuery2: \"get_information(relation='Result', tail_entity='Won')\"\nStep3: Find the set difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who was the first person to be nominated but not win?": "None",
    "what year only had one other finalist?": "None",
    "in what year was the last nomination received?": "## Target type: {year}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "when did she first win first place?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Result as '1st'\nQuery1: \"get_information(relation='Result', tail_entity='1st')\"\nStep2: Get the min Year of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "which year was the most honors/award titles given?": "None",
    "how many albums are there?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the schema\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many compilation albums are there?": "None",
    "how many total songs are on this album?": "## Target type: {number of songs}\n## Query:\nStep1: Find the Original Album name\nQuery1: \"get_information(relation='Original Album')\"\nStep2: Find the row with the Original Album name\nQuery2: \"get_information(relation='Original Album', tail_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the total number of songs on this album\nQuery4: \"count(set='output_of_query3')\"",
    "how many tracks are in this album?": "## Target type: {number}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Track of output_of_query3\nQuery4: \"get_information(relation='Track', head_entity='output_of_query3')\"",
    "what is the name of the album that was first to be released?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "what is the total number of operation?": "## Target type: {number}\n## Query:\nStep1: Find all the Operation entities\nQuery1: \"get_information(relation='Operation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are the most trains operational or do they have another status listed?": "## Target type: {status}\n## Query:\nStep1: Find the entity with maximum row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the status of output_of_query1\nQuery2: \"get_information(relation='Current status', head_entity='output_of_query1')\"",
    "how many times was the total number of passengers at least 800,000 or more?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Total passengers\nQuery1: \"get_information(relation='Total passengers')\"\nStep2: Find the Total passengers that is at least 800,000\nQuery2: \"get_information(relation='Total passengers', tail_entity>='800000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which party had its first leader in 1974 and last leader in 1980?": "None",
    "who was the previous minister of the new democracy party from 2007?": "None",
    "who was not last elected in either 2005 or 2009?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Last elected in 2005\nQuery1: \"get_information(relation='Last elected', tail_entity='2005')\"\nStep2: Find the entity with the relation of Last elected in 2009\nQuery2: \"get_information(relation='Last elected', tail_entity='2009')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity with the relation of row_number\nQuery4: \"get_information(relation='row_number')\"\nStep5: Get the negation of output_of_query3\nQuery5: \"set_negation(set='output_of_query3')\"\nStep6: Find the entity with the relation of Name of output_of_query5\nQuery6: \"get_information(relation='Name', head_entity='output_of_query5')\"",
    "who took office in 2000?": "None",
    "who was the first new democracy member to hold this office?": "None",
    "what political party did joseph-enoil michaud belong to?": "## Target type: {political party}\n## Query:\nStep1: Find the entity named Joseph-Enoil Michaud\nQuery1: \"get_information(relation='Name', tail_entity='Joseph-Enoil Michaud')\"\nStep2: Find the political party of output_of_query1\nQuery2: \"get_information(relation='Political party', head_entity='output_of_query1')\"",
    "which party has had the most leaders?": "None",
    "who was president before mamadou tandja?": "None",
    "who was the first minister to take office in 2000?": "None",
    "which party has had the most group leaders?": "None",
    "how many seats were won by the social democratic party in 1994?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity in Election year that is 1994\nQuery1: \"get_information(relation='Election year', tail_entity='1994')\"\nStep2: Find the seats won by output_of_query1\nQuery2: \"get_information(relation='# of overall seats won', head_entity='output_of_query1')\"",
    "who had the most seats after the election?": "None",
    "who was minister previous to sioufas?": "None",
    "how long did fabien pelous serve as captain in the french national rugby team?": "None",
    "what was the number of finalist in the first season?": "None",
    "which group had the most members?": "None",
    "how many participants sang english language songs?": "## Target type: {number of participants}\n## Query:\nStep1: Find the participants with the Language as English\nQuery1: \"get_information(relation='Language', tail_entity='English')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of individuals in this group who were indian?": "## Target type: {number of individuals}\n## Query:\nStep1: Find the entity with the relation of Nationality that is Indian\nQuery1: \"get_information(relation='Nationality', tail_entity='Indian')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year had the top number of contestants competing for the title?": "None",
    "how many members in total?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Member\nQuery1: \"get_information(relation='Member')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of films that won awards?": "None",
    "what is the largest number of films?": "None",
    "what is the total number of awards that the film won or was nominated for?": "## Target type: {number of awards}\n## Query:\nStep1: Find the row with row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films are there in total?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films are listed in this filmography?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films were released?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which film/show is listed the least on this chart?": "## Target type: {film/show}\n## Query:\nStep1: Find all the films/shows in the chart\nQuery1: \"get_information(relation='Film/Show')\"\nStep2: Count the occurrences of each film/show\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the film/show with the least occurrences\nQuery3: \"get_information(relation='Film/Show', tail_entity>='least')\"",
    "how many films were there in 2010 and 2012?": "## Target type: {number of films}\n## Query:\nStep1: Find the films in 2010\nQuery1: \"get_information(relation='YEAR', tail_entity='2010')\"\nStep2: Find the films in 2012\nQuery2: \"get_information(relation='YEAR', tail_entity='2012')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of movies he made in 2010?": "## Target type: {number of movies}\n## Query:\nStep1: Find the entity whose year is 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which institution has the most research funding?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of Research funding (\u00a3,000)\nQuery1: \"get_information(relation='Research funding (\u00a3,000)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Research funding\nQuery3: \"get_information(relation='Research funding (\u00a3,000)', tail_entity='output_of_query2')\" \nStep4: Find the institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "which country took the least amount of time?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Result\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "which competition appears the most on the table?": "## Target type: {competition}\n## Query:\nStep1: Find the entity in Competition that appears the most.\nQuery1: \"get_information(relation='Competition', tail_entity>='most')\"\nStep2: Find the Competition of output_of_query1.\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "which had the least amount of time?": "None",
    "which two destinations were available for less than one year?": "None",
    "which competition occurred the most?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Find the entity that occurs the most in output_of_query1\nQuery2: \"get_information(relation='Competition', tail_entity>='most')\"",
    "which has the least number or academic staff?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of Academic staff\nQuery1: \"get_information(relation='Academic staff')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Academic staff\nQuery3: \"get_information(relation='Academic staff', tail_entity='output_of_query2')\"\nStep4: Get the Institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "which bbc station had cost the most to run in 2012/13?": "None",
    "which university has the least in endowment?": "## Target type: {university}\n## Query:\nStep1: Find the entity with the relation of 2013 Endowment\nQuery1: \"get_information(relation='2013 Endowment')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min endowment\nQuery3: \"get_information(relation='2013 Endowment', tail_entity='output_of_query2')\"\nStep4: Find the institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "did marcus hellner or jean-marc gaillard rank tenth?": "## Target type: {'rank'}\n## Query:\nStep1: Find the entity named Marcus Hellner\nQuery1: \"get_information(relation='Athlete', tail_entity='Marcus Hellner')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Jean-Marc Gaillard\nQuery3: \"get_information(relation='Athlete', tail_entity='Jean-Marc Gaillard')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 equals to '10' or output_of_query4 equals to '10'\nQuery5: \"output_of_query2 == '10' or output_of_query4 == '10'\"",
    "who is ranked after wayne gretzky?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Wayne Gretzky\nQuery1: \"get_information(relation='Name', tail_entity='Wayne Gretzky')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who is ranked first?": "None",
    "who is ranked previous to don cherry?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Don Cherry\nQuery1: \"get_information(relation='Name', tail_entity='Don Cherry')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "did austria or russia rank higher?": "## Target type: {country}\n## Query:\nStep1: Find the entities with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Find the entity with the relation of Nationality as Austria\nQuery2: \"get_information(relation='Nationality', tail_entity='Austria')\"\nStep3: Find the entity with the relation of Nationality as Russia\nQuery3: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep4: Check if the output_of_query2 is ranked higher than output_of_query3\nQuery4: \"output_of_query2 > output_of_query3\"",
    "who placed the highest, italy or germany?": "## Target type: {country}\n## Query:\nStep1: Find the row_number for Italy\nQuery1: \"get_information(relation='Team', tail_entity='Italy')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the row_number for Germany\nQuery3: \"get_information(relation='Team', tail_entity='Germany')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Compare the rank of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query2', set2='output_of_query4', comparison='highest')\"",
    "who was the next ranked competitor after dior delophont and ligia grozav?": "None",
    "was australia or france higher ranked?": "## Target type: {'Rank'}\n## Query:\nStep1: Find the entity with the relation of Country as Australia\nQuery1: \"get_information(relation='Country', tail_entity='Australia')\"\nStep2: Find the Rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Country as France\nQuery3: \"get_information(relation='Country', tail_entity='France')\"\nStep4: Find the Rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 > output_of_query4\nQuery5: \"set1 > set2\"",
    "germany and the netherlands tied for what rank?": "None",
    "who was the next ranked athlete after the bronze medalist?": "None",
    "who ranked next after federica brignone?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Federica Brignone\nQuery1: \"get_information(relation='Name', tail_entity='Federica Brignone')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the number of products that were introduced in 2010?": "None",
    "which countries did not produce more than 1,000 in the year 2006?": "None",
    "how many albums/singles were released after the year 2000?": "None",
    "how many were withdrawn during the year 2002?": "None",
    "the only two teir 4 years were 2008/09 and what other year?": "None",
    "what year is after 1997?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Year is 1997\nQuery1: \"get_information(relation='Year', tail_entity='1997')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "how many years after \"i can't get no... edelweiss\" did the single \"bring me edelweiss\" (remix) appear?": "## Target type: {number of years}\n## Query:\nStep1: Find the row_number of \"I can't get no... Edelweiss\"\nQuery1: \"get_information(relation='Single', tail_entity='I can\\'t get no... Edelweiss')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the row_number of \"Bring me Edelweiss\" (remix)\nQuery3: \"get_information(relation='Single', tail_entity='Bring me Edelweiss (remix)')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(value='output_of_query4', value='output_of_query2')\"",
    "which years was a ranking below 200 achieved?": "None",
    "count how many different classes of ships were launched.": "None",
    "how many ships had more then 7,000 in tonnage?": "## Target type: {number of ships}\n## Query:\nStep1: Find the ships with tonnage more than 7,000\nQuery1: \"get_information(relation='Tonnage', tail_entity>'7000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average number of ship launches during the year 1929?": "None",
    "what ship's tonnage is at most 70,000?": "## Target type: {ship}\n## Query:\nStep1: Find the ships with tonnage at most 70,000\nQuery1: \"get_information(relation='Tonnage', head_entity='70,000')\"\nStep2: Find the ship with the largest tonnage in output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the tonnage of output_of_query2\nQuery3: \"get_information(relation='Tonnage', tail_entity='output_of_query2')\"",
    "what is the number of marriages on the chart": "None",
    "how many total seasons are given in the chart?": "None",
    "what was the number of tonnage for sweden?": "None",
    "give the number of ships that were launched in 1878.": "None",
    "what is the number of tournaments listed on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which ship has the top amount of tonnage?": "## Target type: {ship}\n## Query:\nStep1: Find the entity with the relation of Tonnage\nQuery1: \"get_information(relation='Tonnage')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Tonnage\nQuery3: \"get_information(relation='Tonnage', tail_entity='output_of_query2')\"\nStep4: Find the ship of output_of_query3\nQuery4: \"get_information(relation='Name of ship', head_entity='output_of_query3')\"",
    "during which year were the most ships completed?": "None",
    "how many times total did they finish first": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place as first\nQuery1: \"get_information(relation='Place', tail_entity='first')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did any country have consecutive winners in the race?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of No\nQuery1: \"get_information(relation='No')\"\nStep2: Get the unique set of output_of_query1\nQuery2: \"unique(set='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Check if the count of output_of_query3 is larger than 1\nQuery4: \"check_if_larger(count='output_of_query3', num=1)\"",
    "who on the list has the highest number of consecutive wins?": "None",
    "who had the most wins?": "None",
    "which racing series has the highest total of winners?": "## Target type: {'Racing series'}\n## Query:\nStep1: Find all the Racing series\nQuery1: \"get_information(relation='Racing series')\"\nStep2: Find the winners of each Racing series\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"\nStep3: Calculate the count of winners for each Racing series\nQuery3: \"count(set='output_of_query2', by='output_of_query1')\"\nStep4: Find the Racing series with the highest count\nQuery4: \"argmax(set='output_of_query3')\"",
    "name a racer that was the winning rider in two consecutive races.": "None",
    "in which years did he lead the race the least?": "None",
    "which racer won the most races?": "## Target type: {racer}\n## Query:\nStep1: Find the entity in Winner that appears the most.\nQuery1: \"get_information(relation='Winner', tail_entity>='most')\"\nStep2: Find the Winner of output_of_query1.\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "how many marathons was the result a first place finish?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Event is Marathon\nQuery1: \"get_information(relation='Event', tail_entity='Marathon')\"\nStep2: Find the entity with the relation of Position is '1st'\nQuery2: \"get_information(relation='Position', tail_entity='1st')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of team ?": "None",
    "what is the total number of team?": "## Target type: {number}\n## Query:\nStep1: Find all the teams\nQuery1: \"get_information(relation='Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of teams?": "## Target type: {number of teams}\n## Query:\nStep1: Find all the entities with the relation of Team\nQuery1: \"get_information(relation='Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of teams listed?": "## Target type: {number of teams}\n## Query:\nStep1: Find all the home teams\nQuery1: \"get_information(relation='Home team')\"\nStep2: Find all the away teams\nQuery2: \"get_information(relation='Away team')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total amount of players?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Player\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of matches?": "None",
    "what are the total number of teams on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the teams on the chart\nQuery1: \"get_information(relation='Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which group had the most percent of total population in 2005?": "None",
    "what is the highest percentage of speakers other than polish?": "None",
    "which country as the most people on average?": "None",
    "in 2005, what city had the most population recorded?": "None",
    "how many ethnicities were below 1,000 people in 2007?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of 2007 estimate\nQuery1: \"get_information(relation='2007 estimate')\"\nStep2: Find the entities with the value below 1,000 in output_of_query1\nQuery2: \"get_information(relation='2007 estimate', value<='1000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what language has the most films?": "## Target type: {language}\n## Query:\nStep1: Find the entity in the relation Language that appears the most.\nQuery1: \"get_information(relation='Language', tail_entity>='most')\"\nStep2: Find the films of output_of_query1.\nQuery2: \"get_information(relation='Language', head_entity='output_of_query1')\"",
    "how many different languages are listed?": "## Target type: {number of languages}\n## Query:\nStep1: Find all the Most spoken language\nQuery1: \"get_information(relation='Most spoken language')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which sum had the greatest population change from 2005 to 2009?": "None",
    "which year saw the highest drop in total passengers from the previous year?": "None",
    "the least number of passengers came from which city": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Passengers\nQuery1: \"get_information(relation='Passengers')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Passengers\nQuery3: \"get_information(relation='Passengers', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which year had the most domestic passengers?": "None",
    "how many years did international passengers number at least 100,000?": "## Target type: {number of years}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the relation of International passengers that is at least 100,000\nQuery2: \"get_information(relation='International passengers', tail_entity>='100000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which aircraft has the top number of aircraft in service?": "None",
    "for how many consecutive years did oulu airport see an increase in total passengers?": "None",
    "what is listed as the passenger percentage difference for the year 2011?": "## Target type: {'Change'}\n## Query:\nStep1: Find the entity with the relation of Year is 2011\nQuery1: \"get_information(relation='Year', tail_entity='2011')\"\nStep2: Get the Change of output_of_query1\nQuery2: \"get_information(relation='Change', head_entity='output_of_query1')\"",
    "which is the only nation to win a gold medal and nothing else?": "None",
    "name the nations that won at least 2 gold medals.": "None",
    "how many nations won at least two gold medals?": "None",
    "how many have won at least 2 gold medals?": "## Target type: {number}\n## Query:\nStep1: Find the entities with at least 2 gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which nations won only 1 gold medal?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold', tail_entity='1')\"\nStep2: Find the nations with output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many threads per inch does a 9/16 have?": "## Target type: {threads per inch}\n## Query:\nStep1: Find the entity with the Whitworth size of 9/16\nQuery1: \"get_information(relation='Whitworth size', tail_entity='9/16')\"\nStep2: Find the threads per inch of output_of_query1\nQuery2: \"get_information(relation='Threads per inch', head_entity='output_of_query1')\"",
    "what is the top amount of threads per inch?": "## Target type: {threads per inch}\n## Query:\nStep1: Find the entity with the relation of Threads per inch\nQuery1: \"get_information(relation='Threads per inch')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many more threads per inch does the 1/16th whitworth size have over the 1/8th whitworth size?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Whitworth size equal to \"1/16\"\nQuery1: \"get_information(relation='Whitworth size', tail_entity='1/16')\"\nStep2: Find the Threads per inch of output_of_query1\nQuery2: \"get_information(relation='Threads per inch', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Whitworth size equal to \"1/8\"\nQuery3: \"get_information(relation='Whitworth size', tail_entity='1/8')\"\nStep4: Find the Threads per inch of output_of_query3\nQuery4: \"get_information(relation='Threads per inch', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(a='output_of_query2', b='output_of_query4')\"",
    "which whitworth size has the same number of threads per inch as 3/16?": "None",
    "which whitworth size is the only one with 5 threads per inch?": "## Target type: {Whitworth size}\n## Query:\nStep1: Find the entity with relation Threads per inch equals to 5\nQuery1: \"get_information(relation='Threads per inch', tail_entity='5')\"\nStep2: Find the Whitworth size of output_of_query1\nQuery2: \"get_information(relation='Whitworth size', head_entity='output_of_query1')\"",
    "what is the core diameter of the last whitworth thread size?": "## Target type: {'Core diameter'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Whitworth size of output_of_query3\nQuery4: \"get_information(relation='Whitworth size', head_entity='output_of_query3')\"\nStep5: Get the core diameter of output_of_query3\nQuery5: \"get_information(relation='Core diameter', head_entity='output_of_query3')\"",
    "how many other models are the same length as the m1898 carbine?": "None",
    "which chip has the larger flash size, at90s/ls4434 or at90s8515?": "## Target type: {chip}\n## Query:\nStep1: Find the entity named AT90S/LS4434\nQuery1: \"get_information(relation='Chip', tail_entity='AT90S/LS4434')\"\nStep2: Find the flash size of output_of_query1\nQuery2: \"get_information(relation='Flash size', head_entity='output_of_query1')\"\nStep3: Find the entity named AT90S8515\nQuery3: \"get_information(relation='Chip', tail_entity='AT90S8515')\"\nStep4: Find the flash size of output_of_query3\nQuery4: \"get_information(relation='Flash size', head_entity='output_of_query3')\"\nStep5: Compare the flash sizes of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 > output_of_query4, output_of_query2, output_of_query4)\"",
    "what is the next highest hard drive available after the 30gb model?": "None",
    "what is the number of rifles listed that have a weight higher than 9.0 lb.": "None",
    "which is wider; the blackmagic pocket cinema camera or the 1/2.7\"?": "None",
    "which has a larger diagonal: super 8mm film or imax?": "None",
    "how many staples have more than 5 grams of fiber?": "None",
    "what is the flash size difference in the at90s8515 chip and the at90s4414?": "## Target type: {flash size difference}\n## Query:\nStep1: Find the entity named AT90S8515\nQuery1: \"get_information(relation='Chip', tail_entity='AT90S8515')\"\nStep2: Find the flash size of output_of_query1\nQuery2: \"get_information(relation='Flash size', head_entity='output_of_query1')\"\nStep3: Find the entity named AT90S4414\nQuery3: \"get_information(relation='Chip', tail_entity='AT90S4414')\"\nStep4: Find the flash size of output_of_query3\nQuery4: \"get_information(relation='Flash size', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtract(value1='output_of_query2', value2='output_of_query4'))\"",
    "how long was the m1894 rifle's barrel?": "## Target type: {barrel length}\n## Query:\nStep1: Find the entity named M1894 Rifle\nQuery1: \"get_information(relation='Model', tail_entity='M1894 Rifle')\"\nStep2: Find the barrel length of output_of_query1\nQuery2: \"get_information(relation='Barrel length', head_entity='output_of_query1')\"",
    "who received the lowest number of points?": "None",
    "what was the least points scored by the winning team?": "None",
    "what artist received the least amount of points in the competition?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "what was the total number of deductions for the runner-up?": "## Target type: {deductions score}\n## Query:\nStep1: Find the entity with the relation of Result is Runner-up\nQuery1: \"get_information(relation='Result', tail_entity='Runner-up')\"\nStep2: Find the deductions of output_of_query1\nQuery2: \"get_information(relation='Deductions', head_entity='output_of_query1')\"",
    "which team was the runner up the most times?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Runners-up\nQuery1: \"get_information(relation='Runners-up')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Runners-up\nQuery3: \"get_information(relation='Runners-up', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what was the least position won?": "None",
    "what did he do more - win or finish as a runner-up?": "None",
    "who was the winning team the most number of times?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winning team\nQuery1: \"get_information(relation='Winning team')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Winning team', tail_entity>='most')\"\nStep3: Find the Winning team of output_of_query2\nQuery3: \"get_information(relation='Winning team', head_entity='output_of_query2')\"",
    "who is the most team with wins?": "None",
    "which team has the most wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winners\nQuery1: \"get_information(relation='Winners')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max wins\nQuery3: \"get_information(relation='Winners', tail_entity='output_of_query2')\"",
    "which league won the most consecutive years?": "## Target type: {league}\n## Query:\nStep1: Find the consecutive years with the same Finish\nQuery1: \"get_information(relation='Finish')\"\nStep2: Find the max consecutive years\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max consecutive years\nQuery3: \"get_information(relation='Finish', tail_entity='output_of_query2')\"\nStep4: Find the League of output_of_query3\nQuery4: \"get_information(relation='League', head_entity='output_of_query3')\"",
    "how many songs were not on albums, being only released as a single?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Album is 'singles only'\nQuery1: \"get_information(relation='Album', tail_entity='singles only')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs were a \"single-only release\"?": "## Target type: {number of songs}\n## Query:\nStep1: Find the songs with the relation of Album and Title is \"single-only release\"\nQuery1: \"get_information(relation='Album', tail_entity='single-only release')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs scored less than 10 points?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Find the songs with less than 10 points\nQuery2: \"get_information(relation='Points', tail_entity<'10')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many tracks were single-only releases?": "## Target type: {number of tracks}\n## Query:\nStep1: Find the entity that is \"Single-only releases\"\nQuery1: \"get_information(relation='Album', tail_entity='Single-only releases')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many teams won by at least three points?": "None",
    "how many winning scores were at least 3?": "None",
    "how many points did the first place finisher receive?": "## Target type: {points}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"",
    "what is the average total score for the first three teams?": "## Target type: {average total score}\n## Query:\nStep1: Find the row_numbers of the first three teams\nQuery1: \"get_information(relation='row_number', tail_entity<='3')\"\nStep2: Find the total scores of output_of_query1\nQuery2: \"get_information(relation='Total score', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "how many medals were won by the top three teams?": "## Target type: {number of medals}\n## Query:\nStep1: Find the row_number of the team that has Rank 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the row_number of the team that has Rank 2\nQuery3: \"get_information(relation='Rank', tail_entity='2')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Find the row_number of the team that has Rank 3\nQuery5: \"get_information(relation='Rank', tail_entity='3')\"\nStep6: Find the total medals of output_of_query5\nQuery6: \"get_information(relation='Total', head_entity='output_of_query5')\"\nStep7: Calculate the total number of medals\nQuery7: \"calculation(operation='add', operands=['output_of_query2', 'output_of_query4', 'output_of_query6'])\"",
    "how many games were won by more than 3 points?": "None",
    "how many total wins were recorded on the table?": "None",
    "how many wins were before their win on october 26?": "None",
    "what is the total number of times brazil and argentina did not win gold?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Gold is Brazil\nQuery1: \"get_information(relation='Gold', tail_entity='Brazil')\"\nStep2: Find the entity that Gold is Argentina\nQuery2: \"get_information(relation='Gold', tail_entity='Argentina')\"\nStep3: Get the negation of output_of_query1\nQuery3: \"set_negation(set='output_of_query1')\"\nStep4: Get the negation of output_of_query2\nQuery4: \"set_negation(set='output_of_query2')\"\nStep5: Get the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which country holds the top gold metals?": "## Target type: {country}\n## Query:\nStep1: Find the entity in Rank that is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what was the difference between the gold medal count of brazil and argentina?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the gold medal count of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity that is Argentina\nQuery3: \"get_information(relation='Nation', tail_entity='Argentina')\"\nStep4: Find the gold medal count of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who won more gold medals, brazil or china?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named China\nQuery3: \"get_information(relation='Nation', tail_entity='China')\"\nStep4: Find the gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Compare the gold medals of output_of_query2 and output_of_query4\nQuery5: \"if_greater(set1='output_of_query2', set2='output_of_query4', value_if_true=output_of_query1, value_if_false=output_of_query3)\"",
    "who had the next highest number of gold medals after the unites states?": "None",
    "which country has brought home the most gold?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Find the entity with the most Gold\nQuery2: \"get_information(relation='Gold', tail_entity>='most')\"\nStep3: Find the country of output_of_query2\nQuery3: \"get_information(relation='Gold', head_entity='output_of_query2')\"",
    "how many nations scored more total medals than brazil?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entities whose total medals are larger than output_of_query2\nQuery3: \"get_information(relation='Total', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many gold's has brazil won?": "## Target type: {number}\n## Query:\nStep1: Find the entity that represents Brazil\nQuery1: \"get_information(relation='Gold', tail_entity='Brazil')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after 1994 which airline was the next to commence operations?": "None",
    "which airlines have not commenced operations as of 2013?": "None",
    "how many airlines commenced operation after 2006?": "## Target type: {number of airlines}\n## Query:\nStep1: Find the entity with the relation of Commenced Operations\nQuery1: \"get_information(relation='Commenced Operations')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Commenced Operations', tail_entity>'2006')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the name of the only airline that commenced operations in 2005?": "## Target type: {AIRLINE}\n## Query:\nStep1: Find the entity with the relation of COMMENCED OPERATIONS\nQuery1: \"get_information(relation='COMMENCED OPERATIONS', tail_entity='2005')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\" \nStep3: If the count of output_of_query2 is not equal to 1, return \"None\"\nStep4: Get the AIRLINE of output_of_query1\nQuery4: \"get_information(relation='AIRLINE', head_entity='output_of_query1')\"",
    "what is the first airline listed that has no service date listed?": "None",
    "which are the only trains still in service?": "## Target type: {train}\n## Query:\nStep1: Find the trains with the relation of Status as \"In Service\"\nQuery1: \"get_information(relation='Status', tail_entity='In Service')\"\nStep2: Get the train that is still in service.\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"",
    "which airline has more listed destinations, continental express or america west express?": "## Target type: {airline}\n## Query:\nStep1: Find the entity named Continental Express\nQuery1: \"get_information(relation='Airline', tail_entity='Continental Express')\"\nStep2: Find the destinations of output_of_query1\nQuery2: \"get_information(relation='Destination(s)', head_entity='output_of_query1')\"\nStep3: Find the entity named America West Express\nQuery3: \"get_information(relation='Airline', tail_entity='America West Express')\"\nStep4: Find the destinations of output_of_query3\nQuery4: \"get_information(relation='Destination(s)', head_entity='output_of_query3')\"\nStep5: Get the count of output_of_query2\nQuery5: \"count(set='output_of_query2')\"\nStep6: Get the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the count of output_of_query5 and output_of_query6\nQuery7: \"set_comparison(set1='output_of_query5', set2='output_of_query6')\"",
    "what two teams ended the season with the same record of wins/loses/draws?": "None",
    "which two teams had the most draws?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation Draw\nQuery1: \"get_information(relation='Draw')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Draws\nQuery3: \"get_information(relation='Draw', tail_entity='output_of_query2')\"\nStep4: Find the second max output_of_query1\nQuery4: \"max(set='output_of_query1', exclude='output_of_query2')\" \nStep5: Find the entity with the second max Draws\nQuery5: \"get_information(relation='Draw', tail_entity='output_of_query4')\"",
    "how many teams won only 1 match?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Won and value of 1\nQuery1: \"get_information(relation='Won', value='1')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only team to draw?": "None",
    "how many teams scored no points against their opponents?": "None",
    "how many teams played consecutive games due to getting a tie?": "None",
    "how many clubs had no drawn results?": "None",
    "who was the last draw?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Draw\nQuery1: \"get_information(relation='Draw')\"\nStep2: Get the max row_number of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='Draw', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "what is the most number of games played by a team with at least one draw?": "None",
    "which game did the opponent score only 7 points?": "None",
    "how many teams did they not lose to?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity in Lost that is 0\nQuery1: \"get_information(relation='Lost', tail_entity='0')\"\nStep2: Find the number of teams in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams had no wins?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Win %\nQuery1: \"get_information(relation='Win %', tail_entity='.000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name one team that had the same amount of draws as losses": "None",
    "which chord has its perfect fifth as a c sharp?": "## Target type: {chord}\n## Query:\nStep1: Find the chord with the relation of Perfect Fifth being C\u266f\nQuery1: \"get_information(relation='Perfect Fifth', tail_entity='C\u266f')\"\nStep2: Find the chord of output_of_query1\nQuery2: \"get_information(relation='Chord', head_entity='output_of_query1')\"",
    "which chords does not have a sharp or flat note?": "None",
    "in a c7 chord, how many notes above c is a perfect fifth?": "None",
    "the only chord with all flat notes.": "None",
    "what is the difference in size (cents) for tridecimal major third and whole tone, minor tone?": "## Target type: {difference in size (cents)}\n## Query:\nStep1: Find the entity that has the interval name as \"tridecimal major third\"\nQuery1: \"get_information(relation='interval name', tail_entity='tridecimal major third')\"\nStep2: Find the size (cents) of output_of_query1\nQuery2: \"get_information(relation='size (cents)', head_entity='output_of_query1')\"\nStep3: Find the entity that has the interval name as \"whole tone, minor tone\"\nQuery3: \"get_information(relation='interval name', tail_entity='whole tone, minor tone')\"\nStep4: Find the size (cents) of output_of_query3\nQuery4: \"get_information(relation='size (cents)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what other tone has the same size as the diatonic semitone?": "None",
    "how many chords have a root not based on a sharp or flat note?": "None",
    "what's the total number of thirds you can make on a 7th form chord?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Chord\nQuery1: \"get_information(relation='Chord')\"\nStep2: Count the number of people in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations share the seventh rank?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity with the relation of Rank equal to 7\nQuery1: \"get_information(relation='Rank', tail_entity='7')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the note that appears last on the minor seventh column of the table.": "## Target type: {note}\n## Query:\nStep1: Find the column named \"Minor Seventh\"\nQuery1: \"get_information(relation='Minor Seventh')\"\nStep2: Get the last note in output_of_query1\nQuery2: \"get_last_note(set='output_of_query1')\"",
    "which has a larger size in steps, a tridecimal major third or a tridecimal neutral third?": "## Target type: {Interval name}\n## Query:\nStep1: Find the entity with the relation of Interval name containing \"tridecimal major third\"\nQuery1: \"get_information(relation='Interval name', tail_entity='tridecimal major third')\"\nStep2: Find the entity with the relation of Interval name containing \"tridecimal neutral third\"\nQuery2: \"get_information(relation='Interval name', tail_entity='tridecimal neutral third')\"\nStep3: Find the size in steps of output_of_query1\nQuery3: \"get_information(relation='size (steps)', head_entity='output_of_query1')\"\nStep4: Find the size in steps of output_of_query2\nQuery4: \"get_information(relation='size (steps)', head_entity='output_of_query2')\"\nStep5: Compare the size in steps of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "what is the higher number of meters listed in the notes section of the table?": "## Target type: {number}\n## Query:\nStep1: Find the numbers listed in the Notes section\nQuery1: \"get_information(relation='Notes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "does ca or ce have the higher position angle number?": "None",
    "what team won the least games?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Wins\nQuery3: \"get_information(relation='Wins', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which teams has the least wins?": "## Target type: {team}\n## Query:\nStep1: Find all the teams\nQuery1: \"get_information(relation='Team')\"\nStep2: Find the entity with the relation of Winners\nQuery2: \"get_information(relation='Winners')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min Winners\nQuery4: \"get_information(relation='Winners', tail_entity='output_of_query3')\"",
    "who won by the least?": "None",
    "which player lost the least?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Legs Lost\nQuery1: \"get_information(relation='Legs Lost')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Legs Lost\nQuery3: \"get_information(relation='Legs Lost', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which team has the least win percentage?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Win %\nQuery1: \"get_information(relation='Win %')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Win %\nQuery3: \"get_information(relation='Win %', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what is the number of songs on rock records?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Label as \"Rock Records\"\nQuery1: \"get_information(relation='Label', tail_entity='Rock Records')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of songs with the relation of row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "tell me a song that hit at least #5 on the us country chart.": "None",
    "other than 91.9, name a station that is mixed news and classical & roots, rock, and jazz.": "None",
    "which versino of the song is the only hard rock version?": "## Target type: {version}\n## Query:\nStep1: Find the entity with the relation of Comment that contains 'hard rock sonorities'\nQuery1: \"get_information(relation='Comment', value='hard rock sonorities')\"\nStep2: Find the Version of output_of_query1\nQuery2: \"get_information(relation='Version', head_entity='output_of_query1')\"",
    "how many rock stations are listed?": "None",
    "\"you're not so easy to forget\" and \"the lonely side of town\" both come from which album?": "None",
    "piano and guitars are added to what version of this song?": "## Target type: {'Version'}\n## Query:\nStep1: Find the entity with the relation of Comment that contains 'piano' and 'guitars'\nQuery1: \"get_information(relation='Comment', value='piano|guitars')\"\nStep2: Find the Version of output_of_query1\nQuery2: \"get_information(relation='Version', head_entity='output_of_query1')\"",
    "how many more news and classical stations are there than roots, rock and jazz stations?": "## Target type: {number of stations}\n## Query:\nStep1: Find the stations with the relation of Network being \"Mixed News and Classical\"\nQuery1: \"get_information(relation='Network', tail_entity='Mixed News and Classical')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the stations with the relation of Network being \"Roots, Rock, and Jazz\"\nQuery3: \"get_information(relation='Network', tail_entity='Roots, Rock, and Jazz')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the only radio station with a frequency below 90 mhz?": "None",
    "what is the score difference for the game against michigan state?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity named Michigan State\nQuery1: \"get_information(relation='Opponent#', tail_entity='Michigan State')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Calculate the score difference of output_of_query2\nQuery3: \"calculate_score_difference(string='output_of_query2')\"",
    "did ohio state win the game previous to the game against michigan state?": "None",
    "which game did the wisconsin badgers women's ice hockey team win by the most points?": "None",
    "which game did illinois score more points, the first or last?": "None",
    "who scored the most points against nw missouri state in a quarterfinal?": "None",
    "which team had more titles, michigan state or colorado college?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Michigan State\nQuery1: \"get_information(relation='Team', tail_entity='Michigan State')\"\nStep2: Find the Titles of output_of_query1\nQuery2: \"get_information(relation='Titles', head_entity='output_of_query1')\"\nStep3: Find the entity named Colorado College\nQuery3: \"get_information(relation='Team', tail_entity='Colorado College')\"\nStep4: Find the Titles of output_of_query3\nQuery4: \"get_information(relation='Titles', head_entity='output_of_query3')\"\nStep5: Compare the Titles of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "did they win or lose to iowa?": "None",
    "who scored the most points in a game against them between penn state and boston college?": "## Target type: {opponent team}\n## Query:\nStep1: Find the entity named Penn State\nQuery1: \"get_information(relation='Opponent#', tail_entity='Penn State')\"\nStep2: Find the entity named Boston College\nQuery2: \"get_information(relation='Opponent#', tail_entity='Boston College')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Find the Result of output_of_query1\nQuery5: \"get_information(relation='Result', tail_entity='output_of_query1')\"\nStep6: Find the Result of output_of_query2\nQuery6: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep7: Extract the points from output_of_query5\nQuery7: \"extract_points(relation='Result', value='output_of_query5')\"\nStep8: Extract the points from output_of_query6\nQuery8: \"extract_points(relation='Result', value='output_of_query",
    "did georgetown score more points at the 1940 game against george washington or at the 1941 game against syracuse?": "None",
    "according to this chart, did the given team win or lose more games when played at notre dame stadium?": "None",
    "were more points scored against butler or purdue?": "## Target type: {score}\n## Query:\nStep1: Find the entity named Butler\nQuery1: \"get_information(relation='Opponent', tail_entity='Butler')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity named Purdue\nQuery3: \"get_information(relation='Opponent', tail_entity='Purdue')\"\nStep4: Find the score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Find if output_of_query2 greater than output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "which football club had its most recent promotion a year before the heidelberg football club?": "## Target type: {football club}\n## Query:\nStep1: Find the entity named Heidelberg Football Club\nQuery1: \"get_information(relation='Club', tail_entity='Heidelberg Football Club')\"\nStep2: Find the most recent promotion year of output_of_query1\nQuery2: \"get_information(relation='Most recent Promotion', head_entity='output_of_query1')\"\nStep3: Calculate the year before output_of_query2\nQuery3: \"subtract(value='output_of_query2', key='1')\"\nStep4: Find the football club with the most recent promotion year of output_of_query3\nQuery4: \"get_information(relation='Most recent Promotion', tail_entity='output_of_query3')\"",
    "which team had more qld cup, north queensland young guns or toowoomba clydesdales?": "None",
    "are more teams from brisbane or townsville?": "## Target type: {location}\n## Query:\nStep1: Find the teams from Brisbane\nQuery1: \"get_information(relation='Location', tail_entity='Brisbane')\"\nStep2: Find the teams from Townsville\nQuery2: \"get_information(relation='Location', tail_entity='Townsville')\"\nStep3: Calculate the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(first='output_of_query3', second='output_of_query4')\"",
    "how many teams are from brisbane?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Brisbane\nQuery1: \"get_information(relation='Location', tail_entity='Brisbane')\"\nStep2: Count the teams from output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times has australia been runner-up?": "None",
    "how many seats were gained by the australian labor party?": "None",
    "what is the last year the west panthers had in qld cup?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Team is West Panthers\nQuery1: \"get_information(relation='Team', tail_entity='West Panthers')\"\nStep2: Get the Last year in Qld Cup of output_of_query1\nQuery2: \"get_information(relation='Last year in Qld Cup', head_entity='output_of_query1')\"",
    "who has more premierships, four corners or west milby?": "## Target type: {club}\n## Query:\nStep1: Find the entity named Four Corners\nQuery1: \"get_information(relation='Club', tail_entity='Four Corners')\"\nStep2: Find the entity named West Milby\nQuery2: \"get_information(relation='Club', tail_entity='West Milby')\"\nStep3: Get the No. of Premierships of output_of_query1\nQuery3: \"get_information(relation='No. of Premierships', head_entity='output_of_query1')\"\nStep4: Get the No. of Premierships of output_of_query2\nQuery4: \"get_information(relation='No. of Premierships', head_entity='output_of_query2')\"\nStep5: Compare the values of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "in how many matches have australia tied between 1990-1999?": "None",
    "what was the last year that no competition was held at the australian open?": "None",
    "how many races took place in new south wales?": "None",
    "which team name had the most goals in a year (bulldogs, roosters, tigers)": "None",
    "which orbit pair has its period for 724.307 years?": "None",
    "which year was the competition held in the same country as in 1992?": "None",
    "after the championship in the hague, netherlands, where were the next championship held?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is The Hague, Netherlands\nQuery1: \"get_information(relation='Venue', tail_entity='The Hague, Netherlands')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "following the world championships in seville, what was the next venue for the world championships?": "None",
    "how many locomotives were scrapped?": "None",
    "what numbers were retired before 1989?": "## Target type: {numbers}\n## Query:\nStep1: Find the entity that the Date No. Retired is before 1989\nQuery1: \"get_information(relation='Date No. Retired', tail_entity<'1989')\"\nStep2: Get the numbers of output_of_query1\nQuery2: \"get_information(relation='No.', head_entity='output_of_query1')\"",
    "what is the number of trains that were either scrapped or destroyed?": "None",
    "what is the total number of teams that no longer operate?": "## Target type: {number of teams}\n## Query:\nStep1: Find all the teams\nQuery1: \"get_information(relation='Team name')\"\nStep2: Find the row_number of all the teams\nQuery2: \"get_information(relation='row_number')\"\nStep3: Find the teams that no longer operate\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\" \nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many players are currently retired?": "## Target type: {number of players}\n## Query:\nStep1: Find the players who have the Current status as \"Retired\"\nQuery1: \"get_information(relation='Current status', tail_entity='Retired')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many were written-off because of accidents?": "None",
    "what is the last number on the list?": "## Target type: {'Number'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Number of output_of_query3\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"",
    "how many total locomotives have a disposition of \"to southern pacific\"?": "None",
    "tell me the number of versions that are scrapped.": "## Target type: {number of versions}\n## Query:\nStep1: Find the entity with the relation of Present location as 'scrapped'\nQuery1: \"get_information(relation='Present location', tail_entity='scrapped')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many were lost?": "None",
    "how many stars do not have a current magnitude greater than zero?": "## Target type: {number of stars}\n## Query:\nStep1: Find the stars with a current magnitude less than or equal to zero\nQuery1: \"get_information(relation='Current magnitude', tail_entity<='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "is capella's current magnitude more than vega's current magnitude?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Capella\nQuery1: \"get_information(relation='Star', tail_entity='Capella')\"\nStep2: Find the current magnitude of output_of_query1\nQuery2: \"get_information(relation='Current magnitude', head_entity='output_of_query1')\"\nStep3: Find the entity named Vega\nQuery3: \"get_information(relation='Star', tail_entity='Vega')\"\nStep4: Find the current magnitude of output_of_query3\nQuery4: \"get_information(relation='Current magnitude', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "how many stars have a current magnitude of at least 1.0?": "## Target type: {number}\n## Query:\nStep1: Find the stars with a Current magnitude of at least 1.0\nQuery1: \"get_information(relation='Current magnitude', tail_entity>='1.0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many stars have a magnitude greater than zero?": "## Target type: {number}\n## Query:\nStep1: Find the entities with a magnitude greater than zero.\nQuery1: \"get_information(relation='Current magnitude', tail_entity>'0')\"\nStep2: Calculate the count of output_of_query1.\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of stars that have a maximum magnitude less than zero?": "None",
    "how much farther (in ly) is epsilon canis majoris than zeta sagittarii?": "None",
    "how many stars have a distance at maximum of 30 light years or higher?": "## Target type: {number of stars}\n## Query:\nStep1: Find the stars with a distance at maximum of 30 light years or higher\nQuery1: \"get_information(relation='Distance at maximum (LY)', tail_entity>='30')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only star with a distance at maximum of 80?": "## Target type: {star}\n## Query:\nStep1: Find the entity with a Distance at maximum of 80\nQuery1: \"get_information(relation='Distance at maximum (LY)', tail_entity='80')\"\nStep2: Find the star of output_of_query1\nQuery2: \"get_information(relation='Star', head_entity='output_of_query1')\"\n\nNote: The query will return the star with a distance at maximum of 80, assuming there is only one star with that distance.",
    "which orbit pair has the greatest most recent position angle, ab or ce?": "None",
    "what is the most amount of stars?": "## Target type: {number of stars}\n## Query:\nStep1: Find the entity with the relation of Number of stars\nQuery1: \"get_information(relation='Number of stars')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "who is the previous qualifier over anna pau?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Anna Pau\nQuery1: \"get_information(relation='Name', tail_entity='Anna Pau')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who won the last one?": "## Target type: {player}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what was the song choice after week 5?": "None",
    "how many people withdrew before the 5th stage?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Stage\nQuery1: \"get_information(relation='Stage')\"\nStep2: Find the rows that have a stage lower than 5\nQuery2: \"get_information(relation='Stage', tail_entity<'5')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which player was picked in the last round?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Round is the max.\nQuery1: \"get_information(relation='Round', tail_entity>='max')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who was the previous winner before twente in the round of 16?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity named Twente\nQuery1: \"get_information(relation='Team 1', tail_entity='Twente')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team 1 of output_of_query4\nQuery5: \"get_information(relation='Team 1', head_entity='output_of_query4')\"",
    "who won the last tourament?": "None",
    "what is the name of the player picked in the last round?": "## Target type: {'Player'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what are the total games won against claudio pannata on june 10,1985 in bologna,italy?": "## Target type: {number of games won}\n## Query:\nStep1: Find the entity named Claudio Pannatta\nQuery1: \"get_information(relation='Opponent in the final', tail_entity='Claudio Pannatta')\"\nStep2: Find the entity that matches the date of June 10, 1985\nQuery2: \"get_information(relation='Date', tail_entity='June 10, 1985')\"\nStep3: Find the entity that matches the championship of Bologna, Italy\nQuery3: \"get_information(relation='Championship', tail_entity='Bologna, Italy')\"\nStep4: Find the entity that matches the intersection of output_of_query1 and output_of_query2\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep5: Find the entity that matches the intersection of output_of_query4 and output_of_query3\nQuery5: \"set_intersection(set1='output_of_query4', set2='output_of_query3')\"\nStep6: Get the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many judges served as chief total?": "None",
    "how many defendants were acquitted, if any?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Acquitted\nQuery1: \"get_information(relation='Sentence', tail_entity='Acquitted')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of delegates under the judiciary committee?": "## Target type: {number of delegates}\n## Query:\nStep1: Find the entity named Judiciary Committee\nQuery1: \"get_information(relation='Committee', tail_entity='Judiciary Committee')\"\nStep2: Find the delegates under output_of_query1\nQuery2: \"get_information(relation='Delegate', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many judges served from january 15, 1931 to feb 1, 1936?": "None",
    "which element is listed directly above copper?": "None",
    "name an element that does not have the letter \"e\" in its name.": "None",
    "which element has the symbol fe, titanium or iron?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of symbol=fe\nQuery1: \"get_information(relation='symbol', tail_entity='fe')\"\nStep2: Find the entity with the relation of name=Titanium\nQuery2: \"get_information(relation='name', tail_entity='Titanium')\"\nStep3: Find the entity with the relation of name=Iron\nQuery3: \"get_information(relation='name', tail_entity='Iron')\"",
    "name the member with the highest apparent magnitude.": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Apparent Magnitude\nQuery1: \"get_information(relation='Apparent Magnitude')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Apparent Magnitude\nQuery3: \"get_information(relation='Apparent Magnitude', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the next name after no.774?": "## Target type: {name}\n## Query:\nStep1: Find the entity named No. 774\nQuery1: \"get_information(relation='Name', tail_entity='No. 774')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row after output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what constellation appears last on this table?": "## Target type: {constellation}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Constellation of output_of_query3\nQuery4: \"get_information(relation='Constellation', head_entity='output_of_query3')\"",
    "what is the next title listed after omega race?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Omega Race\nQuery1: \"get_information(relation='Title', tail_entity='Omega Race')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which movie starring burt lancaster, paul scofield, jeanne moreau and michel simon was also produced by united artists?": "## Target type: {Title}\n## Query:\nStep1: Find the movie produced by United Artists\nQuery1: \"get_information(relation='Studio', tail_entity='United Artists')\"\nStep2: Find the movie with the actors Burt Lancaster, Paul Scofield, Jeanne Moreau, and Michel Simon\nQuery2: \"get_information(relation='Actors', tail_entity='Burt Lancaster, Paul Scofield, Jeanne Moreau, Michel Simon')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "which film came directly after aaha?": "None",
    "which live-action american superhero movie was released before the 1966 batman movie?": "None",
    "what year was beyond the sea released?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Title being \"Beyond the Sea\"\nQuery1: \"get_information(relation='Title', tail_entity='Beyond the Sea')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what movie came out after bad moon?": "## Target type: {movie}\n## Query:\nStep1: Find the entity named Bad Moon\nQuery1: \"get_information(relation='Title', tail_entity='Bad Moon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which movie was also a film debut?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the first made for television film to address people with aids?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which title premiered directly after candalide?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is Candalide\nQuery1: \"get_information(relation='Title', tail_entity='Candalide')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which has a larger population, dehradun or nainital?": "## Target type: {place}\n## Query:\nStep1: Find the entity named Dehradun\nQuery1: \"get_information(relation='Place', tail_entity='Dehradun')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population (As of 2011)', head_entity='output_of_query1')\"\nStep3: Find the entity named Nainital\nQuery3: \"get_information(relation='Place', tail_entity='Nainital')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population (As of 2011)', head_entity='output_of_query3')\"\nStep5: Compare the population of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the name of the train listed before bangalore express?": "## Target type: {train name}\n## Query:\nStep1: Find the entity named Bangalore Express\nQuery1: \"get_information(relation='Train Name', tail_entity='Bangalore Express')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Train Name of output_of_query4\nQuery5: \"get_information(relation='Train Name', head_entity='output_of_query4')\"",
    "beside passenger and fast passenger, what other train name left mangalore central?": "## Target type: {train name}\n## Query:\nStep1: Find the entity named Passenger\nQuery1: \"get_information(relation='Train Name', tail_entity='Passenger')\"\nStep2: Find the entity named Fast Passenger\nQuery2: \"get_information(relation='Train Name', tail_entity='Fast Passenger')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the negation of output_of_query3\nQuery4: \"set_negation(set='output_of_query3')\"",
    "what was the number of attendees for the september 19 game?": "## Target type: {Attendance}\n## Query:\nStep1: Find the entity with the relation of Date being September 19\nQuery1: \"get_information(relation='Date', tail_entity='September 19')\"\nStep2: Get the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what is the first year steve grissom had a top 5 finish in the nation wide series?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Steve Grissom\nQuery1: \"get_information(relation='Team(s)', tail_entity='Steve Grissom')\"\nStep2: Find the first instance where output_of_query1 had a Top 5 finish in the Nation Wide series\nQuery2: \"get_information(relation='Top 5', tail_entity>='first')\"\nStep3: Find the year of output_of_query2\nQuery3: \"get_information(relation='Year', head_entity='output_of_query2')\"",
    "did willemsen or stelle finish with the most points in the 2001-2013 driving season?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Willemsen\nQuery1: \"get_information(relation='Driver', tail_entity='Willemsen')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Stelle\nQuery3: \"get_information(relation='Driver', tail_entity='Stelle')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4 to check for the most points\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4', comparison_operator='greater_than')\"",
    "from 2005-2012, in the team speedway junior world championship, how many more first place wins than all other teams put together?": "None",
    "which team did this person play against after portugal in 1989?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Opponent is Portugal\nQuery1: \"get_information(relation='Opponent', tail_entity='Portugal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "how many points did the team score against panama and colombia combined?": "None",
    "what is the total number of elections listed?": "## Target type: {number of elections}\n## Query:\nStep1: Find all the elections mentioned\nQuery1: \"get_information(relation='Election')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total elections have there been?": "## Target type: {number}\n## Query:\nStep1: Find all the unique elections\nQuery1: \"get_information(relation='Election')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years were between the albums only one and toheart?": "## Target type: {number of years}\n## Query:\nStep1: Find the row_number of the album \"Only One\"\nQuery1: \"get_information(relation='Album', tail_entity='Only One')\"\nStep2: Find the row_number of the album \"Toheart\"\nQuery2: \"get_information(relation='Album', tail_entity='Toheart')\"\nStep3: Find the Year of output_of_query1\nQuery3: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep4: Find the Year of output_of_query2\nQuery4: \"get_information(relation='Year', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"abs(subtract(output_of_query3, output_of_query4))\"",
    "how many years was the band around?": "None",
    "how many albums has this band released?": "None",
    "what name is just before thea lafond on the list?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Thea Lafond\nQuery1: \"get_information(relation='Name', tail_entity='Thea Lafond')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what song was a hit in 1995 after \"i live my life for you\"?": "## Target type: {'Song'}\n## Query:\nStep1: Find the album named \"I Live My Life for You\"\nQuery1: \"get_information(relation='Song', tail_entity='I Live My Life for You')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is larger than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "how many countries in this competition had more than two silver medals?": "None",
    "what vehicle maker other than dodge has the most vehicles in the roster?": "None",
    "what is the maximum consecutive eliminations for the brats?": "None",
    "how many singles were released at least as early as 2009?": "None",
    "how many games did cal state fullerton's baseball team play during april 1979?": "None",
    "what country ranks before china?": "## Target type: {country}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Nationality', tail_entity='China')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nationality of output_of_query4\nQuery5: \"get_information(relation='Nationality', head_entity='output_of_query4')\"",
    "tell me the number of silver medals won by saudi arabia.": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Saudi Arabia\nQuery1: \"get_information(relation='Nation', tail_entity='Saudi Arabia')\"\nStep2: Find the number of silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "what is the difference of opposition strength for match amplistan vs. bestrudia": "## Target type: {difference in opposition strength}\n## Query:\nStep1: Find the Match between Amplistan and Bestrudia\nQuery1: \"get_information(relation='Match', tail_entity='Amplistan vs. Bestrudia (friendly)')\"\nStep2: Find the opposition strength of output_of_query1\nQuery2: \"get_information(relation='Opposition strength', head_entity='output_of_query1')\"\nStep3: Find the Match between Bestrudia and Amplistan\nQuery3: \"get_information(relation='Match', tail_entity='Bestrudia vs. Amplistan (friendly)')\"\nStep4: Find the opposition strength of output_of_query3\nQuery4: \"get_information(relation='Opposition strength', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many times was the opponent the edmonton eskimos?": "None",
    "what was the number of summer olympics that were competed in?": "None",
    "what is the next pennant after f172?": "## Target type: {'Pennant'}\n## Query:\nStep1: Find the entity with Pennant is F172\nQuery1: \"get_information(relation='Pennant', tail_entity='F172')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Pennant of output_of_query4\nQuery5: \"get_information(relation='Pennant', head_entity='output_of_query4')\"",
    "what number of appearances were on the tvb network?": "## Target type: {number of appearances}\n## Query:\nStep1: Find the entity with the relation of Network\nQuery1: \"get_information(relation='Network', tail_entity='TVB')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only 17 year old delegate?": "## Target type: {'Contestant'}\n## Query:\nStep1: Find the entity with the relation of Age as 17\nQuery1: \"get_information(relation='Age', tail_entity='17')\"\nStep2: Find the entity with the relation of Contestant of output_of_query1\nQuery2: \"get_information(relation='Contestant', head_entity='output_of_query1')\"",
    "who is the next player listed after andy egil?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Andy Egil\nQuery1: \"get_information(relation='Name', tail_entity='Andy Egil')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what surface was used before carpet?": "None",
    "how many models have 1.6ghz?": "None",
    "who is the next person listed after ivan ukhov?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Ivan Ukhov\nQuery1: \"get_information(relation='Name', tail_entity='Ivan Ukhov')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many years did the first three presidents serve combined?": "None",
    "how many times was the game aired on nbc?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of TV that matches 'NBC'\nQuery1: \"get_information(relation='TV', tail_entity='NBC')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the percentage of people who identified as calvinist was, at most, how much?": "None",
    "what was the last year the tv show lynch aired?": "## Target type: {'A\u00f1o'}\n## Query:\nStep1: Find the entity named Lynch\nQuery1: \"get_information(relation='Title', tail_entity='Lynch')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the A\u00f1o of output_of_query4\nQuery5: \"get_information(relation='A\u00f1o', head_entity='output_of_query4')\"",
    "marc kalenga and gavin rae each played which position (p)?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Marc Kalenga\nQuery1: \"get_information(relation='Name', tail_entity='Marc Kalenga')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='P', head_entity='output_of_query1')\"\nStep3: Find the entity named Gavin Rae\nQuery3: \"get_information(relation='Name', tail_entity='Gavin Rae')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='P', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many polls did dart win?": "None",
    "what is the total number of points earned by all away team members in december?": "None",
    "how many license plates were issued before 1960?": "None",
    "which production is the longest running broadway show?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Performances\nQuery1: \"get_information(relation='Performances')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Performances\nQuery3: \"get_information(relation='Performances', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which poll company has the most opposition?": "## Target type: {poll company}\n## Query:\nStep1: Find the entity with the relation of Opposition\nQuery1: \"get_information(relation='Opposition')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Opposition\nQuery3: \"get_information(relation='Opposition', tail_entity='output_of_query2')\"\nStep4: Find the poll company of output_of_query3\nQuery4: \"get_information(relation='Poll company', head_entity='output_of_query3')\"",
    "does guam have a larger amount of bronze medals than palau?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Guam\nQuery1: \"get_information(relation='Nation', tail_entity='Guam')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity named Palau\nQuery3: \"get_information(relation='Nation', tail_entity='Palau')\"\nStep4: Find the bronze medals of output_of_query3\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query3')\"\nStep5: Compare the bronze medals of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', comparison='greater')\"",
    "how many games were classified friendly competition?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that has the relation Competition with the value \"friendly competition\"\nQuery1: \"get_information(relation='Competition', value='friendly competition')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in touchdowns between raymond philyaw and jerel myers?": "## Target type: {number of touchdowns}\n## Query:\nStep1: Find the player named Raymond Philyaw\nQuery1: \"get_information(relation='Player', tail_entity='Raymond Philyaw')\"\nStep2: Find the touchdowns of output_of_query1\nQuery2: \"get_information(relation='TD', head_entity='output_of_query1')\"\nStep3: Find the player named Jerel Myers\nQuery3: \"get_information(relation='Player', tail_entity='Jerel Myers')\"\nStep4: Find the touchdowns of output_of_query3\nQuery4: \"get_information(relation='TD', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference of output_of_query2 and output_of_query4\nQuery5: \"abs(output_of_query2 - output_of_query4)\"",
    "tell me a player with the same number of soproni liga goals as szucs?": "None",
    "tell me the number of shows that only have one host per day.": "None",
    "what model was dated before model s-18/vdr-3?": "## Target type: {model}\n## Query:\nStep1: Find the entity named Model S-18/VDR-3\nQuery1: \"get_information(relation='Model name', tail_entity='Model S-18/VDR-3')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the model name of output_of_query4\nQuery5: \"get_information(relation='Model name', head_entity='output_of_query4')\"",
    "who served a term before mannerheim?": "## Target type: {president of the republic}\n## Query:\nStep1: Find the entity named Mannerheim\nQuery1: \"get_information(relation='president of the republic', tail_entity='Mannerheim')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the president of the republic of output_of_query4\nQuery5: \"get_information(relation='president of the republic', head_entity='output_of_query4')\"",
    "which city is ranked last?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "how many jurisdictions are of the metropolitan archdiocese type?": "## Target type: {number}\n## Query:\nStep1: Find the jurisdictions with the relation of Type that is Metropolitan Archdiocese\nQuery1: \"get_information(relation='Type', tail_entity='Metropolitan Archdiocese')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the team listed before burnley?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team is Burnley\nQuery1: \"get_information(relation='Team', tail_entity='Burnley')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many world records does ethiopia hold?": "## Target type: {number of world records}\n## Query:\nStep1: Find the entity named Ethiopia\nQuery1: \"get_information(relation='Nation', tail_entity='Ethiopia')\"\nStep2: Find the number of world records of output_of_query1\nQuery2: \"get_information(relation='World Record', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was germany or japan in 8th place in 2007?": "None",
    "what is the first tier listed?": "## Target type: {tier}\n## Query:\nStep1: Find all the tiers in the schema\nQuery1: \"get_information(relation='Level')\"\nStep2: Find the min tier in output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "which organization has more television channels in nambour, queensland, nine network or australian broadcasting commission?": "None",
    "name a horse that placed after hello and was owned by more than one person.": "None",
    "in what years between 1194-1997 did habte jifar not compete in a marathon race?": "None",
    "how many years ago did ne-yo play as mixx?": "None",
    "which leg was after the hull, quebec leg?": "## Target type: {leg}\n## Query:\nStep1: Find the entity named Hull, Quebec\nQuery1: \"get_information(relation='Location', tail_entity='Hull, Quebec')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the leg of output_of_query4\nQuery5: \"get_information(relation='leg', head_entity='output_of_query4')\"",
    "what was the last season the leinster senior club hurling championships was won by a score differential of less than 11?": "None",
    "what was the most consecutive losses for the mercury in this season?": "## Target type: {number}\n## Query:\nStep1: Find the losses in the season\nQuery1: \"get_information(relation='Result', tail_entity='Loss')\"\nStep2: Get the consecutive losses in output_of_query1\nQuery2: \"consecutive(set='output_of_query1')\"\nStep3: Find the max consecutive losses in output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "how many races in 2004, did johnny murtagh not make more than 50,000 dollars in prize money?": "None",
    "name a city with the same elevation as callao.": "None",
    "other than fairfield, what else was built in 1847?": "## Target type: {name}\n## Query:\nStep1: Find the entity that was built in 1847\nQuery1: \"get_information(relation='Date built', tail_entity='1847')\"\nStep2: Find the entity named Fairfield\nQuery2: \"get_information(relation='Name', tail_entity='Fairfield')\"\nStep3: Find the output_of_query1 except output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "how many churches in the list are from 13th century?": "None",
    "in the uk, how many spots difference were between \"strollin' on\" and \"in the springtime?\"": "None",
    "the town with at most 1660 total population": "None",
    "how many film roles did mandy patinkin play in 1991?": "None",
    "what was the number of attendees at the game on september 12th?": "## Target type: {number of attendees}\n## Query:\nStep1: Find the entity that is the game on September 12th\nQuery1: \"get_information(relation='Date', tail_entity='September 12, 1982')\"\nStep2: Find the number of attendees of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many drivers had an average speed faster than 135 mph?": "None",
    "which race was after the race in pocono?": "None",
    "what train was developed after the erlangener erprobungstrager?": "## Target type: {train}\n## Query:\nStep1: Find the entity named \"Erlangener Erprobungstrager\"\nQuery1: \"get_information(relation='Train', tail_entity='Erlangener Erprobungstrager')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Train of output_of_query4\nQuery5: \"get_information(relation='Train', head_entity='output_of_query4')\"",
    "in what two races did chelsea williams earn the same rank?": "None",
    "how many players on the 191617 illinois fighting illini men's basketball team had more than 100 points scored?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named 191617 illinois fighting illini men's basketball team\nQuery1: \"get_information(relation='Player', tail_entity='191617 illinois fighting illini men's basketball team')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity whose Points is larger than 100\nQuery3: \"get_information(relation='Points', tail_entity>'100')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which party came in first with the number of votes?": "None",
    "total number of times she was nominated for 'best actress in a play' by the tony awards?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named \"Tony Awards\"\nQuery1: \"get_information(relation='Association', tail_entity='Tony Awards')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the total number of times she was nominated for 'best actress in a play' by the Tony Awards\nQuery3: \"count(set='output_of_query2', tail_entity='Best Actress in a Play', head_entity='Nominated')\"",
    "which players did not score a touchdown?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of TD's as 0\nQuery1: \"get_information(relation='TD\\'s', tail_entity='0')\"\nStep2: Get the Player name of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many years did vinnie dombroski win?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Vinnie Dombroski\nQuery1: \"get_information(relation='name', tail_entity='Vinnie Dombroski')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which month is the most popular month for concerts at the old trafford cricket ground?": "None",
    "what party has the most representatives in the diet representation?": "None",
    "how many songs were not listed on the swiss charts?": "None",
    "how many international goals did teeratep winothai make in 2009?": "None",
    "what were the only 2 years there were riaa gold certifications?": "None",
    "name all women who were executed in the same year as lois nadean smith.": "None",
    "name a destination that began in 1971 that is not kristiansund?": "None",
    "who is at the top of the chart?": "None",
    "did jeff gordon or jeremy mayfield record the highest average speed?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Jeff Gordon\nQuery1: \"get_information(relation='Driver', tail_entity='Jeff Gordon')\"\nStep2: Find the average speed of output_of_query1\nQuery2: \"get_information(relation='Average Speed (mph)', head_entity='output_of_query1')\"\nStep3: Find the entity named Jeremy Mayfield\nQuery3: \"get_information(relation='Driver', tail_entity='Jeremy Mayfield')\"\nStep4: Find the average speed of output_of_query3\nQuery4: \"get_information(relation='Average Speed (mph)', head_entity='output_of_query3')\"\nStep5: Find whether output_of_query2 is greater than output_of_query4\nQuery5: \"compare(value1='output_of_query2', operator='greater than', value2='output_of_query4')\"",
    "does heart london broadcast adult contemporary music or r'n'b and hip-hop?": "## Target type: {broadcast genre}\n## Query:\nStep1: Find the entity named Heart London\nQuery1: \"get_information(relation='Service', tail_entity='Heart London')\"\nStep2: Find the broadcast genre of output_of_query1\nQuery2: \"get_information(relation='Genre', head_entity='output_of_query1')\"",
    "what type of suture is not to be used in conjunction with prosthetic devices?": "None",
    "what was the first single released for the epic label?": "None",
    "what is the total number of titles published in 2011?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of title published in 2011\nQuery1: \"get_information(relation='Status', tail_entity='Published (2011)')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did the drink/drive sandown 500 happen before the tooheys 1000?": "## Target type: {yes/no}\n## Query:\nStep1: Find the race named Drink/Drive Sandown 500\nQuery1: \"get_information(relation='Series', tail_entity='Drink/Drive Sandown 500')\"\nStep2: Find the race named Tooheys 1000\nQuery2: \"get_information(relation='Series', tail_entity='Tooheys 1000')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Check if row_number of output_of_query1 is less than row_number of output_of_query2\nQuery5: \"if(output_of_query3 < output_of_query4, 'yes', 'no')\"",
    "spring festival and what other flower(s) are pink?": "None",
    "in what year did the buick engine start in 1st?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Start is 1st\nQuery1: \"get_information(relation='Start', tail_entity='1st')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many parts had a release date in 2003?": "## Target type: {number of parts}\n## Query:\nStep1: Find the parts with a release date in 2003\nQuery1: \"get_information(relation='Latest public release date (edition)', tail_entity='2003')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was the only album to be released by b'in music in an even-numbered year?": "None",
    "what is the total number of state regents who are attorneys?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Profession as Attorney\nQuery1: \"get_information(relation='Profession', tail_entity='Attorney')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which new manager was purchased for the most money in the 2007-08 premier league season?": "None",
    "of the locomotives at the museum, what is the name of the first one produced?": "None",
    "number of songs that earned at least 140 million aggregate points": "None",
    "what is the name of the first team on this chart?": "## Target type: {'Team'}\n## Query:\nStep1: Find the row_number of the first entry\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what is the total number of state monuments?": "None",
    "what is the number of world records that were recorded in august?": "None",
    "how many total garratts did south african railways have?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Railway is South African Railways\nQuery1: \"get_information(relation='Railway', tail_entity='South African Railways')\"\nStep2: Find the Works no. of output_of_query1\nQuery2: \"get_information(relation='Works no.', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "in how many games was sapsford a scorer?": "None",
    "how many points did the nuggets win by on april 9?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity with the relation of Date is \"April 9\"\nQuery1: \"get_information(relation='Date', tail_entity='April 9')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Extract the number of points the Nuggets won by from output_of_query2\nQuery3: \"extract_number(string='output_of_query2', delimiter='W ')\"",
    "number of points the jets scored against atlanta and buffalo in the season": "None",
    "how many times did scheider appear in the golden gloves event?": "None",
    "which candidates had the most votes listed?": "None",
    "did gilles simon have a higher rank than tommy haas?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Gilles Simon\nQuery1: \"get_information(relation='Player', tail_entity='Gilles Simon')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Tommy Haas\nQuery3: \"get_information(relation='Player', tail_entity='Tommy Haas')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Compare the rank of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='>')\"\n\nNote: The compare() function should return \"yes\" if set1 > set2, and \"no\" otherwise.",
    "how many women have been elected mayor of seattle, washington?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Seattle, Washington\nQuery1: \"get_information(relation='Name', tail_entity='Seattle, Washington')\"\nStep2: Find the entity with the relation of Elected and head_entity is output_of_query1\nQuery2: \"get_information(relation='Elected', head_entity='output_of_query1')\"\nStep3: Find the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what station is on top of the list?": "## Target type: {station}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Call sign of output_of_query3\nQuery4: \"get_information(relation='Call sign', head_entity='output_of_query3')\"",
    "how many games were won?": "None",
    "number institutes from north carolina in the acrl?": "None",
    "what is the total days held on # 1st?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity that # is 1st\nQuery1: \"get_information(relation='#', tail_entity='1st')\"\nStep2: Find the days held of output_of_query1\nQuery2: \"get_information(relation='Days held', head_entity='output_of_query1')\"",
    "which publication had the largest amount of points out of 10?": "## Target type: {'Publication'}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the publication of output_of_query3\nQuery4: \"get_information(relation='Publication', head_entity='output_of_query3')\"",
    "the 5/9 ps was constructed in 1907. name the previous 2 inline model that was released.": "None",
    "how many tracks have their producer as mike \"punch\" harper?": "## Target type: {number of tracks}\n## Query:\nStep1: Find the entity with the relation of Producer(s) as \"Mike 'Punch' Harper\"\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Mike \\'Punch\\' Harper')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the previous ship to sibir?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity named Sibir\nQuery1: \"get_information(relation='Ship Name', tail_entity='Sibir')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ship Name of output_of_query4\nQuery5: \"get_information(relation='Ship Name', head_entity='output_of_query4')\"",
    "which competition did this runner participate in after the xiamen international marathon?": "## Target type: {competition}\n## Query:\nStep1: Find the entity named Xiamen International Marathon\nQuery1: \"get_information(relation='Competition', tail_entity='Xiamen International Marathon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "who did the austria davis cup team play after they beat barcelona in the world group 1st round in 1990?": "None",
    "which cable car is the oldest?": "## Target type: {cable car}\n## Query:\nStep1: Find the construction year of all cable cars\nQuery1: \"get_information(relation='construction year')\"\nStep2: Find the min construction year\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the cable car with the min construction year\nQuery3: \"get_information(relation='construction year', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the total number of different classes?": "## Target type: {number of different classes}\n## Query:\nStep1: Find all the Class entities\nQuery1: \"get_information(relation='Class')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many months have record high temperatures over 100 degrees fahrenheit?": "None",
    "how many floors are there in the tallest building in canada?": "None",
    "what is the difference in tonnage between the heaviest and the lightest ships?": "None",
    "how long was the first half of the season?": "None",
    "which country has the most #gm?": "None",
    "how many movies was she in before \"vampire family\"?": "## Target type: {number}\n## Query:\nStep1: Find the movie with the title \"Vampire Family\"\nQuery1: \"get_information(relation='Title', tail_entity='Vampire Family')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the movies before the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many games were in the 2010 pre-season schedule for the los angeles clippers?": "None",
    "what is the total number of monarchs that ascended the throne in 2010?": "None",
    "what other panellinios basket coach shares the same first name as nikos nisiotis?": "None",
    "how many competitors in the 2005 belgian grand prix did not finish the race?": "None",
    "in which year was the higher listing of monetary earnings recorded, 2003, or 2007?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Year as 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Find the entity with the relation of Year as 2007\nQuery2: \"get_information(relation='Year', tail_entity='2007')\"\nStep3: Find the monetary earnings of output_of_query1\nQuery3: \"get_information(relation='Earnings (US$)', head_entity='output_of_query1')\"\nStep4: Find the monetary earnings of output_of_query2\nQuery4: \"get_information(relation='Earnings (US$)', head_entity='output_of_query2')\"\nStep5: Find the max of output_of_query3\nQuery5: \"max(set='output_of_query3')\"\nStep6: Find the max of output_of_query4\nQuery6: \"max(set='output_of_query4')\"\nStep7: Find the year with the higher earnings\nQuery7: \"if output_of_query5 > output_of_query6, output_of_query1, output_of_query2\"",
    "how long is the radio edit of this song?": "## Target type: {length}\n## Query:\nStep1: Find the entity that is the Album\nQuery1: \"get_information(relation='Album', tail_entity='Avant que l'ombre... \u00e0 Bercy')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity that is the Version\nQuery3: \"get_information(relation='Version', tail_entity='Radio edit')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"",
    "which building has more floors than the landmark hotel?": "None",
    "how many drivers won at least twice?": "None",
    "in how many stadiums other than notre dam stadium did the fighting irish play in during the 1946 season?": "None",
    "in the rinconada bikol language, what is the last single digit integer?": "None",
    "how many consecutive games were played at camp randall stadium?": "None",
    "which party had the most elected from it, liberal or unionist?": "## Target type: {party}\n## Query:\nStep1: Find the entities with the relation of Elected Party\nQuery1: \"get_information(relation='Elected Party')\"\nStep2: Find the count of output_of_query1 for Liberal\nQuery2: \"count(set='output_of_query1', value='Liberal')\"\nStep3: Find the count of output_of_query1 for Unionist\nQuery3: \"count(set='output_of_query1', value='Unionist')\"\nStep4: Compare the count of output_of_query2 and output_of_query3 to find the party with the most elected\nQuery4: \"compare(value1='output_of_query2', value2='output_of_query3')\"",
    "what is the only country that started up a plant in 2013?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Startup Date\nQuery1: \"get_information(relation='Startup Date')\"\nStep2: Find the entity that started up a plant in 2013\nQuery2: \"get_information(relation='Startup Date', tail_entity='2013')\"\nStep3: Find the country of output_of_query2\nQuery3: \"get_information(relation='Country', head_entity='output_of_query2')\"",
    "what albume peaked higher on the us charts can-i-bus or 2000 b.c.?": "None",
    "which team scored the most goals in a single match against fc seoul during the 2011 season?": "None",
    "what number of games were lost at home?": "None",
    "five and jezebel are apart of which label?": "## Target type: {label}\n## Query:\nStep1: Find the entity named Five\nQuery1: \"get_information(relation='Album', tail_entity='Five')\"\nStep2: Find the label of output_of_query1\nQuery2: \"get_information(relation='Label', head_entity='output_of_query1')\"\nStep3: Find the entity named Jezebel\nQuery3: \"get_information(relation='Album', tail_entity='Jezebel')\"\nStep4: Find the label of output_of_query3\nQuery4: \"get_information(relation='Label', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many years did earl ball coach the muncie flyers?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Earl Ball\nQuery1: \"get_information(relation='Coach', tail_entity='Earl Ball')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what county had the most votes for romney?": "None",
    "how many times was ayrton senna in pole position?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ayrton Senna\nQuery1: \"get_information(relation='Pole Position', tail_entity='Ayrton Senna')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what country won the most medals in shooting at the 1988 summer olympics?": "None",
    "what was the total number of races?": "## Target type: {number of races}\n## Query:\nStep1: Find all row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long did karin enke took to finish the race?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity named Karin Enke\nQuery1: \"get_information(relation='Athlete', tail_entity='Karin Enke')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what is the only airline that has \"filed for bankruptcy\" as a comment?": "## Target type: {airline}\n## Query:\nStep1: Find the entity whose comment includes \"filed for bankruptcy\"\nQuery1: \"get_information(relation='Comments', tail_entity='filed for bankruptcy')\"\nStep2: Find the airline of output_of_query1\nQuery2: \"get_information(relation='Airline', head_entity='output_of_query1')\"",
    "who is the only frenchman to win during the year?": "None",
    "which u-boat had more than 54 casualties?": "## Target type: {U-boat}\n## Query:\nStep1: Find the U-boat with more than 54 casualties\nQuery1: \"get_information(relation='Casualties', tail_entity>'54')\"\nStep2: Get the U-boat of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"",
    "in what year did jason babin force at least 15 sacks?": "None",
    "other than daubin who else was as mayor for same time period of 7 years": "None",
    "how many competitions were not friendly?": "None",
    "how many times did the competitor finish first in the javelin throw?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Event is Javelin throw\nQuery1: \"get_information(relation='Event', tail_entity='Javelin throw')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Position is 1st\nQuery3: \"get_information(relation='Position', tail_entity='1st')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what are the only two areas do be given the designation of regional municipality?": "None",
    "how long was manisha dey's jump?": "## Target type: {jump length}\n## Query:\nStep1: Find the entity named Manisha Dey\nQuery1: \"get_information(relation='Name', tail_entity='Manisha Dey')\"\nStep2: Find the jump length of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"",
    "at the women's 200 meter individual medley sm10 event at the 2012 summer paralympics, how long did it take aurelie rivard to finish?": "## Target type: {time}\n## Query:\nStep1: Find the entity that Name is Aurelie Rivard\nQuery1: \"get_information(relation='Name', tail_entity='Aurelie Rivard')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "which match was the last of the world cup finals?": "None",
    "what was the difference in votes between mccain and romney?": "## Target type: {difference in votes}\n## Query:\nStep1: Find the entity named McCain\nQuery1: \"get_information(relation='Candidate', tail_entity='McCain')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity named Romney\nQuery3: \"get_information(relation='Candidate', tail_entity='Romney')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many judges started their terms on january 30, 1920?": "## Target type: {number of judges}\n## Query:\nStep1: Find the entity that started their term on January 30, 1920\nQuery1: \"get_information(relation='Term as a Deputy Judge', tail_entity='January 30, 1920')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what country did lyuboslavskiy have his best performance?": "None",
    "what two years had the same flag bearer?": "None",
    "in the 1974-75 golden seals hockey season, who was picked first in the draft?": "None",
    "who finished first between sarah docter and sylvia burka?": "None",
    "what is the number or times samoa has been represented at the summer olympics?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Season is Summer\nQuery1: \"get_information(relation='Season', tail_entity='Summer')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that contains the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what season did the team find themselves with the lowest ranking?": "None",
    "other than spain, name a country that beat russia overall.": "None",
    "which team won the 1994 fifa world cup match with the highest attendance?": "None",
    "who has had the shortest term in office": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Years in office\nQuery1: \"get_information(relation='Years in office')\"\nStep2: Get the duration of output_of_query1\nQuery2: \"get_duration(set='output_of_query1')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min duration\nQuery4: \"get_information(relation='Years in office', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many tracks do not include the word \"jesus\"?": "None",
    "how many authors have more than 500 patients?": "## Target type: {number of authors}\n## Query:\nStep1: Find the authors with the relation of No. of patients greater than 500\nQuery1: \"get_information(relation='No. of patients', tail_entity>'500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in the amount of home games won versus home games lost for werder bremen?": "None",
    "how many different teams did the broncos play against?": "None",
    "which is older, 10-13 or 18-21?": "None",
    "what was the name of the competition listed before the boston marathon in 1984?": "## Target type: {competition}\n## Query:\nStep1: Find the entity named Boston Marathon\nQuery1: \"get_information(relation='Competition', tail_entity='Boston Marathon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "what was claudia roll's time?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity named Claudia Poll\nQuery1: \"get_information(relation='Swimmer', tail_entity='Claudia Poll')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many competitions did jifar participate in before joining the 10000m?": "None",
    "how many nations received at least 3 medals total?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that has Total medals at least 3\nQuery1: \"get_information(relation='Total', tail_entity>='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was scuttled earlier, ha-206 or ha-208?": "None",
    "other than whmb, tell me a station that serves and is licensed in indianapolis and has a vc higher than 40.": "None",
    "what class is below s 1.6?": "None",
    "who was the top performer in the 2008 telstra men's pro?": "## Target type: {performer}\n## Query:\nStep1: Find the entity named 2008 Telstra Men's Pro\nQuery1: \"get_information(relation='Event', tail_entity='2008 Telstra Men's Pro')\"\nStep2: Find the Winner of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "tell me the number of people that attended the first game they won in october.": "None",
    "who finished above skee riegel in terms of points?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Skee Riegel\nQuery1: \"get_information(relation='Player', tail_entity='Skee Riegel')\"\nStep2: Find the point of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity with higher point than output_of_query2\nQuery3: \"get_information(relation='Score', tail_entity>'output_of_query2')\"\nStep4: Get the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many years did budivelnyk not win?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Budivelnyk\nQuery1: \"get_information(relation='Winner', tail_entity='Budivelnyk')\"\nStep2: Find the years when Budivelnyk won\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find all the years\nQuery3: \"get_information(relation='Year')\"\nStep4: Find the difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "which aac school has the most students?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Type\nQuery1: \"get_information(relation='Type')\"\nStep2: Find the entity that has the value AAC\nQuery2: \"get_information(relation='Type', head_entity='AAC')\"\nStep3: Find the entity with the relation of Enrollment\nQuery3: \"get_information(relation='Enrollment')\"\nStep4: Find the max enrollment of output_of_query2\nQuery4: \"max(set='output_of_query3')\"\nStep5: Find the entity with the max enrollment\nQuery5: \"get_information(relation='Enrollment', tail_entity='output_of_query4')\"\nStep6: Find the school of output_of_query5\nQuery6: \"get_information(relation='Institution', head_entity='output_of_query5')\"",
    "how many teams score 19.000 or greater in the 5 hoops competition?": "None",
    "october 26, 1946 notre dame scores 41 points faints iowa. what other team did nd score 41 points against?": "None",
    "how many pylons are in austria?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Country as Austria\nQuery1: \"get_information(relation='Country', tail_entity='Austria')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "total number of j class ships completed.": "None",
    "what drop(s) included both the multiplayer map oasis and two spec ops missions?": "## Target type: {drop(s)}\n## Query:\nStep1: Find the drop(s) that includes the multiplayer map Oasis\nQuery1: \"get_information(relation='Multiplayer Map(s)', tail_entity='Oasis')\"\nStep2: Find the drop(s) that includes the spec ops mission Iron Clad\nQuery2: \"get_information(relation='Spec Ops Mission(s)', tail_entity='Iron Clad')\"\nStep3: Find the drop(s) that includes the spec ops mission Kill Switch\nQuery3: \"get_information(relation='Spec Ops Mission(s)', tail_entity='Kill Switch')\"\nStep4: Get the intersection of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2', set3='output_of_query3')\"",
    "using the data, what should be the next year they will play?": "None",
    "which game was later at night, fiu or northern colorado?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the game against FIU\nQuery1: \"get_information(relation='Opponent', tail_entity='FIU')\"\nStep2: Find the game against Northern Colorado\nQuery2: \"get_information(relation='Opponent', tail_entity='Northern Colorado')\"\nStep3: Find the time of output_of_query1\nQuery3: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep4: Find the time of output_of_query2\nQuery4: \"get_information(relation='Time', head_entity='output_of_query2')\"\nStep5: Compare the times to find out which game was later at night\nQuery5: \"if output_of_query3 > output_of_query4 then output_of_query1 else output_of_query2\"",
    "did ibricic score more or less goals in his 3 seasons with hajduk split when compared to his 4 seasons with nk zagreb?": "None",
    "how many albums were released in the 1970's?": "None",
    "how many songs charted above the 10th position on any chart?": "None",
    "in how many counties in new york did kerry win at least 50% of the popular vote?": "None",
    "what is the amount of ionization of mo at the 30th?": "## Target type: {amount of ionization}\n## Query:\nStep1: Find the entity that is Mo\nQuery1: \"get_information(relation='symbol', tail_entity='Mo')\"\nStep2: Find the amount of ionization of output_of_query1\nQuery2: \"get_information(relation='30th', head_entity='output_of_query1')\"",
    "how many matches were after june 28, 1994.": "## Target type: {number of matches}\n## Query:\nStep1: Find the entity that Date is June 28, 1994\nQuery1: \"get_information(relation='Date', tail_entity='June 28, 1994')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find all the row_number after output_of_query2\nQuery4: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many games did this player play in 2011?": "None",
    "what is the number of top ten hits kitty wells had in 1953 alone?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year and the value of 1953\nQuery1: \"get_information(relation='Year', tail_entity='1953')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"\nStep3: Find the number of top ten hits of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "besides rihaae, in what other show did gauri tejwani cameo in 2005?": "None",
    "compare religious affiliation in 2001 to 2011. percentage wise, by how much did \"no religion\" increase from 2001 to 2011": "None",
    "what was the first movie she stared in with the banner pratiba?": "None",
    "what was the difference in laps between position 1 and position 24?": "## Target type: {difference in laps}\n## Query:\nStep1: Find the entity with row_number of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number of 24\nQuery3: \"get_information(relation='row_number', tail_entity='24')\"\nStep4: Get the Laps of output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "was kevin rudd prime minister before or after tony abbott?": "## Target type: {relation}\n## Query:\nStep1: Find the entity named Kevin Rudd\nQuery1: \"get_information(relation='Prime Minister', tail_entity='Kevin Rudd')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Tony Abbott\nQuery3: \"get_information(relation='Prime Minister', tail_entity='Tony Abbott')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\n\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"Compare(output_of_query2, output_of_query4)\"",
    "who was the tallest delegate for miss dominican republic in 2002?": "None",
    "what was the date of the last game?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what are the number of images on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Notability\nQuery1: \"get_information(relation='Notability')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who came in immediately after nicky hayden?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Nicky Hayden\nQuery1: \"get_information(relation='Rider', tail_entity='Nicky Hayden')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "what was the first place eurovision song contest 2008 song?": "None",
    "how many different divisions has the team participated in?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Division\nQuery1: \"get_information(relation='Division')\"\nStep2: Find the distinct count of output_of_query1\nQuery2: \"distinct_count(set='output_of_query1')\"",
    "how many games are there before 1990?": "None",
    "which outgoing manager was appointed the last?": "## Target type: {outgoing manager}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the outgoing manager of output_of_query3\nQuery4: \"get_information(relation='Outgoing manager', head_entity='output_of_query3')\"",
    "how many racers finished the race in under 8:21:00?": "None",
    "how long did ungku abdul aziz abdul majid serve?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Ungku Abdul Aziz Abdul Majid\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Ungku Abdul Aziz Abdul Majid')\"\nStep2: Find the start date of service of output_of_query1\nQuery2: \"get_information(relation='Took office', head_entity='output_of_query1')\"\nStep3: Find the end date of service of output_of_query1\nQuery3: \"get_information(relation='Left office', head_entity='output_of_query1')\"\nStep4: Calculate the duration between output_of_query2 and output_of_query3\nQuery4: \"duration(start_date='output_of_query2', end_date='output_of_query3')\"",
    "who was ranked first in the semifinal 2?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Rank and row_number\nQuery1: \"get_information(relation='Rank', tail_entity='First', row_number='2')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which composition spanned a longer period from beginning of composition to premiere- elektra, or intermezzo?": "## Target type: {composition}\n## Query:\nStep1: Find the entity named Elektra\nQuery1: \"get_information(relation='Title', tail_entity='Elektra')\"\nStep2: Find the composition of output_of_query1\nQuery2: \"get_information(relation='Composition', head_entity='output_of_query1')\"\nStep3: Find the entity named Intermezzo\nQuery3: \"get_information(relation='Title', tail_entity='Intermezzo')\"\nStep4: Find the composition of output_of_query3\nQuery4: \"get_information(relation='Composition', head_entity='output_of_query3')\"\nStep5: Calculate the difference in composition duration between output_of_query2 and output_of_query4\nQuery5: \"duration_difference(composition1='output_of_query2', composition2='output_of_query4')\"",
    "how many times did their opponent score 6 goals?": "None",
    "what is the average number of scotland's total apps?": "## Target type: {average number}\n## Query:\nStep1: Find the entity named Scotland\nQuery1: \"get_information(relation='Nation', tail_entity='Scotland')\"\nStep2: Find the Total Apps of output_of_query1\nQuery2: \"get_information(relation='Total Apps', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "which country is listed last on the chart?": "## Target type: {country}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "how many constituencies are older than carlow-kilkenny?": "## Target type: {number of constituencies}\n## Query:\nStep1: Find the entity that is Carlow-Kilkenny\nQuery1: \"get_information(relation='Constituency', tail_entity='Carlow-Kilkenny')\"\nStep2: Find the Created year of output_of_query1\nQuery2: \"get_information(relation='Created', head_entity='output_of_query1')\"\nStep3: Find the constituencies that are older than output_of_query2\nQuery3: \"get_information(relation='Created', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the name of the ship listed before the maryland?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity named Maryland\nQuery1: \"get_information(relation='Ship Name', tail_entity='Maryland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ship Name of output_of_query4\nQuery5: \"get_information(relation='Ship Name', head_entity='output_of_query4')\"",
    "number of boats that were attacked by hans-rudolf rosing as a u-boat commander": "None",
    "what was the number of goals he scored in 2005?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity that Season is 2005\nQuery1: \"get_information(relation='Season', tail_entity='2005')\"\nStep2: Find the number of goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"",
    "which is the only team to score 13 points in 9 games?": "## Target type: {team}\n## Query:\nStep1: Find the entity in Points that is 13\nQuery1: \"get_information(relation='Points', tail_entity='13')\"\nStep2: Find the entity in Played that is 9\nQuery2: \"get_information(relation='Played', tail_entity='9')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which party received the least votes?": "None",
    "what is the number of games played against vietnam?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Vietnam\nQuery1: \"get_information(relation='Opponent', tail_entity='Vietnam')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the only three census subdivisions that had a population over 1,000,000 in 2011?": "None",
    "name a middle-earth video game released before 1990.": "None",
    "what were the total sales of eiffel 65's \"blue (da ba dee)\"?": "## Target type: {sales}\n## Query:\nStep1: Find the row with the Single \"Blue (Da Ba Dee)\"\nQuery1: \"get_information(relation='Single', tail_entity='Blue (Da Ba Dee)')\"\nStep2: Find the Sales of output_of_query1\nQuery2: \"get_information(relation='Sales', head_entity='output_of_query1')\"",
    "which psip is higher, wivx-ld or wivm-ld?": "## Target type: {'PSIP'}\n## Query:\nStep1: Find the entity named WIVX-LD\nQuery1: \"get_information(relation='Call-sign', tail_entity='WIVX-LD')\"\nStep2: Find the PSIP of output_of_query1\nQuery2: \"get_information(relation='PSIP', head_entity='output_of_query1')\"\nStep3: Find the entity named WIVM-LD\nQuery3: \"get_information(relation='Call-sign', tail_entity='WIVM-LD')\"\nStep4: Find the PSIP of output_of_query3\nQuery4: \"get_information(relation='PSIP', head_entity='output_of_query3')\"\nStep5: Compare the PSIP of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which models have the largest barrels?": "## Target type: {models}\n## Query:\nStep1: Find the entity with the relation of Barrel\nQuery1: \"get_information(relation='Barrel')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Barrel\nQuery3: \"get_information(relation='Barrel', tail_entity='output_of_query2')\"\nStep4: Find the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "which location had the top laps?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "how long after 1944 did terence cuneo complete his next work?": "None",
    "how many models require less than a week of use?": "None",
    "which diane keaton film ranked higher?": "None",
    "which tramway was inaugurated first, the 3s aerial tramway or the aiguille du midi?": "## Target type: {'Tramway'}\n## Query:\nStep1: Find the entity named 3s aerial tramway\nQuery1: \"get_information(relation='Tramway', tail_entity='3s aerial tramway')\"\nStep2: Find the Year of inauguration of output_of_query1\nQuery2: \"get_information(relation='Year of inauguration', head_entity='output_of_query1')\"\nStep3: Find the entity named aiguille du midi\nQuery3: \"get_information(relation='Tramway', tail_entity='aiguille du midi')\"\nStep4: Find the Year of inauguration of output_of_query3\nQuery4: \"get_information(relation='Year of inauguration', head_entity='output_of_query3')\"\nStep5: Compare the Year of inauguration of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 < output_of_query4 then output_of_query2 else output_of_query4\"",
    "what it the english title of the only song done with lyrics by v. shumsky?": "## Target type: {'English title'}\n## Query:\nStep1: Find the entity with Lyrics as Ratner\nQuery1: \"get_information(relation='Lyrics', tail_entity='V. Shumsky')\"\nStep2: Find the English title of output_of_query1\nQuery2: \"get_information(relation='English title', head_entity='output_of_query1')\"",
    "in which poll source did cuomo earn his top percentage rating?": "## Target type: {'Poll source'}\n## Query:\nStep1: Find the entity with the relation of 'Andrew Cuomo (D)'\nQuery1: \"get_information(relation='Andrew Cuomo (D)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max percentage rating\nQuery3: \"get_information(relation='Andrew Cuomo (D)', tail_entity='output_of_query2')\"\nStep4: Find the Poll source of output_of_query3\nQuery4: \"get_information(relation='Poll source', head_entity='output_of_query3')\"",
    "which one is below act": "None",
    "where is dublin?": "None",
    "after saturday, april 14, when was the other win?": "None",
    "how many terminals had at least 8 or more quay cranes?": "## Target type: {number}\n## Query:\nStep1: Find the terminals with at least 8 or more quay cranes\nQuery1: \"get_information(relation='Quay cranes', tail_entity>='8')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in 2007, what is the largest number of consecutive games won by the nebraska football team?": "None",
    "what is the total number of times between 2003 and 2012 they made it to the quarter finals?": "None",
    "what was the score after the season opener?": "None",
    "where was the last conference held?": "## Target type: {Place of Conference}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Place of Conference of output_of_query3\nQuery4: \"get_information(relation='Place of Conference', head_entity='output_of_query3')\"",
    "after scoring against bulgaria in zenica, ibricic also scored against this team in a 7-0 victory in zenica less then a month after the friendly match against bulgaria.": "None",
    "which television show was gauri in for the longest amount of time?": "None",
    "when did the first transfer occur in may 2009?": "None",
    "how many songs from the album \"intentions\" charted in the uk?": "None",
    "how many professional wins has christel boeljon had?": "None",
    "in total, how many times were they promoted?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Movements is 'Promotion'\nQuery1: \"get_information(relation='Movements', tail_entity='Promotion')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of laps completed by german teams?": "None",
    "does vitonen or kutonen have the larger division?": "## Target type: {division}\n## Query:\nStep1: Find the entity with the relation of Division contains \"vitonen\"\nQuery1: \"get_information(relation='Division', tail_entity='vitonen')\"\nStep2: Find the entity with the relation of Division contains \"kutonen\"\nQuery2: \"get_information(relation='Division', tail_entity='kutonen')\"\nStep3: Get the size of output_of_query1\nQuery3: \"size(set='output_of_query1')\" \nStep4: Get the size of output_of_query2\nQuery4: \"size(set='output_of_query2')\"\nStep5: Compare the size of output_of_query3 and output_of_query4 to find the larger division\nQuery5: \"if(set1='output_of_query3', set2='output_of_query4', operator='greater_than')\"",
    "what was this actor's first television role?": "## Target type: {'Role'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "how many votes did alan keyes receive?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity named Alan Keyes\nQuery1: \"get_information(relation='Candidate', tail_entity='Alan Keyes')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"",
    "how many years had at least 15 or more independent councillors?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Independent councillors and value >= 15\nQuery1: \"get_information(relation='Independent councillors', value>='15')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is listed the most in division ii community college?": "None",
    "how many rolls did jennifer tilly play in the 1980s?": "None",
    "which game at home had the most attendance?": "None",
    "which monarch had the most marriages?": "None",
    "what date what the first game on?": "None",
    "what is the total number of mills named cheshunt?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Cheshunt\nQuery1: \"get_information(relation='Location', tail_entity='Cheshunt')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what tournament takes place directly before the family circle cup?": "## Target type: {Tournament}\n## Query:\nStep1: Find the entity named Family Circle Cup\nQuery1: \"get_information(relation='Tournament', tail_entity='Family Circle Cup')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tournament of output_of_query4\nQuery5: \"get_information(relation='Tournament', head_entity='output_of_query4')\"",
    "georgia played on what 3 consecutive dates?": "None",
    "how many ranks do not have notes?": "None",
    "frank churchill is above whom": "None",
    "which class has the least displacement in tonnes?": "## Target type: {class}\n## Query:\nStep1: Find the entity with the relation of Displacement\nQuery1: \"get_information(relation='Displacement')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Displacement\nQuery3: \"get_information(relation='Displacement', tail_entity='output_of_query2')\"\nStep4: Find the class of output_of_query3\nQuery4: \"get_information(relation='Class', head_entity='output_of_query3')\"",
    "who was the top ranked competitor in this race?": "## Target type: {competitor}\n## Query:\nStep1: Find the entity with the relation of Rank equals to 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the competitor of output_of_query1\nQuery2: \"get_information(relation='Cyclist', head_entity='output_of_query1')\"",
    "was the total goals scored on june 14, 1982 more than 6?": "## Target type: {answer}\n## Query:\nStep1: Find the row_number on June 14, 1982\nQuery1: \"get_information(relation='Date', tail_entity='June 14, 1982')\"\nStep2: Find the total goals of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate if the total goals of output_of_query2 is more than 6\nQuery3: \"compare(value='output_of_query2', comparator='>', compare_value='6')\"",
    "when was their last loss?": "None",
    "other nation to earn no bronze medals besides peru": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Peru\nQuery1: \"get_information(relation='Nation', tail_entity='Peru')\"\nStep2: Find the number of bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity whose number of bronze medals is 0\nQuery3: \"get_information(relation='Bronze', tail_entity='0')\"\nStep4: Exclude output_of_query1 from output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who was the last de player?": "None",
    "what year was cassie signed to bad boy?": "## Target type: {'Year signed'}\n## Query:\nStep1: Find the entity named Cassie\nQuery1: \"get_information(relation='Act', tail_entity='Cassie')\"\nStep2: Find the year signed of output_of_query1\nQuery2: \"get_information(relation='Year signed', head_entity='output_of_query1')\"",
    "who took office right after uriah forrest?": "None",
    "what is olle ahlunds club and his position?": "None",
    "how many tracks last for more than three minutes?": "None",
    "what was the first film released in 2002?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the row_number with value 1\nQuery2: \"get_information(relation='row_number', tail_entity='1')\"\nStep3: Get the film of output_of_query2\nQuery3: \"get_information(relation='Film', head_entity='output_of_query2')\"",
    "how many countries appear more than once on the chart?": "None",
    "how many have an area of at least 20 km?": "None",
    "which country was in the top of the 11 rank group?": "## Target type: {country}\n## Query:\nStep1: Find the row_number of the 11th rank group\nQuery1: \"get_information(relation='row_number', tail_entity='11')\"\nStep2: Find the country in the output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many trams have a cream color in their livery?": "None",
    "what section did they play in the most?": "## Target type: {section}\n## Query:\nStep1: Find the entity that has the most occurrences in Section\nQuery1: \"get_information(relation='Section', tail_entity>='most')\"\nStep2: Find the Section of output_of_query1\nQuery2: \"get_information(relation='Section', head_entity='output_of_query1')\"",
    "who weighed the most?": "None",
    "which nation took the most bronze medals?": "None",
    "which is the first county on the chart": "## Target type: {county}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "which volume had the least number of images?": "None",
    "how many historic places are in new sharon?": "None",
    "what was the vote % in 2013?": "## Target type: {'Vote %'}\n## Query:\nStep1: Find the entity in Year that is 2013\nQuery1: \"get_information(relation='Year', tail_entity='2013')\"\nStep2: Find the vote % of output_of_query1\nQuery2: \"get_information(relation='Vote %', head_entity='output_of_query1')\"",
    "which one has a larger width, 8 or 21?": "None",
    "which network has the most airings?": "## Target type: {network}\n## Query:\nStep1: Find the entity with the relation of Air date\nQuery1: \"get_information(relation='Air date')\"\nStep2: Get the set with max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='Air date', tail_entity='output_of_query2')\"\nStep4: Find the network of output_of_query3\nQuery4: \"get_information(relation='Network', head_entity='output_of_query3')\"",
    "how many events were at the 1980 winter olympics?": "## Target type: {number}\n## Query:\nStep1: Find the entity named 1980 Winter Olympics\nQuery1: \"get_information(relation='Games', tail_entity='1980 Winter Olympics')\"\nStep2: Find the events of output_of_query1\nQuery2: \"get_information(relation='Events', head_entity='output_of_query1')\"",
    "who was eliminated by longkiri in their semi final task?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Longkiri\nQuery1: \"get_information(relation='Name', tail_entity='Longkiri')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "did the pune strykers or the karnataka lions have the highest win percentage?": "## Target type: {team}\n## Query:\nStep1: Find the win% of Pune Strykers\nQuery1: \"get_information(relation='Win%', head_entity='Pune Strykers')\"\nStep2: Find the win% of Karnataka Lions\nQuery2: \"get_information(relation='Win%', head_entity='Karnataka Lions')\"\nStep3: Compare the win% of output_of_query1 and output_of_query2\nQuery3: \"compare(output1='output_of_query1', output2='output_of_query2', operator='>')\"\nStep4: If output_of_query3 is True, then the team with highest win percentage is Pune Strykers. Otherwise, the team with highest win percentage is Karnataka Lions.",
    "name at least one film made in 2008": "## Target type: {film}\n## Query:\nStep1: Find all the films made in 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Get any one output_of_query1\nQuery2: \"get_any(set='output_of_query1', n=1)\"\nStep3: Get the film name of output_of_query2\nQuery3: \"get_information(relation='Film', head_entity='output_of_query2')\"",
    "list the opponents which are under the friendly competition.": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Friendly\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep2: Find the opponents under the output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "other than yamaha, name a wrestler that held the title for more than 300 days.": "None",
    "how many different parties are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the Party listed\nQuery1: \"get_information(relation='Party')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times has anton lyuboslavskiy competed in the olympic games?": "None",
    "what is the total number of primary schools in bushey that have no religious affiliation?": "None",
    "who is older--francis bosschaerts or peter maes?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Francis Bosschaerts\nQuery1: \"get_information(relation='Name', tail_entity='Francis Bosschaerts')\"\nStep2: Find the Date of birth of output_of_query1\nQuery2: \"get_information(relation='Date of birth', head_entity='output_of_query1')\"\nStep3: Find the entity named Peter Maes\nQuery3: \"get_information(relation='Name', tail_entity='Peter Maes')\"\nStep4: Find the Date of birth of output_of_query3\nQuery4: \"get_information(relation='Date of birth', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find the older one\nQuery5: \"if(output_of_query2 < output_of_query4, output_of_query2, output_of_query4)\"",
    "what is was the difference in score in the december 19th win?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity in Date that matches \"December 19\"\nQuery1: \"get_information(relation='Date', tail_entity='December 19')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Split the Score into two parts\nQuery5: \"split(input='output_of_query4', delimiter='\u2013')\"\nStep6: Calculate the difference between the first and second part of output_of_query5\nQuery6: \"subtract(x='output_of_query5[0]', y='output_of_query5[1]')\"",
    "there are only how many participants from crystal place?": "## Target type: {number of participants}\n## Query:\nStep1: Find the participants from Crystal Palace\nQuery1: \"get_information(relation='From', tail_entity='Crystal Palace')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the earliest film released?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which state is the most represented by the 11 institutions?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Institution\nQuery1: \"get_information(relation='Institution')\"\nStep2: Get the count of each state in output_of_query1\nQuery2: \"count_by_key(set='output_of_query1', key='State')\"\nStep3: Find the state with the most count in output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the state with the most count in output_of_query2\nQuery4: \"get_information(relation='State', tail_entity='output_of_query3')\"",
    "which team was last in terms of points up until this point?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many matches took place in the first premier?": "None",
    "who has competed more years, cuba or canada?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Nation is Cuba\nQuery1: \"get_information(relation='Nation', tail_entity='Cuba')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"\nStep3: Find the entity that Nation is Canada\nQuery3: \"get_information(relation='Nation', tail_entity='Canada')\"\nStep4: Find the years of output_of_query3\nQuery4: \"get_information(relation='Years', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find the country that has more years\nQuery5: \"if count(set='output_of_query2') > count(set='output_of_query4') then 'Cuba' else 'Canada'\"",
    "what is the total number of airports in townsville?": "## Target type: {number of airports}\n## Query:\nStep1: Find the entity that is Townsville\nQuery1: \"get_information(relation='Community', tail_entity='Townsville')\"\nStep2: Find the airports in output_of_query1\nQuery2: \"get_information(relation='Airport name', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the tallest building in bosie, idaho?": "None",
    "who was picked after frank burns?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Frank Burns\nQuery1: \"get_information(relation='Player', tail_entity='Frank Burns')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what is the only proposed community in the south asia region?": "## Target type: {community}\n## Query:\nStep1: Find the entity in the south asia region\nQuery1: \"get_information(relation='Region', tail_entity='South Asia')\"\nStep2: Find the proposed community of output_of_query1\nQuery2: \"get_information(relation='Community', head_entity='output_of_query1')\"",
    "who was the opponent previous to the south georgia wildcats?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Opponent is South Georgia Wildcats\nQuery1: \"get_information(relation='Opponent', tail_entity='South Georgia Wildcats')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "how many riders were not from the united states?": "None",
    "which head coach had the top win percentage?": "None",
    "who was this player's next partner after playing with marc lopez in may 2011?": "None",
    "what is the total attendance on 11/09/2013?": "None",
    "what opponent is below belgium?": "None",
    "how many loses did syracuse have in the season?": "## Target type: {number}\n## Query:\nStep1: Find the row with the relation of Result of \"L\" (lose) \nQuery1: \"get_information(relation='Result', tail_entity='L')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the first game released?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Release date\nQuery1: \"get_information(relation='Release date')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Release date\nQuery3: \"get_information(relation='Release date', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many years were they in tier 3": "## Target type: {number of years}\n## Query:\nStep1: Find the entity in Tier 3\nQuery1: \"get_information(relation='Tier', tail_entity='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the total amount of mountains located in ruma, bandarban?": "## Target type: {total amount of mountains}\n## Query:\nStep1: Find the entity named Ruma Bandarban\nQuery1: \"get_information(relation='Location', tail_entity='Ruma, Bandarban')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what song hit the highest spot on the uk chart?": "None",
    "which one has the latest target date?": "None",
    "how many times did eastwood score?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Eastwood\nQuery1: \"get_information(relation='Name', tail_entity='Eastwood')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which alumni in the 1990's has the least number of international caps?": "None",
    "how many skaters have at most 2600 points?": "None",
    "how many states have done executions in 2014?": "None",
    "how many canadian athletes finished at less than 1:30?": "None",
    "what title was released first, george gordon meade memorial or american legion freedom bell.": "None",
    "how many class s (scholarship) teams are on the chart?": "None",
    "which year has a crude birth rate of 29.1 with a population of 22,860?": "None",
    "what is the total of guest for the month of january": "None",
    "how long was the second longest time?": "None",
    "what was the show previous to music bank in 2009": "None",
    "who was the last head of the medici?": "## Target type: {Name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many songs are more than four minutes long?": "None",
    "in which two competitions did japan lack goals?": "## Target type: {competition}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Team', tail_entity='Japan')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the entity where goals is 0\nQuery3: \"get_information(relation='Goals', tail_entity='0')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "how long is the longest track on the album?": "## Target type: {length}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many years have no games when awarded in the historical simulation category?": "None",
    "who is the only person with the number 14?": "## Target type: {'Member of Legislative Assembly'}\n## Query:\nStep1: Find the entity with the relation of Constituency Number\nQuery1: \"get_information(relation='Constituency Number', tail_entity='14')\"\nStep2: Find the Member of Legislative Assembly of output_of_query1\nQuery2: \"get_information(relation='Member of Legislative Assembly', head_entity='output_of_query1')\"",
    "whivh is above g.skill and which one is below": "None",
    "how many were released after zenone, imperator d'oriente?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has Title 'Zenone, Imperator d'oriente'\nQuery1: \"get_information(relation='Title', tail_entity='Zenone, Imperator d'oriente')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with row_number larger than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the number of goals scored against faroe islands?": "None",
    "how long did it take for heidfeld to finish?": "None",
    "how many consecutive times did habte jifar place second in the 5000 m?": "None",
    "what were the total number of \"ties\" (people who finished with the exact same time?)": "## Target type: {number}\n## Query:\nStep1: Find the entity that has ties\nQuery1: \"get_information(relation='Time', tail_entity='ties')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many counties have larger areas than kilifi?": "None",
    "how long did 18 last?": "## Target type: {duration}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number', tail_entity='18')\"\nStep2: Find the duration of output_of_query1\nQuery2: \"get_information(relation='Duration', head_entity='output_of_query1')\"",
    "total races in 2003 season": "None",
    "what is the next film of ahsan's that will be released?": "None",
    "what was the total number of matches?": "None",
    "what series aired consecutively after 'mutual affection'?": "None",
    "list the encoding binaries for the first five integers in elias gamma encoding.": "None",
    "what is the total listed for gene sarazen?": "## Target type: {total}\n## Query:\nStep1: Find the entity named Gene Sarazen\nQuery1: \"get_information(relation='Player', tail_entity='Gene Sarazen')\"\nStep2: Find the total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the difference in foundation date between cusco and motul?": "None",
    "how many draws did ibv have?": "## Target type: {number of draws}\n## Query:\nStep1: Find the entity named IBV\nQuery1: \"get_information(relation='Team', tail_entity='IBV')\"\nStep2: Find the draws of output_of_query1\nQuery2: \"get_information(relation='Draw', head_entity='output_of_query1')\"",
    "how many times did they make it to the first round?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Round being \"First round\"\nQuery1: \"get_information(relation='Round', tail_entity='First round')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only liberal candidate to take office?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Party as \"Liberal\"\nQuery1: \"get_information(relation='Party', tail_entity='Liberal')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: If output_of_query2 is equal to 1, get the Name\nQuery3: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "in 1881, the most people lived in which division of middlesex?": "None",
    "how many players did not score a goal in cup play?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Cup that indicates not scoring a goal\nQuery1: \"get_information(relation='Cup', tail_entity='0')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\n\nNote: In this case, the value '0' is used to represent not scoring a goal in Cup play.",
    "what are the number of times an ipad was used as a platform?": "None",
    "what was the total number of countries that the england women's rfu played against?": "None",
    "which team was larger than the rest?": "None",
    "who was in office for the least amount of time?": "None",
    "how many group leaders were from the conservative party?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as Conservative\nQuery1: \"get_information(relation='Party', tail_entity='Conservative')\"\nStep2: Find the group leaders from output_of_query1\nQuery2: \"get_information(relation='Leader', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who is at the top out of the riders?": "## Target type: {'Rider'}\n## Query:\nStep1: Find the entity with the relation of Pos as '1'\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "how many more releases were in compact disc format than cassette tape?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the Format of compact disc\nQuery1: \"get_information(relation='Format', tail_entity='compact disc')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the Format of cassette tape\nQuery3: \"get_information(relation='Format', tail_entity='cassette tape')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many team players have less that 1 goal?": "## Target type: {number}\n## Query:\nStep1: Find the players with less than 1 goal\nQuery1: \"get_information(relation='goals', tail_entity<'1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what single was released after 2011?": "## Target type: {'Single'}\n## Query:\nStep1: Find the entities that have a Year greater than 2011\nQuery1: \"get_information(relation='Year', tail_entity>'2011')\"\nStep2: Find the Single of output_of_query1\nQuery2: \"get_information(relation='Single', head_entity='output_of_query1')\"",
    "what is the total number of times yelena slesarenko placed 1st, 2nd or 3rd during 2002 to 2011?": "None",
    "what is the number of tv shows that charmaine sheh has appeared on?": "None",
    "which division played most: division de honor or primera nacional?": "## Target type: {division}\n## Query:\nStep1: Find the entity with Division of Divisi\u00f3n de Honor\nQuery1: \"get_information(relation='Division', tail_entity='Divisi\u00f3n de Honor')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with Division of Primera Nacional\nQuery3: \"get_information(relation='Division', tail_entity='Primera Nacional')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4 to determine which division played the most\nQuery5: \"if row_number(output_of_query2) > row_number(output_of_query4): 'Divisi\u00f3n de Honor' else: 'Primera Nacional'\"",
    "what was mayer's best result: i.e his longest throw?": "## Target type: {result}\n## Query:\nStep1: Find the entity named Mayer\nQuery1: \"get_information(relation='Name', tail_entity='Mayer')\"\nStep2: Find Mayer's best result in the Notes relation\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"",
    "vernon cassel and reginald shaffer was sentenced how many years?": "None",
    "which nation was the only one to receive 3 medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that Total is 3\nQuery1: \"get_information(relation='Total', tail_entity='3')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the core diameter of the first 1/8 whitworth size (in)?": "## Target type: {core diameter}\n## Query:\nStep1: Find the entity that Whitworth size is 1/8\nQuery1: \"get_information(relation='Whitworth size', tail_entity='1/8')\"\nStep2: Find the core diameter of output_of_query1\nQuery2: \"get_information(relation='Core diameter', head_entity='output_of_query1')\"",
    "who had a larger total medal count, france or canada?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Canada\nQuery3: \"get_information(relation='Nation', tail_entity='Canada')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the total medals of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "who won the first one?": "None",
    "which swecon has had the most guests of honor?": "None",
    "what team other than maccabi tel aviv placed 1st last season?": "None",
    "how many characters were played in the tv series d.c. in the year 2000?": "None",
    "who was the youngest person to receive this award?": "None",
    "how many publications used a scale-of-one-to-ten scoring system?": "None",
    "which landmark was the built the longest ago?": "None",
    "what was the only town with two project locations?": "None",
    "what country does the least amount of successful defenses come from?": "None",
    "of the teams with 100% wins, which team played the most games?": "None",
    "what is the total number of titles listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what date was listed before june 28th?": "None",
    "who finished with the top time?": "None",
    "what was the number of stages in the 1983 tour de france?": "None",
    "what were the total number of times the u.s. open was the tournament?": "## Target type: {number}\n## Query:\nStep1: Find the entity named U.S. Open\nQuery1: \"get_information(relation='Tournament', tail_entity='U.S. Open')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive creatures are included on page 39?": "None",
    "how many teams won at least 2 games throughout the 1951 world ice hockey championships?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams with the relation of Won\nQuery1: \"get_information(relation='Won', tail_entity>='2')\"\nStep2: Find the number of teams from output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which clubs have no nickname?": "None",
    "how many years has stanford been national champion?": "None",
    "who was the top team of the apertura 2003 standings?": "## Target type: {'Team'}\n## Query:\nStep1: Find the team with the relation of Place as '1.'\nQuery1: \"get_information(relation='Place', tail_entity='1.')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which interval has the most justs?": "## Target type: {interval name}\n## Query:\nStep1: Find the entity with the relation of just (cents)\nQuery1: \"get_information(relation='just (cents)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max just (cents)\nQuery3: \"get_information(relation='just (cents)', tail_entity='output_of_query2')\"\nStep4: Find the interval name of output_of_query3\nQuery4: \"get_information(relation='interval name', head_entity='output_of_query3')\"",
    "what is the name of the company at the top of the chart?": "None",
    "how many medals did the usa win?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is USA\nQuery1: \"get_information(relation='Nation', tail_entity='USA')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "who was the next incumbent after john randolph?": "## Target type: {incumbent}\n## Query:\nStep1: Find the entity named John Randolph\nQuery1: \"get_information(relation='Incumbent', tail_entity='John Randolph')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Incumbent of output_of_query4\nQuery5: \"get_information(relation='Incumbent', head_entity='output_of_query4')\"",
    "what were the total number of victims in becej?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Becej\nQuery1: \"get_information(relation='Place', tail_entity='Becej')\"\nStep2: Find the total number of victims in output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "was the ferrari engine used by scuderia ferrari a v6 or v8?": "## Target type: {'Engine Type'}\n## Query:\nStep1: Find the entity with the relation of Constructor being Scuderia Ferrari\nQuery1: \"get_information(relation='Constructor', tail_entity='Scuderia Ferrari')\"\nStep2: Find the Engine of output_of_query1\nQuery2: \"get_information(relation='Engine', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Engine being Ferrari\nQuery3: \"get_information(relation='Engine', tail_entity='Ferrari')\"\nStep4: Find the unique Engine Type of output_of_query3\nQuery4: \"unique(set='output_of_query3', attribute='Type')\"",
    "in the 2002 pan pacific swimming championships women's 100 metre backstroke, canadian athletes claimed three consecutive finishes. what three finishes were they?": "None",
    "which is longer the carolina or kentucky race?": "## Target type: {race}\n## Query:\nStep1: Find the entity named Carolina Race\nQuery1: \"get_information(relation='Race', tail_entity='Carolina Race')\"\nStep2: Find the entity named Kentucky Race\nQuery2: \"get_information(relation='Race', tail_entity='Kentucky Race')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Find the difference between output_of_query3 and output_of_query4\nQuery5: \"calculate_difference(row1='output_of_query3', row2='output_of_query4')\"",
    "what version was the only alpha release?": "## Target type: {'Version'}\n## Query:\nStep1: Find the entity whose Development cycle is Alpha\nQuery1: \"get_information(relation='Development cycle', tail_entity='Alpha')\"\nStep2: Find the Version of output_of_query1\nQuery2: \"get_information(relation='Version', head_entity='output_of_query1')\"",
    "which game date had a higher attendance? february 8, 2009 or april 4, 2009?": "None",
    "what is the first destination after berkeley springs, wv?": "None",
    "how many members had businessman listed as their profession?": "## Target type: {number of members}\n## Query:\nStep1: Find the entity whose Profession is businessman\nQuery1: \"get_information(relation='Profession', tail_entity='businessman')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which mayor was elected immediately after michel deuzet?": "## Target type: {mayor}\n## Query:\nStep1: Find the entity named Michel Deuzet\nQuery1: \"get_information(relation='Name', tail_entity='Michel Deuzet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the mayor of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many countries total only received one bronze medal in the 1987 championship?": "None",
    "what show/film were both the 2011 filmfare awards and the 2011 screen awards on?": "None",
    "which division two team played twice in the 2000s.": "## Target type: {division two team}\n## Query:\nStep1: Find the row_number in the 2000s\nQuery1: \"get_information(relation='row_number', tail_entity>'2')\"\nStep2: Find the Division Two of output_of_query1\nQuery2: \"get_information(relation='Division Two', head_entity='output_of_query1')\"\nStep3: Find the unique values of output_of_query2\nQuery3: \"unique(set='output_of_query2')\"",
    "which athlete had the most penalties in riding?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Riding Penalties\nQuery1: \"get_information(relation='Riding\\nPenalties (pts)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Penalties\nQuery3: \"get_information(relation='Riding\\nPenalties (pts)', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "who was the last ranked competitor in group a?": "## Target type: {Name}\n## Query:\nStep1: Find the entity in Rank that has the highest value\nQuery1: \"get_information(relation='Rank', tail_entity>='highest')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who is the only player to play in 5 games, 1 as a sub?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity whose Games in campaign is 5 (1 as sub)\nQuery1: \"get_information(relation='Games in campaign', tail_entity='5 (1 as sub)')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the difference in gauge between works numbers 541 and 542?": "None",
    "how many countries had a time lower than 39:00:00?": "None",
    "what were the total number of laps completed by the 1st position winner?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the 1st position winner\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the total number of laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many episodes aired in english in the month of october?": "None",
    "which institutions have higher enrollment than carthage college?": "None",
    "what was the last year kazakhstan took first place in a completion, and what city was it located in?": "None",
    "how many nations participated?": "## Target type: {number of nations}\n## Query:\nStep1: Find all the nationalities\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many awards did whitney houston win for singles on her album whitney?": "None",
    "which of the girls had the least amount in archery?": "None",
    "what was the number of winners from argentina?": "## Target type: {number of winners}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='Location', tail_entity='Argentina')\"\nStep2: Get the number of winners from output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after susie, what came next?": "## Target type: {Model}\n## Query:\nStep1: Find the entity named Susie\nQuery1: \"get_information(relation='Model', tail_entity='Susie')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model of output_of_query4\nQuery5: \"get_information(relation='Model', head_entity='output_of_query4')\"",
    "what is the first mobile prefix for sotelco ltd.": "## Target type: {mobile prefix}\n## Query:\nStep1: Find the entity named Sotelco Ltd.\nQuery1: \"get_information(relation='Company', tail_entity='Sotelco Ltd.')\"\nStep2: Find the mobile prefix of output_of_query1\nQuery2: \"get_information(relation='Mobile Prefixes', head_entity='output_of_query1')\"\nStep3: Find the first output_of_query2\nQuery3: \"first(set='output_of_query2')\"",
    "what is the total amount of times the frankfurt marathon occurred?": "## Target type: {total amount}\n## Query:\nStep1: Find the entity named Frankfurt Marathon\nQuery1: \"get_information(relation='Competition', tail_entity='Frankfurt Marathon')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the number of defenceman drafted before 1985?": "None",
    "how many wins did they have before the november 19th game?": "None",
    "how long, in years, has the this world series been occurring?": "None",
    "dong biwu served in 1975. who was the previous president?": "## Target type: {president}\n## Query:\nStep1: Find the entity that served in 1975\nQuery1: \"get_information(relation='Tenure', tail_entity='1975')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the president of output_of_query4\nQuery5: \"get_information(relation='President', head_entity='output_of_query4')\"",
    "which location was used the most often?": "None",
    "how many runs batted in did darren daulton have?": "## Target type: {number of runs batted in}\n## Query:\nStep1: Find the entity named Darren Daulton\nQuery1: \"get_information(relation='Name', tail_entity='Darren Daulton')\"\nStep2: Find the runs batted in of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep3: Extract the runs batted in value from output_of_query2 using Calculator function\nQuery3: \"extract_numbers(string='output_of_query2')\"",
    "what is the only role she played with broadcaster itv2?": "## Target type: {'Character'}\n## Query:\nStep1: Find the entity that Broadcaster is ITV2\nQuery1: \"get_information(relation='Broadcaster', tail_entity='ITV2')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with relation of row_number that matches output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Character of output_of_query3\nQuery4: \"get_information(relation='Character', head_entity='output_of_query3')\"",
    "how many consecutive places start with the letters du?": "None",
    "what is the total number of members?": "None",
    "what was the first role kajal played?": "## Target type: {'Role'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "how many drivers placed below tony stewart?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity named Tony Stewart\nQuery1: \"get_information(relation='Driver', tail_entity='Tony Stewart')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the drivers with row_number greater than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many riders scored no points at all?": "None",
    "which episode was previous to target": "## Target type: {episode}\n## Query:\nStep1: Find the entity with the relation of Episode title equals to \"target\"\nQuery1: \"get_information(relation='Episode title', tail_entity='target')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Episode title of output_of_query4\nQuery5: \"get_information(relation='Episode title', head_entity='output_of_query4')\"",
    "what was the name of the first love story this director made?": "None",
    "how many drivers finished at least 40 laps?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number that has a value for Laps\nQuery1: \"get_information(relation='row_number', tail_entity='Laps')\"\nStep2: Find the row_number that has Laps greater than or equal to 40\nQuery2: \"get_information(relation='Laps', tail_entity>='40')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the only athlete to throw more than 18 meters?": "None",
    "what name is previous to wayne gretzky on the list?": "None",
    "how many buildings on the list are taller than 200 feet?": "## Target type: {number of buildings}\n## Query:\nStep1: Find the entity that has a height taller than 200 feet\nQuery1: \"get_information(relation='Height\\nft (m)', tail_entity>'200')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which men's winner had the greatest time?": "None",
    "who shot the best 73 m": "## Target type: {person}\n## Query:\nStep1: Find the entity with the relation of 80 yd (73 m)\nQuery1: \"get_information(relation='80 yd (73 m)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max 73 m\nQuery3: \"get_information(relation='80 yd (73 m)', tail_entity='output_of_query2')\"",
    "what season was the only round 1?": "## Target type: {season}\n## Query:\nStep1: Find the entity where Round is equal to 1\nQuery1: \"get_information(relation='Round', tail_entity='1')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "how many provinces have the same number of districts as kabul?": "None",
    "what year did the edmonton rush have their top season?": "None",
    "how many grandmasters does bulgaria have listed?": "## Target type: {number of grandmasters}\n## Query:\nStep1: Find the entity named Bulgaria\nQuery1: \"get_information(relation='Country', tail_entity='Bulgaria')\"\nStep2: Find the #GM of output_of_query1\nQuery2: \"get_information(relation='#GM', head_entity='output_of_query1')\"",
    "what is the total number of pylons listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of row_number\nQuery2: \"count(set='output_of_query1')\"",
    "how many different cities are the listed churches in?": "None",
    "how long does on the hunt run?": "None",
    "the muncie flyers played from 1910 to 1925 in all but one of those years. which year did the flyers not play?": "None",
    "which player's number of total goals is the same as his number of total appearances?": "None",
    "which party held the most seats but had a lesser turnout?": "None",
    "how many parts were published in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Latest public release date (edition) in 2005\nQuery1: \"get_information(relation='Latest public release date (edition)', tail_entity='2005')\"\nStep2: Find the Part of output_of_query1\nQuery2: \"get_information(relation='Part', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "did november 11 or november 25 have a greater attendance?": "## Target type: {'Attendance'}\n## Query:\nStep1: Find the entity with the relation of Date containing \"November 11\"\nQuery1: \"get_information(relation='Date', tail_entity='November 11')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date containing \"November 25\"\nQuery3: \"get_information(relation='Date', tail_entity='November 25')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare the Attendance of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many champions are listend in the north?": "## Target type: {number of champions}\n## Query:\nStep1: Find the entity listed in the North\nQuery1: \"get_information(relation='North')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the name of the first title released?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many of the shiratsuyu-class ships sank in 1944?": "None",
    "what was the number of party votes cast in 1987?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Election year equal to 1987\nQuery1: \"get_information(relation='Election year', tail_entity='1987')\"\nStep2: Get the number of party list votes of output_of_query1\nQuery2: \"get_information(relation='# of party list votes', head_entity='output_of_query1')\"",
    "what is the number of french speaking artist in the draw?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Language is French\nQuery1: \"get_information(relation='Language', tail_entity='French')\"\nStep2: Get the Draw of output_of_query1\nQuery2: \"get_information(relation='Draw', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many swimmers from china participated in the race?": "## Target type: {number of swimmers}\n## Query:\nStep1: Find the entity from Nationality is China\nQuery1: \"get_information(relation='Nationality', tail_entity='China')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did iiya illyin life more or less than 180 kg?": "None",
    "what is the total number of wins for macau?": "None",
    "how many more silvers did italy win compared to the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity of Italy\nQuery1: \"get_information(relation='Country', tail_entity='Italy')\"\nStep2: Find the entity of United States\nQuery2: \"get_information(relation='Country', tail_entity='United States')\"\nStep3: Find the silver medals of output_of_query1\nQuery3: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep4: Find the silver medals of output_of_query2\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query3', set2='output_of_query4')\"",
    "how many were released in march or april of any year?": "None",
    "number of silver and bronze medals for finland in the 1924 summer olympics": "None",
    "which wrestlers have the same year listed for their date as kodo fuyuki and the sandman?": "None",
    "how many cars spun off the track?": "## Target type: {number of cars}\n## Query:\nStep1: Find the entity that Driver is Felipe Massa\nQuery1: \"get_information(relation='Driver', tail_entity='Felipe Massa')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that spun off the track\nQuery3: \"get_information(relation='Time/Retired', tail_entity='off the track')\"\nStep4: Find the cars that spun off the track\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many games were played t waldstadion?": "## Target type: {number}\n## Query:\nStep1: Find the entity named T Waldstadion\nQuery1: \"get_information(relation='Game site', tail_entity='T Waldstadion')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many iso/iec were published before the year 2000?": "## Target type: {number of ISO/IEC standards}\n## Query:\nStep1: Find the ISO/IEC Standards that were published before the year 2000\nQuery1: \"get_information(relation='Status', tail_entity<'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team got more players, pop cola or gordon's?": "None",
    "what were the number of directors that stayed in office more than three years?": "None",
    "what is the number of fans in attendance at the game held at mile high stadium?": "## Target type: {number of fans}\n## Query:\nStep1: Find the entity with the relation of Venue is Mile High Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Mile High Stadium')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what were the total number of honors/award titles listed according to this chart?": "None",
    "which country was ranked as the top in the 1999 all-africa games?": "## Target type: {Nation}\n## Query:\nStep1: Find the entity that Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what many games does each episode have?": "None",
    "what is the name of the biggest capacity stadium?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity that has the biggest capacity\nQuery1: \"get_information(relation='Capacity', tail_entity>='biggest')\"\nStep2: Find the stadium of output_of_query1\nQuery2: \"get_information(relation='Stadium', head_entity='output_of_query1')\"",
    "who is the first pop musician on this list?": "## Target type: {Name}\n## Query:\nStep1: Find the entity that Notable as is Pop musician\nQuery1: \"get_information(relation='Notable as', tail_entity='Pop musician')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number from output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the number of awards she won total for the album whitney?": "None",
    "are there more films in tamil or telugu?": "## Target type: {language}\n## Query:\nStep1: Find the films in Tamil\nQuery1: \"get_information(relation='Language', tail_entity='Tamil')\"\nStep2: Find the films in Telugu\nQuery2: \"get_information(relation='Language', tail_entity='Telugu')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(set1='output_of_query3', set2='output_of_query4')\"\n\nNote: The compare function can return 'more', 'less', or 'equal'.",
    "which site was designated first, bank of montreal or bonsecours market?": "None",
    "tell me the number of times they competed in guatamala.": "None",
    "which name is first on the chart": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "tell me the single released immediately before \"hey joe\".": "## Target type: {Title}\n## Query:\nStep1: Find the entity named \"Hey Joe\"\nQuery1: \"get_information(relation='Title', tail_entity='Hey Joe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which woman had the best time?": "## Target type: {'Rider'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "of the 21 tallest buildings in oakland, which other building was constructed in the same decade as the financial center building?": "None",
    "what was the number of goals scored against croatia in 2006?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity with the relation of Year that matches \"2006\"\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the entity with the relation of GA of output_of_query1\nQuery2: \"get_information(relation='GA', head_entity='output_of_query1')\"",
    "what is the name of the place listed after dallas?": "## Target type: {name of place}\n## Query:\nStep1: Find the entity named Dallas\nQuery1: \"get_information(relation='Name of place', tail_entity='Dallas')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of place of output_of_query4\nQuery5: \"get_information(relation='Name of place', head_entity='output_of_query4')\"",
    "how many of the 1981 games were played at home?": "None",
    "what was the average result of the top three jumpers?": "None",
    "who was the top driver in round 14?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with relation Rd. as 14\nQuery1: \"get_information(relation='Rd.', tail_entity='14')\"\nStep2: Get the top driver of output_of_query1\nQuery2: \"get_information(relation='Winning Driver', head_entity='output_of_query1')\"",
    "how many wrestlers are there total on the chart?": "None",
    "which opponent is listed the most on this chart?": "None",
    "who has more artist credits, mink or willy?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Mink\nQuery1: \"get_information(relation='Artist', tail_entity='Mink')\"\nStep2: Find the entity named Willy\nQuery2: \"get_information(relation='Artist', tail_entity='Willy')\"\nStep3: Count the number of artist credits for output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Count the number of artist credits for output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "what is the average serial format of the arizona license plates?": "None",
    "how many consecutive seasons did prokom trefl sopot place as either champion, runner-up or third place?": "None",
    "matti yrjola had the same distance recorded as who?": "None",
    "did the australia ii win more or less races than the liberty?": "None",
    "how much more weight does the model 3 have over model 1?": "None",
    "the release dates are no earlier than what year?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Release date of output_of_query3\nQuery4: \"get_information(relation='Release date', head_entity='output_of_query3')\"\nStep5: Extract the year from output_of_query4\nQuery5: \"extract_year(date='output_of_query4')\"",
    "in the month of december 1917, what confirmed victory location came before asiago?": "None",
    "campbell won the hungaroring circuit. who won the next circuit?": "None",
    "how many players were dfs?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with position DF\nQuery1: \"get_information(relation='Pos.', tail_entity='DF')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which stadium has the second largest capacity in canada?": "None",
    "what was the first train to begin service?": "None",
    "did the hall of fame player awarded the year after tony coton earn more goals than he did?": "None",
    "which team drafted the only ol position player from mcmaster college?": "## Target type: {CFL Team}\n## Query:\nStep1: Find the entity with the relation of College as McMaster\nQuery1: \"get_information(relation='College', tail_entity='McMaster')\"\nStep2: Find the entities with the relation of Position as OL\nQuery2: \"get_information(relation='Position', tail_entity='OL')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the CFL Team of output_of_query3\nQuery4: \"get_information(relation='CFL Team', head_entity='output_of_query3')\"",
    "largest number of housemates was during season...": "None",
    "who was the first winning captain?": "None",
    "who had the least number of strokes at the 2010 us open?": "## Target type: {player}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many candidates are listed?": "None",
    "was \"the real ghostbusters\" made by activision or kemco?": "None",
    "which film has their role as regina?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the role of Regina\nQuery1: \"get_information(relation='Role', tail_entity='Regina')\"\nStep2: Find the film of output_of_query1\nQuery2: \"get_information(relation='Film', head_entity='output_of_query1')\"",
    "five was released in 1994. what was the previous album released?": "## Target type: {album}\n## Query:\nStep1: Find the entity with the relation of Year is 1994\nQuery1: \"get_information(relation='Year', tail_entity='1994')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "how many times has belarus been first runner-up?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Belarus\nQuery1: \"get_information(relation='Country/Territory', tail_entity='Belarus')\"\nStep2: Find the number of times Belarus has been first runner-up\nQuery2: \"get_information(relation='1st Runner-up', head_entity='output_of_query1')\"",
    "how many municipalities are in camarines sur?": "None",
    "what is the next call sign listed after kdsu?": "None",
    "the total amount of riders who did not qualify": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Pos is 'DNQ' or 'Did not qualify'\nQuery1: \"get_information(relation='Pos', tail_entity='DNQ')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the #11 tram has the same design elements as...": "None",
    "what was the total fee for ramires' transfer?": "None",
    "which award has he been nominated most for?": "## Target type: {award}\n## Query:\nStep1: Find the entity that has been nominated with the relation of Result\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Award of output_of_query4\nQuery5: \"get_information(relation='Award', head_entity='output_of_query4')\"",
    "what rank did the nation with the most total medals receive?": "None",
    "which universities had a number of wins higher than 12?": "None",
    "since 2000 how many kenyan men have won the marathon?": "None",
    "what was the best year for profit before 2010?": "None",
    "how long did it take the fifth place finisher to run the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the rank of 5\nQuery1: \"get_information(relation='Rank', tail_entity='5')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what is the total amount of players who played more than 3 games?": "## Target type: {number}\n## Query:\nStep1: Find the players who played more than 3 games\nQuery1: \"get_information(relation='Played', tail_entity>'3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the opponent in the last tournament?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity in Championship that appears the last.\nQuery1: \"get_information(relation='Championship', tail_entity>='last')\"\nStep2: Find the opponent in the final of output_of_query1\nQuery2: \"get_information(relation='Opponent in the final', head_entity='output_of_query1')\"",
    "did vietnam or south korea had the more silver medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Vietnam\nQuery1: \"get_information(relation='Nation', tail_entity='Vietnam')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named South Korea\nQuery3: \"get_information(relation='Nation', tail_entity='South Korea')\"\nStep4: Find the Silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Perform a comparison to determine which entity had more silver medals\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='more')\"",
    "what is the total number of title defenses completed by german champions?": "None",
    "how many schools left the genesee county b league before ainsworth?": "None",
    "how many riders do not have points?": "None",
    "what was the last year that vinnie dombroski won an award?": "None",
    "tell me the number of f-86 sabres in service.": "None",
    "where did camerin win singles after cagnes-sur-mer?": "## Target type: {location}\n## Query:\nStep1: Find the entity named Cagnes-sur-Mer\nQuery1: \"get_information(relation='Location', tail_entity='Cagnes-sur-Mer')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "how many consecutive fights did mocho cota win?": "## Target type: {number of consecutive fights}\n## Query:\nStep1: Find the entity named Mocho Cota\nQuery1: \"get_information(relation='Loser', tail_entity='Mocho Cota')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "japan and france each won how many gold medals?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Find the number of gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named France\nQuery3: \"get_information(relation='Nation', tail_entity='France')\"\nStep4: Find the number of gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"",
    "how many pianists completed at least two notable works?": "None",
    "how many racers finished the course in under forty seconds?": "None",
    "what is the difference between the population of san juan and sanchez ramirez?": "None",
    "what is the total number of boxing metals earned by the top 4 countries at the 1960 olympics?": "None",
    "how many townships are in leavenworth county?": "None",
    "the average number of games he played from 2008- 2013": "None",
    "which country has the highest total in the miss supranational pagent?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country/Territory', head_entity='output_of_query3')\"",
    "which technical challenge came directly after \"direct diposit\"?": "None",
    "liverpool had 8 wins. who is next?": "## Target type: {Team}\n## Query:\nStep1: Find the entity named Liverpool\nQuery1: \"get_information(relation='Team', tail_entity='Liverpool')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "what is eightysix's latest song?": "## Target type: {Title}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which player was defending the highest number of points at the time of his withdrawal from the 2010 french open?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Points defending\nQuery1: \"get_information(relation='Points defending')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points defending\nQuery3: \"get_information(relation='Points defending', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many communities are based in africa?": "## Target type: {number}\n## Query:\nStep1: Find the communities in Africa\nQuery1: \"get_information(relation='Region', tail_entity='Africa')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times has nbc hosted the awards?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity in Network that is NBC\nQuery1: \"get_information(relation='Network', tail_entity='NBC')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the earliest date of a flight?": "## Target type: {Date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "tell me the only song to get on the us rap chart.": "None",
    "who has the highest average?": "None",
    "what was the result of the last playoffs?": "## Target type: {'Playoffs'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Playoffs of output_of_query3\nQuery4: \"get_information(relation='Playoffs', head_entity='output_of_query3')\"",
    "did robert petty serve before josiah reeve?": "## Target type: {yes / no}\n## Query:\nStep1: Find the entity named Robert Petty\nQuery1: \"get_information(relation='Sheriff', tail_entity='Robert Petty')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Josiah Reeve\nQuery3: \"get_information(relation='Sheriff', tail_entity='Josiah Reeve')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if row_number of output_of_query1 is smaller than the row_number of output_of_query3\nQuery5: \"if(output_of_query2 < output_of_query4, 'yes', 'no')\"",
    "were there more with inside or outside cylinders?": "## Target type: {'cylinders'}\n## Query:\nStep1: Find the entity with relation Cylinders is 'Inside'\nQuery1: \"get_information(relation='Cylinders', tail_entity='Inside')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with relation Cylinders is 'Outside'\nQuery3: \"get_information(relation='Cylinders', tail_entity='Outside')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "when arcadia was reformed in 2011, how many municipalities were created?": "None",
    "how many kilometers did number 4110 travel?": "## Target type: {kilometers}\n## Query:\nStep1: Find the entity with the relation of Number\nQuery1: \"get_information(relation='Number', tail_entity='4110')\"\nStep2: Find the Kilometres Travelled of output_of_query1\nQuery2: \"get_information(relation='Kilometres Travelled', head_entity='output_of_query1')\"",
    "what was the last team to win in the first round proper?": "None",
    "who was the first american to become a champion?": "None",
    "which 2012 superhero film did not gross at least 100,000,000?": "None",
    "which election year had the least percentage of party list votes?": "None",
    "tell me the difference in the scores for the game in 1955.": "## Target type: {score difference}\n## Query:\nStep1: Find the game in 1955\nQuery1: \"get_information(relation='Year', tail_entity='1955')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate the score difference of output_of_query2\nQuery3: \"calculate_score_difference(set='output_of_query2')\"",
    "how many additional years will the rocky mountains (scopulorum) subspecies of p. ponderosa needles remain green compared to pacific (critchfieldiana)?": "None",
    "what is the only year that had 460 live births?": "None",
    "how many consecutive wins took place before they lost their first time?": "None",
    "did atlantic coast conference have more or less bids than colonial athletic association?": "## Target type: {'number of bids'}\n## Query:\nStep1: Find the entity named Atlantic Coast Conference\nQuery1: \"get_information(relation='Conference', tail_entity='Atlantic Coast Conference')\"\nStep2: Find the bids of output_of_query1\nQuery2: \"get_information(relation='Bids', head_entity='output_of_query1')\"\nStep3: Find the entity named Colonial Athletic Association\nQuery3: \"get_information(relation='Conference', tail_entity='Colonial Athletic Association')\"\nStep4: Find the bids of output_of_query3\nQuery4: \"get_information(relation='Bids', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is greater than output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "the team with the most gold medals": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what was the date of the last contest with the atlanta falcons?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity named Atlanta Falcons\nQuery1: \"get_information(relation='Opponent', tail_entity='Atlanta Falcons')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many were not part of \"the boys\" collected material?": "None",
    "who was the last driver from the uk to actually finish the 56 laps?": "None",
    "what was the only year the venue was in japan?": "## Target type: {year}\n## Query:\nStep1: Find the entity that the Venue is in Japan\nQuery1: \"get_information(relation='Venue', tail_entity='Japan')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what was the last year that the gore hundred was below 10,000?": "None",
    "mark skaife was the winnter of atcc round 1, but what was the name of his team?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity named Mark Skaife\nQuery1: \"get_information(relation='Winner', tail_entity='Mark Skaife')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what is the name of the first competition listed?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "how high is the strike rate of craig white, richard pyrah, and adam lyth combined?": "None",
    "which townships in pope county, arkansas have larger land area than smyrna township?": "None",
    "what was the next most commonly spoken language in poland after russian?": "## Target type: {language}\n## Query:\nStep1: Find the entity with the Language of Russian\nQuery1: \"get_information(relation='Language', tail_entity='Russian')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Language of output_of_query4\nQuery5: \"get_information(relation='Language', head_entity='output_of_query4')\"",
    "which morgan creek film grossed the most worldwide?": "## Target type: {'Title'}\n## Query:\nStep1: Find all entities with the relation of Gross (worldwide)\nQuery1: \"get_information(relation='Gross (worldwide)')\"\nStep2: Find the entity with the max Gross (worldwide)\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the relation of Gross (worldwide) and matches the max Gross (worldwide)\nQuery3: \"get_information(relation='Gross (worldwide)', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Title and matches output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the difference in weight between dexter fields and quincy taylor?": "## Target type: {weight difference}\n## Query:\nStep1: Find the entity named Dexter Fields\nQuery1: \"get_information(relation='Name', tail_entity='Dexter Fields')\"\nStep2: Find the weight of output_of_query1\nQuery2: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query1')\"\nStep3: Find the entity named Quincy Taylor\nQuery3: \"get_information(relation='Name', tail_entity='Quincy Taylor')\"\nStep4: Find the weight of output_of_query3\nQuery4: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between the weights of output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what year is after 2018, but does not have a place on the table?": "None",
    "how many placed in the t4 category?": "## Target type: {number}\n## Query:\nStep1: Find the Place in T4 category\nQuery1: \"get_information(relation='Place', tail_entity='T4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did japan have more starting appearances in the 2013 eaff east asian cup or 2007 fifa u-17 world cup?": "None",
    "when was the auction involving a kelvinator washing machine?": "## Target type: {'Auction Date'}\n## Query:\nStep1: Find the entity involving a Kelvinator washing machine\nQuery1: \"get_information(relation='Item', tail_entity='Kelvinator washing machine')\"\nStep2: Find the auction of output_of_query1\nQuery2: \"get_information(relation='Auction', head_entity='output_of_query1')\"\nStep3: Get the Auction Date of output_of_query2\nQuery3: \"get_information(relation='Auction Date', head_entity='output_of_query2')\"",
    "what year was eddie royal first in the leauge": "None",
    "which country has had the most men's winners?": "## Target type: {country}\n## Query:\nStep1: Find the entity in Men's winner that appears the most.\nQuery1: \"get_information(relation='Men's winner', tail_entity>='most')\"\nStep2: Find the Men's winner of output_of_query1.\nQuery2: \"get_information(relation='Men's winner', head_entity='output_of_query1')\"\nStep3: Extract the country from the Men's winner.\nQuery3: \"extract_entity(property='Country', entity='output_of_query2')\"",
    "at how many competitions did irina jump above 1.9 meters?": "None",
    "how many points did nobuatsu aoki earn?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Nobuatsu Aoki\nQuery1: \"get_information(relation='Rider', tail_entity='Nobuatsu Aoki')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how many players were transferred after the year 2000?": "## Target type: {number of players}\n## Query:\nStep1: Find the players that were transferred after the year 2000\nQuery1: \"get_information(relation='Year', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many points did blackpool score?": "None",
    "how long did michel crauste serve as captain?": "## Target type: {span}\n## Query:\nStep1: Find the entity named Michel Crauste\nQuery1: \"get_information(relation='Player', tail_entity='Michel Crauste')\"\nStep2: Find the span of output_of_query1\nQuery2: \"get_information(relation='Span', head_entity='output_of_query1')\"",
    "what year had the least number of contestants?": "None",
    "what was robert doornbos' total time for this race?": "## Target type: {'Time/Retired'}\n## Query:\nStep1: Find the entity named Robert Doornbos\nQuery1: \"get_information(relation='Driver', tail_entity='Robert Doornbos')\"\nStep2: Find the Time/Retired of output_of_query1\nQuery2: \"get_information(relation='Time/Retired', head_entity='output_of_query1')\"",
    "who rides a bike that is the same as troy bayliss' bike?": "None",
    "what is the total number of different models?": "## Target type: {number}\n## Query:\nStep1: Find all the models in the data\nQuery1: \"get_information(relation='Model')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the shortest bridge mccullough designed?": "None",
    "which country has the most uninominal deputies": "None",
    "how many games did this team play in 1982?": "None",
    "what is the total number of seats in the fourth duma?": "None",
    "which team has the most games behind (gb)?": "None",
    "which spanish tribunal was the only one to not have any autos da fe during this time period?": "## Target type: {spanish tribunal}\n## Query:\nStep1: Find the entity with the relation of Number of autos da fe being 0\nQuery1: \"get_information(relation='Number of autos da fe', tail_entity='0')\"\nStep2: Find the tribunal of output_of_query1\nQuery2: \"get_information(relation='Tribunal', head_entity='output_of_query1')\"",
    "what model has the same height as the mega disk'o?": "None",
    "how do you say 'do you speak afrikaans?' in afrikaans?": "## Target type: {'Afrikaans translation'}\n## Query:\nStep1: Find the entity where English is 'Do you speak Afrikaans?'\nQuery1: \"get_information(relation='English', tail_entity='Do you speak Afrikaans?')\"\nStep2: Get the Afrikaans translation of output_of_query1\nQuery2: \"get_information(relation='Afrikaans', head_entity='output_of_query1')\"",
    "the first time on the list is?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity that is the first on the list\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many total medals did the netherlands win?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity named Netherlands\nQuery1: \"get_information(relation='NPC', tail_entity='Netherlands')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what was the difference in votes for the first and second elections?": "None",
    "who came in last?": "## Target type: {'Name'}\n## Query:\nStep1: Find the row_number of the last entry\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what year was kelly marie's first single released": "## Target type: {year}\n## Query:\nStep1: Find the entity named Kelly Marie\nQuery1: \"get_information(relation='Single title', tail_entity='Kelly Marie')\"\nStep2: Find the Release date of output_of_query1\nQuery2: \"get_information(relation='Release date', head_entity='output_of_query1')\"\nStep3: Extract the year from output_of_query2\nQuery3: \"extract_year(date='output_of_query2')\"",
    "what is the total number of tanks sold by china to iraq?": "None",
    "what is the number of times rowell has won the naacp image award?": "None",
    "who was the first judge from florida to serve the position?": "None",
    "the central american championships and what other competition occurred in 2010?": "None",
    "how many plants have at least 1,500 employees?": "None",
    "how many chapters or clubs were founded in or before 1950?": "None",
    "jones won best actress in a play in 2005. which other award did she win that year?": "None",
    "which department has the least number of total deputies?": "## Target type: {department}\n## Query:\nStep1: Find the entity with the relation of Total Deputies\nQuery1: \"get_information(relation='Total Deputies')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total Deputies\nQuery3: \"get_information(relation='Total Deputies', tail_entity='output_of_query2')\"\nStep4: Find the department of output_of_query3\nQuery4: \"get_information(relation='Department', head_entity='output_of_query3')\"",
    "who ran the quickest race from italy?": "None",
    "did diomansy participate in his/her home country?": "## Target type: {yes or no}\n## Query:\nStep1: Find the entity named Diomansy Kamara\nQuery1: \"get_information(relation='Name', tail_entity='Diomansy Kamara')\"\nStep2: Find the From of output_of_query1\nQuery2: \"get_information(relation='From', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is equal to the home country\nQuery3: \"equals(set='output_of_query2', value='home country')\"",
    "what was the last team to play in the tournament?": "None",
    "what is the total number of episodes aired in july 2010?": "None",
    "did france or croatia have a larger finals total?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Country', tail_entity='France')\"\nStep2: Find the finals total of output_of_query1\nQuery2: \"get_information(relation='Finals Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Croatia\nQuery3: \"get_information(relation='Country', tail_entity='Croatia')\"\nStep4: Find the finals total of output_of_query3\nQuery4: \"get_information(relation='Finals Total', head_entity='output_of_query3')\"\nStep5: Compare the finals totals of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='larger')\"",
    "how many more silver medals did the united states win compared to russia?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity that is Russia\nQuery3: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep4: Find the Silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many different tv shows was gauri tejwani in before 2000?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Gauri Tejwani\nQuery1: \"get_information(relation='Role', tail_entity='Gauri Tejwani')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the TV shows before 2000\nQuery5: \"get_information(relation='Year', tail_entity<'2000')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what is the number of games that gillingham and peterborough united played in the first round proper?": "## Target type: {number of games}\n## Query:\nStep1: Find the row_number of the first round proper\nQuery1: \"get_information(relation='row_number', tail_entity='first round proper')\"\nStep2: Find the games involving Gillingham in output_of_query1\nQuery2: \"get_information(relation='Home team', tail_entity='Gillingham')\"\nStep3: Find the games involving Peterborough United in output_of_query1\nQuery3: \"get_information(relation='Home team', tail_entity='Peterborough United')\"\nStep4: Get the union of output_of_query2 and output_of_query3\nQuery4: \"set_union(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many athletes finished after 2:00:00?": "None",
    "which census subdivision has a larger land area, edmonton or winnipeg?": "## Target type: {census subdivision}\n## Query:\nStep1: Find the entity named Edmonton\nQuery1: \"get_information(relation='Census subdivision', tail_entity='Edmonton')\"\nStep2: Find the land area of output_of_query1\nQuery2: \"get_information(relation='Land area (km2, 2011)', head_entity='output_of_query1')\"\nStep3: Find the entity named Winnipeg\nQuery3: \"get_information(relation='Census subdivision', tail_entity='Winnipeg')\"\nStep4: Find the land area of output_of_query3\nQuery4: \"get_information(relation='Land area (km2, 2011)', head_entity='output_of_query3')\"\nStep5: Compare the land areas of output_of_query2 and output_of_query4 to find which one is larger\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='>')\"\nNote: You can use the Set and Calculator functions (e.g., set_difference, set_union, etc.) to implement the compare function.",
    "what was the difference in attendance between july 7 and july 8?": "## Target type: {attendance difference}\n## Query:\nStep1: Find the entity named July 7\nQuery1: \"get_information(relation='Date', tail_entity='July 7')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity named July 8\nQuery3: \"get_information(relation='Date', tail_entity='July 8')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the total amount of sacks with houston?": "None",
    "largest population center in michigan after detroit": "None",
    "what is the name of the last train on the list?": "## Target type: {'Train Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Train Name of output_of_query3\nQuery4: \"get_information(relation='Train Name', head_entity='output_of_query3')\"",
    "which date had the least amount of points listed?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Pts')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Pts', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "other than \"damaged\", how many vessels were reported lost between january 1, 1940 and may 11, 1940?": "None",
    "how many times was finland the opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Opponent', tail_entity='Finland')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many goals did elvir balji&#263; score altogether against estonia?": "None",
    "what is the total number of miss northern irelands that were from belfast?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Hometown is Belfast\nQuery1: \"get_information(relation='Hometown', tail_entity='Belfast')\"\nStep2: Find the Miss Northern Irelands that are from output_of_query1\nQuery2: \"get_information(relation='Miss Northern Ireland', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the name of the last area listed on this chart?": "None",
    "what week was the bye after?": "None",
    "which count had the least number of votes for obama?": "None",
    "how many total consituency are listed in the table?": "## Target type: {number of consituency}\n## Query:\nStep1: Find the entity named Constituency\nQuery1: \"get_information(relation='Constituency')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many points did the 2007 driver gain?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity that Season is 2007\nQuery1: \"get_information(relation='Season', tail_entity='2007')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "which film has their role under igiyook?": "## Target type: {film}\n## Query:\nStep1: Find the entity named Igiyook\nQuery1: \"get_information(relation='Role', tail_entity='Igiyook')\"\nStep2: Find the film of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "where did carlos pena go to school?": "## Target type: {school}\n## Query:\nStep1: Find the entity named Carlos Pena\nQuery1: \"get_information(relation='Player', tail_entity='Carlos Pena')\"\nStep2: Find the school of output_of_query1\nQuery2: \"get_information(relation='School', head_entity='output_of_query1')\"",
    "which ethnicity has the least percentage for islam": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity with the relation of Islam\nQuery1: \"get_information(relation='Islam')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Islam percentage\nQuery3: \"get_information(relation='Islam', tail_entity='output_of_query2')\"\nStep4: Find the ethnicity of output_of_query3\nQuery4: \"get_information(relation='Ethnicity', head_entity='output_of_query3')\"",
    "how many drivers participated in the 8th glover trophy race?": "None",
    "how many international tourism arrivals in 2010(x1000) did mexico have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mexico\nQuery1: \"get_information(relation='Selected Latin American countries', tail_entity='Mexico')\"\nStep2: Find the international tourism arrivals in 2010 of output_of_query1\nQuery2: \"get_information(relation='Internl. tourism arrivals 2010 (x 1000)', head_entity='output_of_query1')\"",
    "whem was illinois' highest scoring game?": "None",
    "hame the last member listed whose last name begins with \"p\".": "None",
    "on what date was the last game in which cardiff city f.c. scored 2 goals?": "None",
    "which album has the same name as its performer?": "## Target type: {'Album/Single'}\n## Query:\nStep1: Find the performer and album/single names\nQuery1: \"get_information(relation='Performer')\"\nQuery2: \"get_information(relation='Album/Single')\"\nStep2: Find the intersection of output_of_query1 and output_of_query2\nQuery2: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "how many films were shot in smff se-ma-for &#321;\u00f3d&#378;, poland?": "## Target type: {number of films}\n## Query:\nStep1: Find all the shoot locations\nQuery1: \"get_information(relation='Shoot Location')\"\nStep2: Find the shoot location of SMFF Se-Ma-For \u0141\u00f3d\u017a, Poland\nQuery2: \"get_information(relation='Shoot Location', tail_entity='SMFF Se-Ma-For \u0141\u00f3d\u017a, Poland')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long was bradford city in the administration?": "None",
    "how many barangays does the city of angono have?": "## Target type: {number of barangays}\n## Query:\nStep1: Find the entity named Angono\nQuery1: \"get_information(relation='City/Municipality', tail_entity='Angono')\"\nStep2: Find the number of barangays of output_of_query1\nQuery2: \"get_information(relation='No. of Barangays', head_entity='output_of_query1')\"",
    "how many schools are there in this conference?": "## Target type: {number of schools}\n## Query:\nStep1: Find the entity with the relation of School\nQuery1: \"get_information(relation='School')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name someone who was not in office more than 4 years.": "None",
    "how long are the terms for those deputy judges that are not re-elected?": "None",
    "what is the next show after 2009": "None",
    "which nation earned the most bronze medals, thailand or south korea?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Thailand\nQuery1: \"get_information(relation='Nation', tail_entity='Thailand')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity named South Korea\nQuery3: \"get_information(relation='Nation', tail_entity='South Korea')\"\nStep4: Find the bronze medals of output_of_query3\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query3')\"\nStep5: Compare the bronze medals of output_of_query2 and output_of_query4 to find the entity with the most bronze medals\nQuery5: \"if(output_of_query2 > output_of_query4, 'output_of_query1', 'output_of_query3')\"",
    "how many consecutive years did loose women run?": "None",
    "what team has only won twice and has never been a runners-up?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winners\nQuery1: \"get_information(relation='Winners')\"\nStep2: Find the entity with the relation of Runners-up\nQuery2: \"get_information(relation='Runners-up')\"\nStep3: Find the entity whose number of times won is 2\nQuery3: \"get_information(relation='Winners', tail_entity='2')\"\nStep4: Find the entity whose number of times runner-up is 0\nQuery4: \"get_information(relation='Runners-up', tail_entity='0')\"\nStep5: Get the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"",
    "how many years after the turin marathon did the berlin marathon occur?": "None",
    "li haiqiang and xu deshuai both played which position?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Li Haiqiang\nQuery1: \"get_information(relation='Player', tail_entity='Li Haiqiang')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named Xu Deshuai\nQuery3: \"get_information(relation='Player', tail_entity='Xu Deshuai')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "lesnar beat herring in ufc 87, in what event was his previous win?": "None",
    "who was the top player?": "## Target type: {player}\n## Query:\nStep1: Find the entity in the row_number that is the highest.\nQuery1: \"get_information(relation='row_number', tail_entity='highest')\"\nStep2: Find the player of output_of_query1.\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "did 2001 or 2002 had the more attendence?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is year 2001\nQuery1: \"get_information(relation='Year', tail_entity='2001')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that is year 2002\nQuery3: \"get_information(relation='Year', tail_entity='2002')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate which attendance is larger between output_of_query2 and output_of_query4\nQuery5: \"if_greater(set1='output_of_query2', set2='output_of_query4', value1='2001', value2='2002')\"",
    "how many seasons other than 1999 was their a spring series movement?": "None",
    "what was the last standard published?": "None",
    "the auckland aces and yorkshire carnegie qualified on what date?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Auckland Aces\nQuery1: \"get_information(relation='Team', tail_entity='Auckland Aces')\"\nStep2: Find the Qualified date of output_of_query1\nQuery2: \"get_information(relation='Qualified', head_entity='output_of_query1')\"\nStep3: Find the entity named Yorkshire Carnegie\nQuery3: \"get_information(relation='Team', tail_entity='Yorkshire Carnegie')\"\nStep4: Find the Qualified date of output_of_query3\nQuery4: \"get_information(relation='Qualified', head_entity='output_of_query3')\"",
    "which character is mentioned the most in the episode summaries?": "## Target type: {'character'}\n## Query:\nStep1: Find all the episode summaries\nQuery1: \"get_information(relation='Description')\"\nStep2: Find the count of each character mentioned in output_of_query1\nQuery2: \"count_characters(set='output_of_query1')\"\nStep3: Find the character with the highest count\nQuery3: \"max(set='output_of_query2')\"",
    "who won an award before ed schienbein in 1940?": "## Target type: {Player}\n## Query:\nStep1: Find the entity named Ed Schienbein\nQuery1: \"get_information(relation='Player', tail_entity='Ed Schienbein')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "spicy pony released a total of three games; their game, \"american mcgee's crooked house\" was released on which platforms?": "None",
    "when was the last time the team went 0-6?": "None",
    "who was the opening act at the viper room?": "## Target type: {opening act}\n## Query:\nStep1: Find the entity named Viper Room\nQuery1: \"get_information(relation='Venue', tail_entity='Viper Room')\"\nStep2: Find the opening act of output_of_query1\nQuery2: \"get_information(relation='Opening act', head_entity='output_of_query1')\"",
    "what's the total number of albums released by willy deville?": "## Target Type: {number}\n## Query:\nStep1: Find the entity named Willy DeVille\nQuery1: \"get_information(relation='Artist', tail_entity='Willy DeVille')\"\nStep2: Find all the albums released by output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was myst or sharp shooters game of the year first?": "None",
    "what home team is above gloucester city?": "## Target type: {home team}\n## Query:\nStep1: Find the entity named Gloucester City\nQuery1: \"get_information(relation='Home Team', tail_entity='Gloucester City')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Home Team of output_of_query4\nQuery5: \"get_information(relation='Home Team', head_entity='output_of_query4')\"",
    "how many total points did denver score in april of this season?": "None",
    "in which venue was the only round with more than 40,000 people in attendance?": "## Target type: {venue}\n## Query:\nStep1: Find the round with attendance greater than 40,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'40000')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "for how many consecutive years was challa narasimha naidu the chairperson?": "None",
    "who is the only member of the 94th united states congress to gain a senate seat because of his predecessor's death?": "None",
    "how many districts have more than 100,000 people in this city?": "## Target type: {number of districts}\n## Query:\nStep1: Find the districts with the relation of Population\nQuery1: \"get_information(relation='Districts', tail_entity='Population')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity whose population is larger than 100,000\nQuery3: \"get_information(relation='Population', tail_entity>'100000')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many years was the team banned from the arab nations cup?": "None",
    "what other team had the closest amount of wins?": "None",
    "what is the largest total number of points scored by both teams in an aloha bowl game?": "None",
    "how many more gold medals does china have over france?": "None",
    "how many of the universities were located in california?": "None",
    "how many crossings are in maryland?": "## Target type: {number of crossings}\n## Query:\nStep1: Find the entity that is Maryland\nQuery1: \"get_information(relation='Location', tail_entity='Maryland')\"\nStep2: Find the crossings of output_of_query1\nQuery2: \"get_information(relation='Crossing', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which country won only one medal, a bronze medal?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze', tail_entity='1')\"\nStep2: Find the entity with the relation of Total\nQuery2: \"get_information(relation='Total', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity with the relation of Nation\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what is the total number of different builders in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the builders in the table\nQuery1: \"get_information(relation='Builder')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of times france is listed on this chart?": "None",
    "was kiki jones picked before or after greg gohr?": "## Target type: {pick}\n## Query:\nStep1: Find the entity named Kiki Jones\nQuery1: \"get_information(relation='Player', tail_entity='Kiki Jones')\"\nStep2: Find the pick of output_of_query1\nQuery2: \"get_information(relation='Pick', head_entity='output_of_query1')\"\nStep3: Find the entity named Greg Gohr\nQuery3: \"get_information(relation='Player', tail_entity='Greg Gohr')\"\nStep4: Find the pick of output_of_query3\nQuery4: \"get_information(relation='Pick', head_entity='output_of_query3')\"\nStep5: Compare the pick of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what sport won the most gold medals?": "## Target type: {sport}\n## Query:\nStep1: Find the entity with the relation of Medal is Gold\nQuery1: \"get_information(relation='Medal', tail_entity='Gold')\"\nStep2: Find the sport of output_of_query1\nQuery2: \"get_information(relation='Sport', head_entity='output_of_query1')\"\nStep3: Find the entity that appears the most in output_of_query2\nQuery3: \"get_information(relation='Sport', tail_entity>='most')\"",
    "which school was in the columbus neighborhood and was demolished?": "## Target type: {school name}\n## Query:\nStep1: Find the entity in the Neighborhood named Columbus\nQuery1: \"get_information(relation='Neighborhood', tail_entity='Columbus')\"\nStep2: Find the entity in the Building Status named Demolished\nQuery2: \"get_information(relation='Building Status', tail_entity='Demolished')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the School Name of output_of_query3\nQuery4: \"get_information(relation='School Name', head_entity='output_of_query3')\"",
    "where did they play directly before the chicago rush game?": "None",
    "did hull city enter administration before january 1, 2001?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Hull City\nQuery1: \"get_information(relation='Club', tail_entity='Hull City')\"\nStep2: Find the entered administration date of output_of_query1\nQuery2: \"get_information(relation='Entered administration', head_entity='output_of_query1')\"\nStep3: Compare output_of_query2 with the date \"January 1, 2001\"\nQuery3: \"output_of_query2 < 'January 1, 2001'\"\nStep4: Convert the output_of_query3 to a yes/no answer\nQuery4: \"convert_to_yes_no(output_of_query3)\"",
    "what are the number of times e-swift appears under producers?": "None",
    "what is the top company that has the most employees?": "None",
    "name a player that play in no more than 13 innings.": "None",
    "what is the total number of names on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the last single from this music group?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the first year where this golfer scored in the top 10?": "## Target type: {year}\n## Query:\nStep1: Find the entity where Top 10s is greater than 0\nQuery1: \"get_information(relation='Top 10s', tail_entity>'0')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Get the min year of output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "how many bridges are longer than 200 feet?": "None",
    "which one has the least vote": "None",
    "as of october 25, 2005, how many active voters does the republican party have?": "## Target type: {number of active voters}\n## Query:\nStep1: Find the entity named Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Find the active voters of output_of_query1\nQuery2: \"get_information(relation='Active Voters', head_entity='output_of_query1')\"",
    "what are the total number of runers-up titles awarded?": "None",
    "how many total tournaments has he won?": "None",
    "how many total did mitsuo kamata have?": "## Target type: {total}\n## Query:\nStep1: Find the entity named Mitsuo Kamata\nQuery1: \"get_information(relation='Player', tail_entity='Mitsuo Kamata')\"\nStep2: Find the total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what are the total number of bronze medals sri lanka have earned?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Sri Lanka\nQuery1: \"get_information(relation='Nation', tail_entity='Sri Lanka')\"\nStep2: Find the total number of bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "which contestants won no future titles?": "None",
    "how many 3rd district representatives have resigned?": "None",
    "how many laps total were completed by all drivers?": "None",
    "who is in the first postion?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Pos is 1\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "number of teams that lost by three or fewer points in their final game of the tournament": "None",
    "how long were employees of nynex on strike?": "## Target type: {duration}\n## Query:\nStep1: Find the entity that Company is NYNEX\nQuery1: \"get_information(relation='Company', tail_entity='NYNEX')\"\nStep2: Find the duration of output_of_query1\nQuery2: \"get_information(relation='Duration of Strike', head_entity='output_of_query1')\"",
    "how many years before was the film bacchae out before the watermelon?": "None",
    "who was the top car design of the year in 2008?": "None",
    "list each date represented by locomotives at the museum.": "## Target type: {list of dates}\n## Query:\nStep1: Find the entity with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the distinct dates from output_of_query1\nQuery2: \"distinct(set='output_of_query1')\"",
    "how many consecutive games were played in dublin in 2010?": "None",
    "what is the total number of clubs in division 1?": "None",
    "who is listed as the last responsible mister(s) on this chart?": "## Target type: {responsible minister(s)}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the responsible minister(s) of output_of_query3\nQuery4: \"get_information(relation='Responsible Minister(s)', head_entity='output_of_query3')\"",
    "how many times was the round result higher than 11th?": "None",
    "what opponent is listed below venezuela?": "None",
    "which was the only kolmonen whose movements were promoted?": "None",
    "what is the combined wins of the clubs in the top 3 positions?": "None",
    "how many events were held in canada?": "None",
    "what is his total number of fights between april of 2003 and december of 2013?": "## Target type: {number of fights}\n## Query:\nStep1: Find the entity that Date is in the range between April 2003 and December 2013\nQuery1: \"get_information(relation='Date', key>='April 2003', key<='December 2013')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many winners won in semple stadium?": "None",
    "where was the conference held the year after buenos aires, argentina?": "## Target type: {Place}\n## Query:\nStep1: Find the entity named Buenos Aires, Argentina\nQuery1: \"get_information(relation='Place', tail_entity='Buenos Aires, Argentina')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "what is the total number of sales for the top 10 albums?": "None",
    "what are the total number of destinations in woodmont?": "## Target type: {number}\n## Query:\nStep1: Find the destination whose location is Woodmont\nQuery1: \"get_information(relation='Location', tail_entity='Woodmont')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive movies did he work with zheng junli on?": "None",
    "of those listed, which compound has the highest density?": "## Target type: {compound}\n## Query:\nStep1: Find the compound with the highest density\nQuery1: \"get_information(relation='density, g/cm3', tail_entity>='highest')\"\nStep2: Find the compound of output_of_query1\nQuery2: \"get_information(relation='Formula', head_entity='output_of_query1')\"",
    "which team has the highest number of consecutive calder memorial trophy winners?": "None",
    "which award did hantu tinta and kuntilanak both receive?": "None",
    "what is each interval name with a size (cents) greater than 500?": "## Target type: {interval name}\n## Query:\nStep1: Find the entity with the relation of size (cents) greater than 500\nQuery1: \"get_information(relation='size (cents)', tail_entity>'500')\"\nStep2: Get the interval name of output_of_query1\nQuery2: \"get_information(relation='interval name', head_entity='output_of_query1')\"",
    "what is the difference in square miles from angus and fife?": "## Target type: {difference in square miles}\n## Query:\nStep1: Find the entity named Angus\nQuery1: \"get_information(relation='MAINLAND', tail_entity='Angus')\"\nStep2: Find the Area in square miles of output_of_query1\nQuery2: \"get_information(relation='Area\\n(sq miles)', head_entity='output_of_query1')\"\nStep3: Find the entity named Fife\nQuery3: \"get_information(relation='MAINLAND', tail_entity='Fife')\"\nStep4: Find the Area in square miles of output_of_query3\nQuery4: \"get_information(relation='Area\\n(sq miles)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who was the chinese president immediately after dong biwu?": "None",
    "which songs charted in the united states, but not the uk?": "None",
    "what was the only year where the singer had a chart topping single?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Peak chart positions and its value is '1'\nQuery1: \"get_information(relation='Peak chart positions', tail_entity='1')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "previous to 2000, what city was listed the most?": "None",
    "what was the first movie that this actor received an award for starring in?": "None",
    "what was the date of the last game of the 1933-1934 season?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "role played at least twice": "## Target type: {role}\n## Query:\nStep1: Find the entities that appear at least twice in row_number\nQuery1: \"get_information(relation='row_number', tail_entity>='twice')\"\nStep2: Find the Role of output_of_query1\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"",
    "when the key tower was built in 1991, what was the previous tallest building constructed?": "None",
    "what is the difference in attendance between the first game in september and the last game in january?": "## Target type: {attendance difference}\n## Query:\nStep1: Find the entity that Date is in September\nQuery1: \"get_information(relation='Date', tail_entity='September')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that Date is in January\nQuery3: \"get_information(relation='Date', tail_entity='January')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(value1='output_of_query4', value2='output_of_query2')\"",
    "what is the only team to wear a star representing olympic victories?": "## Target type: {National Team}\n## Query:\nStep1: Find the entity with the relation of Title(s) represented\nQuery1: \"get_information(relation='Title(s) represented', tail_entity='Olympic')\"\nStep2: Find the National Team of output_of_query1\nQuery2: \"get_information(relation='National Team', head_entity='output_of_query1')\"",
    "who were the 6 teams to play in the first leg of the 2011 caf u-23 championship qualification?": "None",
    "where was it held the year before it was in the dominican republic?": "None",
    "who is the only person to score in the march 6 game against videoton this season?": "None",
    "how many ghostbusters games were released in 1990?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with the year of 1990\nQuery1: \"get_information(relation='Year', tail_entity='1990')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which u-boat was the first to sink": "## Target type: {'Number'}\n## Query:\nStep1: Find the entity with the relation 'row_number'\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Number of output_of_query3\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"",
    "what date was the last game played on?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what is the total number of preserved hunslet narrow gauge locomotives currently located in ffestiniog railway": "None",
    "the 2012 regular season results were the same as what other year?": "None",
    "which category of downloadable content had the most releases?": "None",
    "how many years was it before the first partly free status?": "None",
    "name a party that got, at most, 2% of the votes.": "None",
    "lorant olah scored the same number of goals in the uefa cup as what other player?": "None",
    "what was the 1st leg score in the match between lamia and kastoria?": "## Target type: {'1st leg score'}\n## Query:\nStep1: Find the row_number of entity Lamia\nQuery1: \"get_information(relation='Team #1', tail_entity='Lamia')\"\nStep2: Find the 1st leg score of output_of_query1\nQuery2: \"get_information(relation='1st leg', head_entity='output_of_query1')\"",
    "who is the only serbian player?": "None",
    "which stadium can hold more people than ballymena showgrounds, but less than windsor park?": "None",
    "which game number had the most attendance?": "## Target type: {game number}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the game number of output_of_query3\nQuery4: \"get_information(relation='#', head_entity='output_of_query3')\"",
    "what is the name of the venue where the last competition was played?": "None",
    "which author is the most prominent in the 1599 edition?": "None",
    "which team ranked below chile's?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team is Chile\nQuery1: \"get_information(relation='Team', tail_entity='Chile')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity with rank greater than output_of_query2\nQuery3: \"get_information(relation='Rank', tail_entity>'output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what was the difference between spain's winners and germany's winners?": "None",
    "which state regent is from the same hometown as ronald h. white, m.d.?": "None",
    "which producers produced the majority of songs on this record?": "None",
    "how long does a chromic catgut maintain it's strength for": "None",
    "which university had more than 10,000 in enrollment and their athletic nickname is bulldogs?": "## Target type: {university}\n## Query:\nStep1: Find the universities with enrollment more than 10,000\nQuery1: \"get_information(relation='Total enrollment', tail_entity>'10000')\"\nStep2: Find the universities with athletic nickname 'Bulldogs'\nQuery2: \"get_information(relation='Athletic nickname', tail_entity='Bulldogs')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "which was opened first?": "None",
    "who did they play in the game listed directly above july 25, 1952?": "## Target type: {opponents}\n## Query:\nStep1: Find the entity with the relation of Date as \"July 25, 1952\"\nQuery1: \"get_information(relation='Date', tail_entity='July 25, 1952')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponents of output_of_query4\nQuery5: \"get_information(relation='Opponents', head_entity='output_of_query4')\"",
    "james stephens won in 1976-76. who won three years before that?": "None",
    "how many nations are ranked 9th?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity with the relation of Rank is 9th\nQuery1: \"get_information(relation='Rank', tail_entity='9')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total point difference between the driver who received the most points and the driver who received the least?": "None",
    "what was the last year for ppopp?": "None",
    "where did netwon score at least 3 times?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that scored at least 3 times\nQuery1: \"get_information(relation='Scored', tail_entity>='3')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "what was the nation called before the book of esther called it hodu?": "None",
    "what is the total of abbreviations?": "## Target type: {number}\n## Query:\nStep1: Find all the abbreviations\nQuery1: \"get_information(relation='Abbreviation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the song to run 04:20": "## Target type: {song}\n## Query:\nStep1: Find the entity that has the Length (m:ss) of 04:20\nQuery1: \"get_information(relation='Length (m:ss)', tail_entity='04:20')\"\nStep2: Find the song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "which church, in addition to gildeskal church, was also built in the 1800s?": "None",
    "what are the number of channels owned by the government?": "## Target type: {number}\n## Query:\nStep1: Find the entity with Ownership as Government\nQuery1: \"get_information(relation='Ownership', tail_entity='Government')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many runs does andrew gale have?": "## Target type: {number of runs}\n## Query:\nStep1: Find the entity named Andrew Gale\nQuery1: \"get_information(relation='Player', tail_entity='Andrew Gale')\"\nStep2: Find the runs of output_of_query1\nQuery2: \"get_information(relation='Runs', head_entity='output_of_query1')\"",
    "which conference had their last year as 2011?": "None",
    "how many people are not driving a chevrolet silverado?": "None",
    "which city has the largest number of people in camarines sur?": "None",
    "which city has the largest number of historic sites?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Historic Sites\nQuery1: \"get_information(relation='Name', tail_entity='Historic Sites')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"\nStep3: Calculate the count of each city in output_of_query2\nQuery3: \"count(set='output_of_query2', by='City')\"\nStep4: Find the city with the maximum count\nQuery4: \"argmax(set='output_of_query3')\"",
    "how many years have an inflation index above 90?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Inflation Index\nQuery1: \"get_information(relation='Inflation Index')\"\nStep2: Find the years with Inflation Index above 90\nQuery2: \"get_information(relation='Inflation Index', tail_entity>'90')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which song is last on the list?": "## Target type: {'Song'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "how many national parks are in finland?": "## Target type: {number of national parks}\n## Query:\nStep1: Find the entity with the relation of National park\nQuery1: \"get_information(relation='National park')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the only candidate that was first elected in 1811.": "None",
    "which building has the most floors according to this chart?": "None",
    "how many private owned channels are there?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Ownership being Private\nQuery1: \"get_information(relation='Ownership', tail_entity='Private')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many clubs had a positive goal difference?": "## Target type: {number}\n## Query:\nStep1: Find the clubs with a positive goal difference\nQuery1: \"get_information(relation='Goal Difference', tail_entity>'0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had the most points in running, sergio salazar or eric walther?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Sergio Salazar\nQuery1: \"get_information(relation='Athlete', tail_entity='Sergio Salazar')\"\nStep2: Find the points in Running Time of output_of_query1\nQuery2: \"get_information(relation='Running Time (pts)', head_entity='output_of_query1')\"\nStep3: Find the entity named Eric Walther\nQuery3: \"get_information(relation='Athlete', tail_entity='Eric Walther')\"\nStep4: Find the points in Running Time of output_of_query3\nQuery4: \"get_information(relation='Running Time (pts)', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the only year a title made the peak chart position?": "None",
    "which country had the most finishers in the top 8?": "None",
    "what was the name of the first race title?": "## Target type: {'Race Title'}\n## Query:\nStep1: Find the entity with the relation of row_number as '1'\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Race Title of output_of_query1\nQuery2: \"get_information(relation='Race Title', head_entity='output_of_query1')\"",
    "who had more total wins, eui-jong or se-hyun?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Eui-Jong\nQuery1: \"get_information(relation='Player', tail_entity='Eui-Jong')\"\nStep2: Find the Total W-L of output_of_query1\nQuery2: \"get_information(relation='Total W-L', head_entity='output_of_query1')\"\nStep3: Find the entity named Se-Hyun\nQuery3: \"get_information(relation='Player', tail_entity='Se-Hyun')\"\nStep4: Find the Total W-L of output_of_query3\nQuery4: \"get_information(relation='Total W-L', head_entity='output_of_query3')\"\nStep5: Compare the total wins of output_of_query2 and output_of_query3\nQuery5: \"calculate(comparison='greater', value1='output_of_query2', value2='output_of_query4')\"",
    "what main driver made the most points in the pcwrc?": "None",
    "which member of the 500 club has the least amount of home runs?": "## Target type: {player}\n## Query:\nStep1: Find all the entities with relation of HR\nQuery1: \"get_information(relation='HR')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min HR\nQuery3: \"get_information(relation='HR', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the total number of countries in this preliminary qualifying round": "None",
    "what is total amount of submission victories?": "None",
    "how many games happened in 1987?": "None",
    "what was the only year a men's runner-up was from toronto?": "## Target type: {year}\n## Query:\nStep1: Find the entity whose Men's runner-up is Toronto\nQuery1: \"get_information(relation='Men's runner-up', tail_entity='Toronto')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Filter the output_of_query3 whose count is 1\nQuery4: \"filter(set='output_of_query3', condition='count==1')\"",
    "how many times did john mullane win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named John Mullane\nQuery1: \"get_information(relation='Player', tail_entity='John Mullane')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years was the distance greater than 9 meters?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that has a distance greater than 9 meters\nQuery1: \"get_information(relation='Notes', tail_entity>'9 meters')\"\nStep2: Get the years of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many attended the june 22 game?": "## Target type: {number}\n## Query:\nStep1: Find the entity named June 22\nQuery1: \"get_information(relation='Date', tail_entity='June 22')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "did the tampa bay lightning have the least amount of wins?": "None",
    "which game did georgia score the largest amount of points in?": "None",
    "who was the only winner to have their time below 61:45:00?": "None",
    "how many times has anton lyuboslavskiy scored above 20 m?": "None",
    "what are the total number of times the status is listed as roaming?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Status as roaming\nQuery1: \"get_information(relation='Status', tail_entity='roaming')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many conventions in total have been held in chicago?": "None",
    "how many total songs did shameless perform on?": "None",
    "what was the total attendance of weeks 1 and 2?": "## Target type: {total attendance}\n## Query:\nStep1: Find the entity that Week is 1 or Week is 2\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that Week is 2\nQuery3: \"get_information(relation='Week', tail_entity='2')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"",
    "what manufacturer is listed for max biaggi and marcellino lucchi?": "## Target type: {manufacturer}\n## Query:\nStep1: Find the entity named Max Biaggi\nQuery1: \"get_information(relation='Rider', tail_entity='Max Biaggi')\"\nStep2: Find the manufacturer of output_of_query1\nQuery2: \"get_information(relation='Manufacturer', head_entity='output_of_query1')\"\nStep3: Find the entity named Marcellino Lucchi\nQuery3: \"get_information(relation='Rider', tail_entity='Marcellino Lucchi')\"\nStep4: Find the manufacturer of output_of_query3\nQuery4: \"get_information(relation='Manufacturer', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "who was the top scorer from switzerland?": "None",
    "which cities population will grow the least?": "None",
    "which title was after the year 1991 but before the year 1993?": "## Target type: {title}\n## Query:\nStep1: Find the entity with the relation of Year that is after the year 1991\nQuery1: \"get_information(relation='Year', tail_entity>'1991')\"\nStep2: Find the entity with the relation of Year that is before the year 1993\nQuery2: \"get_information(relation='Year', tail_entity<'1993')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which track is at the top of the us chart?": "None",
    "what is the name of the single that was not released before 2012?": "## Target type: {single}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity whose Year is greater than 2012\nQuery2: \"get_information(relation='Year', tail_entity>'2012')\"\nStep3: Get the single of output_of_query2\nQuery3: \"get_information(relation='Single', head_entity='output_of_query2')\"",
    "how many deaths were in year 2012 due to plan accidents?": "## Target type: {number of deaths}\n## Query:\nStep1: Find the entity that year is 2012\nQuery1: \"get_information(relation='year', tail_entity='2012')\"\nStep2: Find the deaths of output_of_query1\nQuery2: \"get_information(relation='deaths', head_entity='output_of_query1')\"",
    "who came in earlier, tony maggs or jo siffert?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Tony Maggs\nQuery1: \"get_information(relation='Driver', tail_entity='Tony Maggs')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Jo Siffert\nQuery3: \"get_information(relation='Driver', tail_entity='Jo Siffert')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how long was there between when 1-4 was composed and when it was published?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity named 1-4\nQuery1: \"get_information(relation='Series number', tail_entity='1-4')\"\nStep2: Find the composed date of output_of_query1\nQuery2: \"get_information(relation='Composed', head_entity='output_of_query1')\"\nStep3: Find the published date of output_of_query1\nQuery3: \"get_information(relation='Published', head_entity='output_of_query1')\"\nStep4: Calculate the time duration between output_of_query2 and output_of_query3\nQuery4: \"time_duration(start_date='output_of_query2', end_date='output_of_query3')\"",
    "amount of seasons with a winning record": "None",
    "who appeared on more albums, maccoll or kornog?": "## Target type: {'Performer'}\n## Query:\nStep1: Find the entity that appeared on albums named Maccoll\nQuery1: \"get_information(relation='Performer', tail_entity='Maccoll')\"\nStep2: Find the albums of output_of_query1\nQuery2: \"get_information(relation='Album/Single', head_entity='output_of_query1')\"\nStep3: Find the entity that appeared on albums named Kornog\nQuery3: \"get_information(relation='Performer', tail_entity='Kornog')\"\nStep4: Find the albums of output_of_query3\nQuery4: \"get_information(relation='Album/Single', head_entity='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare_count(set1='output_of_query2', set2='output_of_query4')\"",
    "other than \"dem boyz\", name a track produced by nitti.": "## Target type: {Title}\n## Query:\nStep1: Find the entity that is Nitti\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Nitti')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"\nStep3: Get a random output_of_query2\nQuery3: \"random(set='output_of_query2')\"",
    "what date were the results all below one?": "None",
    "what was david d'or's first album?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many times has galaxy won the derby?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Galaxy\nQuery1: \"get_information(relation='Derby winner', tail_entity='Galaxy')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which artists had more then 6 release titles": "None",
    "name of the only gangster game from developer genuine games": "## Target type: {'Title'}\n## Query:\nStep1: Find all the entities with the relation of Developer\nQuery1: \"get_information(relation='Developer')\"\nStep2: Find the entity with the relation of Genuine Games in output_of_query1\nQuery2: \"get_information(relation='Developer', tail_entity='Genuine Games')\"\nStep3: Find the entity with the relation of Title in output_of_query2\nQuery3: \"get_information(relation='Title', head_entity='output_of_query2')\"",
    "what is the name of the last song on the album?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which tier appears the most?": "None",
    "did they place better in 1987/88 or 1993/94?": "None",
    "how many films were from argentina?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='Country', tail_entity='Argentina')\"\nStep2: Calculate the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many drivers raced in the preliminary round?": "None",
    "this table shows the difference between how many transliterations?": "None",
    "what is the total number of the population in 2002?": "None",
    "what versions are at least 7 minutes long?": "## Target type: {versions}\n## Query:\nStep1: Find the versions that have a length of at least 7 minutes\nQuery1: \"get_information(relation='Length', tail_entity>='7:00')\"\nStep2: Get the versions of output_of_query1\nQuery2: \"get_information(relation='Version', head_entity='output_of_query1')\"",
    "how many albums sold for than 50,000 copies this year?": "None",
    "what was the next ship launch after the pegasus?": "None",
    "what is the last model and its origin?": "None",
    "name each athlete for the russian team.": "None",
    "which country had an athlete place in the top 5 but not the top 3?": "None",
    "compare the scottish national party to the conservative and determine which party had their leaders in office for a longer time.": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Party named Scottish National Party\nQuery1: \"get_information(relation='Party', tail_entity='Scottish National Party')\"\nStep2: Find the duration of office for output_of_query1\nQuery2: \"duration(set='output_of_query1')\"\nStep3: Find the entity with the relation of Party named Conservative\nQuery3: \"get_information(relation='Party', tail_entity='Conservative')\"\nStep4: Find the duration of office for output_of_query3\nQuery4: \"duration(set='output_of_query3')\"\nStep5: Compare the durations of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "each department of bolivia's legislature has at least how many deputies.": "None",
    "how many times has a team with only chinese players won a championship?": "None",
    "how long did sailor moon air for during season one originally?": "None",
    "what was the first award he was nominated for?": "## Target type: {'Award'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Award of output_of_query3\nQuery4: \"get_information(relation='Award', head_entity='output_of_query3')\"",
    "how many regions had a release date after march 10, 2011?": "None",
    "according to this table, did mexico or italy have more 'friendly' competitions against spain?": "## Target type: {'Result'}\n## Query:\nStep1: Find the entity named Mexico\nQuery1: \"get_information(relation='Opponent', tail_entity='Mexico')\"\nStep2: Find the entity named Italy\nQuery2: \"get_information(relation='Opponent', tail_entity='Italy')\"\nStep3: Find the competitions against Spain for output_of_query1\nQuery3: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep4: Find the competitions against Spain for output_of_query2\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query2')\"\nStep5: Calculate the count of output_of_query3\nQuery5: \"count(set='output_of_query3')\"\nStep6: Calculate the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the counts of output_of_query5 and output_of_query6\nQuery7: \"compare_values(value1='output_of_query5', value2='output_of_query6')\"",
    "how many judges were appointed by president carter?": "## Target type: {number of judges}\n## Query:\nStep1: Find the entity named President Carter\nQuery1: \"get_information(relation='Appointed by', tail_entity='President Carter')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which church not in atlanta has weekly collections in excess of $25,000?": "None",
    "which nationality is both scott birnie and bob mormina?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity named Scott Birnie\nQuery1: \"get_information(relation='Player', tail_entity='Scott Birnie')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Bob Mormina\nQuery3: \"get_information(relation='Player', tail_entity='Bob Mormina')\"\nStep4: Find the nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "of those football venues containing the first and last name of a person as part of the name, which is in last place for seating capacity?": "None",
    "which team had four gold models and one bronze medal?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has four gold models and one bronze medal\nQuery1: \"get_information(relation='Gold', tail_entity>='4')\"\nQuery2: \"get_information(relation='Bronze', tail_entity='1')\"\nStep2: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "after the ordway building which is the tallest?": "## Target type: {building}\n## Query:\nStep1: Find the entity named Ordway Building\nQuery1: \"get_information(relation='Name', tail_entity='Ordway Building')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the number of points that chris amon earned?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Chris Amon\nQuery1: \"get_information(relation='Driver', tail_entity='Chris Amon')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "what is the difference between dennis rodman's offensive rebounds and robert parish offensive rebounds?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Dennis Rodman\nQuery1: \"get_information(relation='Player', tail_entity='Dennis Rodman')\"\nStep2: Find the offensive rebounds of output_of_query1\nQuery2: \"get_information(relation='Off', head_entity='output_of_query1')\"\nStep3: Find the entity named Robert Parish\nQuery3: \"get_information(relation='Player', tail_entity='Robert Parish')\"\nStep4: Find the offensive rebounds of output_of_query3\nQuery4: \"get_information(relation='Off', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 - output_of_query4\"",
    "how many chinese characters is juk faat wan?": "None",
    "kode-tv and wsil-tv both are a part of which network?": "## Target type: {network}\n## Query:\nStep1: Find the entity named KODE-TV\nQuery1: \"get_information(relation='Callsign', tail_entity='KODE-TV')\"\nStep2: Find the network of output_of_query1\nQuery2: \"get_information(relation='Network', head_entity='output_of_query1')\"\nStep3: Find the entity named WSIL-TV\nQuery3: \"get_information(relation='Callsign', tail_entity='WSIL-TV')\"\nStep4: Find the network of output_of_query3\nQuery4: \"get_information(relation='Network', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "is the vista more than the aspect?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Vista\nQuery1: \"get_information(relation='Model', tail_entity='Vista')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity named Aspect\nQuery3: \"get_information(relation='Model', tail_entity='Aspect')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Compare the length of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how much higher, in feet, is marmolada than vernel?": "None",
    "does maqbool have longer notes than shakti?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity titled Maqbool\nQuery1: \"get_information(relation='Title', tail_entity='Maqbool')\"\nStep2: Find the notes of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep3: Find the entity titled Shakti\nQuery3: \"get_information(relation='Title', tail_entity='Shakti')\"\nStep4: Find the notes of output_of_query3\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query3')\"\nStep5: Compare the lengths of output_of_query2 and output_of_query4\nQuery5: \"compare_length(string1='output_of_query2', string2='output_of_query4')\"",
    "what is the number of mills first mentioned or built in the 1800s?": "None",
    "which is the only country that has won 6 gold medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity whose Gold is 6\nQuery1: \"get_information(relation='Gold', tail_entity='6')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the last city listed?": "None",
    "who finished sooner, freitas or camacho?": "None",
    "who is the longest living lesbian on the list?": "None",
    "in what year did jon stewart have the highest number of roles?": "None",
    "how many coaches had above 500 wins?": "## Target type: {number}\n## Query:\nStep1: Find the coaches with wins above 500\nQuery1: \"get_information(relation='Wins', tail_entity>'500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which pollutant had the same emission standard as pm10?": "None",
    "total number of bronze medals nigeria earned?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Nigeria\nQuery1: \"get_information(relation='Nation', tail_entity='Nigeria')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the bronze medals of output_of_query1\nQuery3: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "how many of shows had at least 5 episodes?": "## Target type: {number of shows}\n## Query:\nStep1: Find the shows that have at least 5 episodes\nQuery1: \"get_information(relation='Episodes', tail_entity>='5')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of counties created in the 1800s?": "None",
    "which lake has at least 580 area in km\u00b2?": "None",
    "who won on july 6th, phoenix or connecticut?": "None",
    "what was the first year they qualified after 2004?": "None",
    "who was the previous minister of transport before john baird?": "## Target type: {name}\n## Query:\nStep1: Find the entity named John Baird\nQuery1: \"get_information(relation='Name', tail_entity='John Baird')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the density of the last city?": "## Target type: {'Density'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Density of output_of_query3\nQuery4: \"get_information(relation='Density', head_entity='output_of_query3')\"",
    "who is previous of the russians based on the list?": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity named Russians\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Russians')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ethnicity of output_of_query4\nQuery5: \"get_information(relation='Ethnicity', head_entity='output_of_query4')\"",
    "how many singles were released in 2011?": "## Target type: {number}\n## Query:\nStep1: Find the year that is 2011\nQuery1: \"get_information(relation='Year', tail_entity='2011')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what country makes the most tourist income?": "None",
    "what is the total number of lakes in the province of van in turkey?": "None",
    "what role did mischa barton play in the movie \"octane\"?": "## Target type: {'Role'}\n## Query:\nStep1: Find the entity whose Title is Octane\nQuery1: \"get_information(relation='Title', tail_entity='Octane')\"\nStep2: Find the Role of output_of_query1\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"",
    "which schools are in the same town as bishop leblond?": "None",
    "in the 2007 phillip island superbike world championship round superbike race 1 classification who was in the top position?": "## Target type: {rider}\n## Query:\nStep1: Find the entity that is the 2007 phillip island superbike world championship round superbike race 1 classification\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "which kind of computer can most of the games be played on?": "## Target type: {computer type}\n## Query:\nStep1: Find the entity with the relation of Console\nQuery1: \"get_information(relation='Console')\"\nStep2: Find the entity with the relation of Computer\nQuery2: \"get_information(relation='Computer')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the computer type with the most games\nQuery4: \"get_information(relation='Computer', tail_entity>='most')\"",
    "how many award winners came from purdue during the years 1950-60?": "None",
    "how many seasons had average attendance of at least 15,000 at the stadio ennio tardini?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity that is Stadio Ennio Tardini\nQuery1: \"get_information(relation='Venue', tail_entity='Stadio Ennio Tardini')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Average attendance of output_of_query2\nQuery3: \"get_information(relation='Average', head_entity='output_of_query2')\"\nStep4: Find the seasons with attendance larger or equal to 15000\nQuery4: \"get_information(relation='Average', tail_entity>='15000')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "which year saw the highest number of releases?": "None",
    "what was the total number of finalists?": "## Target type: {number of finalists}\n## Query:\nStep1: Find the row_number of the last row\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the relation of Finalist\nQuery3: \"get_information(relation='Finalist')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the last name on the list?": "## Target type: {'Name'}\n## Query:\nStep1: Find the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the larges fee listed?": "## Target type: {fee}\n## Query:\nStep1: Find the entity that represents the fee\nQuery1: \"get_information(relation='Fee')\"\nStep2: Get the max fee from output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what is the title of the first song in the album?": "None",
    "how many websites opened in 2006?": "None",
    "number of super chinese world games released": "None",
    "which of the 1 notch barrels has the highest constriction?": "None",
    "who got two points in the leas amount of games played?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Games Played of output_of_query3\nQuery4: \"get_information(relation='Games Played', head_entity='output_of_query3')\"\nStep5: Get the min output_of_query4\nQuery5: \"min(set='output_of_query4')\"\nStep6: Get the entity with the min Games Played\nQuery6: \"get_information(relation='Games Played', tail_entity='output_of_query5')\"\nStep7: Find the Player of output_of_query6\nQuery7: \"get_information(relation='Player', head_entity='output_of_query6')\"",
    "how many people wrote \"hip hop hooray\"?": "None",
    "what year in the 1980s was the only year where a game went into overtime?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number=1\nQuery3: \"get_information(relation='row_number', tail_entity='1')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Find the year is in 1980s\nQuery5: \"get_information(relation='Year', tail_entity='1980s')\"",
    "which player has his high checkout as 116?": "## Target type: {player}\n## Query:\nStep1: Find the entity that High Checkout is 116\nQuery1: \"get_information(relation='High Checkout', tail_entity='116')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many countries have their total gdp as 2.2 billion dollars?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity that Total GDP (nominal) is 2.2 billion US$\nQuery1: \"get_information(relation='Total GDP (nominal) (billion US$)', tail_entity='2.2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players were from ann arbor?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity from Ann Arbor\nQuery1: \"get_information(relation='Hometown', tail_entity='Ann Arbor')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only opponent to be scored against with an assist from wambach?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Assist/pass as \"Wambach\"\nQuery1: \"get_information(relation='Assist/pass', tail_entity='Wambach')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "how many pieces were published in the 1830's?": "None",
    "name the only multi-ethnic parish.": "## Target type: {parish name}\n## Query:\nStep1: Find the entity named Multi-ethnic\nQuery1: \"get_information(relation='Original Ethnic Community', tail_entity='Multi-ethnic')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is difference in points between valentino rossi and dani pedrosa?": "## Target type: {point difference}\n## Query:\nStep1: Find the entity named Valentino Rossi\nQuery1: \"get_information(relation='Rider', tail_entity='Valentino Rossi')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Dani Pedrosa\nQuery3: \"get_information(relation='Rider', tail_entity='Dani Pedrosa')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many total towns on the list are in montgomery county?": "## Target type: {number of towns}\n## Query:\nStep1: Find the entity named Montgomery County\nQuery1: \"get_information(relation='Principal county', tail_entity='Montgomery County')\"\nStep2: Find the total towns in output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the total count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long was the ride of john degenkolb?": "None",
    "how many years was ali saibou president?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Ali Saibou\nQuery1: \"get_information(relation='President', tail_entity='Ali Saibou')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "according to usgs estimates of mine production, what was the total estimated mine production of niobium minerals from the nation of brazil in 2006?": "## Target type: {total estimated mine production of niobium minerals}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Country', tail_entity='Brazil')\"\nStep2: Find the estimated mine production of niobium minerals in 2006 of output_of_query1\nQuery2: \"get_information(relation='2006', head_entity='output_of_query1')\"",
    "which manufacturer has the most number of wins at the auto club 400 between 1997 and 2014?": "None",
    "how many points did clay regazzoni receive?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Clay Regazzoni\nQuery1: \"get_information(relation='Driver', tail_entity='Clay Regazzoni')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "which year did no one win?": "None",
    "what is the least number of concerts given in a season": "## Target type: {number}\n## Query:\nStep1: Find the entity that represents the Number of Concerts in a season\nQuery1: \"get_information(relation='Number of Concerts')\"\nStep2: Get the minimum of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "what were the number of competitions that had a position of first?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity with the relation of Position as \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive seasons with 16 games played?": "None",
    "out of v-hawks and mustangs, who has the least enrollment?": "## Target type: {Institution}\n## Query:\nStep1: Find the entity named V-Hawks\nQuery1: \"get_information(relation='Nickname', tail_entity='V-Hawks')\"\nStep2: Find the enrollment of output_of_query1\nQuery2: \"get_information(relation='Enrollment', head_entity='output_of_query1')\"\nStep3: Find the entity named Mustangs\nQuery3: \"get_information(relation='Nickname', tail_entity='Mustangs')\"\nStep4: Find the enrollment of output_of_query3\nQuery4: \"get_information(relation='Enrollment', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find the entity with the least enrollment\nQuery5: \"if('output_of_query2' < 'output_of_query4', output_of_query1, output_of_query3)\"",
    "how many countries have earned over a hundred medals in total?": "None",
    "julio rene martinez is from guatemala, what did he place in 2002?": "## Target type: {'Position'}\n## Query:\nStep1: Find the entity named Julio Rene Martinez\nQuery1: \"get_information(relation='Name', tail_entity='Julio Rene Martinez')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Year of output_of_query2\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Find the entity that Year is 2002\nQuery4: \"get_information(relation='Year', tail_entity='2002')\"\nStep5: Find the Position of output_of_query4\nQuery5: \"get_information(relation='Position', head_entity='output_of_query4')\"",
    "is the number of games he played in 2002 more or less than the amount he played in 2008?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity that Year is 2002\nQuery1: \"get_information(relation='Year', tail_entity='2002')\"\nStep2: Find the Games of output_of_query1\nQuery2: \"get_information(relation='Games', head_entity='output_of_query1')\"\nStep3: Find the entity that Year is 2008\nQuery3: \"get_information(relation='Year', tail_entity='2008')\"\nStep4: Find the Games of output_of_query3\nQuery4: \"get_information(relation='Games', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is more or less than output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "who had the top number of bronze awards?": "None",
    "how many times did brazil play west germany during the 1982 season?": "None",
    "what was the number of sons to go gold?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the Award Description 'Gold'\nQuery1: \"get_information(relation='Award Description(s)', tail_entity='Gold')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which season was more successful, 1995/96 or 1996/97?": "## Target type: {season}\n## Query:\nStep1: Find the entity named 1995/96\nQuery1: \"get_information(relation='Season', tail_entity='1995/96')\"\nStep2: Find the entity named 1996/97\nQuery2: \"get_information(relation='Season', tail_entity='1996/97')\"\nStep3: Get the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Get the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query3 and output_of_query4\nQuery5: \"compare(set1='output_of_query3', set2='output_of_query4')\"",
    "what structure was probably built around 1220?": "None",
    "which league has at least one set of the same participants?": "None",
    "what is the number of roles that this actor had in the movie hadh kar di aapne?": "None",
    "how many dates are on the chart": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the next site listed after lewis field?": "None",
    "what was the finishing place after the 2002-2003 season?": "None",
    "what team is after the 2006 to 2008 season in the east superleague column?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Season is \"2006\u20132008\"\nQuery1: \"get_information(relation='Season', tail_entity='2006\u20132008')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity that row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='East Superleague', head_entity='output_of_query4')\"",
    "how many pairs have a separation (au) of more than 5000?": "None",
    "which delegate is older: the delegate for izabal or the one from jalapa?": "## Target type: {'Contestant'}\n## Query:\nStep1: Find the entity that represents Izabal\nQuery1: \"get_information(relation='Represent', tail_entity='Izabal')\"\nStep2: Find the Age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the entity that represents Jalapa\nQuery3: \"get_information(relation='Represent', tail_entity='Jalapa')\"\nStep4: Find the Age of output_of_query3\nQuery4: \"get_information(relation='Age', head_entity='output_of_query3')\"\nStep5: Compare the Age of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='greater')\"",
    "how much did the pirates win by on 3 october?": "None",
    "how many indoor titles did therry tulasnewin?": "None",
    "which typ(s) had the longest construction times?": "None",
    "who was the top pick of the islanders' in the 2006 nhl entry draft?": "## Target type: {player}\n## Query:\nStep1: Find the entity that Row number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which county has the most amount of winners?": "None",
    "how many miss northern ireland winners have made it to the top 30 placement at miss world since 2000?": "None",
    "how many singles topped 1,000,000 sales in 1995?": "None",
    "who was sent home before patrick?": "None",
    "what face value comes after 2005?": "None",
    "what is the least total on the list?": "## Target type: {total}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\n\nIn the above query, there is only one row. Therefore, the least total would be the total listed in that row.",
    "what album came out in the year previous to the album ofa'a haia?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Ofa'a Haia\nQuery1: \"get_information(relation='Title', tail_entity='Ofa\\'a Haia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which plant is listed first on the table?": "## Target type: {plant}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the average number of sailors for each country during the worlds qualification tournament?": "None",
    "how many times is the host country the same country that won silver?": "None",
    "how many times was the race run in under 10 seconds?": "None",
    "how long did it take italy to finish in cycling at the 1996 summer olympics men's team pursuit?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation of Team as Italy\nQuery1: \"get_information(relation='Team', tail_entity='Italy')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "charles zwolsman acquired the same number of points as who?": "None",
    "list each big 12 school with a player drafted in the first round.": "## Target type: {school}\n## Query:\nStep1: Find the entities with the relation of Conf. as Big 12\nQuery1: \"get_information(relation='Conf.', tail_entity='Big 12')\"\nStep2: Find the entities with the relation of Rnd. as 1\nQuery2: \"get_information(relation='Rnd.', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Colleges of output_of_query3\nQuery4: \"get_information(relation='College', head_entity='output_of_query3')\"",
    "what is the last manufacturer listed?": "## Target type: {'Manufacturer'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Manufacturer of output_of_query3\nQuery4: \"get_information(relation='Manufacturer', head_entity='output_of_query3')\"",
    "if david williams was chosen 208th overall, and greg schaum was chosen 186th, how many picks separate the two?": "## Target type: {number of picks}\n## Query:\nStep1: Find the entity named David Williams\nQuery1: \"get_information(relation='Player', tail_entity='David Williams')\"\nStep2: Find the overall pick number of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the entity named Greg Schaum\nQuery3: \"get_information(relation='Player', tail_entity='Greg Schaum')\"\nStep4: Find the overall pick number of output_of_query3\nQuery4: \"get_information(relation='Pick #', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference of output_of_query2 and output_of_query4\nQuery5: \"abs_difference(x='output_of_query2', y='output_of_query4')\"",
    "in what year were there the most athletes?": "None",
    "how long did gall play for carlisle united?": "None",
    "who also won the grammy the same year as scott rudin?": "None",
    "what is the first model listed?": "## Target type: {'Model'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "in which venue was the score the same as the 10-0 score in tokyo, japan?": "None",
    "there are at least 10 mps for how many political parties?": "None",
    "number of wins in october": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Result in October\nQuery1: \"get_information(relation='Result', head_entity='October')\"\nStep2: Get the count of \"W\" in output_of_query1\nQuery2: \"count(value='W', set='output_of_query1')\"",
    "what was the top position an album reached on either chart?": "None",
    "what was the total population of seriate?": "## Target type: {total population}\n## Query:\nStep1: Find the entity named Seriate\nQuery1: \"get_information(relation='City', tail_entity='Seriate')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "how many matches were in 2007?": "None",
    "what is the total number of winderoe destinations that begin in 1999?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Begin is 1999\nQuery1: \"get_information(relation='Begin', tail_entity='1999')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of destinations that have the row_number value of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which player is in the same league as joazinho and vladimir gadzhev?": "None",
    "what was the first venue played on this table?": "## Target type: {'Venue'}\n## Query:\nStep1: Find the entity that is the first row on the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "which year featured the license plate with the least characters?": "None",
    "was the title for the ruler of the chinese vassal state lu king, marquis, or duke?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that State is Lu\nQuery1: \"get_information(relation='State', tail_entity='Lu')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "where was the location of the last venue held?": "## Target type: {location}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many years did david plouffe serve?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named David Plouffe\nQuery1: \"get_information(relation='Name', tail_entity='David Plouffe')\"\nStep2: Find the Took office of output_of_query1\nQuery2: \"get_information(relation='Took office', head_entity='output_of_query1')\"\nStep3: Find the Left office of output_of_query1\nQuery3: \"get_information(relation='Left office', head_entity='output_of_query1')\"\nStep4: Calculate the difference in years between output_of_query2 and output_of_query3\nQuery4: \"subtract_dates(date1='output_of_query2', date2='output_of_query3', unit='years')\"",
    "in the 2007 phillip island superbike world championship round superbike race 1 classification what was the point difference between position 1 and 2?": "## Target type: {point difference}\n## Query:\nStep1: Find the entity with the relation of Pos and row_number\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Pos and row_number\nQuery3: \"get_information(relation='Pos', tail_entity='2')\"\nStep4: Find the Points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the point difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "during which match did tresnjevka score the same amount of points as sekuli&#263; sombor?": "None",
    "according to the list of alpine peaks by prominence, which is taller-mont blanc or wildspitze?": "## Target type: {peak}\n## Query:\nStep1: Find the entity named Mont Blanc\nQuery1: \"get_information(relation='Peak', tail_entity='Mont Blanc')\"\nStep2: Find the Elevation of output_of_query1\nQuery2: \"get_information(relation='Elevation (m)', head_entity='output_of_query1')\"\nStep3: Find the entity named Wildspitze\nQuery3: \"get_information(relation='Peak', tail_entity='Wildspitze')\"\nStep4: Find the Elevation of output_of_query3\nQuery4: \"get_information(relation='Elevation (m)', head_entity='output_of_query3')\"\nStep5: Compare the Elevations of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "which model has the lowest started price?": "## Target type: {model}\n## Query:\nStep1: Find the starting price of all models\nQuery1: \"get_information(relation='Starting Price')\"\nStep2: Find the min starting price\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the model with the min starting price\nQuery3: \"get_information(relation='Starting Price', tail_entity='output_of_query2')\"",
    "which one is previous to viktor kneyb": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Viktor Kneyb\nQuery1: \"get_information(relation='Athlete', tail_entity='Viktor Kneyb')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "when was the first map or catalog created?": "None",
    "what was the next venue after the game on the 22nd of june 1930?": "None",
    "what was the number of medals earned by indonesia (ina) ?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Indonesia (INA)\nQuery1: \"get_information(relation='Nation', tail_entity='Indonesia (INA)')\"\nStep2: Find the total number of medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what single did the band released after \"all she wrote\"?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named \"All She Wrote\"\nQuery1: \"get_information(relation='Song', tail_entity='All She Wrote')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Song of output_of_query4\nQuery5: \"get_information(relation='Song', head_entity='output_of_query4')\"",
    "what counties had the least participants for the race?": "None",
    "what was the number of home games played?": "## Target type: {number of home games}\n## Query:\nStep1: Find the games with relation H / A as 'H'\nQuery1: \"get_information(relation='H / A', tail_entity='H')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which college was the last to be founded.": "None",
    "list two pylons that are at most, 80 m in height.": "None",
    "adrian sutil had to retire before which driver?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Adrian Sutil\nQuery1: \"get_information(relation='Driver', tail_entity='Adrian Sutil')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "how many games were played after 2009?": "None",
    "what is the total number of players that transferred to ajax?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity that transferred to Ajax\nQuery1: \"get_information(relation='To', tail_entity='Ajax')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tag teams held the title for more than 300 days?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Days held\nQuery1: \"get_information(relation='Days\\nheld')\"\nStep2: Find the entity whose days held is more than 300\nQuery2: \"get_information(relation='Days\\nheld', tail_entity>'300')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what property comes before tensile elongation?": "## Target type: {'Property'}\n## Query:\nStep1: Find the entity named Tensile Elongation\nQuery1: \"get_information(relation='Property', tail_entity='Tensile Elongation')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Property of output_of_query4\nQuery5: \"get_information(relation='Property', head_entity='output_of_query4')\"",
    "how many times did super tetris win an award?": "None",
    "how many times has jifar placed third or better in the 10,000 meter race?": "None",
    "what is the total number of regions?": "None",
    "line opened before 1960": "None",
    "in how many years did the listed party have at least 10.0% share of votes?": "None",
    "which club has played in the most supercups without winning?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Runner-ups\nQuery1: \"get_information(relation='Runner-ups')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Runner-ups\nQuery3: \"get_information(relation='Runner-ups', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "how many captains played 11 capped matches?": "## Target type: {number}\n## Query:\nStep1: Find the entity that played 11 capped matches\nQuery1: \"get_information(relation='Caps', tail_entity='11')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of sacks smith has made?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Smith\nQuery1: \"get_information(relation='Name', tail_entity='Smith')\"\nStep2: Find the total number of sacks made by output_of_query1\nQuery2: \"get_information(relation='Sacks', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "which company had the most employees?": "## Target type: {company name}\n## Query:\nStep1: Find the entity with the relation of Employees\nQuery1: \"get_information(relation='Employees')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Employees\nQuery3: \"get_information(relation='Employees', tail_entity='output_of_query2')\"\nStep4: Find the company name of output_of_query3\nQuery4: \"get_information(relation='Name of concern', head_entity='output_of_query3')\"",
    "how long has the barahona diocese been established?": "None",
    "how many municipalities have areas that are below 50 square kilometers?": "## Target type: {number of municipalities}\n## Query:\nStep1: Find the municipalities with area below 50 square kilometers\nQuery1: \"get_information(relation='Area km2', tail_entity<'50')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name a country that had no bluelight remix released in it?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Bluelight remix\nQuery1: \"get_information(relation='Version(s)', tail_entity='Bluelight remix')\"\nStep2: Find all countries\nQuery2: \"get_information(relation='Region')\"\nStep3: Find the countries that do not have output_of_query1\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\"\nStep4: Choose any country from output_of_query3\nQuery4: \"choose(set='output_of_query3')\"",
    "what is the total number of international goals \u00e1d\u00e1m szalai has made?": "None",
    "what teams has the top amount of points?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the highest points\nQuery1: \"get_information(relation='Points', tail_entity>='highest')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how much more money did camerin win in pittsburgh than in spoleto?": "None",
    "home many times did a single country win both the men's and women's bupa great south run?": "None",
    "who was the only competitor to not finish?": "None",
    "who sang \"eu s\u00f3 quero\" as their song in the eurovision song contest of 1979?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named \"Eu S\u00f3 Quero\"\nQuery1: \"get_information(relation='Song', tail_entity='Eu S\u00f3 Quero')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "who resigned his senate seat after being elected vice-president of the united states?": "None",
    "who did this player lose her first game to this season?": "None",
    "how many years was shodiev the top scorer?": "None",
    "which ranked higher in place, israel or the united kingdom?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Israel\nQuery1: \"get_information(relation='Country', tail_entity='Israel')\"\nStep2: Find the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity named United Kingdom\nQuery3: \"get_information(relation='Country', tail_entity='United Kingdom')\"\nStep4: Find the Place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is greater than output_of_query4\nQuery5: \"greater_than(value1='output_of_query2', value2='output_of_query4')\"\n\n# Or you can check if Israel ranked higher than the United Kingdom\n# Step5: Check if output_of_query4 is greater than output_of_query2\n# Query5: \"greater_than(value1='output_of_query4', value2='output_of_query2')\"",
    "which country came in first with 7 gold medals?": "None",
    "list the schools that came in last place in the cws best finish.": "None",
    "which genre is featured the most in this chart?": "## Target type: {'Genre'}\n## Query:\nStep1: Find all the genres in the chart\nQuery1: \"get_information(relation='Genre')\"\nStep2: Find the genre that appears the most\nQuery2: \"mode(set='output_of_query1')\"",
    "is our lady of loretto listed above or below the holy spirit?": "## Target type: {relation between 'Our Lady of Loretto' and 'Holy Spirit'}\n## Query:\nStep1: Find the entity named Our Lady of Loretto\nQuery1: \"get_information(relation='Church name', tail_entity='Our Lady of Loretto')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Holy Spirit\nQuery3: \"get_information(relation='Church name', tail_entity='Holy Spirit')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4 to determine the relation\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4')\"",
    "what year was michael swanwick the only guest of honor?": "None",
    "what is the number of keelboats built between 1958-1962?": "None",
    "what were the total number of people in attendance on 11/24/2012?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the Date of 11/24/2012\nQuery1: \"get_information(relation='Date', tail_entity='11/24/2012')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many did coalition for the future win?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Coalition for the Future\nQuery1: \"get_information(relation='Winning Party/Coalition', tail_entity='Coalition for the Future')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team made their first appearance in the same tournament as the perth scorchers?": "None",
    "what number countries received gold medals?": "None",
    "wendlinger finished 8th. who finished next?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Wendlinger\nQuery1: \"get_information(relation='Driver', tail_entity='Wendlinger')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "when was the last battle?": "## Target type: {'Date/time'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date/time of output_of_query3\nQuery4: \"get_information(relation='Date/time', head_entity='output_of_query3')\"",
    "what was the date of the last tie?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity that has Record of \"0\u20134\u20131\"\nQuery1: \"get_information(relation='Record', tail_entity='0\u20134\u20131')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what was the first character she played in her first movie?": "## Target type: {'Role'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "how many proposed communities would use the arab dinar currency?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Currency is Arab dinar\nQuery1: \"get_information(relation='Currency', tail_entity='Arab dinar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the proposed communities that have the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "j.p morrell was elected in 2008 - the same as which other louisiana state senator?": "None",
    "alan bird and billy davies were both elected to the house of representatives as members of which party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Alan Bird\nQuery1: \"get_information(relation='Member', tail_entity='Alan Bird')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"\nStep3: Find the entity named Billy Davies\nQuery3: \"get_information(relation='Member', tail_entity='Billy Davies')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is hisor her total semifinal points to qualify for the 12th position?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Ginger Lees\nQuery1: \"get_information(relation='Rider', tail_entity='Ginger Lees')\"\nStep2: Find the Semi-Final Points of output_of_query1\nQuery2: \"get_information(relation='Semi-Final Points', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query1')\"\nStep4: Find the entity with row_number equals 12\nQuery4: \"get_information(relation='row_number', tail_entity='12')\"\nStep5: Find the Semi-Final Points of output_of_query4\nQuery5: \"get_information(relation='Semi-Final Points', head_entity='output_of_query4')\"",
    "what home team had the same score as aston villa on january 28th, 1922?": "None",
    "which was a higher scoring game, week 1 or week 12?": "## Target type: {'Week'}\n## Query:\nStep1: Find the entity with the relation of Week 1\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the entity with the relation of Week 12\nQuery2: \"get_information(relation='Week', tail_entity='12')\"\nStep3: Find the Result of output_of_query1\nQuery3: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep4: Find the Result of output_of_query2\nQuery4: \"get_information(relation='Result', head_entity='output_of_query2')\"\nStep5: Calculate the score of output_of_query3\nQuery5: \"calculate_score(set='output_of_query3')\"\nStep6: Calculate the score of output_of_query4\nQuery6: \"calculate_score(set='output_of_query4')\"\nStep7: Compare the scores of output_of_query5 and output_of_query6\nQuery7: \"compare_scores(score1='output_of_query5', score2='output_of_query6')\"",
    "how many years did they place 15th or lower?": "None",
    "what is the difference in speed number of the fastest and slowest trains in km/h?": "None",
    "who is the first golfer not from the united states to finish in the top 10?": "None",
    "how many runners took 2 minutes at the most to run 1500 meters?": "None",
    "other director from the same state as john t. stout, jr.": "None",
    "name a year in which there was not an election.": "None",
    "what year did he have the same number car as 1964?": "None",
    "if a man has a phone on qb's network, how many different mobile prefixes could his phone have?": "None",
    "who is the first opposition in rank 27?": "None",
    "how many players weighed more than 210?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity whose weight is more than 210\nQuery1: \"get_information(relation='Weight', tail_entity>'210')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference of points in the game between birmingham city and wrexham?": "None",
    "what number represents the most fans to attend a japanese football league game in 2001?": "None",
    "what is the sum of the cup total and the europa league total?": "None",
    "what group had the next highest percentage of voters after union members in 1948?": "None",
    "what is the total if you add all of the selection numbers together?": "## Target type: {number}\n## Query:\nStep1: Find all the Selection numbers\nQuery1: \"get_information(relation='Selection')\"\nStep2: Calculate the sum of output_of_query1\nQuery2: \"sum(set='output_of_query1')\"",
    "what is the only year that did not qualify appears under the playoffs column?": "None",
    "how many sites do not have images?": "None",
    "how many times has nw missouri state faced pittsburg state in the playoffs?": "None",
    "name an athlete whose total score was not more than 680.": "None",
    "which province has a lower population density, almeria or jaen?": "## Target type: {province}\n## Query:\nStep1: Find the entity named Almeria\nQuery1: \"get_information(relation='Province', tail_entity='Almeria')\"\nStep2: Find the population density of output_of_query1\nQuery2: \"get_information(relation='Density', head_entity='output_of_query1')\"\nStep3: Find the entity named Jaen\nQuery3: \"get_information(relation='Province', tail_entity='Jaen')\"\nStep4: Find the population density of output_of_query3\nQuery4: \"get_information(relation='Density', head_entity='output_of_query3')\"\nStep5: Get the output_of_query1 if output_of_query2 is greater, otherwise get output_of_query3.\nQuery5: \"if(set1>'output_of_query2', set2='output_of_query1', set2='output_of_query3')\"",
    "how long did the estoril open last?": "None",
    "was germany listed before malaysia?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Malaysia\nQuery3: \"get_information(relation='Country', tail_entity='Malaysia')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 < output_of_query4\"",
    "was edmund barton or alfred deakin younger at the beginning of his first term?": "None",
    "which single was released after phoney phranchise?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named Phoney Phranchise\nQuery1: \"get_information(relation='Song', tail_entity='Phoney Phranchise')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Song of output_of_query4\nQuery5: \"get_information(relation='Song', head_entity='output_of_query4')\"",
    "how many total women have been executed by lethal injection?": "None",
    "how many teams were founded in morwell?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity named Morwell\nQuery1: \"get_information(relation='Town', tail_entity='Morwell')\"\nStep2: Find the founded of output_of_query1\nQuery2: \"get_information(relation='Founded', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was picked directly before ken riley?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Ken Riley\nQuery1: \"get_information(relation='Player', tail_entity='Ken Riley')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what are the number of times punts were returned for a touchdown?": "None",
    "how long after the founding of panama city, panama was the city of rio de janeiro, brazil founded?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Panama City, Panama\nQuery1: \"get_information(relation='City', tail_entity='Panama City, Panama')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named Rio de Janeiro, Brazil\nQuery3: \"get_information(relation='City', tail_entity='Rio de Janeiro, Brazil')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Calculate the time difference between output_of_query4 and output_of_query2\nQuery5: \"time_difference(end='output_of_query4', start='output_of_query2')\"",
    "who was coach before tilden campbell?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Tilden Campbell\nQuery1: \"get_information(relation='Coach', tail_entity='Tilden Campbell')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "how many had at least 10 goals?": "None",
    "who was the first head of medici?": "None",
    "who did this team play after the frankfurt galaxy on may 20 of this season?": "None",
    "how many times was the surface clay?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Surface is Clay\nQuery1: \"get_information(relation='Surface', tail_entity='Clay')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which is the only ship used as a work boat?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with relation Notes as \"work boat\"\nQuery1: \"get_information(relation='Notes', tail_entity='work boat')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many combined silver medals did china, india, and japan earn ?": "None",
    "what is the difference in frequency between the at90s1200 and the at90s2313?": "## Target type: {difference in frequency}\n## Query:\nStep1: Find the entity named AT90S1200\nQuery1: \"get_information(relation='Chip', tail_entity='AT90S1200')\"\nStep2: Find the frequency of output_of_query1\nQuery2: \"get_information(relation='Frequency\\n[MHz]', head_entity='output_of_query1')\"\nStep3: Find the entity named AT90S2313\nQuery3: \"get_information(relation='Chip', tail_entity='AT90S2313')\"\nStep4: Find the frequency of output_of_query3\nQuery4: \"get_information(relation='Frequency\\n[MHz]', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many historic sites were listed in 1988?": "None",
    "how many viewers watched episode 6?": "None",
    "what is the total amount of times the judiciary committee appears for delegates in the republican party?": "## Target type: {total amount of times}\n## Query:\nStep1: Find all the delegates in the Republican Party\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the delegates with the relation of Committee as Judiciary Committee\nQuery3: \"get_information(relation='Committee', tail_entity='Judiciary Committee')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "was distortion or love at the bottom of the sea the highest rated album?": "## Target type: {album title}\n## Query:\nStep1: Find the album titled \"Distortion\"\nQuery1: \"get_information(relation='Album title', tail_entity='Distortion')\"\nStep2: Find the album titled \"Love at the Bottom of the Sea\"\nQuery2: \"get_information(relation='Album title', tail_entity='Love at the Bottom of the Sea')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2\nQuery5: \"if(output_of_query3 > output_of_query4, 'Distortion', 'Love at the Bottom of the Sea')\"",
    "which team had the longest consecutive winning streak?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity with the relation Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the longest consecutive winning streak in output_of_query1\nQuery2: \"find_longest_streak(set='output_of_query1')\"",
    "how long after their round 1 finish did it take to reach round 1 again?": "None",
    "who was the first athlete to be faster than 12.3?": "None",
    "the total number of developmental cycles in beta": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Development cycle as Beta\nQuery1: \"get_information(relation='Development cycle', tail_entity='Beta')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had the highest number of appearances?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Appearances\nQuery1: \"get_information(relation='Appearances')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Appearances\nQuery3: \"get_information(relation='Appearances', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "did belfast royal academy have more or less total finals than ballyclare high school?": "## Target type: {string}\n## Query:\nStep1: Find the entity named Belfast Royal Academy\nQuery1: \"get_information(relation='School', tail_entity='Belfast Royal Academy')\"\nStep2: Find the Total Finals of output_of_query1\nQuery2: \"get_information(relation='Total Finals', head_entity='output_of_query1')\"\nStep3: Find the entity named Ballyclare High School\nQuery3: \"get_information(relation='School', tail_entity='Ballyclare High School')\"\nStep4: Find the Total Finals of output_of_query3\nQuery4: \"get_information(relation='Total Finals', head_entity='output_of_query3')\"\nStep5: Compare the Total Finals of output_of_query2 and output_of_query4\nQuery5: \"compare(first_value='output_of_query2', second_value='output_of_query4')\"",
    "in how many indy 500 races, has jones been flagged?": "None",
    "did the polling firm quinnipiac have the same number of in favor votes as rutgers-eagleton in march a year apart?": "None",
    "what year was itoh's only victory at the 10,000m distance.": "None",
    "what is the earliest year that a film was released?": "None",
    "which site has the most radars?": "None",
    "what was the total number of friendly's played?": "## Target type: {number of friendly's}\n## Query:\nStep1: Find the entity with the relation of Type of game being 'Friendly'\nQuery1: \"get_information(relation='Type of game', tail_entity='Friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many united kingdom ships were sunk after 1941?": "None",
    "what is the difference in height between the tallest building constructed in the 1960s and the tallest building constructed in the 1980's?": "None",
    "how many models used the redtop engine?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Engine is Redtop\nQuery1: \"get_information(relation='Engine', tail_entity='Redtop')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in age between palo vanoli and marc kalenga?": "None",
    "of the total number of pro football games played by eddie royal between the two years 2011 and 2012, what was the average number of games played during those two years by him?": "None",
    "what role did kajal play before pooja?": "None",
    "how many of these members were elected in october?": "None",
    "which was the only television show gauri starred in, in which she played herself?": "## Target type: {television show}\n## Query:\nStep1: Find the entity named Gauri\nQuery1: \"get_information(relation='Name', tail_entity='Gauri')\"\nStep2: Find the television show where Gauri starred in\nQuery2: \"get_information(relation='Show', head_entity='output_of_query1')\"\nStep3: Find the entity with relation of Role is \"Herself\"\nQuery3: \"get_information(relation='Role', tail_entity='Herself')\"\nStep4: Find the television show where output_of_query3 appeared\nQuery4: \"get_information(relation='Show', head_entity='output_of_query3')\"",
    "which name is before sam falson": "## Target type: {name}\n## Query:\nStep1: Find the entity named Sam Falson\nQuery1: \"get_information(relation='Name', tail_entity='Sam Falson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many representatives have served maryland's 3rd congressional district?": "None",
    "what was the total number of linebackers chosen in round 17 of the 1969 nfl draft?": "None",
    "whose time is more than. 24.00?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Time more than 24.00\nQuery1: \"get_information(relation='Time', tail_entity>'24.00')\"\nStep2: Find the entity with the relation of Time more than 24.00\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many times did the home team have a score of only one against the away team?": "None",
    "how many districts are there?": "None",
    "how many total years did sun hao reign?": "## Target type: {total years}\n## Query:\nStep1: Find the entity named Sun Hao\nQuery1: \"get_information(relation='Family name and personal name', tail_entity='Sun Hao')\"\nStep2: Find the reign years of output_of_query1\nQuery2: \"get_information(relation='Reign', head_entity='output_of_query1')\"\nStep3: Calculate the total years of output_of_query2\nQuery3: \"calculate_years(set='output_of_query2')\"",
    "which number did the san antonio spurs have the same number of points as the washington bullets?": "None",
    "what driver completed the least number of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "in what years did ken harnden do better that 5th place?": "None",
    "which city did she play her last game?": "None",
    "average number of goals scored by players from scotland": "## Target type: {average number}\n## Query:\nStep1: Find the entities where the Nation is Scotland\nQuery1: \"get_information(relation='Nation', tail_entity='Scotland')\"\nStep2: Find the Total Goals of output_of_query1\nQuery2: \"get_information(relation='Total Goals', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "who won the game on 10/9/2009--raiders or unh?": "None",
    "what country won the same number of bronze as great britain, yet did not win a gold medal?": "None",
    "how many months saw record lows below freezing?": "None",
    "how many donterel-class sloops were there in 1878?": "None",
    "how many knockouts, including tkos, does adnan redzovic have in boxing": "None",
    "how won the avc championship after tiajin bridgestone's three year streak from 2006 to 2008?": "None",
    "what is the total number of teams that qualified?": "None",
    "who raced the fastest?": "None",
    "what is the number of women that have been executed in oklahoma?": "None",
    "who is the first away team on the chart": "None",
    "what was the difference in score between fuzzy zoeller and larry nelson?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity named Fuzzy Zoeller\nQuery1: \"get_information(relation='Player', tail_entity='Fuzzy Zoeller')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity named Larry Nelson\nQuery3: \"get_information(relation='Player', tail_entity='Larry Nelson')\"\nStep4: Find the score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(score1='output_of_query2', score2='output_of_query4')\"",
    "which three artists had a single at number 1 for at least 7 weeks on the australian singles charts in 1977?": "None",
    "how many points did germany have?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity whose Country is Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "which woods has the same acreage as hardwick wood?": "None",
    "what are the only species with 99% sequence identity?": "## Target type: {species}\n## Query:\nStep1: Find the species with a sequence identity of 99%\nQuery1: \"get_information(relation='Sequence Identity', tail_entity='99%')\"\nStep2: Get the species of output_of_query1\nQuery2: \"get_information(relation='Species', head_entity='output_of_query1')\"",
    "tell me one that was not built as a yatch.": "None",
    "which movie did he get nominated for an oscar for?": "None",
    "what is the number of times that barr scored in 2005?": "None",
    "what is the least number of votes ever had by a loser of an election?": "None",
    "what was the number of encyclopedias that had subjects relating specifically to children?": "None",
    "were there more rounds in the second match or the third match?": "## Target type: {rounds}\n## Query:\nStep1: Find the row_number of the second match\nQuery1: \"get_information(relation='row_number', tail_entity='2')\"\nStep2: Find the rounds of output_of_query1\nQuery2: \"get_information(relation='Round', head_entity='output_of_query1')\"\nStep3: Find the row_number of the third match\nQuery3: \"get_information(relation='row_number', tail_entity='3')\"\nStep4: Find the rounds of output_of_query3\nQuery4: \"get_information(relation='Round', head_entity='output_of_query3')\"\nStep5: Compare the rounds of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which party had the most prime ministers?": "None",
    "what was the total number of swiss athletes competing in the cross-country skiing at the 2014 winter olympics men's 15 kilometre classical?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Country is Switzerland\nQuery1: \"get_information(relation='Country', tail_entity='Switzerland')\"\nStep2: Find the total number of athletes of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what country has the least finals totals?": "None",
    "what was her first role?": "## Target type: {'Role'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "other than scorpio, jr. and super crazy, name a championship that took place at iwl oktoberfest.": "None",
    "what is the code for shower facilities?": "None",
    "which country has the least amount of winning drivers?": "## Target type: {country}\n## Query:\nStep1: Find all the winning drivers\nQuery1: \"get_information(relation='Winning driver')\"\nStep2: Find the count of winning drivers by country\nQuery2: \"count_by(set='output_of_query1', key='Country')\"\nStep3: Find the country with the least amount of winning drivers\nQuery3: \"min(set='output_of_query2')\"",
    "how many athletes did not finish with the time less than 53.00?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the athletes with a time greater than or equal to 53.00\nQuery1: \"get_information(relation='Time', tail_entity>='53.00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many parts where first released to the public in 2003?": "## Target type: {number}\n## Query:\nStep1: Find the entity named First public release date (First edition)\nQuery1: \"get_information(relation='First public release date (First edition)')\"\nStep2: Find the entity with the value of 2003 in output_of_query1\nQuery2: \"get_information(relation='First public release date (First edition)', value='2003')\"\nStep3: Count the output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "when was g42, 1898 or 1894?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Order as G42\nQuery1: \"get_information(relation='Order', tail_entity='G42')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what tournament came before the bnp paribas open?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity named BNP Paribas Open\nQuery1: \"get_information(relation='Tournament', tail_entity='BNP Paribas Open')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tournament of output_of_query4\nQuery5: \"get_information(relation='Tournament', head_entity='output_of_query4')\"",
    "how many athletes finished before pinki pramanik?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity named Pinki Pramanik\nQuery1: \"get_information(relation='Athlete', tail_entity='Pinki Pramanik')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities whose row_number is less than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the largest number of women that have been consecutively executed by lethal injection?": "None",
    "what district has the most persons per square kilometer?": "## Target type: {district}\n## Query:\nStep1: Find the district with the highest density of persons per square kilometer\nQuery1: \"get_information(relation='Density (persons/km\u00b2)', tail_entity>='highest')\"\nStep2: Find the district of output_of_query1\nQuery2: \"get_information(relation='District', head_entity='output_of_query1')\"",
    "which denomination percentage increased the most after 1949?": "None",
    "which image frame has the largest crop factor?": "None",
    "what is the most recent award nujoma received?": "None",
    "which spanish tribunal had 36 executions in persona and 47 executions in effigie during this time period?": "## Target type: {tribunal}\n## Query:\nStep1: Find the entity that had 36 executions in persona\nQuery1: \"get_information(relation='Executions in persona', tail_entity='36')\"\nStep2: Find the entity that had 47 executions in effigie\nQuery2: \"get_information(relation='Executions in effigie', tail_entity='47')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the tribunal of output_of_query3\nQuery4: \"get_information(relation='Tribunal', head_entity='output_of_query3')\"",
    "which driver did not have his/her car ready?": "None",
    "there are two different uniforms worn for home and away games, which color of uniform is worn for away games?": "None",
    "what was the most years a show lasted?": "None",
    "what was the mst amount of money in 2012?": "None",
    "how many winners were born in 1979?": "None",
    "what is the total number of locations that used a clay surface?": "## Target type: {number}\n## Query:\nStep1: Find the locations with the relation of Surface is Clay\nQuery1: \"get_information(relation='Surface', tail_entity='Clay')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total times was the location in montreal?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Location as Montreal\nQuery1: \"get_information(relation='Location', tail_entity='Montreal')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are there more g's or c's? (guards or centers)": "None",
    "how many listed works of public art are in ward 6?": "None",
    "what two teams only have two titles?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entities with Titles equal to 2\nQuery1: \"get_information(relation='Titles', tail_entity='2')\"\nStep2: Get the intersection of output_of_query1\nQuery2: \"set_intersection(set1='output_of_query1', set2='output_of_query1')\"",
    "what is the number of goals \u00e1d\u00e1m szalai made against san marino in 2010?": "None",
    "the team with the most international caps": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of International caps\nQuery1: \"get_information(relation='International caps')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max caps\nQuery3: \"get_information(relation='International caps', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "what were the number of titles produced in 2004?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity with the relation of Year as 2004\nQuery1: \"get_information(relation='Year', tail_entity='2004')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did chicago win more or less than cal-berkeley?": "## Target type: {winning result}\n## Query:\nStep1: Find the entity named Chicago\nQuery1: \"get_information(relation='Division I Overall', tail_entity='Chicago')\"\nStep2: Find the entity named Cal-Berkeley\nQuery2: \"get_information(relation='Division I Overall', tail_entity='Cal-Berkeley')\"\nStep3: Compare the Division I Overall result of output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "who won the south after esc geretsried did during the 2006-07 season?": "None",
    "lee was one of two swimmers from great britain. who was the second?": "## Target type: {swimmer}\n## Query:\nStep1: Find the entity named Lee from Great Britain\nQuery1: \"get_information(relation='Name', tail_entity='Lee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "was jerret stoll picked in the first or second round?": "None",
    "what were the total number of games played in november?": "None",
    "nfl blitz special edition and nfl blitz 20-02 were both released in what year?": "## Target type: {year}\n## Query:\nStep1: Find the entity named NFL Blitz Special Edition\nQuery1: \"get_information(relation='Title', tail_entity='NFL Blitz Special Edition')\"\nStep2: Find the release year of output_of_query1\nQuery2: \"get_information(relation='Release', head_entity='output_of_query1')\"\nStep3: Find the entity named NFL Blitz 20-02\nQuery3: \"get_information(relation='Title', tail_entity='NFL Blitz 20-02')\"\nStep4: Find the release year of output_of_query3\nQuery4: \"get_information(relation='Release', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "is the max range of the c-5 galaxy greater than the max range of the c-1 trader?": "## Target type: {True/False}\n## Query:\nStep1: Find the entity named C-5 Galaxy\nQuery1: \"get_information(relation='Model', tail_entity='C-5 Galaxy')\"\nStep2: Find the max range of output_of_query1\nQuery2: \"get_information(relation='max range (km)', head_entity='output_of_query1')\"\nStep3: Find the entity named C-1 Trader\nQuery3: \"get_information(relation='Model', tail_entity='C-1 Trader')\"\nStep4: Find the max range of output_of_query3\nQuery4: \"get_information(relation='max range (km)', head_entity='output_of_query3')\"\nStep5: Compare the max ranges\nQuery5: \"output_of_query2 > output_of_query4\"",
    "how many gold medalists were from japan?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Silver', tail_entity='Japan')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the highest just (cents) for an interval with a size (cents) less than 500?": "None",
    "which had a higher number? brown or jones?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Brown\nQuery1: \"get_information(relation='Name', tail_entity='Brown')\"\nStep2: Find the Number of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"\nStep3: Find the entity named Jones\nQuery3: \"get_information(relation='Name', tail_entity='Jones')\"\nStep4: Find the Number of output_of_query3\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"\nStep5: Check which number is higher between output_of_query2 and output_of_query4\nQuery5: \"if(set1>'output_of_query4', 'output_of_query1', 'output_of_query3')\"",
    "what was the only event won in belgium?": "## Target type: {event}\n## Query:\nStep1: Find the entity named Belgium\nQuery1: \"get_information(relation='Venue', tail_entity='Belgium')\"\nStep2: Find the event won in output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "how many years are listed for howard ashman under the year column?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Howard Ashman\nQuery1: \"get_information(relation='Name', tail_entity='Howard Ashman')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was julio ever disqualified in consecutive races?": "None",
    "how many times does mpa (kpsi) appear under the units column?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mpa (kpsi)\nQuery1: \"get_information(relation='units', tail_entity='Mpa (kpsi)')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was player of the year after ben mauk?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Ben Mauk\nQuery1: \"get_information(relation='Player', tail_entity='Ben Mauk')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "how many laps in total is the race?": "## Target type: {total number of laps}\n## Query:\nStep1: Find the entity named Lewis Hamilton\nQuery1: \"get_information(relation='Driver', tail_entity='Lewis Hamilton')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "games above 30,000 in attendance": "## Target type: {number of games}\n## Query:\nStep1: Find the games with Attendance above 30,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'30000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "favero finished in 1:57.08. what was the next time?": "None",
    "what is the only wager that is not \"hair\"?": "None",
    "the most populated city": "None",
    "how many sites on the register are cemeteries?": "None",
    "what was the earliest released album?": "## Target type: {'Album title'}\n## Query:\nStep1: Find all the years\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the min year\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the album title of the min year\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Get the album title of output_of_query3\nQuery4: \"get_information(relation='Album title', head_entity='output_of_query3')\"",
    "who is the first artist on the chart?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Artist(s) of output_of_query3\nQuery4: \"get_information(relation='Artist(s)', head_entity='output_of_query3')\"",
    "when was the first tour date of 2010?": "None",
    "what is the last party on this chart?": "## Target type: {'Party'}\n## Query:\nStep1: Find the max row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "how long did colin clarke coach the puerto rico islanders for?": "None",
    "what year was he most featured in shows?": "None",
    "the other team besides brazil to score 5 goals": "None",
    "how many delegates are under the democratic party who represented the frederick county?": "## Target type: {number of delegates}\n## Query:\nStep1: Find the entity that is the Democratic Party\nQuery1: \"get_information(relation='Party', tail_entity='Democratic Party')\"\nStep2: Find the entity that represented Frederick County\nQuery2: \"get_information(relation='Counties Represented', tail_entity='Frederick County')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who directed the most cartoons?": "## Target type: {'Directed by'}\n## Query:\nStep1: Find the entity in Directed by that appears the most.\nQuery1: \"get_information(relation='Directed by', tail_entity>='most')\"\nStep2: Find the Directed by of output_of_query1.\nQuery2: \"get_information(relation='Directed by', head_entity='output_of_query1')\"",
    "who was this team's next opponent after facing new zealand in the first stage of the 1986 ofc championship?": "None",
    "in which year did seattle slew win the triple crown?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Seattle Slew\nQuery1: \"get_information(relation='Winner', tail_entity='Seattle Slew')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "which teams played in the last aloha bowl?": "None",
    "four corners has 13 premierships listed, what was their nickname?": "## Target type: {nickname}\n## Query:\nStep1: Find the entity named Four Corners\nQuery1: \"get_information(relation='Club', tail_entity='Four Corners')\"\nStep2: Find the nickname of output_of_query1\nQuery2: \"get_information(relation='Nickname', head_entity='output_of_query1')\"",
    "how many racers did not use an aprilia or a honda?": "## Target type: {number}\n## Query:\nStep1: Find the racers who used an Aprilia\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Aprilia')\"\nStep2: Find the racers who used a Honda\nQuery2: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the negation set of output_of_query3\nQuery4: \"set_negation(set='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "other than giorgi asanidze, name a bearer with the first name giorgi.": "## Target type: {flag bearer}\n## Query:\nStep1: Find the entity named Giorgi Asanidze\nQuery1: \"get_information(relation='Flag bearer', tail_entity='Giorgi Asanidze')\"\nStep2: Find the first name of output_of_query1\nQuery2: \"get_information(relation='Flag bearer', head_entity='output_of_query1')\"\nStep3: Find the bearer with the first name Giorgi other than output_of_query2\nQuery3: \"get_information(relation='Flag bearer', name='Giorgi', tail_entity>'output_of_query2')\"",
    "which two clubs have no nickname listed?": "None",
    "what lake is listed directly below the one that is in both denzili and afyonkarahisar?": "## Target type: {lake}\n## Query:\nStep1: Find the entity that is in both Denizli and Afyonkarahisar\nQuery1: \"get_information(relation='Location', tail_entity='Denizli, Afyonkarahisar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name in English of output_of_query4\nQuery5: \"get_information(relation='Name in English', head_entity='output_of_query4')\"",
    "who is above 5th edition": "None",
    "what is the previous name to orlando s\u00e1?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Orlando S\u00e1\nQuery1: \"get_information(relation='Name', tail_entity='Orlando S\u00e1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how man total democrats died in office?": "None",
    "which country won the most silver medals?": "None",
    "how many cities (census subdivisions) had at least half a million people in 1996?": "## Target type: {number}\n## Query:\nStep1: Find the entity that had a population of at least half a million in 1996\nQuery1: \"get_information(relation='Population 1996', tail_entity>='500000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive wins did the team have in 1948?": "None",
    "what was the total number of games played in the 1932 season?": "None",
    "what is the difference in attendance for week 5 and 9": "None",
    "name an opera that does not have a known date.": "None",
    "what is the number of km for range road 293,36 street ne": "## Target type: {km}\n## Query:\nStep1: Find the entity named \"Range Road 293, 36 Street NE\"\nQuery1: \"get_information(relation='Intersecting road', tail_entity='Range Road 293, 36 Street NE')\"\nStep2: Find the km of output_of_query1\nQuery2: \"get_information(relation='km', head_entity='output_of_query1')\"",
    "which surface was used the least?": "None",
    "how many of the surface types are not clay or hard?": "None",
    "how many were carpet courts?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Surface being Carpet\nQuery1: \"get_information(relation='Surface', tail_entity='Carpet')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tournaments were played indoor?": "## Target type: {number of tournaments}\n## Query:\nStep1: Find the tournaments with the relation of Surface as 'Indoor'\nQuery1: \"get_information(relation='Surface', tail_entity='Indoor')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did daniels host saturday night live?": "None",
    "what is the total number of players from canada on the squad in 2011-2012?": "None",
    "combined land area (in acres) of millbrook 27 and sheet harbour 36": "None",
    "what are the total number of awards that this actor has won?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity with the relation of Result is \"Won\"\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "other than 1977, what year had 53 maps?": "## Target type: {year}\n## Query:\nStep1: Find the entity that has 53 Maps\nQuery1: \"get_information(relation='Maps', tail_entity='53')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the set that represents other than 1977\nQuery3: \"set_difference(set1='output_of_query2', set2='1977')\"\nStep4: Get the first element of output_of_query3\nQuery4: \"get_first(set='output_of_query3')\"",
    "how many times did they lose while away?": "None",
    "what was the total number of medals won by madagascar?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Madagascar\nQuery1: \"get_information(relation='Nation', tail_entity='Madagascar')\"\nStep2: Find the total number of medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which group has the most votes in 1964?": "None",
    "total population of millbrook first nation": "## Target type: {number}\n## Query:\nStep1: Find the entity named Millbrook First Nation\nQuery1: \"get_information(relation='Community', tail_entity='Millbrook First Nation')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "who was the first producer that made the film sing*ularity?": "None",
    "when was her debut?": "None",
    "what was the country listed the first time there was a new tournament?": "None",
    "how many countries participated?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Club\nQuery1: \"get_information(relation='Club')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who hosted the tournament before 1981?": "## Target type: {host}\n## Query:\nStep1: Find the Year that is before 1981\nQuery1: \"get_information(relation='Year', tail_entity<'1981')\"\nStep2: Find the host of output_of_query1\nQuery2: \"get_information(relation='Host', head_entity='output_of_query1')\"",
    "which country is listed for the most finals?": "None",
    "how many races were there total?": "None",
    "what is the total number of athletes that competed?": "## Target type: {number of athletes}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of athletes?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entities with the relation of Athlete\nQuery1: \"get_information(relation='Athlete')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many people were ranked?": "None",
    "what was the largest number of votes?": "None",
    "what is the last city on this chart?": "## Target type: {'City'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which area is the least dense?": "None",
    "who placed first in the race?": "## Target type: {driver}\n## Query:\nStep1: Find the row_number of first place\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "does any image frame have the same height as the nokia lumia 720?": "None",
    "how many companies have at least 200 billion in revenue for oil and gas?": "None",
    "in which years did he release more than 2 albums?": "None",
    "what is the total population of burnett township?": "## Target type: {total population}\n## Query:\nStep1: Find the entity named Burnett Township\nQuery1: \"get_information(relation='Township', tail_entity='Burnett Township')\"\nStep2: Find the total population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "is the us average uci rating above or below 2?": "## Target type: {'UCI Rating'}\n## Query:\nStep1: Find the entity that represents the UCI Rating of US\nQuery1: \"get_information(relation='Team', tail_entity='USA')\"\nStep2: Find the UCI Rating of output_of_query1\nQuery2: \"get_information(relation='UCI Rating', head_entity='output_of_query1')\"\nStep3: Calculate the average UCI Rating of US\nQuery3: \"average(set='output_of_query2')\"\nStep4: Compare the average UCI Rating with 2\nQuery4: \"compare(value1='output_of_query3', operator='<', value2='2')\"",
    "what comes after fiskeby if": "None",
    "what is the number of districts with percentage decadal growth above 15%": "None",
    "how many films were filmed in romanian?": "None",
    "who is on top of the list?": "None",
    "how many tracks were at least 3 minutes or more in length?": "None",
    "kazakhstan took 7th two consecutive years in a row. what two years were they?": "None",
    "what is the total number of products represented in the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which coach served next after thomas stouch?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Thomas Stouch\nQuery1: \"get_information(relation='Coach', tail_entity='Thomas Stouch')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "what season was previous to the tayport participant in the east premier league?": "None",
    "which airline has air sakha as its call sign?": "## Target type: {'AIRLINE'}\n## Query:\nStep1: Find the entity with the relation of CALLSIGN\nQuery1: \"get_information(relation='CALLSIGN', tail_entity='Air Sakha')\"\nStep2: Find the AIRLINE of output_of_query1\nQuery2: \"get_information(relation='AIRLINE', head_entity='output_of_query1')\"",
    "which year had the weakest score?": "None",
    "which year had the least ger numbers?": "None",
    "which country had the least number of models?": "None",
    "of the titles released in north america, which had the least releases?": "None",
    "what was the least successful season?": "None",
    "where was the first court house built?": "None",
    "did the snp or the conservative party get a greater percentage of the vote in the 2001 general election in ochil?": "## Target type: {party}\n## Query:\nStep1: Find the entity that Party is SNP\nQuery1: \"get_information(relation='Party', tail_entity='SNP')\"\nStep2: Find the percentage of output_of_query1 in the 2001 general election in Ochil\nQuery2: \"get_information(relation='%', tail_entity='output_of_query1')\"\nStep3: Find the entity that Party is Conservative Party\nQuery3: \"get_information(relation='Party', tail_entity='Conservative Party')\"\nStep4: Find the percentage of output_of_query3 in the 2001 general election in Ochil\nQuery4: \"get_information(relation='%', tail_entity='output_of_query3')\"\nStep5: Compare the percentages of output_of_query2 and output_of_query4 to find the party with a greater percentage\nQuery5: \"if(set1>'output_of_query4', 'SNP', 'Conservative Party')\"",
    "boat with the least tonnage that was attacked": "None",
    "in what year were germans and slovaks the smallest two percentages?": "None",
    "what hospital in los angeles county providing hospital beds specifically for rehabilitation is ranked at least among the top 10 hospitals?": "## Target type: {hospital}\n## Query:\nStep1: Find the entity that County is Los Angeles County\nQuery1: \"get_information(relation='County', tail_entity='Los Angeles County')\"\nStep2: Find the entity that Type of Hospital is Rehabilitation and # Beds >= 450\nQuery2: \"get_information(relation='Type of Hospital', tail_entity='Rehabilitation', key='# Beds', value>='450')\"\nStep3: Find the top 10 hospitals in rank\nQuery3: \"get_information(relation='Rank', tail_entity<='10')\"\nStep4: Get the intersection of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2', set3='output_of_query3')\"",
    "what team is in division 2?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Division 2\nQuery1: \"get_information(relation='Division', tail_entity='2')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "is denmark better against sweden or england?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named Denmark\nQuery1: \"get_information(relation='Denmark')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the opponents of output_of_query2\nQuery3: \"get_information(relation='Opponents', tail_entity='output_of_query2')\"\nStep4: Find the entity named Sweden\nQuery4: \"get_information(relation='Opponents', tail_entity='Sweden')\"\nStep5: Find the entity named England\nQuery5: \"get_information(relation='Opponents', tail_entity='England')\"\nStep6: Find the row_number of output_of_query4\nQuery6: \"get_information(relation='row_number', head_entity='output_of_query4')\"\nStep7: Find the row_number of output_of_query5\nQuery7: \"get_information(relation='row_number', head_entity='output_of_query5')\"\nStep8: Compare the row_number of output_of_query6 and output_of_query7\nQuery8: \"compare(set1='output_of_query6', set2='output_of_query7')\"",
    "what is the next location listed after fonsazo?": "## Target type: {location}\n## Query:\nStep1: Find the entity named Fonsazo\nQuery1: \"get_information(relation='Location', tail_entity='Fonsazo')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "which defendant was also the second-in-command to the gestapo?": "## Target type: {defendant}\n## Query:\nStep1: Find the entity that is the second-in-command to the Gestapo\nQuery1: \"get_information(relation='Function', tail_entity='second-in-command to the gestapo')\"\nStep2: Find the defendant of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the total number of titles in 2011?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year being 2011\nQuery1: \"get_information(relation='Year', tail_entity='2011')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was george hees a member of the liberal or progressive conservative party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named George Hees\nQuery1: \"get_information(relation='Name', tail_entity='George Hees')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Political party', head_entity='output_of_query1')\"",
    "how many courthouses are in vermont total?": "## Target type: {number of courthouses}\n## Query:\nStep1: Find the entity named Vermont\nQuery1: \"get_information(relation='Jurisdiction', tail_entity='Vermont')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of sheriff's with the last name smith?": "None",
    "how many more games did allan houston play than mark jackson?": "None",
    "how many times out of the 8 matches did the home team win?": "None",
    "how many titles did melbourne house publish": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity named Melbourne House\nQuery1: \"get_information(relation='Publisher', tail_entity='Melbourne House')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in which years did fumio finish 3rd and 2nd?": "None",
    "what is the total age of \"what a myth\" and \"rough tweed\"?": "## Target type: {total age}\n## Query:\nStep1: Find the entity named \"What a Myth\"\nQuery1: \"get_information(relation='Name', tail_entity='What a Myth')\"\nStep2: Find the age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Rough Tweed\"\nQuery3: \"get_information(relation='Name', tail_entity='Rough Tweed')\"\nStep4: Find the age of output_of_query3\nQuery4: \"get_information(relation='Age', head_entity='output_of_query3')\"\nStep5: Calculate the total age of output_of_query2 and output_of_query4\nQuery5: \"calculate_sum(set1='output_of_query2', set2='output_of_query4')\"",
    "which incumbent died before john george montagu?": "None",
    "which place is the largest in area and where afrikaans is spoken?": "## Target type: {place}\n## Query:\nStep1: Find the places where Afrikaans is spoken\nQuery1: \"get_information(relation='Most spoken language', tail_entity='Afrikaans')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area (km2)', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the places with the max area\nQuery4: \"get_information(relation='Area (km2)', tail_entity='output_of_query3')\"\nStep5: Find the place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "how long did james leach hold his seat?": "None",
    "how many consecutive km were raced on july 8th?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the date on July 8th\nQuery1: \"get_information(relation='Date', tail_entity='8 July')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "name a single that had no spot on the billboard hot 100.": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of US Billboard Hot 100\nQuery1: \"get_information(relation='US: Billboard Hot 100', tail_entity='-')\"\nStep2: Get a random output_of_query1\nQuery2: \"random(set='output_of_query1')\"\nStep3: Get the Title of output_of_query2\nQuery3: \"get_information(relation='Title', head_entity='output_of_query2')\"",
    "how many total chairpersons were there between 1905 and 1921?": "None",
    "what is the number of shows on the list?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the last row in the list.\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number.\nQuery2: \"max(set='output_of_query1')\"\nStep3: Calculate the count of all rows until max row_number.\nQuery3: \"count(set='output_of_query1')\"",
    "what is the number of consecrations for the cathedral church of st. mary?": "None",
    "the london emirates air line pylon has the same height as which pylon?": "None",
    "who was dabi sordo's co-driver?": "## Target type: {co-driver}\n## Query:\nStep1: Find the entity named Dani Sordo\nQuery1: \"get_information(relation='Driver', tail_entity='Dani Sordo')\"\nStep2: Find the co-driver of output_of_query1\nQuery2: \"get_information(relation='Co-driver', head_entity='output_of_query1')\"",
    "what is the name of the festival that has won the most?": "None",
    "what is he number of events held in philadelphia?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose location is Philadelphia\nQuery1: \"get_information(relation='Location', tail_entity='Philadelphia')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many other symbols than kr are extended to the 30th?": "## Target type: {number}\n## Query:\nStep1: Find the row with the relation of symbol 'Kr'\nQuery1: \"get_information(relation='symbol', tail_entity='Kr')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the number of symbols extended to the 30th\nQuery5: \"count(set='output_of_query4')\"",
    "how many cities are below 1000 in population?": "None",
    "what is the total number from column 1 for all face values?": "None",
    "what were the number of license plates that had a slogan according to this chart?": "None",
    "which city name has the least number of unique letters?": "None",
    "which transmitters do not have an a.g. value containing the letter k?": "None",
    "how many candidates received at least 100,000 votes?": "None",
    "what year was the first to reach 1,000 or more live births?": "None",
    "what is the average time?": "None",
    "how many games were played in the month of november": "None",
    "how many years did he win at least 3 times?": "None",
    "how many wins do the opponents have total?": "None",
    "how many times did his jump surpass 7.70 m?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that Notes is greater than 7.70 m\nQuery1: \"get_information(relation='Notes', tail_entity>'7.70 m')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total races did troy bayliss win?": "## Target type: {number of races}\n## Query:\nStep1: Find the entity named Troy Bayliss\nQuery1: \"get_information(relation='Winning Rider', tail_entity='Troy Bayliss')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the only driver to have consecutive wins?": "## Target type: {driver}\n## Query:\nStep1: Find all the drivers\nQuery1: \"get_information(relation='Driver')\"\nStep2: Iterate over each driver and find their consecutive wins\nQuery2: \"for driver in output_of_query1: set_union(set1='get_information(relation='Driver', tail_entity='driver')', set2='get_information(relation='row_number', tail_entity='driver')')\"\nStep3: Find the drivers who have consecutive wins\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query2')\"\nStep4: Get the output_of_query3 as the answer",
    "which artist only had 1 release?": "None",
    "which artist has the most album": "## Target type: {artist}\n## Query:\nStep1: Find all the artist(s)\nQuery1: \"get_information(relation='Artist(s)')\"\nStep2: Count the occurrence of each artist\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the artist(s) with the maximum count\nQuery3: \"get_information(relation='Artist(s)', tail_entity>='most')\"",
    "how many times did the hungarians have a percentage more than germans?": "None",
    "which make had the most consecutive finishes at the aarons 499?": "## Target type: {make}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Make of output_of_query3\nQuery4: \"get_information(relation='Make', head_entity='output_of_query3')\"",
    "how many chassis in the 80's were penske's?": "## Target type: {number}\n## Query:\nStep1: Find the chassis in the 80's\nQuery1: \"get_information(relation='Year', tail_entity>='80')\"\nStep2: Find the chassis that is Penske's\nQuery2: \"get_information(relation='Chassis', tail_entity='Penske')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how long did bob veith have the number 54 car at the indy 500?": "None",
    "how many pole positions were won by robert huff?": "## Target type: {number of pole positions}\n## Query:\nStep1: Find the entity with the relation Pole Position\nQuery1: \"get_information(relation='Pole Position')\"\nStep2: Find the entity named Robert Huff\nQuery2: \"get_information(relation='Pole Position', tail_entity='Robert Huff')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "did bob veith drive more indy 500 laps in the 1950s or 1960s?": "None",
    "what was the number of drivers on the societe roc team in this race?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Team being \"Societe Roc\"\nQuery1: \"get_information(relation='Team', tail_entity='Societe Roc')\"\nStep2: Find the row_number in output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of drivers in output_of_query2\nQuery3: \"get_information(relation='No', tail_entity='output_of_query2')\"",
    "which school is the first school to have been closed?": "None",
    "how many competitions had a score of 1-0 at most?": "None",
    "at which date was the highest attendance recorded?": "None",
    "what was the time of the person who finished first?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity with the relation of Rank being 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Get the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "which province in the dominican republic has the same density of people per square kilometer as san juan?": "None",
    "which has a distance of more than 1 kilometer but less than 2 kilometers?": "None",
    "elevation difference in mount montezuma, chile and mount brukkaros, namibia": "None",
    "of the buildings, which is only 48 meters tall?": "## Target type: {building name}\n## Query:\nStep1: Find the entity with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Find the entity with the value of '48 metres (157 ft)'\nQuery2: \"get_information(relation='Height', value='48 metres (157 ft)')\"\nStep3: Get the building name of output_of_query2\nQuery3: \"get_information(relation='Name', head_entity='output_of_query2')\"",
    "did they have a better score against the tennessee titans or the green bay packers?": "None",
    "did the new york titans win or lose game number 13?": "## Target type: {outcome}\n## Query:\nStep1: Find the entity that Game is 13\nQuery1: \"get_information(relation='Game', tail_entity='13')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Check if the Score of output_of_query2 starts with 'W'\nQuery3: \"starts_with(s='output_of_query2', prefix='W')\"",
    "number of points scored by miami (oh) against the broncos.": "None",
    "do the republicans have the same number of elected officials as democrats?": "## Target type: {boolean}\n## Query:\nStep1: Find the count of elected officials from the party Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Find the count of elected officials from the party Democratic\nQuery2: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep3: Check if the count of output_of_query1 is equal to the count of output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2', operator='equal')\"",
    "who was the last republican to win?": "None",
    "how many representatives were appointed by theodore roosevelt?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Theodore Roosevelt\nQuery1: \"get_information(relation='Appointed by', tail_entity='Theodore Roosevelt')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which game sites had an attendance lower than 50,000": "None",
    "which home team brought the greatest number of attendance?": "None",
    "on which did date their game have the least people in attendance?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which location has the least number of attendees for the month of march?": "## Target type: {location}\n## Query:\nStep1: Find the entities with the relation of Attendance for the month of March\nQuery1: \"get_information(relation='Attendance', tail_entity contains='March')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "a total of how many (t) of niobium was produced in the world in the year 2000?": "None",
    "there are how many countries with a total gdp greater than 100?": "None",
    "how many more gold medals must qatar win before they can earn 12 gold medals?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Qatar\nQuery1: \"get_information(relation='Nation', tail_entity='Qatar')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Calculate the difference between 12 and output_of_query2\nQuery3: \"calculate(operation='subtraction', operand1='12', operand2='output_of_query2')\"",
    "what is the difference in the total score between first and second place?": "None",
    "the least number of points belongs to whom?": "## Target type: {Rider}\n## Query:\nStep1: Find the entity with the relation of Total Points\nQuery1: \"get_information(relation='Total Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total Points\nQuery3: \"get_information(relation='Total Points', tail_entity='output_of_query2')\"\nStep4: Find the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "when was the score difference the greatest?": "None",
    "which team had the highest score out of all of the games?": "None",
    "what artist scored the least number of points?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "who coached more seasons: ed sabre or mack erwin?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Ed Sabre\nQuery1: \"get_information(relation='Coach', tail_entity='Ed Sabre')\"\nStep2: Find the seasons of output_of_query1\nQuery2: \"get_information(relation='Seasons', head_entity='output_of_query1')\"\nStep3: Find the entity named Mack Erwin\nQuery3: \"get_information(relation='Coach', tail_entity='Mack Erwin')\"\nStep4: Find the seasons of output_of_query3\nQuery4: \"get_information(relation='Seasons', head_entity='output_of_query3')\"\nStep5: Find the coach with more seasons\nQuery5: \"set_max(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the average attendance in 2008?": "## Target type: {average attendance}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='2008')\"\nStep2: Find the Average of output_of_query1\nQuery2: \"get_information(relation='Average', head_entity='output_of_query1')\"",
    "how many total awards has this director won?": "None",
    "how many bronze medals does togo have?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity that is Togo\nQuery1: \"get_information(relation='Nation', tail_entity='Togo')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "which was the only team to win by forfeit?": "None",
    "what is the city with the lowest density?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Density\nQuery1: \"get_information(relation='Density')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Density\nQuery3: \"get_information(relation='Density', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "name the top three parties?": "## Target type: {party}\n## Query:\nStep1: Find the top three row_numbers\nQuery1: \"get_information(relation='row_number', tail_entity<='3')\"\nStep2: Find the Parties of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "in what year was civallero's first listed achievement?": "None",
    "which is the only year they went 1-1 at home?": "None",
    "what is the total number of tallest pylons in austria?": "None",
    "in which venue was the next performance after the one at verdun auditorium?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that Venue is Verdun Auditorium\nQuery1: \"get_information(relation='Venue', tail_entity='Verdun Auditorium')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "is the number of draws in the history of the derby above or below 10?": "## Target type: {above/below}\n## Query:\nStep1: Find the entity that represents Draw in the history of the derby\nQuery1: \"get_information(relation='Draw', tail_entity='history of the derby')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of draws in the history of the derby\nQuery3: \"count(set='output_of_query2')\"\nStep4: Compare the count of draws with 10\nQuery4: \"if set>10 then 'above' else 'below'\"",
    "the ffestiniog railway serviced at most how many slate quarries?": "None",
    "besides belgium what other team did he score on in the year 2001?": "None",
    "which country has the top amount of adherents?": "None",
    "what is the number of frog pillow pals?": "## Target type: {number}\n## Query:\nStep1: Find the number of frog pillow pals\nQuery1: \"get_information(relation='Animal Type', tail_entity='Frog')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which week(s) did not have more than 75,000 in attendance?": "None",
    "how many cyclists finished with the speed of at least 47.000?": "## Target type: {number}\n## Query:\nStep1: Find the cyclists with the speed of at least 47.000\nQuery1: \"get_information(relation='Speed', tail_entity>='47.000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games had at least 40,000 spectators in attendance?": "## Target type: {number}\n## Query:\nStep1: Find the games with attendance of at least 40,000\nQuery1: \"get_information(relation='Attendance', tail_entity>='40000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which name is listed previous to brian talbot?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Brian Talbot\nQuery1: \"get_information(relation='Name', tail_entity='Brian Talbot')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what municipality comes after qender?": "## Target type: {municipality}\n## Query:\nStep1: Find the entity named Qender\nQuery1: \"get_information(relation='Municipality/Communes', tail_entity='Qender')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the municipality of output_of_query4\nQuery5: \"get_information(relation='Municipality/Communes', head_entity='output_of_query4')\"",
    "which version was around 7 minutes in length but remixed by enzo mori and stephan clark?": "## Target type: {'Version'}\n## Query:\nStep1: Find the entity with the relation of Length that is around 7 minutes\nQuery1: \"get_information(relation='Length', tail_entity>='6:30', tail_entity<='7:30')\"\nStep2: Find the entity with the relation of Remixed by that is Enzo Mori & Stephan Clark\nQuery2: \"get_information(relation='Remixed by', tail_entity='Enzo Mori & Stephan Clark')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "what was the total attendance at the end of the last week?": "## Target type: {attendance}\n## Query:\nStep1: Find the row_number of the last week\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "how many consecutive wins did the hoyas have this season?": "None",
    "how many away games did the hoyas lose?": "None",
    "what city were most playoff bowls played?": "None",
    "how many quarterfinals were won by the atlantic coast conference?": "## Target Type: {number}\n## Query:\nStep1: Find the entity named Atlantic Coast Conference\nQuery1: \"get_information(relation='Conference', tail_entity='Atlantic Coast Conference')\"\nStep2: Find the number of quarterfinals won by output_of_query1\nQuery2: \"get_information(relation='Quarterfinals', head_entity='output_of_query1')\"",
    "which event lasted the longest time?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "what were the total number of weeks in which lopes was considered to be \"safe.\"": "None",
    "how long is the song remixed by y-front?": "## Target type: {length}\n## Query:\nStep1: Find the entity that is remixed by Y-Front\nQuery1: \"get_information(relation='Remixed by', tail_entity='Y-Front')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "how long did jamie swanner play as goal keeper?": "None",
    "how long was soulima stravinsky alive?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Soulima Stravinsky\nQuery1: \"get_information(relation='Composer', tail_entity='Soulima Stravinsky')\"\nStep2: Find the born year of output_of_query1\nQuery2: \"get_information(relation='Born', head_entity='output_of_query1')\"\nStep3: Find the died year of output_of_query1\nQuery3: \"get_information(relation='Died', head_entity='output_of_query1')\"\nStep4: Calculate the duration between the born and died years\nQuery4: \"duration(start_year='output_of_query2', end_year='output_of_query3')\"",
    "who was their only opponent in december?": "None",
    "who is the first opponent listed on this chart?": "## Target type: {opponent}\n## Query:\nStep1: Find the first row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "what is the pinyin transliteration of the first name in the table?": "None",
    "how many times was a conference held in san francisco?": "## Target type: {number}\n## Query:\nStep1: Find the entity that City is San Francisco\nQuery1: \"get_information(relation='City', tail_entity='San Francisco')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations won more than ten silver medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations with more than ten silver medals\nQuery1: \"get_information(relation='Silver', tail_entity>'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the top driver at the 1967 british grand prix?": "## Target type: {driver}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity where row_number is 1\nQuery2: \"get_information(relation='row_number', tail_entity='1')\"\nStep3: Find the driver of output_of_query2\nQuery3: \"get_information(relation='Driver', head_entity='output_of_query2')\"",
    "which dates did the colombo national hospital have more than 75 but less than 100 idps?": "None",
    "number of official middle-earth video games before the year 2000.": "## Target type: {number of games}\n## Query:\nStep1: Find all the games that are before the year 2000\nQuery1: \"get_information(relation='Year', tail_entity<='2000')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "between 1987 and 2000 how many times did atletico artexico place below 7th at the end of the season?": "None",
    "what is the next town after riverside?": "## Target type: {town}\n## Query:\nStep1: Find the entity named Riverside\nQuery1: \"get_information(relation='Town', tail_entity='Riverside')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Town of output_of_query4\nQuery5: \"get_information(relation='Town', head_entity='output_of_query4')\"",
    "how many silver medals did belarus win?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is Belarus\nQuery1: \"get_information(relation='Nation', tail_entity='Belarus')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "which nation was the first to win three gold medals for olympic figure skating?": "None",
    "how many total medals did norway win?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Norway\nQuery1: \"get_information(relation='Nation', tail_entity='Norway')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how long after fairfield was no. 1 built?": "None",
    "the independent conference and the colonial athletic association both received how many bids?": "## Target type: {number of bids}\n## Query:\nStep1: Find the entity whose Conference is Independent Conference\nQuery1: \"get_information(relation='Conference', tail_entity='Independent Conference')\"\nStep2: Find the bids of output_of_query1\nQuery2: \"get_information(relation='Bids', head_entity='output_of_query1')\"\nStep3: Find the entity whose Conference is Colonial Athletic Association\nQuery3: \"get_information(relation='Conference', tail_entity='Colonial Athletic Association')\"\nStep4: Find the bids of output_of_query3\nQuery4: \"get_information(relation='Bids', head_entity='output_of_query3')\"",
    "total number of venues that hosted first and second round games.": "## Target type: {number}\n## Query:\nStep1: Find the venues that hosted first round games\nQuery1: \"get_information(relation='Rnd', tail_entity='1')\"\nStep2: Find the venues that hosted second round games\nQuery2: \"get_information(relation='Rnd', tail_entity='2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who performed better, toshida or young-sun?": "None",
    "how long has frank defays served as manager?": "## Target type: {years, days}\n## Query:\nStep1: Find the entity named Frank Defays\nQuery1: \"get_information(relation='Name', tail_entity='Frank Defays')\"\nStep2: Find the time as manager of output_of_query1\nQuery2: \"get_information(relation='Time as manager', head_entity='output_of_query1')\"",
    "how old was pierre vallieres before he died?": "## Target type: {age}\n## Query:\nStep1: Find the entity named Pierre Vallieres\nQuery1: \"get_information(relation='Name', tail_entity='Pierre Vallieres')\"\nStep2: Find the Lifetime of output_of_query1\nQuery2: \"get_information(relation='Lifetime', head_entity='output_of_query1')\"\nStep3: Get the birth year of output_of_query2\nQuery3: \"get_information(relation='b.', tail_entity='output_of_query2')\"\nStep4: Calculate the age before he died\nQuery4: \"subtract(current_year, output_of_query3)\"",
    "what is the difference in years between cry wolf and four christmases?": "## Target type: {difference in years}\n## Query:\nStep1: Find the row_number of Cry Wolf\nQuery1: \"get_information(relation='Title', tail_entity='Cry Wolf')\"\nStep2: Get the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the row_number of Four Christmases\nQuery3: \"get_information(relation='Title', tail_entity='Four Christmases')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\" \nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the difference in apparent magnitude between m31 and m33?": "## Target type: {difference in apparent magnitude}\n## Query:\nStep1: Find the entity named M31\nQuery1: \"get_information(relation='Designation', tail_entity='M31')\"\nStep2: Find the apparent magnitude of output_of_query1\nQuery2: \"get_information(relation='Apparent Magnitude', head_entity='output_of_query1')\"\nStep3: Find the entity named M33\nQuery3: \"get_information(relation='Designation', tail_entity='M33')\"\nStep4: Find the apparent magnitude of output_of_query3\nQuery4: \"get_information(relation='Apparent Magnitude', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the last team?": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many times has this team been relegated?": "None",
    "how long has it been since the last greensborough football club promotion?": "None",
    "which countries won the same number of gold medals as japan?": "None",
    "which nation won the same number of gold medals as hungary?": "None",
    "how many gold medals did the top 3 nations earn altogether?": "None",
    "which nations have won only one medal?": "## Target type: {nations}\n## Query:\nStep1: Find the entity whose Total is 1\nQuery1: \"get_information(relation='Total', tail_entity='1')\"\nStep2: Get the Nations of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "the britannic and the georgic were both built for what?": "None",
    "who finished before eduardo piccinini?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Eduardo Piccinini\nQuery1: \"get_information(relation='Name', tail_entity='Eduardo Piccinini')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "in which years were there only 1 loss?": "None",
    "previous to 2000 how many albums were released?": "None",
    "what is the average number of employees at a given plant?": "None",
    "what were the total number of drivers that had contact listed under their time?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the drivers that had \"Contact\" listed under their \"Time/Retired\"\nQuery1: \"get_information(relation='Time/Retired', tail_entity='Contact')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "does each edition have more than one poetry prize?": "None",
    "nick roach was signed the same day as what other player?": "None",
    "avram grant was with chelsea for at least how many years?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Avram Grant\nQuery1: \"get_information(relation='Outgoing manager', tail_entity='Avram Grant')\"\nStep2: Find the Date of appointment of output_of_query1\nQuery2: \"get_information(relation='Date of appointment', head_entity='output_of_query1')\"\nStep3: Find the Date of vacancy of output_of_query1\nQuery3: \"get_information(relation='Date of vacancy', head_entity='output_of_query1')\"\nStep4: Calculate the time difference between output_of_query2 and output_of_query3 in years\nQuery4: \"calculate_time_difference(start_date='output_of_query2', end_date='output_of_query3', unit='years')\"",
    "which season did they finish in the same place as the 1998-1999 season?": "None",
    "the 2001/2002 season and the 1999/2000 season both resulted in what place for this team?": "## Target type: {place}\n## Query:\nStep1: Find the entity with Season is 2001/2002\nQuery1: \"get_information(relation='Season', tail_entity='2001/2002')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity with Season is 1999/2000\nQuery3: \"get_information(relation='Season', tail_entity='1999/2000')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the last year the team finished 2nd?": "None",
    "in 2000 they finished 9th in their division, did they perform better or worse the next season?": "None",
    "the only team to win the north in 2000-01 season?": "## Target type: {team}\n## Query:\nStep1: Find the entity named 2000-01 season\nQuery1: \"get_information(relation='Season', tail_entity='2000-01')\"\nStep2: Find the North of output_of_query1\nQuery2: \"get_information(relation='North', head_entity='output_of_query1')\"",
    "in what other year did the place the same in regular season as in 2001?": "None",
    "which years were the totals at least 600,000?": "None",
    "what is the difference in population between ascension island and gough island?": "None",
    "saint lucia has how many districts with a population density below 200 persons per square kilometer?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Saint Lucia\nQuery1: \"get_information(relation='District', tail_entity='Saint Lucia')\"\nStep2: Find the population density of output_of_query1\nQuery2: \"get_information(relation='Density (persons/km\u00b2)', head_entity='output_of_query1')\" \nStep3: Find the entity whose population density is below 200 persons per square kilometer\nQuery3: \"get_information(relation='Density (persons/km\u00b2)', tail_entity<'200')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "name each driver that drove a peugeot vehicle": "None",
    "what year was the first union match between new zealand and wales played?": "None",
    "what is the total number of russian gymnasts that have won silver.": "None",
    "how many gold medals did brazil win?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "what is the name of the last pillow pal on this chart?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "antonio inoki came from reign 1 and so did ___": "None",
    "how long was otto fritz meyerhof a research professor?": "None",
    "who does john hendrie play for?": "## Target type: {team}\n## Query:\nStep1: Find the entity named John Hendrie\nQuery1: \"get_information(relation='Player', tail_entity='John Hendrie')\"\nStep2: Find the team that John Hendrie plays for\nQuery2: \"get_information(relation='For', head_entity='output_of_query1')\"",
    "hosei won in 1964. who won the next year?": "None",
    "swat force was the only game to be played on what?": "None",
    "which two players tied for first place?": "## Target type: {players}\n## Query:\nStep1: Find the entity in Place that is T1\nQuery1: \"get_information(relation='Place', tail_entity='T1')\"\nStep2: Find the players in output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the difference in attendance on november 7th and october 17th?": "None",
    "which peaks were measured by bd explorer before 2012?": "None",
    "which game had a higher attendance, the october 15 1921 game or the october 22 2921 game?": "None",
    "how long have they been active?": "None",
    "who sings the last song on this album?": "## Target type: {performer(s)}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Performer(s) of output_of_query3\nQuery4: \"get_information(relation='Performer(s)', head_entity='output_of_query3')\"",
    "how many trials were in november 2006?": "None",
    "what was the name of natalia lesz's first single?": "None",
    "who was the first person born?": "None",
    "after the dissolution of the 37th parliament of canada how many more house members did the new democratic party have?": "## Target type: {'House Members'}\n## Query:\nStep1: Find the entity named 37th parliament of Canada\nQuery1: \"get_information(relation='row_number', tail_entity='37th parliament of Canada')\"\nStep2: Find the House Members of output_of_query1\nQuery2: \"get_information(relation='House Members', head_entity='output_of_query1')\"\nStep3: Find the entity with the affiliation of New Democratic Party\nQuery3: \"get_information(relation='Affiliation', tail_entity='New Democratic Party')\"\nStep4: Find the House Members of output_of_query3\nQuery4: \"get_information(relation='House Members', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the total number of painters who scored 12 in composition?": "## Target type: {number of painters}\n## Query:\nStep1: Find the entity with the relation of Composition\nQuery1: \"get_information(relation='Composition', tail_entity='12')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which one is last on the chart": "None",
    "how many teams earned winnings above $100,000 between 1986-1996?": "None",
    "what two colors can be worn for home or away games?": "None",
    "which year was more successful, 2010 or 2013?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Find the entity that is 2013\nQuery2: \"get_information(relation='Year', tail_entity='2013')\"\nStep3: Find the Regular Season of output_of_query1\nQuery3: \"get_information(relation='Regular Season', head_entity='output_of_query1')\"\nStep4: Find the Regular Season of output_of_query2\nQuery4: \"get_information(relation='Regular Season', head_entity='output_of_query2')\"\nStep5: Calculate the rank of output_of_query3\nQuery5: \"calculate_rank(entity='output_of_query3', order='ascending')\"\nStep6: Calculate the rank of output_of_query4\nQuery6: \"calculate_rank(entity='output_of_query4', order='ascending')\" \nStep7: Compare the ranks of output_of_query5 and output_of_query6\nQuery7: \"compare(ranking1='output_of_query5', ranking2='output_of_query6')\"",
    "name a competitor that scored more that 2600 points and was from canada.": "None",
    "what author had the least number of patients?": "## Target type: {author}\n## Query:\nStep1: Find the entity with the relation of No. of patients\nQuery1: \"get_information(relation='No. of patients')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min No. of patients\nQuery3: \"get_information(relation='No. of patients', tail_entity='output_of_query2')\"\nStep4: Find the author of output_of_query3\nQuery4: \"get_information(relation='Main author', head_entity='output_of_query3')\"",
    "how many people attended the september 22 game?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is September 22nd\nQuery1: \"get_information(relation='Date', tail_entity='September 22')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "which team from the united states completed the most laps?": "## Target type: {team}\n## Query:\nStep1: Find the entity whose Team is from the United States\nQuery1: \"get_information(relation='Team', tail_entity='United States')\"\nStep2: Find the Laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max Laps completed\nQuery4: \"get_information(relation='Laps', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "what was the last year that it finished the race?": "None",
    "how many games started after 4:00 pm edt?": "None",
    "how many games were played before 3:00 p.m.?": "None",
    "how many tracks were over five minutes?": "None",
    "how many albums are more than 3:30 long?": "None",
    "which driver appears the most?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with the relation of Driver\nQuery1: \"get_information(relation='Driver')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most_common(set='output_of_query1')\"",
    "which driver is from england allan mcnish or clint field": "None",
    "who is the only driver to use a ferrari chassis?": "## Target type: {driver}\n## Query:\nStep1: Find the entity where the chassis is Ferrari\nQuery1: \"get_information(relation='Chassis', tail_entity='Ferrari')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what entrant has the most drivers?": "None",
    "what was the last election to have under 35% of the popular votes?": "None",
    "name a city whose population was no more than 400 in 2011.": "None",
    "other than the 2007 election, which election had approximately 39% of the popular vote?": "## Target type: {election}\n## Query:\nStep1: Find the entity named 2007\nQuery1: \"get_information(relation='Election', tail_entity='2007')\"\nStep2: Find the % of popular votes of output_of_query1\nQuery2: \"get_information(relation='% of popular votes', head_entity='output_of_query1')\"\nStep3: Find the election with approximately 39% of popular votes\nQuery3: \"get_information(relation='% of popular votes', tail_entity='approximately 39%')\"\nStep4: Get the set difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who has a 2011 population less than 224,000?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population (2011)\nQuery1: \"get_information(relation='Population (2011)')\"\nStep2: Find the entity whose population is less than 224,000\nQuery2: \"get_information(relation='Population (2011)', tail_entity<'224000')\"\nStep3: Find the City of output_of_query2\nQuery3: \"get_information(relation='City', head_entity='output_of_query2')\"",
    "who was the player of the year before robert smith?": "None",
    "which player was drafted after bob pierson?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Bob Pierson\nQuery1: \"get_information(relation='Player', tail_entity='Bob Pierson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what is the highest ranking the team has ever received?": "None",
    "who is the top ranking athlete?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of row_number as 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the athlete of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "in the 197172 national hurling league, who is the only single player ranked in the top 10 from laois?": "None",
    "what were the total number times ferrari was listed as an engine according to this chart?": "None",
    "who drives a maserati, chiron or ascari?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Maserati\nQuery1: \"get_information(relation='Constructor', tail_entity='Maserati')\"\nStep2: Find the entity named Chiron\nQuery2: \"get_information(relation='Driver', tail_entity='Chiron')\"\nStep3: Find the entity named Ascari\nQuery3: \"get_information(relation='Driver', tail_entity='Ascari')\"\nStep4: Get the union of output_of_query2 and output_of_query3\nQuery4: \"set_union(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Get the intersection of output_of_query1 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query1', set2='output_of_query4')\"",
    "how many times was the fiat abarth 124 rallye car used?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Fiat Abarth 124 Rallye\nQuery1: \"get_information(relation='Car', tail_entity='Fiat Abarth 124 Rallye')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "before \"1000 times\", what song is listed in 1999?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named \"1000 times\"\nQuery1: \"get_information(relation='Title', tail_entity='1000 times')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity whose row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which players came in a place before lukas bauer?": "None",
    "number of games in the match against dominika cibulkova?": "None",
    "between tingkhong and sonari, which had a higher constituency number?": "None",
    "what is the total number of games, excluding playoffs, they played in the season?": "None",
    "which month had the most performers?": "None",
    "what were the number of wins in the month of october?": "None",
    "how many times was w connection the winner?": "## Target type: {number}\n## Query:\nStep1: Find the entity named W Connection\nQuery1: \"get_information(relation='Winner', tail_entity='W Connection')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what swimmer had the top or first rank?": "## Target type: {'Swimmer'}\n## Query:\nStep1: Find the entity with the relation of Rank and row_number of 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Get the Swimmer of output_of_query1\nQuery2: \"get_information(relation='Swimmer', head_entity='output_of_query1')\"",
    "did tom burke run as country or alp party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Tom Burke\nQuery1: \"get_information(relation='Member', tail_entity='Tom Burke')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "what is the total number of models listed?": "None",
    "how many songs are listed from 1998?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity with the relation of Year as 1998.\nQuery1: \"get_information(relation='Year', tail_entity='1998')\"\nStep2: Count the number of entity in output_of_query1.\nQuery2: \"count(set='output_of_query1')\"",
    "which model is a diesel, the tour or the aspect?": "None",
    "what is the total number of utility vehicle models used?": "None",
    "what is the longest track on the album?": "## Target type: {'Length'}\n## Query:\nStep1: Find all the Length values\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max Length value\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the row with max Length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what year was the first prion characterized?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Prion State is [PSI+]\nQuery1: \"get_information(relation='Prion State', tail_entity='[PSI+]')\"\nStep2: Find the Year Identified of output_of_query1\nQuery2: \"get_information(relation='Year Identified', head_entity='output_of_query1')\"",
    "how many times did the party place 2nd?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place equals 2nd\nQuery1: \"get_information(relation='Place', tail_entity='2nd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was from the lion king, \"can you feel the love tonight\" or \"candle on the water\"?": "None",
    "who placed next after paul tracy?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Paul Tracy\nQuery1: \"get_information(relation='Driver', tail_entity='Paul Tracy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "how many total opponents are there?": "None",
    "what was the number of guards picked in the ninth round of the 1937 nfl draft?": "## Target type: {number of guards}\n## Query:\nStep1: Find the entity in NFL Team that is Philadelphia Eagles\nQuery1: \"get_information(relation='NFL Team', tail_entity='Philadelphia Eagles')\"\nStep2: Find the Pick # of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the entity in row_number that is 9\nQuery4: \"get_information(relation='row_number', tail_entity='9')\"\nStep5: Find the entity in Position that is Guard\nQuery5: \"get_information(relation='Position', tail_entity='Guard')\"\nStep6: Find the entity in Pick # of output_of_query4\nQuery6: \"get_information(relation='Pick #', tail_entity='output_of_query4')\"\nStep7: Find the count of output_of_query5\nQuery7: \"count(set='output_of_query5')\"",
    "how many world championships has he been in?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Competition as 'World Championships'\nQuery1: \"get_information(relation='Competition', tail_entity='World Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many singles games did she win before 2003?": "None",
    "what are the total number of times european junior championships is listed as the competition?": "## Target type: {number}\n## Query:\nStep1: Find the entity named European Junior Championships\nQuery1: \"get_information(relation='Competition', tail_entity='European Junior Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was the sprint from the european indoor championships competition in 2000?": "## Target type: {'Notes'}\n## Query:\nStep1: Find the entity with the relation of Competition as \"European Indoor Championships\" and Year as \"2000\"\nQuery1: \"get_information(relation='Competition', tail_entity='European Indoor Championships', key='Year', value='2000')\"\nStep2: Find the sprint length of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"",
    "which nation won more silver medals, hong kong or syria?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Hong Kong\nQuery1: \"get_information(relation='Nation', tail_entity='Hong Kong')\"\nStep2: Find the number of silver medals won by output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Syria\nQuery3: \"get_information(relation='Nation', tail_entity='Syria')\"\nStep4: Find the number of silver medals won by output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Determine which nation won more silver medals\nQuery5: \"if(set1>set2, 'output_of_query1', 'output_of_query3')\"",
    "which nation had more bronze medals: algeria, tunisia or egypt?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Algeria\nQuery1: \"get_information(relation='Nation', tail_entity='Algeria')\"\nStep2: Find the bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity named Tunisia\nQuery3: \"get_information(relation='Nation', tail_entity='Tunisia')\"\nStep4: Find the bronze medals of output_of_query3\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query3')\"\nStep5: Find the entity named Egypt\nQuery5: \"get_information(relation='Nation', tail_entity='Egypt')\"\nStep6: Find the bronze medals of output_of_query5\nQuery6: \"get_information(relation='Bronze', head_entity='output_of_query5')\"\nStep7: Compare the bronze medals of output_of_query2, output_of_query4, and output_of_query6\nQuery7: \"if_then_else(set1='output_of_query2', set2='output_of_query4', set3='output_of_query6')\"",
    "who was the last team to win the world cup?": "None",
    "which countries won at least six bronze medals?": "None",
    "how many people withdrew in the 4th stage?": "None",
    "how many episodes had a nightly rank of 11?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity with the relation of Nightly Rank and value of 11.\nQuery1: \"get_information(relation='Nightly Rank', tail_entity='11')\"\nStep2: Calculate the count of output_of_query1.\nQuery2: \"count(set='output_of_query1')\"",
    "how many contestants were there on june 3, 2012?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the entity with the relation of Premiere Date that matches June 3, 2012\nQuery1: \"get_information(relation='Premiere date', tail_entity='June 3, 2012')\"\nStep2: Get the Number of Contestants of output_of_query1\nQuery2: \"get_information(relation='Number of Contestants', head_entity='output_of_query1')\"",
    "which season had the least amount of housemates?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Housemates\nQuery1: \"get_information(relation='Housemates')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Housemates\nQuery3: \"get_information(relation='Housemates', tail_entity='output_of_query2')\"\nStep4: Find the season of output_of_query3\nQuery4: \"get_information(relation='Series', head_entity='output_of_query3')\"",
    "how many total replacements happened in this session?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after 1983 when is the next time the % of constituency was 0.1?": "None",
    "which two american rivals won consecutive floor exercise gold medals at the artistic gymnastics world championships in 1992 and 1993?": "None",
    "what is the difference between mexico and brazil time": "None",
    "how many cities have at least 25,000 people?": "## Target type: {number}\n## Query:\nStep1: Find the cities with population at least 25,000\nQuery1: \"get_information(relation='Population', tail_entity>='25000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many penalties did germany get all together?": "None",
    "what school had the most wins overall?": "None",
    "in which year did andrea koch benvenuto win more tournaments: 2006 or 2009?": "None",
    "total, how many racers competed in the race, whether they finished or not?": "## Target type: {number of racers}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the name of the show that natalia oriero hosted in 2008?": "None",
    "what is the price of bot the via and tour models combined?": "None",
    "how long did they produce singles?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Year\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Find the max output_of_query1\nQuery4: \"max(set='output_of_query1')\" \nStep5: Get the entity with the max Year\nQuery5: \"get_information(relation='Year', tail_entity='output_of_query4')\"\nStep6: Calculate the difference between output_of_query5 and output_of_query3\nQuery6: \"subtract(output_of_query5, output_of_query3)\"",
    "what were the number of wins in april?": "None",
    "how many teams were in the 2006-2007 year?": "## Target type: {number}\n## Query:\nStep1: Find the entity named 2006-2007\nQuery1: \"get_information(relation='League', tail_entity='2006-2007')\"\nStep2: Find the teams of output_of_query1\nQuery2: \"get_information(relation='Teams', head_entity='output_of_query1')\"",
    "what was the opponent who barr scored against whom she had scored against before?": "None",
    "how many times does fy & bi film appear under the notes column?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Notes with 'fy & bi film'\nQuery1: \"get_information(relation='Notes', tail_entity='fy & bi film')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was coach before porter grant?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Porter Grant\nQuery1: \"get_information(relation='Coach', tail_entity='Porter Grant')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "how many international friendlys took place?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition as International Friendly\nQuery1: \"get_information(relation='Competition', tail_entity='International Friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "they won the game against the dragons on june 8. what was the previous team they beat before that?": "None",
    "name the players for tottenham hotspur.": "## Target type: {player}\n## Query:\nStep1: Find the entity that is Tottenham Hotspur\nQuery1: \"get_information(relation='For', tail_entity='Tottenham Hotspur')\"\nStep2: Get the players of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the lowest grossing film listed before march 3, 2002?": "None",
    "which country had the greatest number of total voters?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the County of output_of_query3\nQuery4: \"get_information(relation='County', head_entity='output_of_query3')\"",
    "which country earned the best amount of points after the first?": "None",
    "which team gave up the most goals?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Goals Conceded\nQuery1: \"get_information(relation='Goals Conceded')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals Conceded\nQuery3: \"get_information(relation='Goals Conceded', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which team was the top scoring team?": "## Target type: {team}\n## Query:\nStep1: Find the team with the highest Points\nQuery1: \"get_information(relation='Points', tail_entity>='highest')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the team with Points equal to output_of_query2\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"",
    "what is the total number of years the event was not held?": "None",
    "are the years of the runs consecutive?": "## Target type: {yes/no}\n## Query:\nStep1: Find the row_number of the current run\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the next_row of output_of_query1\nQuery2: \"next_row(set='output_of_query1')\"\nStep3: Check if the Year of output_of_query1 is consecutive with the next Year\nQuery3: \"consecutive_years(year1='output_of_query1', year2='output_of_query2')\"",
    "tell me the only venue in spain.": "## Target type: {venue}\n## Query:\nStep1: Find the entity whose Venue is in Spain\nQuery1: \"get_information(relation='Venue', tail_entity='Spain')\"\nStep2: Get the output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "which african country had 8 silver medal wins, but no gold medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity that has 8 Silver medals\nQuery1: \"get_information(relation='Silver', tail_entity='8')\"\nStep2: Find the entity that has no Gold medals\nQuery2: \"get_information(relation='Gold', tail_entity='0')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which nation won more gold medals than south africa?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that is South Africa\nQuery1: \"get_information(relation='Nation', tail_entity='South Africa')\"\nStep2: Find the total gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity whose total gold medals is larger than output_of_query2\nQuery3: \"get_information(relation='Gold', tail_entity>'output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which athlete took first place?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the minimum row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the minimum row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "the total number of medals won by south africa was how many?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named South Africa\nQuery1: \"get_information(relation='Nation', tail_entity='South Africa')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity = 'output_of_query1')\"",
    "how many shows had more than 10 million viewers?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Viewers (m)\nQuery1: \"get_information(relation='Viewers (m)')\"\nStep2: Find the entities with more than 10 million viewers\nQuery2: \"get_information(relation='Viewers (m)', tail_entity>'10')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many age ranges are represented in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the age ranges in the table\nQuery1: \"get_information(relation='Ages attained (years)')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of episodes in the first season": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the No. in season of output_of_query3\nQuery4: \"get_information(relation='No. in season', head_entity='output_of_query3')\"",
    "what is the first city/town/village listed in the table?": "## Target type: {city/town/village}\n## Query:\nStep1: Find the entity with the row_number of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the city/town/village of output_of_query1\nQuery2: \"get_information(relation='City/Town/Village', head_entity='output_of_query1')\"",
    "how many epiodes are in series 1-3 combined?": "None",
    "what is the first year?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "number of state senators first elected in 2002": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of First elected as 2002\nQuery1: \"get_information(relation='First elected', tail_entity='2002')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many candidates received less than 5,000 votes?": "## Target type: {number}\n## Query:\nStep1: Find the candidates with the relation of Votes less than 5,000\nQuery1: \"get_information(relation='Votes', tail_entity<'5000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what party had more than 30,000 votes but no change?": "None",
    "what was coleman domingo's first tv series?": "None",
    "what is the first song on the album produced by havoc?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that produced by Havoc\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Havoc')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many years did argentina take first place?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='Nation', tail_entity='Argentina')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Years of output_of_query2\nQuery3: \"get_information(relation='Years', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of years for singles by philips label?": "None",
    "what was the last position that the team achieved?": "## Target type: {position}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"",
    "what was the total length listed for stage 3?": "## Target type: {length}\n## Query:\nStep1: Find the entity with the relation of Stage and tail_entity is 3\nQuery1: \"get_information(relation='Stage', tail_entity='3')\"\nStep2: Get the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "how many times have they won an award?": "None",
    "what was the first video game to be released that starts with the letter o?": "None",
    "how many episodes were written by matt nix?": "None",
    "who was the previous loan before jacob butterfield?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Jacob Butterfield\nQuery1: \"get_information(relation='Name', tail_entity='Jacob Butterfield')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which team was the opponents of this team the most?": "None",
    "what is the largest year listed?": "## Target type: {year}\n## Query:\nStep1: Find all the Season years\nQuery1: \"get_information(relation='Season')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max year\nQuery3: \"get_information(relation='Season', tail_entity='output_of_query2')\"",
    "which is the last dance on the chart": "## Target type: {dance}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Dance of output_of_query3\nQuery4: \"get_information(relation='Dance', head_entity='output_of_query3')\"",
    "which year has the most number of attendees?": "None",
    "how many candidates were there for virginia 17 district?": "None",
    "other than rosebud, which yacht originated from a country other than australia and great britain?": "None",
    "what was the difference in average attendance between 2010 and 2001?": "## Target type: {difference in average attendance}\n## Query:\nStep1: Find the year 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Find the Avg. Attendance of output_of_query1\nQuery2: \"get_information(relation='Avg. Attendance', head_entity='output_of_query1')\"\nStep3: Find the year 2001\nQuery3: \"get_information(relation='Year', tail_entity='2001')\"\nStep4: Find the Avg. Attendance of output_of_query3\nQuery4: \"get_information(relation='Avg. Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(number1='output_of_query2', number2='output_of_query4')\"",
    "who was the most favorite actor the year before nicholas saputra?": "None",
    "what symbol can potentially have a negative or racist connotation?": "None",
    "how many cahokia phases were there?": "## Target type: {number of phases}\n## Query:\nStep1: Find the entity that is Cahokia\nQuery1: \"get_information(relation='Cahokia')\"\nStep2: Find the number of phases of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of nations that made it to round 1 but not past that round from 1957 to 2013?": "None",
    "what is the total population for the 2011 year in the city of patna?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Patna\nQuery1: \"get_information(relation='City', tail_entity='Patna')\"\nStep2: Find the population of output_of_query1 in the year 2011\nQuery2: \"get_information(relation='Population (2011)', head_entity='output_of_query1')\"",
    "which player received the most yards in 2007?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Yards\nQuery1: \"get_information(relation='Yards')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Yards\nQuery3: \"get_information(relation='Yards', tail_entity='output_of_query2')\" \nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "tell me the number of products that give you 12 months of whiteness.": "## Target type: {number}\n## Query:\nStep1: Find the entity that has Last of whiteness of 12 months\nQuery1: \"get_information(relation='Last of whiteness', tail_entity='12 months')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what's the total number of dates listed for 1964?": "None",
    "how many more medals does hong kong have than chinese taipei?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Hong Kong\nQuery1: \"get_information(relation='Nation', tail_entity='Hong Kong')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Chinese Taipei\nQuery3: \"get_information(relation='Nation', tail_entity='Chinese Taipei')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which country has the most in total gdp?": "None",
    "what is the difference between the gold medals won by china and its total medal winnings?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='NPC', tail_entity='China')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the Total medals of output_of_query1\nQuery3: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep4: Calculate the difference of output_of_query2 and output_of_query3\nQuery4: \"subtract(value1='output_of_query2', value2='output_of_query3')\"",
    "how many gold and silver medals in total did china receive?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Nation', tail_entity='China')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the gold medals of output_of_query1\nQuery3: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep4: Find the silver medals of output_of_query1\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep5: Calculate the total number of gold and silver medals\nQuery5: \"calculate(sum(output_of_query3, output_of_query4))\"",
    "how many more total medals did china win over japan?": "None",
    "of beijing and shanghai, which city has the largest number of people?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Beijing\nQuery1: \"get_information(relation='City 2010 census', tail_entity='Beijing')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Urban Area', head_entity='output_of_query1')\"\nStep3: Find the entity named Shanghai\nQuery3: \"get_information(relation='City 2010 census', tail_entity='Shanghai')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Urban Area', head_entity='output_of_query3')\"\nStep5: Compare the populations of output_of_query2 and output_of_query4\nQuery5: \"Calculator(function='max', operands=['output_of_query2', 'output_of_query4'])\"",
    "how many more more bronze medals did russia earn than china?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the entity named China\nQuery2: \"get_information(relation='Nation', tail_entity='China')\"\nStep3: Find the bronze medals of output_of_query1\nQuery3: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep4: Find the bronze medals of output_of_query2\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"output_of_query3 - output_of_query4\"",
    "how many ranks are there?": "None",
    "how many ranks have no name?": "None",
    "what are the number of times hit is listed as the operator?": "None",
    "how many clubs exited administration in 2003?": "None",
    "what was the first series in 2001?": "None",
    "against which opponent was the last game of the season?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "graphstream and egonet can be on any platform that supports what?": "## Target type: {platform}\n## Query:\nStep1: Find the entity named GraphStream\nQuery1: \"get_information(relation='Product', tail_entity='GraphStream')\"\nStep2: Find the platform of output_of_query1\nQuery2: \"get_information(relation='Platform', head_entity='output_of_query1')\"\nStep3: Find the entity named EgoNet\nQuery3: \"get_information(relation='Product', tail_entity='EgoNet')\"\nStep4: Find the platform of output_of_query3\nQuery4: \"get_information(relation='Platform', head_entity='output_of_query3')\"",
    "what is the only population center in the green garden township?": "## Target type: {population center}\n## Query:\nStep1: Find the entity named Green Garden Township\nQuery1: \"get_information(relation='Township', tail_entity='Green Garden Township')\"\nStep2: Find the population center of output_of_query1\nQuery2: \"get_information(relation='Population center', head_entity='output_of_query1')\"",
    "which ethnicity has more followers of islam: tatar or tajik?": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity named Tatar\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Tatar')\"\nStep2: Find the followers of Islam of output_of_query1\nQuery2: \"get_information(relation='Islam', head_entity='output_of_query1')\"\nStep3: Find the entity named Tajik\nQuery3: \"get_information(relation='Ethnicity', tail_entity='Tajik')\"\nStep4: Find the followers of Islam of output_of_query3\nQuery4: \"get_information(relation='Islam', head_entity='output_of_query3')\"\nStep5: Compare the followers of Islam of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', comparison='>')\"\nStep6: If output_of_query5 is True, return 'Tatar'; otherwise, return 'Tajik'",
    "how many consecutive escorts were in 1943?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Date is 1943\nQuery1: \"get_information(relation='Date', tail_entity='1943')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many games did bedford lose this season?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that is Bedford\nQuery1: \"get_information(relation='Home team', tail_entity='Bedford')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with the relation of Score and larger than 0\nQuery3: \"get_information(relation='Score', tail_entity>'output_of_query2')\"\nStep4: Count the output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the longest consecutive amount of topics that luke write about?": "None",
    "what is the difference between the elthorne hundred and the gore hundred in 1831?": "None",
    "which driver had four consecutive wins?": "None",
    "which competitor came in first for this race?": "None",
    "what driver earned the least amount of winnings?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Winnings\nQuery1: \"get_information(relation='Winnings')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Winnings\nQuery3: \"get_information(relation='Winnings', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "prost won the drivers title, who was his teammate?": "None",
    "how many consecutive away games did manchester united fc play in november of 1921?": "None",
    "what is the total combined density of pao and pao2?": "## Target type: {'density, g/cm3'}\n## Query:\nStep1: Find the entity named PaO\nQuery1: \"get_information(relation='Formula', tail_entity='PaO')\"\nStep2: Find the density of output_of_query1\nQuery2: \"get_information(relation='density, g/cm3', head_entity='output_of_query1')\"\nStep3: Find the entity named PaO2\nQuery3: \"get_information(relation='Formula', tail_entity='PaO2')\"\nStep4: Find the density of output_of_query3\nQuery4: \"get_information(relation='density, g/cm3', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query2 and output_of_query4\nQuery5: \"add(value1='output_of_query2', value2='output_of_query4')\"",
    "is the gere bank building taller than 6 stories?": "None",
    "who is the last player on the list to not attempt a 3 point shot?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity that 3 Points is not available\nQuery1: \"get_information(relation='3 Points', tail_entity='\u2014')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nquery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "of those listed, which had the fastest time?": "None",
    "how many points did iowa score in the swimsuit round?": "## Target type: {points}\n## Query:\nStep1: Find the entity whose State is Iowa\nQuery1: \"get_information(relation='State', tail_entity='Iowa')\"\nStep2: Find the points in the Swimsuit round of output_of_query1\nQuery2: \"get_information(relation='Swimsuit', head_entity='output_of_query1')\"",
    "what amount of time to the years span?": "## Target type: {time span}\n## Query:\nStep1: Find the min year\nQuery1: \"get_information(relation='Year')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the max year\nQuery3: \"get_information(relation='Year')\"\nStep4: Get the max output_of_query3\nQuery4: \"max(set='output_of_query3')\" \nStep5: Calculate the time span between output_of_query2 and output_of_query4\nQuery5: \"calculate_time_span(start_year='output_of_query2', end_year='output_of_query4')\"",
    "who earned more medals--vietnam or indonesia?": "None",
    "which player had the least amount listed in transfer fees?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation Transfer fee (\u20ac million)\nQuery1: \"get_information(relation='Transfer fee (\u20ac million)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Transfer fee\nQuery3: \"get_information(relation='Transfer fee (\u20ac million)', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the total amount of games that the team won by more than 2 points?": "None",
    "what is the first result listed under playoffs?": "None",
    "what were the most points scored by the losing team?": "None",
    "who was the only opponent they played which resulted in a tie game?": "None",
    "which city has the least density?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Density\nQuery1: \"get_information(relation='Density')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Density\nQuery3: \"get_information(relation='Density', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "first round pick calvin johnson went to which college?": "## Target type: {college}\n## Query:\nStep1: Find the entity with the relation of Player as Calvin Johnson\nQuery1: \"get_information(relation='Player', tail_entity='Calvin Johnson')\"\nStep2: Find the college of output_of_query1\nQuery2: \"get_information(relation='College', head_entity='output_of_query1')\"",
    "the first round not to have a draft pick.": "None",
    "who was the last draftee to be picked by the team?": "## Target type: {player}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who was the only player picked in the top ten?": "## Target type: {'Player'}\n## Query:\nStep1: Find the players with relation of Pick\nQuery1: \"get_information(relation='Pick')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the output_of_query1 where output_of_query2 is less than or equal to 10\nQuery3: \"get_information(relation='Pick', tail_entity<='output_of_query2')\"\nStep4: Find the unique players in output_of_query3\nQuery4: \"unique(set='output_of_query3')\"",
    "which cyclist resulted in a total of 22 uci world tour points?": "None",
    "how many sections intersect highway 2?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Highway 2\nQuery1: \"get_information(relation='Intersecting routes', tail_entity='Highway 2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only name on the register with the date october 1, 1969?": "None",
    "what is the number of bird sanctuary landmarks?": "None",
    "what is the last abbreviation on the list?": "## Target type: {abbreviation}\n## Query:\nStep1: Find all the Abbreviations\nQuery1: \"get_information(relation='Abbreviation')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the Abbreviation with the max row_number\nQuery3: \"get_information(relation='Abbreviation', tail_entity='output_of_query2')\"",
    "what is the number of routes that intersect highway 91?": "None",
    "how long was illinois' longest winning streak in the 1985/1986 season?": "None",
    "who is above michigan in years of participation.": "## Target type: {team}\n## Query:\nStep1: Find the entity named Michigan\nQuery1: \"get_information(relation='Team', tail_entity='Michigan')\"\nStep2: Find the years participated of output_of_query1\nQuery2: \"get_information(relation='Years participated', head_entity='output_of_query1')\"\nStep3: Find the entity whose years participated is greater than output_of_query2\nQuery3: \"get_information(relation='Years participated', tail_entity>'output_of_query2')\"\nStep4: Get the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many of the games were the illini ranked?": "None",
    "how many americans were in the top 10?": "None",
    "how many games did illinois win?": "None",
    "what was ohio states rank before playing michigan state?": "None",
    "how many songs did ishaan dev provide for movies made between 2007 and 2009?": "None",
    "how many short film roles has he acted in?": "None",
    "what movies was morrison involved with in 2007?": "## Target type: {movies}\n## Query:\nStep1: Find the entity with the relation of Year as 2007\nQuery1: \"get_information(relation='Year', tail_entity='2007')\"\nStep2: Get the movies of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many movies has he been in?": "None",
    "how many years ago was her first film?": "None",
    "how many roles has this actor had?": "None",
    "where did steven smith go to college?": "## Target type: {'College'}\n## Query:\nStep1: Find the entity named Steven Smith\nQuery1: \"get_information(relation='Player', tail_entity='Steven Smith')\"\nStep2: Find the College of output_of_query1\nQuery2: \"get_information(relation='College', head_entity='output_of_query1')\"",
    "who completed egot the earliest year?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of EGOT completed\nQuery1: \"get_information(relation='EGOT completed')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min EGOT completed year\nQuery3: \"get_information(relation='EGOT completed', tail_entity='output_of_query2')\"",
    "when did morgan begin hosting scare tactics?": "None",
    "how many years did they compete in the v premier?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named V Premier\nQuery1: \"get_information(relation='League', tail_entity='V Premier')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of level 4 seasons?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Level 4\nQuery1: \"get_information(relation='Level', tail_entity='4')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players were for leeds united?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named Leeds United\nQuery1: \"get_information(relation='For', tail_entity='Leeds United')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the only submarine from venezuela was named what?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Nationality as Venezuela\nQuery1: \"get_information(relation='Nationality', tail_entity='Venezuela')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what was the nationality of the first ranked competitor?": "None",
    "how many matches were lost?": "None",
    "what year did machine gun kelly sign with bad boy records?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Machine Gun Kelly\nQuery1: \"get_information(relation='Act', tail_entity='Machine Gun Kelly')\"\nStep2: Find the Year signed of output_of_query1\nQuery2: \"get_information(relation='Year signed', head_entity='output_of_query1')\"",
    "where did mark mulder go to school": "## Target type: {school}\n## Query:\nStep1: Find the entity named Mark Mulder\nQuery1: \"get_information(relation='Player', tail_entity='Mark Mulder')\"\nStep2: Find the school of output_of_query1\nQuery2: \"get_information(relation='School', head_entity='output_of_query1')\"",
    "the number of films govinda appeared in during his debut year.": "None",
    "which horse is older, greek scholar or irish day?": "## Target type: {'Age'}\n## Query:\nStep1: Find the entity named Greek Scholar\nQuery1: \"get_information(relation='Name', tail_entity='Greek Scholar')\"\nStep2: Find the age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the entity named Irish Day\nQuery3: \"get_information(relation='Name', tail_entity='Irish Day')\"\nStep4: Find the age of output_of_query3\nQuery4: \"get_information(relation='Age', head_entity='output_of_query3')\"\nStep5: Compare the ages of output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4', operator='greater')\"",
    "between september 26 and october 24, how many games were played in eugene, or?": "None",
    "name all the companies whose arms sales as share of company's total sales is below 75%.": "## Target type: {company}\n## Query:\nStep1: Find the companies whose arms sales as share of company's total sales is below 75%\nQuery1: \"get_information(relation='Arms sales as share of company\u2019s total sales (%)', tail_entity<'75')\"\nStep2: Get the entities of output_of_query1\nQuery2: \"get_information(relation='Company (country)', head_entity='output_of_query1')\"",
    "which nations have a larger amount of silvers won than golds?": "None",
    "wivn-ld on rf 29.2 and wivm-ld on rf 39.3 both played what programming": "None",
    "which representative was after tom petri?": "## Target type: {representative}\n## Query:\nStep1: Find the entity named Tom Petri\nQuery1: \"get_information(relation='Representative', tail_entity='Tom Petri')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the representative of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "how many urban areas have a population above 90,000?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Urban Area\nQuery1: \"get_information(relation='Urban Area')\"\nStep2: Find the Poplulation of output_of_query1\nQuery2: \"get_information(relation='Population (2001 Census)', head_entity='output_of_query1')\"\nStep3: Find the entity whose Population is above 90,000\nQuery3: \"get_information(relation='Population (2001 Census)', tail_entity>'90000')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many counties had at least 75% of the votes for obama?": "None",
    "which group of voters is listed below high school educated?": "None",
    "how many townships have a population above 50?": "## Target type: {number of townships}\n## Query:\nStep1: Find the townships with a population above 50\nQuery1: \"get_information(relation='Population', tail_entity>'50')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many administrative areas have a population below 500?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Population below 500\nQuery1: \"get_information(relation='Population', tail_entity<'500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the year of the first election?": "## Target type: {'Election Year'}\n## Query:\nStep1: Find the entity with the relation of Pondicherry Assembly is First\nQuery1: \"get_information(relation='Pondicherry Assembly', tail_entity='First')\"\nStep2: Get the Election Year of output_of_query1\nQuery2: \"get_information(relation='Election Year', head_entity='output_of_query1')\"",
    "in what year was the first original work published?": "None",
    "what year was the first game?": "## Target type: {year}\n## Query:\nStep1: Find the row_number of the first game\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='date', head_entity='output_of_query1')\"\nStep3: Extract the year from output_of_query2\nQuery3: \"extract_year(date='output_of_query2')\"",
    "what was the difference in score between the two teams in the last game?": "None",
    "what is the number of games in this rivalry that took place in the 1980s?": "None",
    "how many wins did the baltimore colts have during the playoff bowl era?": "None",
    "what was the number of games played against the buccaneers this season?": "None",
    "the astros have lost their season opener to the giants how many times since defeating them in the 1970 season opener?": "None",
    "how many players are below tiger woods": "None",
    "what position did this racer finish at his only world race walking cup competition?": "## Target type: {position}\n## Query:\nStep1: Find the entity with the relation of Competition is Race Walking Cup\nQuery1: \"get_information(relation='Competition', tail_entity='Race Walking Cup')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"",
    "what was richie hearn's race position?": "## Target type: {'Pos'}\n## Query:\nStep1: Find the entity named Richie Hearn\nQuery1: \"get_information(relation='Driver', tail_entity='Richie Hearn')\"\nStep2: Find the race position of output_of_query1\nQuery2: \"get_information(relation='Pos', head_entity='output_of_query1')\"",
    "which player is taller, brown or olmeda?": "None",
    "in how many years was the finish 7th?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Finish equals to '7th'\nQuery1: \"get_information(relation='Finish', tail_entity='7th')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "when was the last time she won first place?": "None",
    "last song of the year to chart in the top ten": "## Target type: {'Song'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "how many competitions did he finish in at least 10th place?": "None",
    "which teams have won at least 20 championships?": "None",
    "who was the winner of the first race on the tour?": "## Target type: {winner}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "which division were they in the most?": "None",
    "which division has the most people?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Population (2005)\nQuery1: \"get_information(relation='Population (2005)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population (2005)', tail_entity='output_of_query2')\"\nStep4: Find the division of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the name of the first race in the year?": "## Target type: {race name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Race Name of output_of_query3\nQuery4: \"get_information(relation='Race Name', head_entity='output_of_query3')\"",
    "what is the date of the last game on this chart?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which month only has a home record of 0-0-0?": "None",
    "how many artists scored at least 40 points?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', tail_entity>='40')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which country has their total gdp as 9.5 billion and their gdp per capita as 1,531?": "## Target type: {country}\n## Query:\nStep1: Find the entity with Total GDP as 9.5 billion US$\nQuery1: \"get_information(relation='Total GDP (nominal) (billion US$)', tail_entity='9.5')\"\nStep2: Find the entity with GDP per capita as 1,531 US$\nQuery2: \"get_information(relation='GDP per capita (US$, PPP)', tail_entity='1531')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "opponent broncos faced next after unlv": "None",
    "what is the sum of the capacity of both tarrazu and guapiles stadiums?": "None",
    "how many total goals did kit lawlor score from 1950 to 1954?": "## Target type: {total goals}\n## Query:\nStep1: Find the entity that Year is 1950\u20131954\nQuery1: \"get_information(relation='Year', tail_entity='1950\u20131954')\"\nStep2: Find the entity named Kit Lawlor\nQuery2: \"get_information(relation='Name', tail_entity='Kit Lawlor')\"\nStep3: Find the total goals of output_of_query2\nQuery3: \"get_information(relation='Total goals', head_entity='output_of_query2')\"",
    "name of horse that came in last in the 1997 kentucky derby": "None",
    "how many medals has switzerland won in the gold category?": "None",
    "how what listed year was a distance of only 53.30m reached?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Notes being '53.30 m'\nQuery1: \"get_information(relation='Notes', tail_entity='53.30 m')\"\nStep2: Get the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "which year had a better regular season finish, 2006 or 2012?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Year is 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the entity that Year is 2012\nQuery2: \"get_information(relation='Year', tail_entity='2012')\"\nStep3: Find the regular season finish of output_of_query1\nQuery3: \"get_information(relation='Regular Season', head_entity='output_of_query1')\"\nStep4: Find the regular season finish of output_of_query2\nQuery4: \"get_information(relation='Regular Season', head_entity='output_of_query2')\"\nStep5: Find the rank of output_of_query1\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query1')\"\nStep6: Find the rank of output_of_query2\nQuery6: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep7: Find the year that has a better regular season finish\nQuery7: \"if(output_of_query5 > output_of_query6): output_of_query1, else: output_of_query2\"",
    "which team did falkner, smith and bates drive for?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Falkner\nQuery1: \"get_information(relation='Drivers', tail_entity='Falkner')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the entity named Smith\nQuery3: \"get_information(relation='Drivers', tail_entity='Smith')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"\nStep5: Find the entity named Bates\nQuery5: \"get_information(relation='Drivers', tail_entity='Bates')\"\nStep6: Find the team of output_of_query5\nQuery6: \"get_information(relation='Team', head_entity='output_of_query5')\"",
    "what was the last release date in july?": "None",
    "what is the last airing date on the list?": "None",
    "what is the next date after the first date on the list?": "None",
    "tell me the number of directors for arunthathi.": "None",
    "what is the oldest ship of these three: highlea, hijack or hi-falutin?": "None",
    "how long did elisabeth irwin live?": "None",
    "in the 2002 pan pacific swimming championships women's 100 metre backstroke, how many swimmers finished above japan's aya terakawa in the ranking?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Aya Terakawa\nQuery1: \"get_information(relation='Name', tail_entity='Aya Terakawa')\"\nStep2: Find the Rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entities whose Rank is smaller than output_of_query2\nQuery3: \"get_information(relation='Rank', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what nation is ranked after russia?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the rank is output_of_query3\nQuery4: \"get_information(relation='Rank', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "how many films was madhurima in during 2012?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number and Role as Madhurima\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many teams won at least three bronze medals in this event?": "None",
    "what year was jay mills first year?": "None",
    "how many players weighed more than 200 pounds?": "None",
    "what is the total number of verizon workers affected by a strike?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Verizon\nQuery1: \"get_information(relation='Company', tail_entity='Verizon')\"\nStep2: Find the entity with the relation of Number of Members Affected that belongs to output_of_query1\nQuery2: \"get_information(relation='Number of Members Affected', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many races has jan nilsson won?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jan Nilsson\nQuery1: \"get_information(relation='Winning Driver', tail_entity='Jan Nilsson')\"\nStep2: Find the number of times output_of_query1 appears\nQuery2: \"count(set='output_of_query1')\"",
    "how many tournaments has this player won in his career so far?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Winner\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many people have served as the bishop of iceland since 1801?": "None",
    "who was the director immediately before b. n. yugandhar?": "None",
    "where is gardenside ll from?": "## Target type: {City}\n## Query:\nStep1: Find the entity named Gardenside LL\nQuery1: \"get_information(relation='Champion', tail_entity='Gardenside LL')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "what is the only tallest mountain not to have a parent mountain?": "None",
    "what is the first party listed on this chart?": "## Target type: {'Party'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number \nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "who did the music of the first title arunthathi?": "## Target type: {music}\n## Query:\nStep1: Find the entity named Arunthathi\nQuery1: \"get_information(relation='Title', tail_entity='Arunthathi')\"\nStep2: Find the music of output_of_query1\nQuery2: \"get_information(relation='Music', head_entity='output_of_query1')\"",
    "what is the name of the last team on this chart?": "## Target type: {'Team'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who was taller, justin knox or john henson?": "## Target type: {taller player}\n## Query:\nStep1: Find the entity named Justin Knox\nQuery1: \"get_information(relation='Name', tail_entity='Justin Knox')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the entity named John Henson\nQuery3: \"get_information(relation='Name', tail_entity='John Henson')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height', head_entity='output_of_query3')\"\nStep5: Compare the heights of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 > output_of_query4: return output_of_query1 else: return output_of_query3)\"",
    "what year was it that placed higher than 5th but made the conference semifinals?": "## Target type: {year}\n## Query:\nStep1: Find the entity that placed higher than 5th\nQuery1: \"get_information(relation='Regular Season', tail_entity>'5th')\"\nStep2: Find the entity that made the conference semifinals\nQuery2: \"get_information(relation='Playoffs', tail_entity='Conference Semifinals')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what season has the most transfer windows?": "None",
    "tell me a game the attendance was the same as january 10.": "None",
    "how many times was josh constable the winner after 2007?": "None",
    "what is the name of the top priced winnebago model?": "## Target type: {model}\n## Query:\nStep1: Find the row_number with the highest price\nQuery1: \"get_information(relation='Starting Price', tail_entity>='highest')\"\nStep2: Get the model of output_of_query1\nQuery2: \"get_information(relation='Model', head_entity='output_of_query1')\"",
    "how many types have a height greater than 5 mm?": "None",
    "name a ship that has the same status as the arizona?": "None",
    "which other ship was launched in the same year as the wave victor?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity named Wave Conqueror\nQuery1: \"get_information(relation='Name', tail_entity='Wave Conqueror')\"\nStep2: Find the year when output_of_query1 was launched\nQuery2: \"get_information(relation='Launched', head_entity='output_of_query1')\"\nStep3: Find the other ship(s) that were launched in the same year as output_of_query2\nQuery3: \"get_information(relation='Launched', tail_entity='output_of_query2')\"",
    "how many models are available in lengths longer than 30 feet?": "None",
    "what is the number of games where the \"giants\" the opponent?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Giants\nQuery1: \"get_information(relation='Opponent', tail_entity='Giants')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the most number of points scored in a game?": "None",
    "what is the average score of the players from the united states?": "## Target type: {average score}\n## Query:\nStep1: Find the entity whose Country is United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate the average score of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "what is the number of plants in ohio?": "None",
    "how many super bowls did dan reeves win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Dan Reeves\nQuery1: \"get_information(relation='Team', tail_entity='Dan Reeves')\"\nStep2: Find the post season of output_of_query1\nQuery2: \"get_information(relation='Post Season', tail_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number whose manufacturer is honda?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose manufacturer is Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of american drivers?": "None",
    "what was the difference in weight between tatiana musat and valencia marian when they were eliminated?": "## Target type: {weight difference}\n## Query:\nStep1: Find the entity named Tatiana Musat\nQuery1: \"get_information(relation='Name', tail_entity='Tatiana Musat')\"\nStep2: Find the weight of output_of_query1\nQuery2: \"get_information(relation='Weight', head_entity='output_of_query1')\"\nStep3: Find the entity named Valencia Marian\nQuery3: \"get_information(relation='Name', tail_entity='Valencia Marian')\"\nStep4: Find the weight of output_of_query3\nQuery4: \"get_information(relation='Weight', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many teams played 18 games?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Played as 18\nQuery1: \"get_information(relation='Played', tail_entity='18')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "jane anderson, martha coolidge, and anne heche all directed which film this years?": "## Target type: {film title}\n## Query:\nStep1: Find the entity named Jane Anderson\nQuery1: \"get_information(relation='Director', tail_entity='Jane Anderson')\"\nStep2: Find the entity named Martha Coolidge\nQuery2: \"get_information(relation='Director', tail_entity='Martha Coolidge')\"\nStep3: Find the entity named Anne Heche\nQuery3: \"get_information(relation='Director', tail_entity='Anne Heche')\"\nStep4: Find the row_number of this years\nQuery4: \"get_information(relation='Year', tail_entity='this years')\"\nStep5: Find the intersection of output_of_query1, output_of_query2, output_of_query3, and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query1', set2='output_of_query2', set3='output_of_query3', set4='output_of_query4')\"\nStep6: Get the Title of output_of_query5\nQuery6: \"get_information(relation='Title', head_entity='output_of_query5')\"",
    "how many years are spanned from the earliest listing to the latest listing?": "None",
    "how many ships of the shiratsuyu-class were there total?": "None",
    "plain catgut and chromic catgut both have what type of structure?": "None",
    "where was the first \"friendly\" competition held?": "## Target type: {location}\n## Query:\nStep1: Find the first \"Friendly\" competition\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly', key='row_number', value='1')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "which tug is the only one configured to accommodate nato?": "None",
    "what are the total number of tornado events that occurred in 1960 in the u.s.?": "None",
    "what is the total episode on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the last term listed in the table?": "## Target type: {'Term (French)'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Term (French) of output_of_query3\nQuery4: \"get_information(relation='Term (French)', head_entity='output_of_query3')\"",
    "what is the other year slovakia played besides 2010?": "None",
    "what englishman played for melbourne before any other englishman?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Nationality as England\nQuery1: \"get_information(relation='Nationality', tail_entity='England')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Get the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who is listed after pat burrell?": "## Target type: {Player}\n## Query:\nStep1: Find the entity named Pat Burrell\nQuery1: \"get_information(relation='Player', tail_entity='Pat Burrell')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "which year in this golfer's career saw her have the most 2nd place finishes?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of 2nd\nQuery1: \"get_information(relation='2nd')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max 2nd finishes\nQuery3: \"get_information(relation='2nd', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "who scored more points in the second round of the uefa cup?": "None",
    "what are the total amounts of times that prokom trefl sopot is listed as the champion?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Prokom Trefl Sopot\nQuery1: \"get_information(relation='Champion', tail_entity='Prokom Trefl Sopot')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did grigorian have a match in belgium?": "None",
    "what is the difference in score between first place and eighth place?": "None",
    "which round did not have an italian team as the winning team?": "None",
    "which country won the most bronze medals?": "None",
    "how many bronze medals were won by the nation with the fewest gold medals?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity with the fewest gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>='fewest')\"\nStep2: Find the number of bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "who got the first draft pick--washington or clemson?": "## Target type: {team}\n## Query:\nStep1: Find the entity that College is Washington\nQuery1: \"get_information(relation='College', tail_entity='Washington')\"\nStep2: Find the entity that College is Clemson\nQuery2: \"get_information(relation='College', tail_entity='Clemson')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2\nQuery5: \"compare(row1='output_of_query3', row2='output_of_query4')\"",
    "how many players spent at least a decade in the nba?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with relation Years in NBA greater than or equal to 10\nQuery1: \"get_information(relation='Years in NBA', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which date did a team score 4 points?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Score and value of 4 points\nQuery1: \"get_information(relation='Score', value='4 points')\"\nStep2: Get the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "what was the total number of points scored in the game held on 2013-05-21?": "None",
    "other than parry, name an athlete from wales.": "None",
    "translate the following into german: die kinders praat afrikaans.": "## Target type: {translation}\n## Query:\nStep1: Find the entity that is \"die kinders praat afrikaans\"\nQuery1: \"get_information(relation='Afrikaans', tail_entity='die kinders praat afrikaans')\"\nStep2: Get the translation of output_of_query1 into German\nQuery2: \"get_information(relation='German', head_entity='output_of_query1')\"",
    "how many rebounds were there total, according to this table, in 1978?": "None",
    "what name is just previous to kazuki nakjima on the list?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Kazuki Nakjima\nQuery1: \"get_information(relation='Driver', tail_entity='Kazuki Nakjima')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "what year was willy deville's last album released?": "None",
    "what is the difference in attendance between the game on july 7th and the game on july 8th?": "## Target type: {difference in attendance}\n## Query:\nStep1: Find the game on July 7th\nQuery1: \"get_information(relation='Date', tail_entity='July 7')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the game on July 8th\nQuery3: \"get_information(relation='Date', tail_entity='July 8')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculator(operation='subtraction', operand1='output_of_query2', operand2='output_of_query4')\"",
    "what country received the same number of gold medals as bronze medals?": "None",
    "name a country that won more than one silver medal but no bronze medals.": "None",
    "what was the average in 2001": "## Target type: {'average'}\n## Query:\nStep1: Find the entity whose Season is \"2001\"\nQuery1: \"get_information(relation='Season', tail_entity='2001')\"\nStep2: Find the average of output_of_query1\nQuery2: \"get_information(relation='Average', head_entity='output_of_query1')\"",
    "what total number of points did bobby clarke lead the team?": "None",
    "how long did orville brown remain nwa world heavyweight champion?": "None",
    "what was is the number of wins by roderick blakney?": "None",
    "which political party has the most people in office?": "## Target type: {political party}\n## Query:\nStep1: Find all the entities with the relation of Party\nQuery1: \"get_information(relation='Party')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most(set='output_of_query1')\" \nStep3: Get the entity with the most appearances\nQuery3: \"get_information(relation='Party', tail_entity='output_of_query2')\"",
    "which political party has had the most elected mayors?": "## Target type: {political party}\n## Query:\nStep1: Find all the political parties\nQuery1: \"get_information(relation='Political Party')\"\nStep2: Find the number of mayors for each political party\nQuery2: \"count(set='output_of_query1', key='row_number')\"\nStep3: Find the political party with the most mayors\nQuery3: \"argmax(set='output_of_query2')\"",
    "what is the number of states with more than 5 people elected?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of No. of elected\nQuery1: \"get_information(relation='No. of elected')\"\nStep2: Find the output_of_query1 that has more than 5 people elected\nQuery2: \"get_information(relation='No. of elected', tail_entity>'5')\"\nStep3: Find the states of output_of_query2\nQuery3: \"get_information(relation='State', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many past representatives did this district have, not including the current representative?": "None",
    "give the number of representatives listed in the table.": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams are listed?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity named Team\nQuery1: \"get_information(relation='Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the first player that the oilers picked?": "## Target type: {Player}\n## Query:\nStep1: Find the row_number that is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many games had an attendance of more than 30,000?": "None",
    "how many times did they play an opponent in november?": "None",
    "what is the difference in land area between alta and newton?": "None",
    "what is the total number of television programs aired by cbs involving charachters with hiv?": "None",
    "what comes after 2.7 volts": "None",
    "in 1948 what was their percentage?": "## Target type: {percentage}\n## Query:\nStep1: Find the entity with the relation of Years equal to 1948\nQuery1: \"get_information(relation='Years', tail_entity='1948')\"\nStep2: Find the Percentage of output_of_query1\nQuery2: \"get_information(relation='Pct', head_entity='output_of_query1')\"",
    "who is the first winner according to this chart?": "None",
    "does st. louis or rolla have the higher population served?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named St. Louis\nQuery1: \"get_information(relation='City/county', tail_entity='St. Louis')\"\nStep2: Find the population served of output_of_query1\nQuery2: \"get_information(relation='Population served', head_entity='output_of_query1')\"\nStep3: Find the entity named Rolla\nQuery3: \"get_information(relation='City/county', tail_entity='Rolla')\"\nStep4: Find the population served of output_of_query3\nQuery4: \"get_information(relation='Population served', head_entity='output_of_query3')\"\nStep5: Compare the population served of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "how many affiliates does galavision have?": "## Target type: {number of affiliates}\n## Query:\nStep1: Find the entity named Galavisi\u00f3n\nQuery1: \"get_information(relation='Network name', tail_entity='Galavisi\u00f3n')\"\nStep2: Find the affiliates of output_of_query1\nQuery2: \"get_information(relation='Affiliates', head_entity='output_of_query1')\"",
    "which community has the most airports": "None",
    "does patton state hospital in the city of patton in san bernardino county have more mental health hospital beds than atascadero state hospital in atascadero, san luis obispo county?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Patton State Hospital in the city of Patton in San Bernardino County\nQuery1: \"get_information(relation='Hospital', tail_entity='Patton State Hospital')\"\nStep2: Find the # Beds of output_of_query1\nQuery2: \"get_information(relation='# Beds', head_entity='output_of_query1')\"\nStep3: Find the entity named Atascadero State Hospital in Atascadero, San Luis Obispo County\nQuery3: \"get_information(relation='Hospital', tail_entity='Atascadero State Hospital')\"\nStep4: Find the # Beds of output_of_query3\nQuery4: \"get_information(relation='# Beds', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is more than output_of_query4\nQuery5: \"if(output_of_query2 > output_of_query4, 'yes', 'no')\"",
    "what was the total number of points akanoa william earned during the decathlon held on december 17-18, 1987?": "None",
    "what is the number of nations that placed more than five different years?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entities that have more than five different years\nQuery1: \"get_information(relation='Years', tail_entity>'5')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many liberal political party members from the st. laurent ministry are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Political party as Liberal\nQuery1: \"get_information(relation='Political party', tail_entity='Liberal')\"\nStep2: Find the entity with the relation of Ministry as St. Laurent\nQuery2: \"get_information(relation='Ministry', tail_entity='St. Laurent')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the most common cause for a retired car?": "None",
    "what number of titles have talib kweli greene as a sole songwriter?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Songwriters\nQuery1: \"get_information(relation='Songwriters')\"\nStep2: Find the entity that has \"Talib Kweli Greene\" in output_of_query1\nQuery2: \"get_information(relation='Songwriters', tail_entity='output_of_query1', key='Songwriters', value='Talib Kweli Greene')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the first region on the chart": "## Target type: {region}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the region of output_of_query3\nQuery4: \"get_information(relation='Region', head_entity='output_of_query3')\"",
    "was attendance higher week 4 or week 8?": "## Target type: {week}\n## Query:\nStep1: Find the attendance of Week 4\nQuery1: \"get_information(relation='Week', tail_entity='4')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the attendance of Week 8\nQuery3: \"get_information(relation='Week', tail_entity='8')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare attendance of output_of_query2 and output_of_query4\nQuery5: \"compare(values=['output_of_query2', 'output_of_query4'], operators=['>'])\"",
    "how many countries participated at reliant park": "None",
    "how many many competitions were held in 2006?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity whose Year is 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of goals scored in the algarve cup on march 5, 2002?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity that is Algarve Cup\nQuery1: \"get_information(relation='Competition', tail_entity='Algarve Cup')\"\nStep2: Find the entity with the relation of Date matching March 5, 2002\nQuery2: \"get_information(relation='Date', tail_entity='March 5, 2002')\"\nStep3: Find the number of goals of output_of_query2\nQuery3: \"get_information(relation='Scored', head_entity='output_of_query2')\"",
    "how many titles were in 2007?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entities with the Year of 2007\nQuery2: \"get_information(relation='Year', tail_entity='2007')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the last driver to finish driving a jaguar?": "None",
    "which player is from ireland?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality of Ireland\nQuery1: \"get_information(relation='Nationality', tail_entity='Ireland')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "list the ships that have their class as arktika.": "## Target type: {ship name}\n## Query:\nStep1: Find the entity with the relation of Class and value of 'Arktika'\nQuery1: \"get_information(relation='Class', tail_entity='Arktika')\"\nStep2: Get the ship names from output_of_query1\nQuery2: \"get_information(relation='Ship Name', head_entity='output_of_query1')\"",
    "name a gold mine that was open at least 10 years.": "None",
    "which film came out in 2002 and also had the role of vindici?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Year as 2002\nQuery1: \"get_information(relation='Year', tail_entity='2002')\"\nStep2: Find the entity with the relation of Role as Vindici\nQuery2: \"get_information(relation='Role', tail_entity='Vindici')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "in what year was karine ruby's first olympics?": "None",
    "how many national parks were established after 1990?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Established\nQuery1: \"get_information(relation='Established')\"\nStep2: Find the entities whose Established year is larger than 1990\nQuery2: \"get_information(relation='Established', tail_entity>'1990')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of mclaren-ford constructors?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Constructor as \"McLaren-Ford\"\nQuery1: \"get_information(relation='Constructor', tail_entity='McLaren-Ford')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many catalogs were released?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the largest first tops class number?": "None",
    "what is the difference in the nearest current distance and farthest current distance?": "## Target type: {difference}\n## Query:\nStep1: Find the entity with the relation of Current distance\nQuery1: \"get_information(relation='Current distance')\"\nStep2: Get the nearest current distance\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the farthest current distance\nQuery3: \"max(set='output_of_query1')\"\nStep4: Find the difference between output_of_query2 and output_of_query3\nQuery4: \"output_of_query3 - output_of_query2\"",
    "which stamp set had only three cards in the set?": "## Target type: {stamp set}\n## Query:\nStep1: Find the entity that has #cards as 'three'\nQuery1: \"get_information(relation='#cards', tail_entity='three')\"\nStep2: Find the Stamp set of output_of_query1\nQuery2: \"get_information(relation='Stamp set', head_entity='output_of_query1')\"",
    "when was the tournament with more strokes than the hertz bay hill classic?": "None",
    "who won the highest number of legs in the 2009 world matchplay?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of 'Legs Won'\nQuery1: \"get_information(relation='Legs Won')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max 'Legs Won'\nQuery3: \"get_information(relation='Legs Won', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what kind of power has the least amount of capacity in 2007?": "None",
    "what was the top thrust achieved by a lyul'ka engine before 1980?": "None",
    "what was the only bmw model to win a round of the atcc?": "## Target type: {BMW model}\n## Query:\nStep1: Find the entity with the relation of Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the entity with the relation of Car and head_entity contains 'BMW'\nQuery2: \"get_information(relation='Car', head_entity='BMW')\"",
    "how many games were played at the prudential center?": "## Target type: {number}\n## Query:\nStep1: Find the games that were played at the Prudential Center\nQuery1: \"get_information(relation='Location', tail_entity='Prudential Center')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was arven released by universal or curling legs?": "## Target type: {label}\n## Query:\nStep1: Find the entity named Arven\nQuery1: \"get_information(relation='Album', tail_entity='Arven')\"\nStep2: Find the label of output_of_query1\nQuery2: \"get_information(relation='Label', head_entity='output_of_query1')\"",
    "what make did kurt busch drive?": "## Target type: {make}\n## Query:\nStep1: Find the entity named Kurt Busch\nQuery1: \"get_information(relation='Driver', tail_entity='Kurt Busch')\"\nStep2: Find the make of output_of_query1\nQuery2: \"get_information(relation='Make', head_entity='output_of_query1')\"",
    "what show has john stewart had the longest tenure on?": "None",
    "where did henning berg move from?": "## Target type: {location}\n## Query:\nStep1: Find the entity named Henning Berg\nQuery1: \"get_information(relation='Name', tail_entity='Henning Berg')\"\nStep2: Find the Moving from of output_of_query1\nQuery2: \"get_information(relation='Moving from', head_entity='output_of_query1')\"",
    "who was the top draft pick?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of row_number as top draft pick\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "sebastien bourdais and graham rahal raced for which team?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Sebastien Bourdais\nQuery1: \"get_information(relation='Driver', tail_entity='Sebastien Bourdais')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the entity named Graham Rahal\nQuery3: \"get_information(relation='Driver', tail_entity='Graham Rahal')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the number of competitors who qualified in group a?": "None",
    "what team did coy play for after he played for buffalo?": "None",
    "which point did not accumulate more than 5 points?": "None",
    "the number of times \"recognition granted\" was the received award?": "None",
    "what was the name of the first baekje temple?": "## Target type: {Temple name}\n## Query:\nStep1: Find the entity with the relation of row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Temple name of output_of_query1\nQuery2: \"get_information(relation='Temple name', head_entity='output_of_query1')\"",
    "what year was the last time tigerair offered flights to xiamen?": "None",
    "which model is at the top of the list with the highest starting price?": "## Target type: {model}\n## Query:\nStep1: Find the entity with the relation of Starting Price\nQuery1: \"get_information(relation='Starting Price')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Starting Price\nQuery3: \"get_information(relation='Starting Price', tail_entity='output_of_query2')\"\nStep4: Find the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "how many players went 0-1 in total w-l?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Total W-L\nQuery1: \"get_information(relation='Total W-L')\"\nStep2: Find the entity with Total W-L as \"0-1\"\nQuery2: \"get_information(relation='Total W-L', tail_entity='0-1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the next person to finish this race after mauricio gugelmin?": "None",
    "after 2008 how many points total were scored by winners?": "None",
    "on average how many of the swara have a short name that begin with d or g?": "None",
    "what is the next race listed after the sfp 250?": "## Target type: {'Race Title'}\n## Query:\nStep1: Find the entity named SFP 250\nQuery1: \"get_information(relation='Race Title', tail_entity='SFP 250')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Race Title of output_of_query4\nQuery5: \"get_information(relation='Race Title', head_entity='output_of_query4')\"",
    "what province is the town of temagami?": "## Target type: {province}\n## Query:\nStep1: Find the entity named Temagami\nQuery1: \"get_information(relation='Town', tail_entity='Temagami')\"\nStep2: Find the province of output_of_query1\nQuery2: \"get_information(relation='Province', head_entity='output_of_query1')\"",
    "dates of only poll in which astorino polled better than 25%": "None",
    "how many different countries are listed?": "None",
    "how many temples are listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference between the number of total medals the first place nation won and the total number of medals the second place nation won?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose rank is 2\nQuery3: \"get_information(relation='Rank', tail_entity='2')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which event won the most medals?": "None",
    "which nation finished first in total medals earned?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that is first in total medals earned\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "name the person that had the same father as goi.": "None",
    "what microcontroller has the same flash size as at90s4414": "None",
    "which sum is the only one listed with out an area or density given?": "## Target type: {sum}\n## Query:\nStep1: Find the entity that has no Area or Density values given\nQuery1: \"get_information(relation='Area', tail_entity='n/a') OR get_information(relation='Density', tail_entity='n/a')\"\nStep2: Find the Sum of output_of_query1\nQuery2: \"get_information(relation='Sum', head_entity='output_of_query1')\"",
    "what are the number of times the competition was listed as friendly?": "None",
    "what season had the least amount of wins?": "## Target type: {season}\n## Query:\nStep1: Find the entity in Record that has the least amount of wins\nQuery1: \"get_information(relation='Record', tail_entity>='least wins')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "when was the last external change made on ch\u00e2teau du plessis-bourr\u00e9?": "None",
    "how many townships have at least a 0.50 water percentage?": "None",
    "does lake bafa or lake yay have a bigger area?": "## Target type: {'Lake Bafa', 'Lake Yay'}\n## Query:\nStep1: Find the entity named Lake Bafa\nQuery1: \"get_information(relation='Name in English', tail_entity='Lake Bafa')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area (km2)', head_entity='output_of_query1')\"\nStep3: Find the entity named Lake Yay\nQuery3: \"get_information(relation='Name in English', tail_entity='Lake Yay')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area (km2)', head_entity='output_of_query3')\"\nStep5: Compare the areas of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many teams were in the play-offs?": "## Target type: {number}\n## Query:\nStep1: Find the relation of Team 1\nQuery1: \"get_information(relation='Team 1')\"\nStep2: Find the relation of Team 2\nQuery2: \"get_information(relation='Team 2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which athlete has the most total?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "which opponent did he score the most goals against?": "None",
    "which player got the most yards?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Yards\nQuery1: \"get_information(relation='Yards')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Yards\nQuery3: \"get_information(relation='Yards', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which team scored the most points?": "## Target type: {Team}\n## Query:\nStep1: Find the entity with the relation of \"Points\"\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which team has the most points?": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "who was catherine s. long's previous representative?": "None",
    "what was the top publishing year?": "None",
    "how many teams entered adminstration before 2004?": "None",
    "how long between first and most recent albums released?": "## Target type: {time span}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number \nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Released of output_of_query3\nQuery4: \"get_information(relation='Released', head_entity='output_of_query3')\"\nStep5: Get the max row_number\nQuery5: \"max(set='output_of_query1')\"\nStep6: Get the entity with the max row_number\nQuery6: \"get_information(relation='row_number', tail_entity='output_of_query5')\"\nStep7: Get the Released of output_of_query6\nQuery7: \"get_information(relation='Released', head_entity='output_of_query6')\"\nStep8: Find the time span between output_of_query4 and output_of_query7\nQuery8: \"time_span(start_date='output_of_query4', end_date='output_of_query7')\"",
    "name three singles from the album \"wandering spirit.\"": "None",
    "who is the other pole position for italy": "## Target type: {pole position}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Country', tail_entity='Italy')\"\nStep2: Find the pole position in output_of_query1\nQuery2: \"get_information(relation='Pole Position', head_entity='output_of_query1')\"\nStep3: Find the other pole position in output_of_query2\nQuery3: \"set_difference(set1='output_of_query2', set2='Pole Position:Max Neukirchner')\"",
    "which cup happened before the commissioner's cup?": "None",
    "how many two-woman bobsled teams represented russia in the 2014 winter olympics?": "None",
    "how many consecutive years did the christian social people's party get over 30% of the votes?": "None",
    "who was the head after cosimo de' medici": "None",
    "how many total options are there about anusvara?": "None",
    "is the state tower building or the granger block taller?": "None",
    "in how many television programs has kerry ellis played a role other than \"herself\"": "None",
    "how many stations played in canton?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entity that Location is Canton\nQuery1: \"get_information(relation='Location', tail_entity='Canton')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what song received the most points?": "## Target type: {song}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "how many countries won at least 1 gold and 1 silver medal?": "None",
    "how many countries earned no bronze medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity that represents the total\nQuery1: \"get_information(relation='Nation', tail_entity='Total')\"\nStep2: Find the total bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity whose total bronze medals is 0\nQuery3: \"get_information(relation='Bronze', tail_entity='0')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how long was james ii in power, including his second rule?": "None",
    "what were the number of performers on \"the joint right here (remix)\"": "None",
    "how many nations won at least 10 silver medals?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Silver medals is at least 10\nQuery1: \"get_information(relation='Silver', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in the 1975 stanley cup playoffs, in how many games did the buffalo sabres score at least 4 goals?": "## Target type: {number}\n## Query:\nStep1: Find the entity with relation as Date in 1975\nQuery1: \"get_information(relation='Date', head_entity='1975')\"\nStep2: Find the entity with relation as Home team is Buffalo Sabres\nQuery2: \"get_information(relation='Home team', tail_entity='Buffalo Sabres')\"\nStep3: Find the entity with relation as Score and at least 4 goals\nQuery3: \"get_information(relation='Score', head_entity='output_of_query2', key='at least 4 goals')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "other than abullah jaafar, name someone with the same last name.": "None",
    "what is the first club listed for the 2010-11 season?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Season equal to \"2010\u201311\"\nQuery1: \"get_information(relation='Season', tail_entity='2010\u201311')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number being output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "what is the number of displacement tonnes for a rari class tugboat?": "## Target type: {displacement tonnes}\n## Query:\nStep1: Find the entity with the relation of Class is Rari class\nQuery1: \"get_information(relation='Class', tail_entity='Rari class')\"\nStep2: Find the Displacement of output_of_query1\nQuery2: \"get_information(relation='Displacement', head_entity='output_of_query1')\"",
    "which commune has the least number of inhabitants?": "## Target type: {commune}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the commune of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "the year forth and clyde was restored": "## Target type: {year}\n## Query:\nStep1: Find the entity named Forth and Clyde\nQuery1: \"get_information(relation='Canal', tail_entity='Forth and Clyde')\"\nStep2: Find the year restored of output_of_query1\nQuery2: \"get_information(relation='Year restored', head_entity='output_of_query1')\"",
    "what was this artists last album under the curling legs label?": "None",
    "how many types of plug are europlug compatible?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Europlug Compatible is \"Yes\"\nQuery1: \"get_information(relation='Europlug Compatible', tail_entity='Yes')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the first track performed solo by the artist?": "None",
    "how many of the schools had at least 500 students enrolled in the 2010-2011 and 2011-2012 season?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Enrollment (2010-11 & 2011\u201312)\nQuery1: \"get_information(relation='Enrollment (2010-11 & 2011\u201312)')\"\nStep2: Find the entity with enrollment at least 500 in output_of_query1\nQuery2: \"get_information(relation='Enrollment (2010-11 & 2011\u201312)', tail_entity>=500)\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many consecutive stops must you travel through is you board the kibi line at bizen-mikado at depart at kibitsu?": "None",
    "what is the first ship listed as undamaged?": "## Target type: {'Ship Name'}\n## Query:\nStep1: Find the ship listed as undamaged\nQuery1: \"get_information(relation='Status', tail_entity='undamaged')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity in row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ship Name of output_of_query4\nQuery5: \"get_information(relation='Ship Name', head_entity='output_of_query4')\"",
    "what is the difference between france's and egypt's silver medals?": "## Target type: {difference in silver medals}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Egypt\nQuery3: \"get_information(relation='Nation', tail_entity='Egypt')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who were the co-drivers for the aston martin dbr9 in 2007?": "None",
    "when did benjamin brewster serve his second term?": "None",
    "lucy millard and lynsey harley were both from which nation?": "None",
    "what was the last single to win an riaa award?": "## Target type: {Title}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "whose was on the squad longer, kyu-tae or hee-sung?": "None",
    "number of wins during stretch": "None",
    "which county had the most total votes?": "## Target type: {county}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total votes\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the county of output_of_query3\nQuery4: \"get_information(relation='County', head_entity='output_of_query3')\"",
    "who won the most gold medals?": "None",
    "which country scored the most gold medals at this event?": "None",
    "nation to earn the most gold medals after colombia": "None",
    "how many countries won no gold medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entities with the relation of Gold and its value is 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of networks accounted for in this chart?": "None",
    "what is the number of points scored on 6 february 1922?": "None",
    "which original owner had the most locomotives?": "None",
    "what driver was below jo vonlanthen in the grid?": "None",
    "how many weights are at least 90kg?": "None",
    "did the first ohio/mississippi river confluence happen after 200 bce?": "None",
    "what is the difference in altitude between thunakkadavu and peechi?": "## Target type: {difference in altitude}\n## Query:\nStep1: Find the entity named Thunakkadavu\nQuery1: \"get_information(relation='Name', tail_entity='Thunakkadavu')\"\nStep2: Find the Altitude of output_of_query1\nQuery2: \"get_information(relation='Altitude (m)', head_entity='output_of_query1')\"\nStep3: Find the entity named Peechi\nQuery3: \"get_information(relation='Name', tail_entity='Peechi')\"\nStep4: Find the Altitude of output_of_query3\nQuery4: \"get_information(relation='Altitude (m)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who finished after austria in rank?": "## Target type: {Nation}\n## Query:\nStep1: Find the entity that is Austria\nQuery1: \"get_information(relation='Nation', tail_entity='Austria')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity whose rank is output_of_query3\nQuery4: \"get_information(relation='Rank', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what are the two letters that come before each postal code in the faroe islands?": "None",
    "how many trains are going to trivandrum?": "## Target type: {number of trains}\n## Query:\nStep1: Find the trains going to Trivandrum\nQuery1: \"get_information(relation='Destination', tail_entity='Trivandrum')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was piotr's total number of 3rd place finishes?": "None",
    "what is the total face value of 1.00 in 2011?": "None",
    "how many countries in the provided table came in 4th place?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries that came in 4th place\nQuery1: \"get_information(relation='Place in QT', tail_entity='4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which employers had at most 375 employees?": "None",
    "how many more total deputies does benji have than state senators?": "None",
    "which has a higher population density, greater glasgow or falkirk?": "None",
    "what was the first english title role?": "None",
    "what is the difference in population between fora and masilo": "None",
    "all of the cyclists finished in at least how many seconds?": "None",
    "the first name on the settlement column is?": "## Target type: {name}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the row with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Settlement of output_of_query3\nQuery4: \"get_information(relation='Settlement', head_entity='output_of_query3')\"",
    "name a player whose average was above 25.": "None",
    "how many characters are there in the hakka pinjim transliteration of lei mung's name?": "None",
    "what was the last opponent the club played in august?": "None",
    "what was the total number of games played in august 2007?": "None",
    "who was the last opponent on the list, chronologically?": "None",
    "what nation is next after porto on team 2": "None",
    "how long did the lumber exchange building stand as the tallest building?": "None",
    "how many total medals were there all together?": "None",
    "how many players made an appearance that year?": "None",
    "how many speakers (of any language) are represented on the table ?": "None",
    "does the crest white strips classic last at least one year?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Model is Crest White Strips Classic\nQuery1: \"get_information(relation='Model', tail_entity='Crest White Strips Classic')\"\nStep2: Find the Last of whiteness of output_of_query1\nQuery2: \"get_information(relation='Last of whiteness', head_entity='output_of_query1')\"\nStep3: Check if Last of whiteness is at least one year\nQuery3: \"Calculator(function='greater_than_or_equal_to', arg1='output_of_query2', arg2='12')\"",
    "how many teams had only two drivers?": "None",
    "was clara the winner in 2012 or 2007?": "None",
    "what launch date comes before march 1, 1998?": "## Target type: {'Launch date'}\n## Query:\nStep1: Find the entity named March 1, 1998\nQuery1: \"get_information(relation='Launch', tail_entity='March 1, 1998')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Launch date of output_of_query4\nQuery5: \"get_information(relation='Launch', head_entity='output_of_query4')\"",
    "how many years was finland listed as 001?": "None",
    "number of golfers from the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity of United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Find the golfer from output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2 \nQuery3: \"count(set='output_of_query2')\"",
    "what was the top language from the one's whose percentage was >0.01": "None",
    "name the only indie/alternative/rock music radio station broadcasted by mxr yorkshire.": "None",
    "what other destination does atlantic southeast airlines fly to?": "## Target type: {destination}\n## Query:\nStep1: Find the entity named Atlantic Southeast Airlines\nQuery1: \"get_information(relation='Airline', tail_entity='Atlantic Southeast Airlines')\"\nStep2: Find the destination of output_of_query1\nQuery2: \"get_information(relation='Destination(s)', head_entity='output_of_query1')\"",
    "the first service after capital yorkshire": "None",
    "which countries had 3 teams competing?": "None",
    "in list of venues, how many years was beijing above moscow (1st venue is above 2nd venue, etc)?": "None",
    "when was the first baseplate issued?": "None",
    "how many awards did jones win in 2009?": "None",
    "how many people attended the game on june 24?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date being June 24\nQuery1: \"get_information(relation='Date', tail_entity='June 24')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "who finished first in the standings?": "## Target type: {team}\n## Query:\nStep1: Find the team that finished first in the standings\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Get the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what is the name of the first nation on this chart?": "## Target type: {nation}\n## Query:\nStep1: Find the entity at the first row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "is tripoli still considered a municipality in arcadia since its 2011 reformation?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity populated with 'Tripoli'\nQuery1: \"get_information(relation='Seat', tail_entity='Tripoli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number larger than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Find the entity with relation of New municipality of output_of_query3\nQuery4: \"get_information(relation='New municipality', head_entity='output_of_query3')\"\nStep5: Check if 'Tripoli' is in the output_of_query4\nQuery5: \"check_membership(set='output_of_query4', element='Tripoli')\"",
    "how many types of smartphones can lego creationary be played on?": "None",
    "how many iso/iec were published in 2011?": "## Target type: {number}\n## Query:\nStep1: Find the ISO/IEC Standards with the relation Status as \"Published (2011)\"\nQuery1: \"get_information(relation='Status', tail_entity='Published (2011)')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what comes immediately after complete series 11?": "## Target type: {DVD Title}\n## Query:\nStep1: Find the entity with the relation of DVD Title as 'The Complete Series 11'\nQuery1: \"get_information(relation='DVD Title', tail_entity='The Complete Series 11')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the DVD Title of output_of_query4\nQuery5: \"get_information(relation='DVD Title', head_entity='output_of_query4')\"",
    "name the device above intel x25-e": "## Target type: {device}\n## Query:\nStep1: Find the entity that is Intel X25-E\nQuery1: \"get_information(relation='Device', tail_entity='Intel X25-E')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Device of output_of_query4\nQuery5: \"get_information(relation='Device', head_entity='output_of_query4')\"",
    "number of players on the team.": "## Target type: {number of players}\n## Query:\nStep1: Find all the row number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams scored at least 17 goals?": "## Target type: {number}\n## Query:\nStep1: Find the teams with at least 17 goals scored\nQuery1: \"get_information(relation='Goals Scored', tail_entity>='17')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after 8th position, how many points does a driver receive?": "None",
    "who was phil ward racing's other driver?": "None",
    "who is marco simoncelli's manufacturer": "## Target type: {'Manufacturer'}\n## Query:\nStep1: Find the entity named Marco Simoncelli\nQuery1: \"get_information(relation='Rider', tail_entity='Marco Simoncelli')\"\nStep2: Find the manufacturer of output_of_query1\nQuery2: \"get_information(relation='Manufacturer', head_entity='output_of_query1')\"",
    "which of these yachts did not launch in 2007: chutzpah, impeccable, or bear necessity?": "None",
    "who was eliminated first, nikki dinki or viet pham?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Nikki Dinki\nQuery1: \"get_information(relation='Name', tail_entity='Nikki Dinki')\"\nStep2: Find the entity named Viet Pham\nQuery2: \"get_information(relation='Name', tail_entity='Viet Pham')\"\nStep3: Find the Eliminated week of output_of_query1\nQuery3: \"get_information(relation='Eliminated', head_entity='output_of_query1')\"\nStep4: Find the Eliminated week of output_of_query2\nQuery4: \"get_information(relation='Eliminated', head_entity='output_of_query2')\"\nStep5: Compare the Eliminated week of output_of_query3 and output_of_query4 to find the first eliminated\nQuery5: \"if(output_of_query3 <= output_of_query4, 'Nikki Dinki', 'Viet Pham')\"",
    "how many of these ships were sank?": "None",
    "how many listed spiral galaxies are located in the constellation virgo?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Constellation is Virgo\nQuery1: \"get_information(relation='Constellation', tail_entity='Virgo')\"\nStep2: Find the Designation of output_of_query1\nQuery2: \"get_information(relation='Designation', head_entity='output_of_query1')\"\nStep3: Find the entities with the same Designation as output_of_query2\nQuery3: \"get_information(relation='Designation', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many modest mouse singles start with the letter \"b\"?": "None",
    "total goals scored by spence in the season": "None",
    "how many films had a duration below 5 minutes?": "None",
    "name another constructor other than ferrari.": "None",
    "who has the larger gdp growth angola or ethiopia?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Angola\nQuery1: \"get_information(relation='Country', tail_entity='Angola')\"\nStep2: Find the GDP Growth of output_of_query1\nQuery2: \"get_information(relation='GDP Growth', head_entity='output_of_query1')\"\nStep3: Find the entity named Ethiopia\nQuery3: \"get_information(relation='Country', tail_entity='Ethiopia')\"\nStep4: Find the GDP Growth of output_of_query3\nQuery4: \"get_information(relation='GDP Growth', head_entity='output_of_query3')\"\nStep5: Compare the GDP Growth of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='larger')\"",
    "which team had the highest number of inductees?": "None",
    "eoin cadogan won in may 2009, who won the month before?": "None",
    "who did this player play for after he was on the los angeles rams?": "None",
    "who finished before canada in the first run?": "None",
    "how many players had final scores higher than 5?": "None",
    "how many did alain prost have the fastest lap?": "None",
    "which year did she work on the most films?": "None",
    "what is the largest population of 2009?": "## Target type: {population}\n## Query:\nStep1: Find the entity with the relation of Population (2009)\nQuery1: \"get_information(relation='Population (2009)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population (2009)\nQuery3: \"get_information(relation='Population (2009)', tail_entity='output_of_query2')\"",
    "nama player that rode a honda and did not place.": "None",
    "what is the only game to be released by fubra?": "## Target type: {game}\n## Query:\nStep1: Find the entity named Fubra\nQuery1: \"get_information(relation='Developer', tail_entity='Fubra')\"\nStep2: Find the game released by output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"\n\nNote: If there is only one game, then output_of_query2 will be the answer.",
    "who was the first person this person played on an indoor surface?": "None",
    "what was the most kilometres traveled?": "None",
    "which single was released before \"dopeman\"?": "## Target type: {'Single'}\n## Query:\nStep1: Find the Single named Dopeman\nQuery1: \"get_information(relation='Single', tail_entity='Dopeman')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Single of output_of_query4\nQuery5: \"get_information(relation='Single', head_entity='output_of_query4')\"",
    "how long did it take whoopi goldberg to complete egot?": "None",
    "what track was drumma boy's last on the album?": "None",
    "how long did lee p. brown serve for?": "None",
    "\"drop dead\" and \"loose ends\" were aired on what date?": "## Target type: {date}\n## Query:\nStep1: Find the row_number of episode \"Drop Dead\"\nQuery1: \"get_information(relation='Title', tail_entity='Drop Dead')\"\nStep2: Find the Original air date of output_of_query1\nQuery2: \"get_information(relation='Original air date', head_entity='output_of_query1')\"\nStep3: Find the row_number of episode \"Loose Ends\"\nQuery3: \"get_information(relation='Title', tail_entity='Loose Ends')\"\nStep4: Find the Original air date of output_of_query3\nQuery4: \"get_information(relation='Original air date', head_entity='output_of_query3')\"",
    "what was the teams final record": "None",
    "how long did bernard pilon serve in the canadian army?": "None",
    "which province has less population density than independencia?": "## Target type: {province}\n## Query:\nStep1: Find the entity named Independencia\nQuery1: \"get_information(relation='Province', tail_entity='Independencia')\"\nStep2: Find the population density of output_of_query1\nQuery2: \"get_information(relation='Density', head_entity='output_of_query1')\"\nStep3: Find the entities whose population density is less than output_of_query2\nQuery3: \"get_information(relation='Density', tail_entity<'output_of_query2')\"\nStep4: Find the province of output_of_query3\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "when was the first win by decision?": "## Target type: {date}\n## Query:\nStep1: Find the entity where the result is Win and the method is Decision\nQuery1: \"get_information(relation='Res.', tail_entity='Win', key='Method', value='Decision')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "is the number of enemy aircraft more or less than the other foes combined?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity with the relation of Foe\nQuery1: \"get_information(relation='Foe')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Enemy fighter\nQuery3: \"get_information(relation='Foe', tail_entity='Enemy fighter')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(num1='output_of_query2', num2='output_of_query4')\"",
    "what same country did marc dos santos coach as colin miller?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Marc Dos Santos\nQuery1: \"get_information(relation='Name', tail_entity='Marc Dos Santos')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Colin Miller\nQuery3: \"get_information(relation='Name', tail_entity='Colin Miller')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "who was miss uk 2005 and miss universe 2005 2nd runner up?": "None",
    "what is the average weight of jamarr sanders and robert williams?": "## Target type: {average weight}\n## Query:\nStep1: Find the entity named Jamarr Sanders\nQuery1: \"get_information(relation='Name', tail_entity='Jamarr Sanders')\"\nStep2: Find the weight of output_of_query1\nQuery2: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query1')\"\nStep3: Find the entity named Robert Williams\nQuery3: \"get_information(relation='Name', tail_entity='Robert Williams')\"\nStep4: Find the weight of output_of_query3\nQuery4: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query3')\"\nStep5: Calculate the average of output_of_query2 and output_of_query4\nQuery5: \"average(set1='output_of_query2', set2='output_of_query4')\"",
    "what will be the last track used during this season?": "## Target type: {'Track'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Track of output_of_query3\nQuery4: \"get_information(relation='Track', head_entity='output_of_query3')\"",
    "please list the candidates that received over one thousand votes.": "None",
    "adama traore was the first ivorian to play for what soccer club?": "None",
    "what party was the last provincial representative of gilbert plains?": "None",
    "the team finished in the same position in 2001/02 as what other year?": "None",
    "bhupen ray is from abhayapuri north. name their political party.": "## Target type: {Political Party}\n## Query:\nStep1: Find the entity named Bhupen Ray\nQuery1: \"get_information(relation='Constituency\\nName', tail_entity='Abhayapuri North')\"\nStep2: Find the Political Party of output_of_query1\nQuery2: \"get_information(relation='Political Party', head_entity='output_of_query1')\"",
    "how long did it take until dawn harper finished?": "None",
    "what other airline commenced operations the same year as eagle air?": "None",
    "does number 2 have more or less runs than number 1?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity with the relation of no = 2\nQuery1: \"get_information(relation='no', tail_entity='2')\"\nStep2: Find the entity with the relation of no = 1\nQuery2: \"get_information(relation='no', tail_entity='1')\"\nStep3: Find the runs of output_of_query1\nQuery3: \"get_information(relation='runs', head_entity='output_of_query1')\"\nStep4: Find the runs of output_of_query2\nQuery4: \"get_information(relation='runs', head_entity='output_of_query2')\"\nStep5: Compare the runs of output_of_query1 and output_of_query2\nQuery5: \"compare(output_of_query3, output_of_query4)\"",
    "who was the first samoan flag bearer at the olympic games?": "## Target type: {flag bearer}\n## Query:\nStep1: Find the entity named Olympic Games\nQuery1: \"get_information(relation='Event Year', tail_entity='Olympic Games')\"\nStep2: Find the flag bearer of output_of_query1\nQuery2: \"get_information(relation='Flag bearer', head_entity='output_of_query1')\"",
    "name the models that had the same caliber as the remington-beals navy model revolver.": "None",
    "how many viewers watched the episode together we are one?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Together We Are One\"\nQuery1: \"get_information(relation='Title', tail_entity='Together We Are One')\"\nStep2: Find the Viewers of output_of_query1\nQuery2: \"get_information(relation='Viewers', head_entity='output_of_query1')\"",
    "what was the top position in which he finished?": "None",
    "does air florida have more or less than four aircrafts scheduled?": "## Target type: {comparison: more or less than four}\n## Query:\nStep1: Find the entity named Air Florida\nQuery1: \"get_information(relation='Airline', tail_entity='Air Florida')\"\nStep2: Find the Aircraft Scheduled of output_of_query1\nQuery2: \"get_information(relation='Aircraft Scheduled', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Check if the count is more or less than four\nQuery4: \"compare(count='output_of_query3', operator='>', value='4')\"",
    "who was the top player for 2003?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Year is 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which has the same prize money as the french super series?": "None",
    "what name is above caprice?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Caprice\nQuery1: \"get_information(relation='Name(s)', tail_entity='Caprice')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name(s) of output_of_query4\nQuery5: \"get_information(relation='Name(s)', head_entity='output_of_query4')\"",
    "what was natalia's top single on the polish charts?": "None",
    "how many players weigh more than michael baumer?": "None",
    "how many times was bob veith ranked higher than 10 at an indy 500?": "None",
    "in terms of gross what movie is above toy story 3?": "## Target type: {movie}\n## Query:\nStep1: Find the entity named Toy Story 3\nQuery1: \"get_information(relation='Film', tail_entity='Toy Story 3')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what is the earliest technical challenge title?": "None",
    "who has the most points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Sort output_of_query1 in descending order\nQuery2: \"sort(set='output_of_query1', order='descending')\"\nStep3: Get the top entity from output_of_query2\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "which device has the least iops": "None",
    "who won the first game of the season?": "None",
    "name the top single on the us billboard hot 100 chart.": "## Target type: {'Title'}\n## Query:\nStep1: Find the row_number that is the top of the U.S. Billboard Hot 100 Chart\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "this title won the most awards": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity in Title that appears the most.\nQuery1: \"get_information(relation='Title', tail_entity>='most')\"\nStep2: Get the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many total languages were there?": "## Target type: {number of languages}\n## Query:\nStep1: Find all the languages\nQuery1: \"get_information(relation='LANGUAGE')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in how many countries was the album released before 1990?": "None",
    "how many games were played at madison square garden?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Location is Madison Square Garden\nQuery1: \"get_information(relation='Location', tail_entity='Madison Square Garden')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which party received the most votes, after labour?": "None",
    "any person can petition matters 2 and 17. true or false?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity with the relation of Eligible petitioners as \"Any person\"\nQuery1: \"get_information(relation='Eligible petitioners', tail_entity='Any person')\"\nStep2: Find the matters with the row_number of 2\nQuery2: \"get_information(relation='Matters', tail_entity='2')\"\nStep3: Find the matters with the row_number of 17\nQuery3: \"get_information(relation='Matters', tail_entity='17')\"\nStep4: Check if output_of_query1 is a subset of {output_of_query2, output_of_query3}\nQuery4: \"is_subset(set1='output_of_query1', set2=['output_of_query2', 'output_of_query3'])\"",
    "what is the total number of injuries, not including deaths, related to these attacks?": "None",
    "what were the total number of platinum albums released on the sisu label?": "None",
    "how many earned their gold medals in rowing?": "None",
    "what party did dimitris sioufas belong to?": "None",
    "what is the name of the bell with the weight of only 425 kg?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the Weight of only 425 kg\nQuery1: \"get_information(relation='Weight', tail_entity='425 kg')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many awards total was scrubs nominated for?": "None",
    "name the only pillow pal that is a dalmatian.": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Animal Type is Dalmatian\nQuery1: \"get_information(relation='Animal Type', tail_entity='Dalmatian')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the total number of drivers that are from japan?": "None",
    "which electoral districts hold 15 or more seats?": "None",
    "how many models weighed between 100 and 200 grams?": "None",
    "what is the code for a unisex restroom?": "None",
    "what is the average number of attendance in 2007?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Year is 2007\nQuery1: \"get_information(relation='Year', tail_entity='2007')\"\nStep2: Find the Avg. Attendance of output_of_query1\nQuery2: \"get_information(relation='Avg. Attendance', head_entity='output_of_query1')\"",
    "which athletes had consecutive times under 58 for both races?": "## Target type: {athlete}\n## Query:\nStep1: Find the athletes with Race 1 time under 58\nQuery1: \"get_information(relation='Race 1', tail_entity<'58')\"\nStep2: Find the athletes with Race 2 time under 58\nQuery2: \"get_information(relation='Race 2', tail_entity<'58')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "which is the only device to have the \"flash memory array\" note?": "## Target type: {'Device'}\n## Query:\nStep1: Find the entity with the note \"flash memory array\"\nQuery1: \"get_information(relation='Notes', tail_entity='flash memory array')\"\nStep2: Find the Device of output_of_query1\nQuery2: \"get_information(relation='Device', head_entity='output_of_query1')\"",
    "what is the total number of administrative buildings on the campus of bw.": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what did nina hagan perform in after cha-cha?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity named Cha-Cha\nQuery1: \"get_information(relation='Film', tail_entity='Cha-Cha')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "the phoenix buildings were built in 1834. what was built next?": "None",
    "at the women's 200 meter individual medley sm10 event at the 2012 summer paralympics, who finished first?": "None",
    "how long did william inge live?": "None",
    "ballymore eustace is from the same county as what team that won in 2009?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Ballymore Eustace\nQuery1: \"get_information(relation='Team', tail_entity='Ballymore Eustace')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"\nStep3: Find the entity whose county is the same as output_of_query2 and years won is 2009\nQuery3: \"get_information(relation='County', tail_entity='output_of_query2', key='Years won', value='2009')\"",
    "what year was the earliest bull-dog drummond published?": "## Target type: {year}\n## Query:\nStep1: Find the row_number of earliest Bull-Dog Drummond\nQuery1: \"get_information(relation='Title', tail_entity='Bull-Dog Drummond')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "in what year did the runner participate in the most marathons?": "None",
    "who is the mayor with the least city area to govern over?": "## Target type: {'Mayor'}\n## Query:\nStep1: Find the entity with the relation of City/Municipality\nQuery1: \"get_information(relation='City/Municipality')\"\nStep2: Find the entity with the relation of Area\nQuery2: \"get_information(relation='Area')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Get the entity with the min output_of_query3\nQuery4: \"get_information(relation='Area', tail_entity='output_of_query3')\"\nStep5: Find the mayor of output_of_query4\nQuery5: \"get_information(relation='Mayor', head_entity='output_of_query4')\"",
    "which plant builds the ford triton engine and the ford essex v6 engine?": "## Target type: {plant name}\n## Query:\nStep1: Find the entity that builds the Ford Triton engine\nQuery1: \"get_information(relation='Products', tail_entity='Ford Triton engine')\"\nStep2: Find the plant name of output_of_query1\nQuery2: \"get_information(relation='Plant name', head_entity='output_of_query1')\"\nStep3: Find the entity that builds the Ford Essex V6 engine\nQuery3: \"get_information(relation='Products', tail_entity='Ford Essex V6 engine')\"\nStep4: Find the plant name of output_of_query3\nQuery4: \"get_information(relation='Plant name', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many swimmers were in 3rd position in the race?": "None",
    "how many of the results were not higher than the united states?": "None",
    "what is the number of films produced in the 2000s?": "None",
    "which award show was the most nominations made?": "## Target type: {award show}\n## Query:\nStep1: Find the entity with the relation of Result as \"Nominated\"\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Find the award show of output_of_query1\nQuery2: \"get_information(relation='Award', head_entity='output_of_query1')\"\nStep3: Find the entity that appears the most in output_of_query2\nQuery3: \"get_information(relation='Award', tail_entity>='most')\"",
    "which location has more stations, loudonville or newcomerstown?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Location as Loudonville\nQuery1: \"get_information(relation='Location', tail_entity='Loudonville')\"\nStep2: Find the entity with the relation of Location as Newcomerstown\nQuery2: \"get_information(relation='Location', tail_entity='Newcomerstown')\"\nStep3: Find the stations at output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the stations at output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"if(count(set='output_of_query3') > count(set='output_of_query4'), 'Loudonville', 'Newcomerstown')\"",
    "which team came in after the titans in the miway t20 challenge?": "None",
    "who is the congressman with the greatest seniority?": "None",
    "what product was introduced in the same month as crest whitestrips 3d advanced vivid?": "None",
    "which city had a higher population in 2007, ghimbav or prejmer?": "## Target type: {city name}\n## Query:\nStep1: Find the entity named Ghimbav\nQuery1: \"get_information(relation='Name', tail_entity='Ghimbav')\"\nStep2: Find the population in 2007 of output_of_query1\nQuery2: \"get_information(relation='Population (2007 estimation)', head_entity='output_of_query1')\"\nStep3: Find the entity named Prejmer\nQuery3: \"get_information(relation='Name', tail_entity='Prejmer')\"\nStep4: Find the population in 2007 of output_of_query3\nQuery4: \"get_information(relation='Population (2007 estimation)', head_entity='output_of_query3')\"\nStep5: Compare the population of output_of_query2 and output_of_query4\nQuery5: \"compare_numeric(value1='output_of_query2', value2='output_of_query4', operator='greater')\"",
    "tell me the number of times they won.": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result is Win\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of years the sunset league was managed by thomas lloyd?": "None",
    "which race came next after the pocono 200?": "## Target type: {race}\n## Query:\nStep1: Find the entity named Pocono 200\nQuery1: \"get_information(relation='Race', tail_entity='Pocono 200')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Race of output_of_query4\nQuery5: \"get_information(relation='Race', head_entity='output_of_query4')\"",
    "what is the total number of medals between south korea, north korea, sweden, and brazil?": "None",
    "which parish was founded earlier between st. joseph and st james the less?": "## Target type: {parish}\n## Query:\nStep1: Find the entity named St. Joseph\nQuery1: \"get_information(relation='Parish', tail_entity='St. Joseph')\"\nStep2: Find the founded date of output_of_query1\nQuery2: \"get_information(relation='Founded', head_entity='output_of_query1')\"\nStep3: Find the entity named St. James the Less\nQuery3: \"get_information(relation='Parish', tail_entity='St. James the Less')\"\nStep4: Find the founded date of output_of_query3\nQuery4: \"get_information(relation='Founded', head_entity='output_of_query3')\"\nStep5: Compare the founded dates of output_of_query2 and output_of_query4 to find the earlier one\nQuery5: \"if output_of_query2 < output_of_query4: then return output_of_query2, else return output_of_query4\"",
    "was ulm or unterwalden founded in 1115?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Ulm \nQuery1: \"get_information(relation='Name', tail_entity='Ulm')\"\nStep2: Find the entity named Unterwalden \nQuery2: \"get_information(relation='Name', tail_entity='Unterwalden')\"\nStep3: Find the formed year of output_of_query1\nQuery3: \"get_information(relation='Formed', head_entity='output_of_query1')\"\nStep4: Find the formed year of output_of_query2\nQuery4: \"get_information(relation='Formed', head_entity='output_of_query2')\"\nStep5: Check if any of output_of_query3 and output_of_query4 is equal to 1115\nQuery5: \"check_condition(condition='output_of_query3==1115 OR output_of_query4==1115')\"",
    "list the contents at the top of the table.": "None",
    "at & t had consectutive strikes on the data table in what years": "None",
    "what was the last show aired by abc?": "None",
    "did the team larissa or the team panathinaikos score more total points?": "## Target type: {'total points'}\n## Query:\nStep1: Find the entity named Larissa\nQuery1: \"get_information(relation='Team #1', tail_entity='Larissa')\"\nStep2: Find the total points of output_of_query1\nQuery2: \"get_information(relation='Agg.', head_entity='output_of_query1')\"\nStep3: Find the entity named Panathinaikos\nQuery3: \"get_information(relation='Team #1', tail_entity='Panathinaikos')\"\nStep4: Find the total points of output_of_query3\nQuery4: \"get_information(relation='Agg.', head_entity='output_of_query3')\"\nStep5: Compare the total points of output_of_query2 and output_of_query4\nQuery5: \"if set1='output_of_query2' > set2='output_of_query4' then 'Larissa' else 'Panathinaikos'\"",
    "at the 2006 gran premio telmex, did oriol servia or katherine legge complete more laps?": "None",
    "which star map was created earlier, celestial globe or the han grave mural star chart?": "None",
    "how many consecutive years did w. harold browne coach": "None",
    "name a builder with \"and\" in the name.": "None",
    "l'inganno innocente premiered in 1701. what was the previous title released?": "None",
    "which team had the same amount of qualification points as latvia?": "None",
    "how many russian-lipovan's were there in 1966?": "None",
    "how many old municipalities were in tripoli?": "None",
    "how many cultivars are of the semi-double flower type?": "## Target type: {number of cultivars}\n## Query:\nStep1: Find the entity with the Flower type of \"semi-double\"\nQuery1: \"get_information(relation='Flower type', tail_entity='semi-double')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who scored more points, larry johnson or charlie ward?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Larry Johnson\nQuery1: \"get_information(relation='Player', tail_entity='Larry Johnson')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Charlie Ward\nQuery3: \"get_information(relation='Player', tail_entity='Charlie Ward')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Find the player who scored more points\nQuery5: \"if value(output_of_query2) > value(output_of_query4): 'Larry Johnson' else: 'Charlie Ward'\"",
    "who was the only louisiana state senator first elected in 2005?": "None",
    "what is the component before usb?": "None",
    "how many competitions has anton lyuboslavskiy been in?": "None",
    "how long in years total have they played level tier 4?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Level is Tier 4\nQuery1: \"get_information(relation='Level', tail_entity='Tier 4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was mischa barton's first film role?": "None",
    "which engine has the smallest compression rate?": "None",
    "did automobili osca or david brown make the most laps?": "None",
    "which athlete had the fastest run?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Run 1\nQuery1: \"get_information(relation='Run 1')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Run 1\nQuery3: \"get_information(relation='Run 1', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "which team completed the most laps?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what are the number of floors the us bank plaza has?": "## Target type: {number of floors}\n## Query:\nStep1: Find the entity named US Bank Plaza\nQuery1: \"get_information(relation='Name', tail_entity='US Bank Plaza')\"\nStep2: Find the number of floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "what tournament was before the estoril open?": "None",
    "which tributary has at least 3 variant names?": "None",
    "in 2010 he had at least how many punt returns?": "None",
    "does scott tucker have the same nationality as yannick lupine?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Scott Tucker\nQuery1: \"get_information(relation='Name', tail_entity='Scott Tucker')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Yannick Lupien\nQuery3: \"get_information(relation='Name', tail_entity='Yannick Lupien')\"\nStep4: Find the nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is the same as output_of_query4\nQuery5: \"set_equals(set1='output_of_query2', set2='output_of_query4')\"",
    "how many ranked swimmers were from the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the number of points daniel willemsen scored with his passenger": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Daniel Willemsen\nQuery1: \"get_information(relation='Driver / Passenger', tail_entity='Daniel Willemsen')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "who rode secretariat in 1973?": "None",
    "who finished next after sylvain guintoli in the 2008 malaysian motorcycle grand prix?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Sylvain Guintoli\nQuery1: \"get_information(relation='Rider', tail_entity='Sylvain Guintoli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "name a player who is from uruguay but was signed from mexico.": "## Target type: {player name}\n## Query:\nStep1: Find the entity whose Signed from is Mexico\nQuery1: \"get_information(relation='Signed from', tail_entity='Mexico')\"\nStep2: Find the entity whose Notes contains \"Uruguay\"\nQuery2: \"get_information(relation='Notes', tail_entity>='Uruguay')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what are the number of times a race took place at the epsom downs racecourse?": "## Target type: {number of races}\n## Query:\nStep1: Find the entity named Epsom Downs Racecourse\nQuery1: \"get_information(relation='Course', tail_entity='Epsom Downs Racecourse')\"\nStep2: Find the number of times a race took place at the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what division were they in the most, section 3 or 2?": "None",
    "who is taller garreth lodge or ross campbell?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity named Garreth Lodge\nQuery1: \"get_information(relation='Player', tail_entity='Garreth Lodge')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the entity named Ross Campbell\nQuery3: \"get_information(relation='Player', tail_entity='Ross Campbell')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height', head_entity='output_of_query3')\"\nStep5: Compare the heights of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='>')\"\nStep6: If output_of_query5 is True, output output_of_query2; else, output output_of_query4.",
    "what creature is after basilisk?": "## Target type: {creature}\n## Query:\nStep1: Find the entity named Basilisk\nQuery1: \"get_information(relation='Creature', tail_entity='Basilisk')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Creature of output_of_query4\nQuery5: \"get_information(relation='Creature', head_entity='output_of_query4')\"",
    "what constituency comes immediately before palanpur?": "## Target type: {constituency}\n## Query:\nStep1: Find the entity named Palanpur\nQuery1: \"get_information(relation='Constituency', tail_entity='Palanpur')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the constituency of output_of_query4\nQuery5: \"get_information(relation='Constituency', head_entity='output_of_query4')\"",
    "how many times was the number one position earned?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Position that is number one\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the longest time on the list?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"",
    "was big bang 2 recorded in japanese or korean?": "## Target type: {language}\n## Query:\nStep1: Find the entity named Big Bang 2\nQuery1: \"get_information(relation='Title', tail_entity='Big Bang 2')\"\nStep2: Find the language of output_of_query1\nQuery2: \"get_information(relation='Language', head_entity='output_of_query1')\"",
    "which state hosted the most pga tour tournaments?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Tournament\nQuery1: \"get_information(relation='Tournament')\"\nStep2: Group the output_of_query1 by state and calculate the count of each state\nQuery2: \"group_by(set='output_of_query1', key='Location', function='count')\"\nStep3: Find the state with the max count\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the relation of Location that matches output_of_query3\nQuery4: \"get_information(relation='Location', tail_entity='output_of_query3')\"",
    "who was the first flag bearer?": "None",
    "which game was won by a bigger margin, against trinity (fl) or against trinity baptist?": "## Target type: {game}\n## Query:\nStep1: Find the game against Trinity (FL)\nQuery1: \"get_information(relation='Opponent', tail_entity='Trinity (FL)')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the game against Trinity Baptist\nQuery3: \"get_information(relation='Opponent', tail_entity='Trinity Baptist')\"\nStep4: Find the Result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\nStep5: Check the winning margin of output_of_query2 and output_of_query4\nQuery5: \"if calculator('output_of_query2') > calculator('output_of_query4') then 'output_of_query2' else 'output_of_query4' endif\"",
    "what is the number of players with an even number as a score ?": "None",
    "is the united stated or scotland better?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Scotland\nQuery3: \"get_information(relation='Country', tail_entity='Scotland')\"\nStep4: Find the Total of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the Total of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='set3')\"",
    "played for new zealand kiwis and all blacks": "None",
    "how many teams received 66 as a score in any category?": "None",
    "who is the only player whose last team was chemosvit svit?": "## Target type: {player}\n## Query:\nStep1: Find the entity whose last team is Chemosvit Svit\nQuery1: \"get_information(relation='Last Team', tail_entity='Chemosvit Svit')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which is the only club founded after 1970 whose nickname is a bird?": "None",
    "which nation won the same amount og golds as ghana?": "None",
    "how many athlete's first run was between 51 and 52 seconds?": "None",
    "for each ship, list which were built by new york navy yard.": "None",
    "who was the first winner of miss nepal?": "None",
    "what is the combined 2011 population of battleford and oxbow?": "None",
    "how many albums were released in the month of november?": "None",
    "what was the last year of the television scores in the genre category?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which club had the same number of goals as ksc eendracht aalst?": "None",
    "which parties does laurie failes not belong to?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Laurie Failes\nQuery1: \"get_information(relation='Member', tail_entity='Laurie Failes')\"\nStep2: Find all the parties\nQuery2: \"get_information(relation='Party')\"\nStep3: Find the parties that belong to output_of_query1\nQuery3: \"get_information(relation='Party', head_entity='output_of_query1')\"\nStep4: Find the difference between output_of_query2 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query2', set2='output_of_query3')\"",
    "what is the total of points in all?": "None",
    "what squad # is listed previous to squad # 7?": "## Target type: {squad #}\n## Query:\nStep1: Find the entity with Squad # as 7\nQuery1: \"get_information(relation='Squad #', tail_entity='7')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Squad # of output_of_query4\nQuery5: \"get_information(relation='Squad #', head_entity='output_of_query4')\"",
    "how long is the horsemen track?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation Title as \"Horsemen\"\nQuery1: \"get_information(relation='Title', tail_entity='Horsemen')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what now defunct railroad existed for the shortest time?": "None",
    "what was the name of the title previous to david & shlomo?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is \"David & Shlomo\"\nQuery1: \"get_information(relation='Title', tail_entity='David & Shlomo')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many institutions have at least 1000 listed for enrollment?": "## Target type: {number of institutions}\n## Query:\nStep1: Find the institutions with enrollment at least 1000\nQuery1: \"get_information(relation='Enrollment', tail_entity>='1000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "netherlands and russia both have zero of what type of european baseball medal?": "None",
    "which township has his population as 834?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population', tail_entity='834')\"\nStep2: Find the township of output_of_query1\nQuery2: \"get_information(relation='Township', head_entity='output_of_query1')\"",
    "which tramway was built directly before the 3s aeriral tramway?": "None",
    "what was the name of the race that took place before the australian indycar grand prix on march 19th?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find the entity with the relation of Date is March 19th\nQuery1: \"get_information(relation='Date', tail_entity='March 19th')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Race Name of output_of_query4\nQuery5: \"get_information(relation='Race Name', head_entity='output_of_query4')\"",
    "what is the difference between his greatest amount of yearly winnings and his least?": "None",
    "bishops in alexandria": "## Target type: {bishops}\n## Query:\nStep1: Find the entity named Alexandria\nQuery1: \"get_information(relation='Jurisdiction', tail_entity='Alexandria')\"\nStep2: Find the bishops of output_of_query1\nQuery2: \"get_information(relation='Bishops', head_entity='output_of_query1')\"",
    "how many times has palau been an opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Palau in Opponents\nQuery1: \"get_information(relation='Opponents', tail_entity='Palau')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the horse that finished three spots before outbound.": "None",
    "in total, how many different tv series has gauri tejwani either starred or cameoed in?": "None",
    "besides iraq and pakistan, what other nation did not receive a bronze medal?": "None",
    "besides jim clark who is the other british driver in the top 6?": "None",
    "first home opponent for the dolphins in the season": "None",
    "how many temples are in the city of muroto?": "## Target type: {number of temples}\n## Query:\nStep1: Find the entity that City/Town/Village is Muroto\nQuery1: \"get_information(relation='City/Town/Village', tail_entity='Muroto')\"\nStep2: Find the temples in output_of_query1\nQuery2: \"get_information(relation='Temple', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the total number of monarchs?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Monarch\nQuery1: \"get_information(relation='Monarch')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "whom is listed first on the chart?": "## Target type: {Name}\n## Query:\nStep1: Find the row_number in the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number from output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "was fran bailey from vic or wa?": "## Target type: {state}\n## Query:\nStep1: Find the entity named Fran Bailey\nQuery1: \"get_information(relation='Member', tail_entity='Fran Bailey')\"\nStep2: Find the state of output_of_query1\nQuery2: \"get_information(relation='State', head_entity='output_of_query1')\"",
    "other than the s3300, name one that has a 2.7 inch screen.": "None",
    "list each of the players from finland.": "## Target type: {player}\n## Query:\nStep1: Find the entity whose nationality is Finland\nQuery1: \"get_information(relation='Nationality', tail_entity='Finland')\"\nStep2: Find the players from output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which team has drafted the most players?": "None",
    "out of these drivers: nigel mansell, al unser, jr., michael schumacher, and jeff gordon, all but one has more than one espy award. who only has one espy award?": "None",
    "how many consecutive fcrcs has the isca attended?": "None",
    "how many airports in spain are among the 10 busiest routes to and from london southend airport in 2012?": "None",
    "the average silver medal count of the first five ranked nations?": "None",
    "who is the player in the first position?": "## Target type: {player}\n## Query:\nStep1: Find the entity in row_number that is in the first position\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the last set of years listed?": "## Target type: {'Season'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "what's the next single after \"wide open road\"?": "None",
    "what is the last junction on highway 91?": "## Target type: {junction}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Junction of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the top speed?": "## Target type: {speed}\n## Query:\nStep1: Find the entity with the relation of Speed\nQuery1: \"get_information(relation='Speed')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Speed\nQuery3: \"get_information(relation='Speed', tail_entity='output_of_query2')\"",
    "which was the only polling firm to show more than 50 percent in favor of same-sex marriage in 2006?": "## Target type: {polling firm}\n## Query:\nStep1: Find the entity named \"same-sex marriage\"\nQuery1: \"get_information(relation='Favor', tail_entity='same-sex marriage')\"\nStep2: Find the entity named \"2006\"\nQuery2: \"get_information(relation='Month', tail_entity='2006')\"\nStep3: Find the entity with the relation of Favor that is greater than 50 percent\nQuery3: \"get_information(relation='Favor', tail_entity>'50%')\"\nStep4: Find the polling firm of output_of_query3\nQuery4: \"get_information(relation='Polling Firm', head_entity='output_of_query3')\"",
    "what was the title of the publication after issue 1?": "## Target type: {title}\n## Query:\nStep1: Find the entity with the relation of Issue 1\nQuery1: \"get_information(relation='Issue', tail_entity='1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what number of years did d.v. graves serve?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named D.V. Graves\nQuery1: \"get_information(relation='Coach', tail_entity='D.V. Graves')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"",
    "what is the last track on the album smile! ?": "None",
    "what is the name of the last locomotive to be located at the bressingham steam museum?": "None",
    "how many consecutive 'friendly' games did spain have?": "None",
    "who was the first team to score over 30 points in the first match?": "## Target type: {'Team #1'}\n## Query:\nStep1: Find the entity that is the first match\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the first team to score over 30 points in output_of_query1\nQuery2: \"get_information(relation='Team #1', key='1st match', value>'30')\"",
    "collectively, how many shows did hbo and mtv air?": "## Target type: {number}\n## Query:\nStep1: Find the shows aired by HBO\nQuery1: \"get_information(relation='Network', tail_entity='HBO')\"\nStep2: Find the shows aired by MTV\nQuery2: \"get_information(relation='Network', tail_entity='MTV')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which ship was launched later in the month: the northampton or the houston?": "None",
    "how long did ian armstrong serve?": "None",
    "how many films in 1995 did athen chu act in?": "None",
    "how many films has neha sharma been in?": "None",
    "who was deputy judge before rafael erich?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Rafael Erich\nQuery1: \"get_information(relation='Name', tail_entity='Rafael Erich')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the total number of won tosses?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of toss as 'won'\nQuery1: \"get_information(relation='toss', tail_entity='won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what mine is in the town of timmins?": "## Target type: {mine}\n## Query:\nStep1: Find the entity named Timmins\nQuery1: \"get_information(relation='Town', tail_entity='Timmins')\"\nStep2: Get the mine in the output_of_query1\nQuery2: \"get_information(relation='Mine', head_entity='output_of_query1')\"",
    "how many individual stations are at the times square station complex?": "None",
    "which party did jaime quintana belong to?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Jaime Quintana\nQuery1: \"get_information(relation='Name', tail_entity='Jaime Quintana')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "when was the first time elizabeth dawn appeared in her role as vera duckworth?": "None",
    "how many people didn't name their native language?": "None",
    "who held the title the most times, the super destroyers or the dudley boyz?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity named Super Destroyers\nQuery1: \"get_information(relation='Wrestlers', tail_entity='Super Destroyers')\"\nStep2: Find the number of times Super Destroyers held the title\nQuery2: \"get_information(relation='Wrestlers', head_entity='output_of_query1')\"\nStep3: Find the entity named Dudley Boyz\nQuery3: \"get_information(relation='Wrestlers', tail_entity='Dudley Boyz')\"\nStep4: Find the number of times Dudley Boyz held the title\nQuery4: \"get_information(relation='Wrestlers', head_entity='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4 to find the wrestler who held the title the most times.",
    "what is the last nationality on the list?": "## Target type: {'Nationality'}\n## Query:\nStep1: Find the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"",
    "which country went first in this competition?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of row_number as \"1\"\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "which player was born last?": "## Target type: {player name}\n## Query:\nStep1: Find all the Date of birth\nQuery1: \"get_information(relation='Date of birth')\"\nStep2: Find the max Date of birth\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the player with the max Date of birth\nQuery3: \"get_information(relation='Date of birth', tail_entity='output_of_query2')\"\nStep4: Get the player name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is next after zuse z4": "## Target type: {name}\n## Query:\nStep1: Find the entity named Zuse Z4\nQuery1: \"get_information(relation='Name', tail_entity='Zuse Z4')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many films were directed by suresh krishna?": "## Target type: {number of films}\n## Query:\nStep1: Find the entity named Suresh Krishna\nQuery1: \"get_information(relation='Director', tail_entity='Suresh Krishna')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many opponents were played twice that season?": "None",
    "who is above martyn bernard": "## Target type: {name}\n## Query:\nStep1: Find the entity named Martyn Bernard\nQuery1: \"get_information(relation='Name', tail_entity='Martyn Bernard')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what chip has the lowest flash size?": "## Target type: {chip}\n## Query:\nStep1: Find the entity with the relation of Flash size\nQuery1: \"get_information(relation='Flash size')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min flash size\nQuery3: \"get_information(relation='Flash size', tail_entity='output_of_query2')\"\nStep4: Find the chip of output_of_query3\nQuery4: \"get_information(relation='Chip', head_entity='output_of_query3')\"",
    "last opponent for manchester united in the season": "## Target type: {opponents}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Opponents of output_of_query3\nQuery4: \"get_information(relation='Opponents', head_entity='output_of_query3')\"",
    "how many racers had cooper-climax as their constructor?": "## Target type: {number of racers}\n## Query:\nStep1: Find the entity whose constructor is Cooper-Climax\nQuery1: \"get_information(relation='Constructor', tail_entity='Cooper-Climax')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many countries had more than one player in the consolation cup?": "None",
    "after their first place win in 2009, how did poland place the next year at the speedway junior world championship?": "None",
    "which athlete came in after petter northug?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Petter Northug\nQuery1: \"get_information(relation='Athlete', tail_entity='Petter Northug')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "total number of members from lawton and oklahoma city": "## Target type: {number of members}\n## Query:\nStep1: Find the entity from Hometown is Lawton\nQuery1: \"get_information(relation='Hometown', tail_entity='Lawton')\"\nStep2: Find the entity from Hometown is Oklahoma City\nQuery2: \"get_information(relation='Hometown', tail_entity='Oklahoma City')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "when was the first game for the 2009 utah utes football team?": "None",
    "which country had the larger death tole?": "None",
    "what was the date of their last loss of the season?": "None",
    "germany first wore them in 1996. who was next?": "None",
    "how many candidates had more votes than tamara lorincz?": "## Target type: {number of candidates}\n## Query:\nStep1: Find the entity named Tamara Lorincz\nQuery1: \"get_information(relation='Candidate', tail_entity='Tamara Lorincz')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the candidates that had more votes than output_of_query2\nQuery3: \"get_information(relation='Votes', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what language was used in only one film?": "## Target type: {language}\n## Query:\nStep1: Find the entity with the relation of LANGUAGE\nQuery1: \"get_information(relation='LANGUAGE')\"\nStep2: Get the set with count equals to 1\nQuery2: \"set_count(set='output_of_query1', count=1)\"\nStep3: Get the first element of output_of_query2\nQuery3: \"get_first(set='output_of_query2')\"",
    "which one is the least with scoring average": "## Target type: {entity}\n## Query:\nStep1: Find the entity with the relation of Scoring average\nQuery1: \"get_information(relation='Scoring average')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Scoring average\nQuery3: \"get_information(relation='Scoring average', tail_entity='output_of_query2')\"",
    "what is the total enrollment when you add brown university and union college?": "None",
    "what was the date of the last time glen seton won?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Glenn Seton\nQuery1: \"get_information(relation='Winner', tail_entity='Glenn Seton')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "which party gained more seats: the radical civic union or the democratic progressive party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Radical Civic Union\nQuery1: \"get_information(relation='Party/Electoral Alliance', tail_entity='Radical Civic Union')\"\nStep2: Find the seats of output_of_query1\nQuery2: \"get_information(relation='Seats', head_entity='output_of_query1')\"\nStep3: Find the entity named Democratic Progressive Party\nQuery3: \"get_information(relation='Party/Electoral Alliance', tail_entity='Democratic Progressive Party')\"\nStep4: Find the seats of output_of_query3\nQuery4: \"get_information(relation='Seats', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to find the party with more seats\nQuery5: \"if output_of_query2 > output_of_query4 then 'Radical Civic Union' else 'Democratic Progressive Party'\"",
    "which ethnicity is previous from dungan": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity that Ethnicity is Dungan\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Dungan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ethnicity of output_of_query4\nQuery5: \"get_information(relation='Ethnicity', head_entity='output_of_query4')\"",
    "what is the total of wins on the chart": "None",
    "what school was the top winner in the women's tournament in 2003?": "## Target type: {'Women's winner'}\n## Query:\nStep1: Find the entity with the relation of Year and value of 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Find the Women's winner of output_of_query1\nQuery2: \"get_information(relation='Women's winner', head_entity='output_of_query1')\"",
    "what is the shortest song from the album?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the first barn built in livonia?": "None",
    "what was the total number of winners?": "None",
    "what is the winner name and team for the copa am\u00e9rica de ciclismo race?": "None",
    "what number of drivers represented great britain?": "None",
    "what is the last church in the silverlake neighborhood listed?": "None",
    "which club had more midfield (mf) players on the national team: aik solna or ifk norrkoping?": "None",
    "which team came in first as champion?": "## Target type: {team}\n## Query:\nStep1: Find the entity with relation Finished as Champion\nQuery1: \"get_information(relation='Finished', tail_entity='Champion')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "is the percentage of voting college educated in 1960 more or less than the previous year?": "None",
    "what number of microcontrollers have only 64 eeprom?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of EEPROM\nQuery1: \"get_information(relation='EEPROM', tail_entity='64')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which wrestler comes after paul london": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity named Paul London\nQuery1: \"get_information(relation='Wrestler', tail_entity='Paul London')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Wrestler of output_of_query4\nQuery5: \"get_information(relation='Wrestler', head_entity='output_of_query4')\"",
    "who is the next heaviest player after nedelijko golubovic?": "None",
    "how long have they been playing?": "None",
    "how many third place wins can ericsson bobry bytom call his own?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity named Ericsson Bobry Bytom\nQuery1: \"get_information(relation='Third place', tail_entity='Ericsson Bobry Bytom')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many women from the united states competed in the 1971 world figure skating championships?": "## Target type: {number}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the women from output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"\nStep3: Find the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what duke has the newest date of creation?": "None",
    "who is the only driver from japan": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Driver', tail_entity='Japan')\"\nStep2: Get the intersection of output_of_query1 and output_of_query1\nQuery2: \"set_intersection(set1='output_of_query1', set2='output_of_query1')\"",
    "what was the first film zhao dan starred in?": "## Target type: {'English Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the English Title of output_of_query3\nQuery4: \"get_information(relation='English Title', head_entity='output_of_query3')\"",
    "what is the name of blokshok records third studio album?": "None",
    "what is the total number of medals won by australia?": "## Target type: {total number of medals}\n## Query:\nStep1: Find the entity that is Australia\nQuery1: \"get_information(relation='NPC', tail_entity='Australia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "besides nascar, what other racing series have espy-winning drivers come from?": "None",
    "which was the first song he performed that was originally a beatles song?": "None",
    "who was faster? maria paris or susan sloan?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Maria Paris\nQuery1: \"get_information(relation='Name', tail_entity='Maria Paris')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Susan Sloan\nQuery3: \"get_information(relation='Name', tail_entity='Susan Sloan')\"\nStep4: Find the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the Time of output_of_query2 and output_of_query4 to find the faster one\nQuery5: \"comparison(time1='output_of_query2', time2='output_of_query4', operator='<')\"",
    "in total, how many athlete medal leaders are from the united states?": "None",
    "what is the number of songs that were also on the bintang di surga album?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Bintang di Surga\nQuery1: \"get_information(relation='Original Album', tail_entity='Bintang di Surga')\"\nStep2: Find the songs on output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of awards dec has won?": "None",
    "how many players named jeff were drafted?": "None",
    "what was the first date that had official guests?": "None",
    "what serial numbers travelled more than 440,000 kilometers?": "None",
    "c.v.raman directed and v.a. chellappa starred in which movie in 1943?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named C.V.Raman\nQuery1: \"get_information(relation='Director', tail_entity='C.V.Raman')\"\nStep2: Find the entity named V.A.Chellappa\nQuery2: \"get_information(relation='Cast', tail_entity='V.A.Chellappa')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity with the relation of Title\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the difference in weight between the re 465 and the ae 6/6?": "None",
    "which athlete is the only american to be ranked in the 20km?": "None",
    "count how many people were club president and give the total.": "None",
    "what is the total amount of matches drawn?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Drawn\nQuery1: \"get_information(relation='Drawn')\"\nStep2: Calculate the sum of output_of_query1\nQuery2: \"sum(set='output_of_query1')\"",
    "what is the combined population of makeleketla and theunissen?": "None",
    "how many films are under the publisher caliber comics?": "## Target type: {number}\n## Query:\nStep1: Find the films under the publisher Caliber Comics\nQuery1: \"get_information(relation='Publisher', tail_entity='Caliber Comics')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps did matt kenset complete on february 26, 2006.": "None",
    "how many teams have been winners at least 5 times?": "None",
    "which member was the last member to join the 10th canadian parliament?": "None",
    "tell me the only year with a critically acclaimed role.": "None",
    "who is previous in the table to austin kearns?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Austin Kearns\nQuery1: \"get_information(relation='Player', tail_entity='Austin Kearns')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "the first date is?": "## Target type: {date}\n## Query:\nStep1: Find the first row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what is the combined area size of the yamato flat inland plain and the yamato highland?": "None",
    "what is the number of students who took the test in 2007?": "## Target type: {number of students}\n## Query:\nStep1: Find the entity with the relation of 2007\nQuery1: \"get_information(relation='2007')\"\nStep2: Get the output_of_query1\nQuery2: \"output_of_query1\"",
    "the last winner of the twelfth pondicherry assembly?": "## Target type: {'Name of M.L.A.'}\n## Query:\nStep1: Find the entity that Pondicherry Assembly is Twelfth\nQuery1: \"get_information(relation='Pondicherry Assembly', tail_entity='Twelfth')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the entity with max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Name of M.L.A. of output_of_query4\nQuery5: \"get_information(relation='Name of M.L.A.', head_entity='output_of_query4')\"",
    "name one other aircrat besides the fairchild argus that only had 2 in service.": "None",
    "number of incumbents who retired or lost re-election": "None",
    "which swara follows immediately after antara gandhara?": "## Target type: {swara}\n## Query:\nStep1: Find the entity named Antara Gandhara\nQuery1: \"get_information(relation='Swara', tail_entity='Antara Gandhara')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Swara of output_of_query4\nQuery5: \"get_information(relation='Swara', head_entity='output_of_query4')\"",
    "what is the name of the ship listed after ardent?": "None",
    "what is the length of each species listed?": "None",
    "how many times did they not qualify for both playoffs and open cup?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Playoffs as \"Did not qualify\"\nQuery1: \"get_information(relation='Playoffs', tail_entity='Did not qualify')\"\nStep2: Find the entity with the relation of Open Cup as \"Did not qualify\"\nQuery2: \"get_information(relation='Open Cup', tail_entity='Did not qualify')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the marker name after clark tannery?": "None",
    "which country has the most anime conventions?": "## Target type: {country}\n## Query:\nStep1: Find all the countries in the schema\nQuery1: \"get_information(relation='Country')\"\nStep2: Count the occurrences of each country in the output_of_query1\nQuery2: \"count(set='output_of_query1', group_by='Country')\"\nStep3: Get the country with the max count of anime conventions\nQuery3: \"arg_max(set='output_of_query2')\"",
    "who placed higher, bradl or gadea?": "None",
    "what was the number of wins for preferente?": "None",
    "what is the total number of encyclicals to take place in december?": "None",
    "which name come before he lianying": "## Target type: {name}\n## Query:\nStep1: Find the entity named He Lianying\nQuery1: \"get_information(relation='Name', tail_entity='He Lianying')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous row_number of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity with row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what were the names of each club where more than 15 goals were scored in a single season?": "## Target type: {club names}\n## Query:\nStep1: Find the entity whose Goals is greater than 15\nQuery1: \"get_information(relation='Goals', tail_entity>'15')\"\nStep2: Find the Club of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "name the film from 2008 under the publisher dc comics that grossed over $10,000,000 and was distributed by lionsgate.": "None",
    "how many seats were in the parliament for the february 27, 1994 election?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity with the relation of Election\nQuery1: \"get_information(relation='Election', tail_entity='27 February 1994')\"\nStep2: Find the seats in the parliament of output_of_query1\nQuery2: \"get_information(relation='Seats in the parliament', head_entity='output_of_query1')\"",
    "how many total floors is the ordway building?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ordway Building\nQuery1: \"get_information(relation='Name', tail_entity='Ordway Building')\"\nStep2: Find the number of floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "how much older is harnham bridge (or ayleswade bridge) than the trinity street almshouses?": "None",
    "how many friendly games have been played?": "## Target type: {number}\n## Query:\nStep1: Find the games with the relation of Type of game as Friendly\nQuery1: \"get_information(relation='Type of game', tail_entity='Friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of non-retired riders?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Time as 'Retirement'\nQuery1: \"get_information(relation='Time', tail_entity='Retirement')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which players only scored one goal?": "None",
    "how many aircraft does the united states have listed?": "None",
    "which nationality has the most people associated with it?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity with the relation of Nationality\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Find the nationality that appears the most\nQuery2: \"mode(set='output_of_query1')\"",
    "what other player was born in the same year as victor le guennec?": "None",
    "francis bosschaerts and dante brogno are from what country?": "None",
    "besides montpellier rc, which other club received 10 bonus points?": "## Target type: {club}\n## Query:\nStep1: Find the entity named Montpellier RC\nQuery1: \"get_information(relation='Club', tail_entity='Montpellier RC')\"\nStep2: Find the Bonus points of output_of_query1\nQuery2: \"get_information(relation='Bonus points', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Bonus points equals to 10\nQuery3: \"get_information(relation='Bonus points', tail_entity='10')\"\nStep4: Find the clubs of output_of_query3 except output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"\n",
    "what is the total number of affiliates among all the networks?": "None",
    "is the order # of top 6 greater than that of top 8?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Week # as \"Top 6\"\nQuery1: \"get_information(relation='Week #', tail_entity='Top 6')\"\nStep2: Find the entity with the relation of Week # as \"Top 8\"\nQuery2: \"get_information(relation='Week #', tail_entity='Top 8')\"\nStep3: Find the order # of output_of_query1\nQuery3: \"get_information(relation='Order #', head_entity='output_of_query1')\"\nStep4: Find the order # of output_of_query2\nQuery4: \"get_information(relation='Order #', head_entity='output_of_query2')\"\nStep5: Perform the comparison of output_of_query3 and output_of_query4 to check the order\nQuery5: \"compare(set1='output_of_query3', set2='output_of_query4', comparison='greater_than')\"",
    "what team came in last, not counting teams disqualified or teams that did not finish?": "None",
    "what team came out on top?": "None",
    "what is his number of disqualifications?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Position with value DSQ\nQuery1: \"get_information(relation='Position', tail_entity='DSQ')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the opponent at the game with the largest crowd?": "None",
    "how many number of riders rode motorcycles by honda?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Manufacturer is Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference between the total nasl and the total cfu club championship?": "None",
    "what party is listed previous to the new renaissance party?": "None",
    "what was the only show she hosted?": "## Target type: {'Show'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the show with the relation of \"Role\" as \"Host\"\nQuery2: \"get_information(relation='Role', tail_entity='Host')\"\nStep3: Find the only output_of_query2\nQuery3: \"only(set='output_of_query2')\"\nStep4: Find the Show of output_of_query3\nQuery4: \"get_information(relation='Show', head_entity='output_of_query3')\"",
    "what was the total number of districts within the state of godara?": "None",
    "what was the only yacht owned by clapp?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Clapp\nQuery1: \"get_information(relation='Owner', tail_entity='Clapp')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many tallest building in canada have been built in toronto?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Building as 'Toronto-Dominion Centre'\nQuery1: \"get_information(relation='Building', tail_entity='Toronto-Dominion Centre')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the city of output_of_query2\nQuery3: \"get_information(relation='City', tail_entity='output_of_query2')\"\nStep4: Find the entities with the relation of City as 'Toronto'\nQuery4: \"get_information(relation='City', tail_entity='Toronto')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "number of nations that earned no bronze medals": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that Bronze is None\nQuery1: \"get_information(relation='Bronze', tail_entity='None')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which township has the most residents?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "which winner has numbers in his/her name?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity in Winner that has numbers in his/her name\nQuery1: \"get_information(relation='Winner', tail_entity>='numbers')\"\nStep2: Find the name of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "what is the earliest treaty signed by morocco?": "None",
    "what are the total number of courthouses located in biloxi?": "## Target type: {number}\n## Query:\nStep1: Find the entity that City is Biloxi\nQuery1: \"get_information(relation='City', tail_entity='Biloxi')\"\nStep2: Find the courthouses in output_of_query1\nQuery2: \"get_information(relation='Courthouse', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "did march or april have more precipitation?": "## Target type: {month}\n## Query:\nStep1: Find the precipitation of March\nQuery1: \"get_information(relation='Mar')\"\nStep2: Find the precipitation of April\nQuery2: \"get_information(relation='Apr')\"\nStep3: Compare the precipitation of output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "what is the number of wins for each team": "None",
    "what is the total number of races won by all teams combined?": "None",
    "how many women's winners were from russia?": "None",
    "the year previos to normandy : the great crusade": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Title is \"Normandy: The Great Crusade\"\nQuery1: \"get_information(relation='Title', tail_entity='Normandy: The Great Crusade')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "how many more locks does caledonian canal have compared to aberdeenshire canal?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Caledonian Canal\nQuery1: \"get_information(relation='Canal', tail_entity='Caledonian Canal')\"\nStep2: Find the locks of output_of_query1\nQuery2: \"get_information(relation='Locks', head_entity='output_of_query1')\"\nStep3: Find the entity named Aberdeenshire Canal\nQuery3: \"get_information(relation='Canal', tail_entity='Aberdeenshire Canal')\"\nStep4: Find the locks of output_of_query3\nQuery4: \"get_information(relation='Locks', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calc_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "was oregon route 402 or oregon route 220 constructed in 2002?": "## Target type: {route}\n## Query:\nStep1: Find the entity named Oregon Route 402\nQuery1: \"get_information(relation='Number', tail_entity='Oregon Route 402')\"\nStep2: Find the entity named Oregon Route 220\nQuery2: \"get_information(relation='Number', tail_entity='Oregon Route 220')\"\nStep3: Find the formed year of output_of_query1\nQuery3: \"get_information(relation='Formed', head_entity='output_of_query1')\"\nStep4: Find the formed year of output_of_query2\nQuery4: \"get_information(relation='Formed', head_entity='output_of_query2')\"\nStep5: Check if either output_of_query3 or output_of_query4 is 2002\nQuery5: \"if(set1='output_of_query3', then='True', else='if(set2='output_of_query4', then='True', else='False')')\"",
    "\"the iron legion\" was published only in what issues of the doctor who classics?": "None",
    "what is the only chateau built in 1455?": "## Target type: {'Name'}\n## Query:\nStep1: Find the chateau built in 1455\nQuery1: \"get_information(relation='Date', tail_entity='1455')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the decca catalog number of the singe \"everybody sing\"?": "None",
    "who starred in the 1965 film how to murder your wife?": "None",
    "in the year ____, no constituency data was available.": "None",
    "other than against the 49ers how many wins were there?": "None",
    "what was the highest amount points scored by the 1987 syracuse football team?": "None",
    "what is the number of games in which chris kaman scored the high points?": "None",
    "what is the number of votes received by obama in harding county.": "None",
    "how many brands are for the dermatology area?": "None",
    "what year was the first olympics in which lorraine moller competed?": "None",
    "how long was there a vacancy at crystal palace?": "None",
    "which country laughed the first ship in 1878?": "None",
    "debuted for great britain (rl) in 1999 then for ireland (ru) in 2007": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Rugby League Debut as 1999\nQuery1: \"get_information(relation='Rugby League Debut', tail_entity='1999')\"\nStep2: Find the entity with the relation of Top representation level as Great Britain (RL)\nQuery2: \"get_information(relation='Top representation level', tail_entity='Great Britain (RL)')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity with the relation of Rugby Union Debut as 2007\nQuery4: \"get_information(relation='Rugby Union Debut', tail_entity='2007')\"\nStep5: Find the entity with the relation of Top representation level as Ireland (RU)\nQuery5: \"get_information(relation='Top representation level', tail_entity='Ireland (RU)')\"\nStep6: Get the intersection of output_of_query4 and output_of_query5\nQuery6: \"set_intersection(set1='output_of_query4', set2='output_of_query5')\"",
    "who has spent more time as nwa world heavyyweight champion, gene kiniski or ric flair?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity named Gene Kiniski\nQuery1: \"get_information(relation='Wrestler', tail_entity='Gene Kiniski')\"\nStep2: Find the Combined days of output_of_query1\nQuery2: \"get_information(relation='Combined days', head_entity='output_of_query1')\"\nStep3: Find the entity named Ric Flair\nQuery3: \"get_information(relation='Wrestler', tail_entity='Ric Flair')\"\nStep4: Find the Combined days of output_of_query3\nQuery4: \"get_information(relation='Combined days', head_entity='output_of_query3')\"\nStep5: Find the wrestler that spent more time as NWA World Heavyweight Champion\nQuery5: \"compare(value1='output_of_query2', operator='>', value2='output_of_query4')\"",
    "what is the difference in child population between koraput and puri?": "None",
    "what was blue mink's earliest charting single?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "who was the opponent after hawthorn?": "None",
    "how many people have no goals?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of goals\nQuery1: \"get_information(relation='goals')\"\nStep2: Find the entity with the value of 0 in output_of_query1\nQuery2: \"get_information(relation='goals', tail_entity='0')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which township has the largest population?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "what stadium other than anz stadium did the auckland warriors play in?": "None",
    "what was the first non volume game released in 2004?": "None",
    "when did raymond h. fogler leave the office of assistant secretary of the navy?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Raymond H. Fogler\nQuery1: \"get_information(relation='Name', tail_entity='Raymond H. Fogler')\"\nStep2: Find the left office date of output_of_query1\nQuery2: \"get_information(relation='Left Office', head_entity='output_of_query1')\"",
    "which player has the most touch downs?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of TD's\nQuery1: \"get_information(relation='TD's')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max TD's\nQuery3: \"get_information(relation='TD's', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many people attended the last game?": "## Target type: {number of people}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "who weighs more, dexter fields or ovie soko?": "## Target type: {'Weight (lbs.)'}\n## Query:\nStep1: Find the entity named Dexter Fields\nQuery1: \"get_information(relation='Name', tail_entity='Dexter Fields')\"\nStep2: Find the weight of output_of_query1\nQuery2: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query1')\"\nStep3: Find the entity named Ovie Soko\nQuery3: \"get_information(relation='Name', tail_entity='Ovie Soko')\"\nStep4: Find the weight of output_of_query3\nQuery4: \"get_information(relation='Weight (lbs.)', head_entity='output_of_query3')\"\nStep5: Compare the weight of output_of_query2 and output_of_query4\nQuery5: \"compare(weight1='output_of_query2', weight2='output_of_query4')\"",
    "how many cyclist are not listed with a country team?": "None",
    "were more competitions played in april or december?": "## Target type: {month}\n## Query:\nStep1: Find the competitions played in April\nQuery1: \"get_information(relation='Date', tail_entity='April')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the competitions played in December\nQuery3: \"get_information(relation='Date', tail_entity='December')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare_counts(count1='output_of_query2', count2='output_of_query4')\"",
    "list the films that had a collaboration with b. dziworski.": "None",
    "name the russian athlete who finished before leone.": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Leone\nQuery1: \"get_information(relation='Athlete', tail_entity='Leone')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "what number of proposed communities would use the east african shilling currency?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Currency as East African Shilling\nQuery1: \"get_information(relation='Currency', tail_entity='East African Shilling')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many people live in micoud?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Micoud\nQuery1: \"get_information(relation='District', tail_entity='Micoud')\"\nStep2: Find the Population (2010 census) of output_of_query1\nQuery2: \"get_information(relation='Population (2010 census)', head_entity='output_of_query1')\"",
    "who is the only player in the top 26 picks that was from louisiana state university?": "## Target type: {player}\n## Query:\nStep1: Find the picks in the top 26\nQuery1: \"get_information(relation='Pick', tail_entity<='26')\"\nStep2: Find the entity that is Louisiana State University\nQuery2: \"get_information(relation='School', tail_entity='Louisiana State University')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "tom terrific and the franchise are nicknames of this same player": "None",
    "which model was the first portable device?": "None",
    "which county had the least amount of votes for horne?": "## Target type: {county}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Votes\nQuery5: \"get_information(relation='Votes')\"\nStep6: Get the min output_of_query5\nQuery6: \"min(set='output_of_query5')\"\nStep7: Get the entity with the min votes\nQuery7: \"get_information(relation='Votes', tail_entity='output_of_query6')\"\nStep8: Find the county of output_of_query7\nQuery8: \"get_information(relation='County', head_entity='output_of_query7')\"",
    "how many races did soviet song compete in during 2004?": "None",
    "how long did gonzelz throw for in 1983?": "## Target type: {length}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year', tail_entity='1983')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"",
    "what is the first language after hindi": "None",
    "what only year was security threads added to baseplates?": "## Target type: {year}\n## Query:\nStep1: Find the Notes with the format \"security threads added to baseplates\"\nQuery1: \"get_information(relation='Notes', tail_entity='security threads added to baseplates')\"\nStep2: Find the year in output_of_query1\nQuery2: \"get_information(relation='First issued', head_entity='output_of_query1')\"",
    "nama a city that does not have comments listed.": "None",
    "how many total gold medal have been given?": "None",
    "which team did czech republic score the most goals against?": "None",
    "how long after quod iam diu was paterno iam diu issued?": "None",
    "in what year did laurens vault higher than in 2006?": "None",
    "what play was wanamaker nominated for best featured in a play in 1981?": "## Target type: {'Nominated work'}\n## Query:\nStep1: Find the entity that Year is 1981\nQuery1: \"get_information(relation='Year', tail_entity='1981')\"\nStep2: Find the entity that Category is \"Best Featured in a Play\"\nQuery2: \"get_information(relation='Category', tail_entity='Best Featured in a Play')\"\nStep3: Find the entity that Result is \"Nominated\"\nQuery3: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep4: Find the Nominated work of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"get_information(relation='Nominated work', head_entity='output_of_query1', set_union(set1='output_of_query2', set2='output_of_query3'))\"",
    "which boat had the same class as the nor?": "None",
    "in how many titles on this list did he not play the role of phineas bogg?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Phineas Bogg\nQuery1: \"get_information(relation='Role', tail_entity='Phineas Bogg')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number of all titles on the list\nQuery3: \"get_information(relation='row_number')\"\nStep4: Find the set difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Count the number of titles in output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "first player to win with a score over 70 for one round?": "None",
    "how many types of trains have a top speed of more than 100 km/h?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has a top speed of more than 100 km/h\nQuery1: \"get_information(relation='Max Speed (km/h)', tail_entity>'100')\"\nStep2: Find the unique types of output_of_query1\nQuery2: \"unique(set='output_of_query1', relation='Type')\"",
    "which prison is for former policemen, abovyan or vardashen?": "None",
    "who discused the largest amount of topics?": "None",
    "what is the number of capacity for laxalp 2": "## Target type: {number}\n## Query:\nStep1: Find the entity named Laxalp 2\nQuery1: \"get_information(relation='Name', tail_entity='Laxalp 2')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='capacity', head_entity='output_of_query1')\"",
    "how long, in pages, is volume 6 of doctor who classics?": "## Target type: {number of pages}\n## Query:\nStep1: Find the entity titled Volume 6\nQuery1: \"get_information(relation='Title', tail_entity='Volume 6')\"\nStep2: Find the pages of output_of_query1\nQuery2: \"get_information(relation='Pages', head_entity='output_of_query1')\"",
    "how many immigrants came from cuba in the period 1972-1979?": "## Target type: {number of immigrants}\n## Query:\nStep1: Find the entity named Cuba\nQuery1: \"get_information(relation='Region/Country', tail_entity='Cuba')\"\nStep2: Find the immigrants from output_of_query1 in the period of 1972-1979\nQuery2: \"get_information(relation='1972\u2013\\n1979', head_entity='output_of_query1')\"",
    "how many diekirch districts also have diekirch as their canton?": "None",
    "how many commissioners served under calvin coolidge?": "None",
    "what as the percentage total of ratings for episode 8?": "None",
    "was the attendance for the quarter final second leg more or less than 30,000?": "## Target type: {relative comparison}\n## Query:\nStep1: Find the entity that is the quarter final second leg\nQuery1: \"get_information(relation='Round', tail_entity='Quarter final second leg')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Compare the attendance of output_of_query2 with 30,000\nQuery3: \"compare(set1='output_of_query2', operator='<', set2='30000')\"",
    "how many days combined did kevin steen had": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Kevin Steen\nQuery1: \"get_information(relation='Wrestler', tail_entity='Kevin Steen')\"\nStep2: Find the Combined days of output_of_query1\nQuery2: \"get_information(relation='Combined days', head_entity='output_of_query1')\"",
    "how many destinations does america west express serve?": "None",
    "in how many years has madhurima been in at least 3 films?": "None",
    "who was the sheriff in suffolk county before amza biggs first term there as sheriff?": "None",
    "which was listed first, arnold trail to quebec or coplin plantation schoolhouse?": "None",
    "what was the name of the last race?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Race Name of output_of_query3\nQuery4: \"get_information(relation='Race Name', head_entity='output_of_query3')\"",
    "how long did it take for erik lesser to finish?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Erik Lesser\nQuery1: \"get_information(relation='Name', tail_entity='Erik Lesser')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "name a month that there were two consecutive experiments in the same month.": "None",
    "name of horse that finished first in the 1997 kentucky derby": "## Target type: {'Horse'}\n## Query:\nStep1: Find the entity that Finished in the first place\nQuery1: \"get_information(relation='Finished', tail_entity='1st')\"\nStep2: Find the Horse of output_of_query1\nQuery2: \"get_information(relation='Horse', head_entity='output_of_query1')\"",
    "which country has the most silver medals?": "None",
    "who has won the most bronze medals?": "## Target type: {'Athlete'}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "which county is the only one to have an area less than 1,000 square kilometers?": "## Target type: {county}\n## Query:\nStep1: Find the entity whose area is less than 1,000 square kilometers\nQuery1: \"get_information(relation='Area (km2)', tail_entity<'1000')\"\nStep2: Get the County of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "how many players are reserve team players?": "None",
    "which child was born after elizabeth churchill?": "None",
    "has viginia tech r wake forest been around longer?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity named Virginia Tech\nQuery1: \"get_information(relation='Institution', tail_entity='Virginia Tech')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Wake Forest\nQuery3: \"get_information(relation='Institution', tail_entity='Wake Forest')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if the row_number of output_of_query1 is less than the row_number of output_of_query3\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4', operator='<')\"",
    "how many areas achieved more than 250,000,000 people in 1970?": "None",
    "what was the last date that lesnar successfully defended the ufc heavyweight belt?": "None",
    "when was bobbie phillips first role in tv?": "None",
    "what is the date of the lst player that joined?": "None",
    "who finished next after bobby jones and al espinosa?": "None",
    "what are the number of times 2013 appears under the commenced column?": "## Target type: {number}\n## Query:\nStep1: Find the entity where Commenced is 2013\nQuery1: \"get_information(relation='Commenced', tail_entity='2013')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "largest medal differential between countries": "None",
    "what airline has the same scheduled aircraft as beaver aviation/bas airlines?": "None",
    "kamani hill was the first person to be transferred to which team?": "None",
    "what was year was the first arizona license plate made?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation First issued\nQuery1: \"get_information(relation='First issued')\"\nStep2: Get the year from output_of_query1\nQuery2: \"extract_year(set='output_of_query1')\"",
    "what team was silvestre varela a member of before moving to porto?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Silvestre Varela\nQuery1: \"get_information(relation='Name', tail_entity='Silvestre Varela')\"\nStep2: Find the moving from team of output_of_query1\nQuery2: \"get_information(relation='Moving from', head_entity='output_of_query1')\"",
    "where were the 1962 winners from?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Year is 1962\nQuery1: \"get_information(relation='Year', tail_entity='1962')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number equals output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "did the canterbury crusaders begin their team in 1950, 1968, or 1969?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Canterbury Crusaders\nQuery1: \"get_information(relation='Team name', tail_entity='Canterbury Crusaders')\"\nStep2: Find the year started of output_of_query1\nQuery2: \"get_information(relation='Year started', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is equal to 1950 or 1968 or 1969\nQuery3: \"output_of_query2 in [1950, 1968, 1969]\"",
    "who's real name is dale hey, grizzly smith or buddy roberts?": "None",
    "in which canadian province were the most consecutive concerts played?": "None",
    "who played previous to the pirates on august 4?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Pirates\nQuery1: \"get_information(relation='Opponent', tail_entity='Pirates')\"\nStep2: Find the entity named August 4\nQuery2: \"get_information(relation='Date', tail_entity='August 4')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_number is output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Find the opponent of output_of_query5\nQuery6: \"get_information(relation='Opponent', head_entity='output_of_query5')\"",
    "was zacarias hugo above or below 18 years of age when he was attacked?": "None",
    "how many makes origin from canada": "## Target type: {number of makes}\n## Query:\nStep1: Find the entity that Origin is Canada\nQuery1: \"get_information(relation='Origin', tail_entity='Canada')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "bedford scored ______ more points than plymouth albion on the 2 april 2005 game.": "## Target type: {points}\n## Query:\nStep1: Find the entity with the relation of Home team is Bedford and Date is 2 April 2005\nQuery1: \"get_information(relation='Home team', tail_entity='Bedford', key='Date', value='2 April 2005')\"\nStep2: Get the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Away team is Plymouth Albion and Date is 2 April 2005\nQuery3: \"get_information(relation='Away team', tail_entity='Plymouth Albion', key='Date', value='2 April 2005')\"\nStep4: Get the score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who was the home team on december 11, 1976": "## Target type: {home team}\n## Query:\nStep1: Find the entity that Date is December 11, 1976\nQuery1: \"get_information(relation='Date', tail_entity='December 11, 1976')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home', head_entity='output_of_query1')\"",
    "what number of total finals does foyle college have?": "## Target type: {number of total finals}\n## Query:\nStep1: Find the entity named Foyle College\nQuery1: \"get_information(relation='School', tail_entity='Foyle College')\"\nStep2: Find the total finals of output_of_query1\nQuery2: \"get_information(relation='Total Finals', head_entity='output_of_query1')\"",
    "tell me the number of stations tv azteca owns.": "## Target type: {number of TV Azteca-owned stations}\n## Query:\nStep1: Find the entity that Owner is TV Azteca\nQuery1: \"get_information(relation='Owner', tail_entity='TV Azteca')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many had more than 25 matches?": "None",
    "realism and i were above or below number 100 on the billboard 200?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Realism\nQuery1: \"get_information(relation='Album title', tail_entity='Realism')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Chart positions', head_entity='output_of_query1')\"\nStep3: Find the entity named I\nQuery3: \"get_information(relation='Album title', tail_entity='I')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Chart positions', head_entity='output_of_query3')\"\nStep5: Find the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Check if any position in output_of_query5 is above or below number 100\nQuery6: \"check_range_in_set(set='output_of_query5', min_value=1, max_value=100)\"",
    "list each of institutions with an even enrollment": "None",
    "how many games did the broncos lose?": "None",
    "what is his total number of games played?": "None",
    "which collaboration featuring plan b is ranked alphabetically above \"broken wings\" (2005)?": "None",
    "what is the total count of athletes included in the rankings chart, including those classified as dsq & dnf?": "## Target type: {count of athletes}\n## Query:\nStep1: Find the entity that is in the rankings chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which event is listed more between the 10,000m and the 5000m?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity with the relation of Event as 10,000m\nQuery1: \"get_information(relation='Event', tail_entity='10,000m')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Event as 5000m\nQuery3: \"get_information(relation='Event', tail_entity='5000m')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"if count(output_of_query2) > count(output_of_query4) then output_of_query2 else output_of_query4\"",
    "which of the listed segments has the most electorates?": "None",
    "which team has the largest margin of victory in an aloha bowl game?": "None",
    "did lord finesse or buckwild produce ga head?": "None",
    "which album has the record label i.r.s records, eye of the hurricane or compact hits?": "None",
    "of the members of the third incarnation of the lachlan, who served the longest?": "None",
    "did dani pedrosa or loris capriossi ride a motorcycle manufactured by honda in the 2008 malaysian motorcycle grand prix?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Dani Pedrosa\nQuery1: \"get_information(relation='Rider', tail_entity='Dani Pedrosa')\"\nStep2: Find the entity named Loris Capirossi\nQuery2: \"get_information(relation='Rider', tail_entity='Loris Capirossi')\"\nStep3: Find the Manufacturer of output_of_query1\nQuery3: \"get_information(relation='Manufacturer', head_entity='output_of_query1')\"\nStep4: Find the Manufacturer of output_of_query2\nQuery4: \"get_information(relation='Manufacturer', head_entity='output_of_query2')\"\nStep5: Check if output_of_query3 or output_of_query4 is Honda\nQuery5: \"set_intersect(set1='output_of_query3', set2='output_of_query4')\"",
    "which position is listed the most on this chart?": "None",
    "is the ducati marlboro team above or below the team roberts in the team column?": "## Target type: {relation}\n## Query:\nStep1: Find the entity named Ducati Marlboro team\nQuery1: \"get_information(relation='Team', tail_entity='Ducati Marlboro team')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Team Roberts\nQuery3: \"get_information(relation='Team', tail_entity='Team Roberts')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"compare(row_number1='output_of_query2', row_number2='output_of_query4')\"",
    "which manufacturer was used by the most riders?": "None",
    "what is the first engine listed on this chart?": "## Target type: {engine}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Engine of output_of_query3\nQuery4: \"get_information(relation='Engine', head_entity='output_of_query3')\"",
    "which jurisdiction is listed the most?": "## Target type: {Jurisdiction}\n## Query:\nStep1: Find all the Jurisdictions\nQuery1: \"get_information(relation='Jurisdiction')\"\nStep2: Get the mode of output_of_query1\nQuery2: \"mode(set='output_of_query1')\"",
    "which team did not have more than 16 wins?": "None",
    "how many times did fumio place in the top ten?": "None",
    "did the fighting irish score more on average when they were ranked or when they were unranked?": "## Target type: {'Result'}\n## Query:\nStep1: Find the row_numbers where the team is Fighting Irish and is ranked\nQuery1: \"get_information(relation='Rank#:', tail_entity='Fighting Irish')\"\nStep2: Find the results of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the row_numbers where the team is Fighting Irish and is unranked\nQuery3: \"get_information(relation='Rank#:', tail_entity>='Fighting Irish')\"\nStep4: Find the results of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\nStep5: Calculate the average score of output_of_query2\nQuery5: \"average(set='output_of_query2')\"\nStep6: Calculate the average score of output_of_query4\nQuery6: \"average(set='output_of_query4')\"",
    "the difference between yelizaveta bryzhina's time and ksenija balta's time?": "## Target type: {time difference}\n## Query:\nStep1: Find the entity named Yelizaveta Bryzhina\nQuery1: \"get_information(relation='Name', tail_entity='Yelizaveta Bryzhina')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Ksenija Balta\nQuery3: \"get_information(relation='Name', tail_entity='Ksenija Balta')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate(set1='output_of_query2', set2='output_of_query4', operation='difference')\"",
    "what is total number of title?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Title\nQuery1: \"get_information(relation='Title')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the total number of years bob martinez served in office?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Bob Martinez\nQuery1: \"get_information(relation='Name', tail_entity='Bob Martinez')\"\nStep2: Find the Term of Office of output_of_query1\nQuery2: \"get_information(relation='Term of Office', head_entity='output_of_query1')\"\nStep3: Calculate the total number of years in output_of_query2\nQuery3: \"year_difference(set='output_of_query2')\"",
    "what is the difference between the number of games played at manny ramjohn stadium and the number of games played at marvin lee stadium?": "## Target type: {difference}\n## Query:\nStep1: Find the games played at Manny Ramjohn Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Manny Ramjohn Stadium')\"\nStep2: Find the games played at Marvin Lee Stadium\nQuery2: \"get_information(relation='Venue', tail_entity='Marvin Lee Stadium')\"\nStep3: Find the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Find the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"subtract(value1='output_of_query3', value2='output_of_query4')\"",
    "who was the previous winner to the 1997 winner?": "None",
    "which team won the leinster senior club hurling championships previous to the last time birr won?": "None",
    "who was the winning captain the last time the competition was held at the gaelic grounds venue?": "None",
    "previous to 2007 what tier was the team in?": "## Target type: {tier}\n## Query:\nStep1: Find the entity that Season is 2007\nQuery1: \"get_information(relation='Season', tail_entity='2007')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Level of output_of_query4\nQuery5: \"get_information(relation='Level', head_entity='output_of_query4')\"",
    "did italy or norway have 51 total medals?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Norway\nQuery3: \"get_information(relation='Nation', tail_entity='Norway')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 equals to 51 or output_of_query4 equals to 51\nQuery5: \"equals(value1='output_of_query2', value2='51') or equals(value1='output_of_query4', value2='51')\"",
    "what are the total amount of times italy appears on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the number of times \"Italy\" appears in the field \"Country\"\nQuery1: \"get_information(relation='Country', tail_entity='Italy')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the total number of times the championship was held in italy?": "None",
    "how many additional total goals did italy score compared to the republic of ireland in the 1994 fifa world cup match?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Republic of Ireland\nQuery1: \"get_information(relation='Team #1', tail_entity='Republic of Ireland')\"\nStep2: Find the total goals of output_of_query1\nQuery2: \"get_information(relation='Res.', head_entity='output_of_query1')\"\nStep3: Find the entity named Italy\nQuery3: \"get_information(relation='Team #2', tail_entity='Italy')\"\nStep4: Find the total goals of output_of_query3\nQuery4: \"get_information(relation='Res.', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate(value1='output_of_query4', operator='-', value2='output_of_query2')\"",
    "how many total races were there?": "None",
    "what is the number of 1500 meter runners that came from italy?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Country is Italy\nQuery1: \"get_information(relation='Country', tail_entity='Italy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the entity whose relation is 'Athlete' of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was the only year that division 4 qualified 2nd round of the open cup?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Division that is equal to 4\nQuery1: \"get_information(relation='Division', tail_entity='4')\"\nStep2: Find the entity with the relation of Open Cup that is equal to \"2nd round\"\nQuery2: \"get_information(relation='Open Cup', tail_entity='2nd round')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many consecutive winning games were away games?": "None",
    "how many consecutive games were there no wins?": "None",
    "how many consecutive times did the atlanta hawks win?": "## Target type: {number of consecutive wins}\n## Query:\nStep1: Find the entity named Atlanta Hawks\nQuery1: \"get_information(relation='Home', tail_entity='Atlanta Hawks')\"\nStep2: Find the consecutive times that the output_of_query1 appears in the Home column\nQuery2: \"consecutive(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what number of drivers aslo had brabham-repco as their constructor?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity with the relation of Constructor being Brabham-Repco\nQuery1: \"get_information(relation='Constructor', tail_entity='Brabham-Repco')\"\nStep2: Count the number of drivers from output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many racers had an offenhauser engine?": "None",
    "what was the surface at most of the games?": "## Target type: {surface}\n## Query:\nStep1: Find all the surfaces\nQuery1: \"get_information(relation='Surface')\"\nStep2: Find the surface that appears the most\nQuery2: \"most(set='output_of_query1')\"\nStep3: Get the surface of output_of_query2\nQuery3: \"get_information(relation='Surface', tail_entity='output_of_query2')\"",
    "how many matches were not played on a clay surface?": "## Target type: {number of matches}\n## Query:\nStep1: Find the matches that were played on a clay surface\nQuery1: \"get_information(relation='Surface', tail_entity='Clay')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find all the row_number\nQuery3: \"get_information(relation='row_number')\"\nStep4: Find the difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was the most consecutive wins for the team shown in the season?": "None",
    "tell me the number of grass courts.": "None",
    "how many games had at least an 50,000 or more people in attendance?": "## Target type: {number}\n## Query:\nStep1: Find the games with attendance of 50,000 or more\nQuery1: \"get_information(relation='Attendance', tail_entity>='50000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did at least 1500 people attend?": "None",
    "what was the number of deaths in 1996?": "None",
    "which party has the highest number of deaths?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Date of death\nQuery1: \"get_information(relation='Date of death')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Date of death\nQuery3: \"get_information(relation='Date of death', tail_entity='output_of_query2')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "number of codes containing a 2?": "None",
    "which is the only unicode listed that contains an a letter?": "None",
    "which has the largest volume number?": "None",
    "by how much does the macintosh cyrillic encoding differ in decimals between the small letter em and the capital letter em?": "None",
    "which total score was higher, game #163 or #181?": "## Target type: {'Score'}\n## Query:\nStep1: Find the entity with the relation of #\nQuery1: \"get_information(relation='#')\"\nStep2: Find the total score of output_of_query1\nQuery2: \"get_information(relation='Score', tail_entity='output_of_query1')\"\nStep3: Find the entity named #163\nQuery3: \"get_information(relation='Score', tail_entity='163')\"\nStep4: Find the total score of output_of_query3\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Find the entity named #181\nQuery5: \"get_information(relation='Score', tail_entity='181')\"\nStep6: Find the total score of output_of_query5\nQuery6: \"get_information(relation='Score', tail_entity='output_of_query5')\"\nStep7: Compare the total score of output_of_query4 and output_of_query6 to get the higher one\nQuery7: \"if(max(set='output_of_query4') > max(set='output_of_query6'), 'output_of_query4', 'output_of_query6')\"",
    "how many titles are more than one word long?": "None",
    "how many children casualties were there in temerin and titel?": "## Target type: {number of children casualties}\n## Query:\nStep1: Find the entity named Temerin\nQuery1: \"get_information(relation='Place', tail_entity='Temerin')\"\nStep2: Find the entity named Titel\nQuery2: \"get_information(relation='Place', tail_entity='Titel')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the children casualties in output_of_query3\nQuery4: \"get_information(relation='Children', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "who was the smallest player?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Height\nQuery3: \"get_information(relation='Height', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who was the next loser after john o'connor": "## Target type: {loser}\n## Query:\nStep1: Find the entity named John O'Connor\nQuery1: \"get_information(relation='Loser', tail_entity='John O'Connor')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Loser of output_of_query4\nQuery5: \"get_information(relation='Loser', head_entity='output_of_query4')\"",
    "which year had the least amount of parts published?": "None",
    "what year had the least amount of teams that competed?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Tms.\nQuery1: \"get_information(relation='Tms.')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Tms.\nQuery3: \"get_information(relation='Tms.', tail_entity='output_of_query2')\" \nStep4: Find the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "in what year were there the least number of images?": "None",
    "which year had the least amount of overall seats won?": "## Target type: {year}\n## Query:\nStep1: Find all row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the row_number with min value\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Election year of output_of_query3\nQuery4: \"get_information(relation='Election year', head_entity='output_of_query3')\"",
    "which opponent did kindley have the most victories against?": "## Target type: {opponent}\n## Query:\nStep1: Find all the opponents\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Find the entity that appears the most in opponents\nQuery2: \"get_information(relation='Opponent', tail_entity>='most')\"\nStep3: Get the opponent with the most victories\nQuery3: \"get_information(relation='Opponent', head_entity='output_of_query2')\"",
    "croatia and thailand each won how many medals?": "## Target type: {'Bronze', 'Silver', 'Gold'}\n## Query:\nStep1: Find the entity that is Croatia\nQuery1: \"get_information(relation='Nation', tail_entity='Croatia')\"\nStep2: Find the medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Find the entity that is Thailand\nQuery3: \"get_information(relation='Nation', tail_entity='Thailand')\"\nStep4: Find the medals of output_of_query3\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query3')\"",
    "who had more goals, ross jenkins or nigel gibbs?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Ross Jenkins\nQuery1: \"get_information(relation='Name', tail_entity='Ross Jenkins')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the entity named Nigel Gibbs\nQuery3: \"get_information(relation='Name', tail_entity='Nigel Gibbs')\"\nStep4: Find the goals of output_of_query3\nQuery4: \"get_information(relation='Goals', head_entity='output_of_query3')\"\nStep5: Find the entity that has more goals between output_of_query2 and output_of_query4\nQuery5: \"if(set1>'output_of_query4', set1='output_of_query2', set2='output_of_query4')\"",
    "what is the last film title on this chart?": "## Target type: {'Film Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film Title of output_of_query3\nQuery4: \"get_information(relation='Film Title', head_entity='output_of_query3')\"",
    "which airport is above tarampa airfield?": "None",
    "name a year that had deaths higher than 400 but a crude birth rate lower than 12.": "None",
    "which country had the most athletes?": "None",
    "which country has the most teams on the list?": "## Target type: {country}\n## Query:\nStep1: Find all the teams on the list\nQuery1: \"get_information(relation='Team')\"\nStep2: Find the teams grouped by country and count the number of teams in each country\nQuery2: \"count_by_key(set='output_of_query1', key='Country')\"\nStep3: Find the country with the maximum teams\nQuery3: \"max(set='output_of_query2')\"",
    "which country had the most athletic representation?": "## Target type: {country}\n## Query:\nStep1: Find the entity with relation of Country\nQuery1: \"get_information(relation='Country')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Country', tail_entity>='most')\"",
    "how many tournaments were played in the united states?": "None",
    "what is the amount races that were competed in?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was the date of appointment in the month of november?": "None",
    "what are the number of titles with a date of november?": "None",
    "what are the number of times the date of vacancy was in october?": "None",
    "what are the total number of games played in october?": "None",
    "what was the total combined score of the game on october 31?": "None",
    "what were the number of games scheduled in november?": "None",
    "what is the different between the number of people who attended august 30th and the number of people who attended november 1st": "## Target type: {number}\n## Query:\nStep1: Find the entity named August 30th\nQuery1: \"get_information(relation='Date', tail_entity='August 30th')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity named November 1st\nQuery3: \"get_information(relation='Date', tail_entity='November 1st')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the number of games played in october of this season?": "None",
    "what was yoichiro kakitani's first major competition?": "None",
    "in what year did ifk receive their best finish?": "## Target type: {year}\n## Query:\nStep1: Find the entity that IFK received their best finish\nQuery1: \"get_information(relation='Position', tail_entity>='best')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "which was erbedija's first festival/event where he was nominated but didn't win an award?": "None",
    "who is the oldest living gay, lesbian, or bisexual famous person with a last name from i-j?": "None",
    "in episode 10 the episode was written by matt and nix and what other writer?": "None",
    "which illustrator was responsible for the last award winner?": "## Target type: {illustrator}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Illustrator of output_of_query3\nQuery4: \"get_information(relation='Illustrator', head_entity='output_of_query3')\"",
    "how many years did ifk finish in less than 4th place?": "None",
    "in how man years did ifk finish in at least 5th place.": "None",
    "how many times in total did ikangaa run the marathon in the olympic games?": "## Target type: {number}\n## Query:\nStep1: Find all the entities with the relation of Event being Marathon and Competition being Olympic Games\nQuery1: \"get_information(relation='Event', tail_entity='Marathon', relation='Competition', tail_entity='Olympic Games')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what game was played before the one against faroe islands?": "None",
    "count of unique roles": "None",
    "what is the first intersecting highway town heading east on pr 243?": "None",
    "what was the only episode broadcasted in july 2012?": "## Target type: {'Episode'}\n## Query:\nStep1: Find the entity with the relation of Original Broadcast Date as July 2012.\nQuery1: \"get_information(relation='Original Broadcast Date', tail_entity='July 2012')\"\nStep2: Find the Episode of output_of_query1.\nQuery2: \"get_information(relation='Episode', head_entity='output_of_query1')\"",
    "which institution has the most undergraduate enrollment?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of Undergraduate enrollment\nQuery1: \"get_information(relation='Undergraduate enrollment')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Undergraduate enrollment\nQuery3: \"get_information(relation='Undergraduate enrollment', tail_entity='output_of_query2')\"\nStep4: Find the Institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "how many years did the democratic party have the majority before 1876 in the south carolina house of representatives?": "None",
    "what track from whatcha lookin' 4 lasts for only 1:38?": "## Target type: {title of the track}\n## Query:\nStep1: Find the entity named \"Whatcha Lookin' 4\"\nQuery1: \"get_information(relation='Title', tail_entity='Whatcha Lookin' 4')\"\nStep2: Find the track with Time equals to \"1:38\"\nQuery2: \"get_information(relation='Time', tail_entity='1:38')\"\nStep3: Find the Title of output_of_query2\nQuery3: \"get_information(relation='Title', head_entity='output_of_query2')\"",
    "which product as rdf for input or output": "## Target type: {product}\n## Query:\nStep1: Find the entity that has relation of Input Format containing \"RDF\"\nQuery1: \"get_information(relation='Input Format', tail_entity='RDF')\"\nStep2: Get the product of output_of_query1\nQuery2: \"get_information(relation='Product', head_entity='output_of_query1')\"\nStep3: Find the entity that has relation of Output Format containing \"RDF\"\nQuery3: \"get_information(relation='Output Format', tail_entity='RDF')\"\nStep4: Get the product of output_of_query3\nQuery4: \"get_information(relation='Product', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"",
    "who scored more, portugalete or valencia?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Portugalete\nQuery1: \"get_information(relation='Team 1', tail_entity='Portugalete')\"\nStep2: Find the Agg. of output_of_query1\nQuery2: \"get_information(relation='Agg.', head_entity='output_of_query1')\"\nStep3: Find the entity named Valencia\nQuery3: \"get_information(relation='Team 2', tail_entity='Valencia')\"\nStep4: Find the Agg. of output_of_query3\nQuery4: \"get_information(relation='Agg.', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to find the one with higher value\nQuery5: \"if output_of_query2 > output_of_query4 then 'Portugalete' else 'Valencia'\"",
    "which one is the least in notes": "None",
    "how many 1/4 cups are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Cup as \"1/4\"\nQuery1: \"get_information(relation='Cup', tail_entity='1/4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is his/her compression for the 90-94 n14 pulsar gti-r?": "## Target type: {compression ratio}\n## Query:\nStep1: Find the entity named '90-'94 N14 Pulsar GTI-R\nQuery1: \"get_information(relation='Car', tail_entity='90-94 N14 Pulsar GTI-R')\"\nStep2: Find the compression ratio of output_of_query1\nQuery2: \"get_information(relation='Compression', head_entity='output_of_query1')\"",
    "how many sensors have a crop area of less than 1.0?": "None",
    "how many countries had at least 2 total medals?": "None",
    "what is the only historic place in coburn gore?": "None",
    "who placed in the top spot?": "None",
    "joe hennessy and finbarr delaney both scored how many points?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Joe Hennessy\nQuery1: \"get_information(relation='Player', tail_entity='Joe Hennessy')\"\nStep2: Find the number of points of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Finbarr Delaney\nQuery3: \"get_information(relation='Player', tail_entity='Finbarr Delaney')\"\nStep4: Find the number of points of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the number of casualties on may 4 1943?": "## Target type: {'Casualties'}\n## Query:\nStep1: Find the entity with the relation of Date as May 4 1943\nQuery1: \"get_information(relation='Date', tail_entity='May 4 1943')\"\nStep2: Find the Casualties of output_of_query1\nQuery2: \"get_information(relation='Casualties', head_entity='output_of_query1')\"",
    "what election had the most total votes?": "## Target type: {election}\n## Query:\nStep1: Find the entity with the relation of Total votes\nQuery1: \"get_information(relation='Total votes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Total votes\nQuery3: \"get_information(relation='Total votes', tail_entity='output_of_query2')\"\nStep4: Get the election of output_of_query3\nQuery4: \"get_information(relation='Election', head_entity='output_of_query3')\"",
    "translate the following into english: 'n bietjie.": "None",
    "who won at least two times?": "None",
    "how many total coaches on the list are from canada?": "## Target type: {number of coaches}\n## Query:\nStep1: Find the entity with the nationality of Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of singles featured in this table?": "None",
    "how many total singles has this rapper released thus far?": "None",
    "what is the number of songs sung by two singers?": "None",
    "what is the number of singles that went gold?": "## Target type: {number of singles}\n## Query:\nStep1: Find the entity with the relation of Award Description(s) containing \"Gold\"\nQuery1: \"get_information(relation='Award Description(s)', value='Gold')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the number of singles by del the funky homosapien released before the year 2000": "## Target type: {number}\n## Query:\nStep1: Find the entity named Del the Funky Homosapien\nQuery1: \"get_information(relation='Artist', tail_entity='Del the Funky Homosapien')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the singles released before the year 2000\nQuery3: \"get_information(relation='Year', tail_entity<'2000')\"\nStep4: Count the number of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the last team on the chart": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "did the team place higher in the 2002-03 season or the 2003-04 season?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season')\"\nStep2: Find the row_number of output_of_query1 for the 2002-03 season\nQuery2: \"get_information(relation='row_number', tail_entity='2002\u201303')\"\nStep3: Find the row_number of output_of_query1 for the 2003-04 season\nQuery3: \"get_information(relation='row_number', tail_entity='2003\u201304')\"\nStep4: Compare the output_of_query2 and output_of_query3 to determine the higher position\nQuery4: \"compare(output_of_query2, output_of_query3)\"",
    "name a team that scored more than 8 points.": "None",
    "how many crime thrillers were released in this category in this year?": "## Target type: {number}\n## Query:\nStep1: Find the entity with Genre equals to \"Crime Thriller\"\nQuery1: \"get_information(relation='Genre', tail_entity='Crime Thriller')\"\nStep2: Find the entities with Year equals to \"2000\"\nQuery2: \"get_information(relation='Year', tail_entity='2000')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many gold and bronze medals were achieved overall?": "None",
    "how many consecutive games were there over 500 in attendance?": "None",
    "how many teams scored over 50 in every event?": "None",
    "who was the next prime minister from the republican turkish party after ferdi sabit soyer?": "None",
    "name each institution with enrollment numbers above 4,000?": "## Target type: {institution}\n## Query:\nStep1: Find the entities with the relation of Enrollment \nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Find the entities with enrollment numbers above 4,000\nQuery2: \"get_information(relation='Enrollment', tail_entity>'4000')\"\nStep3: Find the institutions of output_of_query2\nQuery3: \"get_information(relation='Institution', head_entity='output_of_query2')\"",
    "how many tournaments were located in florida?": "## Target type: {number of tournaments}\n## Query:\nStep1: Find the entity whose location is Florida\nQuery1: \"get_information(relation='Location', tail_entity='Florida')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams competed in the 1998 marlboro grand prix of miami?": "None",
    "which outcome is listed the most?": "## Target type: {outcome}\n## Query:\nStep1: Find the entity with the relation of Outcome\nQuery1: \"get_information(relation='Outcome')\"\nStep2: Find the most frequent output_of_query1\nQuery2: \"most_frequent(set='output_of_query1')\" \nStep3: Find the entity with the most frequent Outcome\nQuery3: \"get_information(relation='Outcome', tail_entity='output_of_query2')\"",
    "what are the number of times ferrari is listed as the constructor?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ferrari\nQuery1: \"get_information(relation='Constructor', tail_entity='Ferrari')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average engine type listed?": "None",
    "which type of terrain is listed the most?": "## Target type: {type of terrain}\n## Query:\nStep1: Find all the type of terrain\nQuery1: \"get_information(relation='Terrain')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most(set='output_of_query1')\" \nStep3: Find the type of terrain that appears the most\nQuery3: \"get_information(relation='Terrain', tail_entity='output_of_query2')\"",
    "what town is listed the most?": "## Target type: {town}\n## Query:\nStep1: Find all the towns listed\nQuery1: \"get_information(relation='Town')\"\nStep2: Calculate the count of each unique town in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the town with the most appearances\nQuery3: \"get_information(relation='Town', tail_entity>='most')\"",
    "which stadium has the least number of average attendees?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity with the relation of Average attendance\nQuery1: \"get_information(relation='Average attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Average attendance\nQuery3: \"get_information(relation='Average attendance', tail_entity='output_of_query2')\"\nStep4: Find the stadium of output_of_query3\nQuery4: \"get_information(relation='Home stadium', head_entity='output_of_query3')\"",
    "what was the only location to have less than 17,000 people attend?": "None",
    "which location had the leargest attendeance?": "None",
    "which game site had the lowest number of attendance?": "None",
    "which game was attended by the least number of people?": "None",
    "who is after will power": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Will Power\nQuery1: \"get_information(relation='Driver', tail_entity='Will Power')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row number output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "what is the difference in yards averaged between cecil moore and raymond philyaw?": "None",
    "which is the least region charted on this chart": "None",
    "which interferometer has the highest maximum baseline?": "## Target type: {interferometer}\n## Query:\nStep1: Find the entity with the relation of Maximum baseline (m)\nQuery1: \"get_information(relation='Maximum baseline (m)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Maximum baseline\nQuery3: \"get_information(relation='Maximum baseline (m)', tail_entity='output_of_query2')\"\nStep4: Find the interferometer of output_of_query3\nQuery4: \"get_information(relation='Interferometer and observing mode', head_entity='output_of_query3')\"",
    "which mountain peak is the only mountain peak in the cascade range?": "## Target type: {mountain peak}\n## Query:\nStep1: Find the entity named Cascade Range\nQuery1: \"get_information(relation='Mountain Range', tail_entity='Cascade Range')\"\nStep2: Find the mountain peak in output_of_query1\nQuery2: \"get_information(relation='Mountain Peak', head_entity='output_of_query1')\"",
    "what is the next stadium after begin arena?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity named Begin Arena\nQuery1: \"get_information(relation='Stadium', tail_entity='Begin Arena')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Stadium of output_of_query4\nQuery5: \"get_information(relation='Stadium', head_entity='output_of_query4')\"",
    "what is the partnering name above chanelle scheepers?": "## Target type: {partnering name}\n## Query:\nStep1: Find the entity named Chanelle Scheepers\nQuery1: \"get_information(relation='Partnering', tail_entity='Chanelle Scheepers')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Partnering name of output_of_query4\nQuery5: \"get_information(relation='Partnering', head_entity='output_of_query4')\"",
    "which is the previous name from lupe valdez": "## Target type: {name}\n## Query:\nStep1: Find the entity named Lupe Valdez.\nQuery1: \"get_information(relation='Name', tail_entity='Lupe Valdez')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what year was the single, \"superwoman\", released": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity named \"Superwoman\"\nQuery1: \"get_information(relation='Single', tail_entity='Superwoman')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how long was joseph lyons in office?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Joseph Lyons\nQuery1: \"get_information(relation='Prime Minister', tail_entity='Joseph Lyons')\"\nStep2: Find the total time in office for output_of_query1\nQuery2: \"get_information(relation='Total time in office', head_entity='output_of_query1')\"",
    "how long was geir vidalin in office?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Geir Vidalin\nQuery1: \"get_information(relation='Name', tail_entity='Geir Vidalin')\"\nStep2: Find the Office started of output_of_query1\nQuery2: \"get_information(relation='Office started', head_entity='output_of_query1')\"\nStep3: Find the Office ended of output_of_query1\nQuery3: \"get_information(relation='Office ended', head_entity='output_of_query1')\"\nStep4: Calculate the duration between output_of_query2 and output_of_query3\nQuery4: \"duration(start='output_of_query2', end='output_of_query3')\"",
    "how long did this runner compete in years?": "None",
    "how many days did robert moran serve?": "None",
    "how long was joseph black a coach?": "None",
    "how long was gretzky's career?": "None",
    "is kanaha pond a state monument or a bird sanctuary?": "None",
    "what is the total number of stations under the cbs network?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entity with the relation of Network as CBS\nQuery1: \"get_information(relation='Network', tail_entity='CBS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs has eightysix been credited for?": "None",
    "who is the top athlete from poland": "None",
    "what is the only church with the word \"blood\" in the name?": "None",
    "who is the only wsl title holder from texas?": "None",
    "how many miles is the metz - nancy route?": "None",
    "what's the most consecutive times croatia has qualified?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Croatia\nQuery1: \"get_information(relation='entity_name', tail_entity='Croatia')\"\nStep2: Find the entity with round as \"Qualified\"\nQuery2: \"get_information(relation='Round', tail_entity='Qualified')\"\nStep3: Find the consecutive times Croatia has qualified\nQuery3: \"count_consecutive(set='output_of_query2')\"",
    "how many times did she participate in the heptathalon?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Notes that is Heptathlon\nQuery1: \"get_information(relation='Notes', tail_entity='Heptathlon')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of lord of the rings games released since 1982?": "None",
    "how many more goals did he have in 2009 than 2005?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity with the relation of Season as 2009\nQuery1: \"get_information(relation='Season', tail_entity='2009')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Season as 2005\nQuery3: \"get_information(relation='Season', tail_entity='2005')\"\nStep4: Find the goals of output_of_query3\nQuery4: \"get_information(relation='Goals', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(first_value='output_of_query2', second_value='output_of_query4')\"",
    "how many picks were between jesse joensuu and kim johansson?": "None",
    "what is the number of the player from slovakia?": "## Target type: {player number}\n## Query:\nStep1: Find the entity with the relation of Nationality as Slovakia\nQuery1: \"get_information(relation='Nationality', tail_entity='Slovakia')\"\nStep2: Find the player number of output_of_query1\nQuery2: \"get_information(relation='#', head_entity='output_of_query1')\"",
    "who held the championship title longest?": "## Target type: {wrestlers}\n## Query:\nStep1: Find the wrestlers who held the championship title\nQuery1: \"get_information(relation='Wrestlers', tail_entity>='championship title')\"\nStep2: Get the entity with the maximum number of days held\nQuery2: \"get_information(relation='Days held', tail_entity='maximum')\"\nStep3: Find the wrestlers of output_of_query2\nQuery3: \"get_information(relation='Wrestlers', head_entity='output_of_query2')\"",
    "how many of the candidates were females?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Gender as Female\nQuery1: \"get_information(relation='Gender', tail_entity='F')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what college has the top enrollment?": "## Target type: {'Institution'}\n## Query:\nStep1: Find the entity with the relation of Enrollment\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Enrollment\nQuery3: \"get_information(relation='Enrollment', tail_entity='output_of_query2')\"\nStep4: Find the Institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "what is the total number of americans in the tournaments?": "None",
    "how many matches took place in the u.s.?": "None",
    "what is the total number of states?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the competitions that took place were based in a venue in the united states?": "None",
    "what is the total number of competitions?": "## Target type: {number}\n## Query:\nStep1: Find the relation of Competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of fide players in the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Find the FIDE players of output_of_query1\nQuery2: \"get_information(relation='#FIDE', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many championships occurred in toronto or montreal?": "None",
    "what is the first gov on the list?": "## Target type: {government}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number from output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the government of output_of_query3\nQuery4: \"get_information(relation='Gov', head_entity='output_of_query3')\"",
    "how many cars were created before 1960?": "## Target type: {number}\n## Query:\nStep1: Find the cars that were created before 1960\nQuery1: \"get_information(relation='Year built', tail_entity<'1960')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many more titles did team maccabi tel aviv win than every other team combined?": "None",
    "which country comes in first place?": "None",
    "what city is the miller park stadium located in?": "## Target type: {city}\n## Query:\nStep1: Find the stadium named Miller Park\nQuery1: \"get_information(relation='Stadium', tail_entity='Miller Park')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "how many districts are large than 50 square kilometers?": "None",
    "how much larger was the 2009 population of chicago than the 2009 population of toronto?": "None",
    "which team won the champ car world series the year before rusport?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity named Rusport\nQuery1: \"get_information(relation='Team', tail_entity='Rusport')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Season', tail_entity='output_of_query3')\"\nStep5: Find the team who won the champ car world series in output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many artists scored more than 30 points?": "## Target type: {number}\n## Query:\nStep1: Find the artists that scored more than 30 points\nQuery1: \"get_information(relation='Points', tail_entity>'30')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the date after number 4?": "None",
    "did scrubs win the bet comedy awards or the teen choice awards in 2002?": "## Target type: {'Award'}\n## Query:\nStep1: Find the entity named Scrubs\nQuery1: \"get_information(relation='Series', tail_entity='Scrubs')\"\nStep2: Find the Award of output_of_query1\nQuery2: \"get_information(relation='Award', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Year is 2002\nQuery3: \"get_information(relation='Year', tail_entity='2002')\"\nStep4: Find the Awards of output_of_query3\nQuery4: \"get_information(relation='Award', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many horses were more than 10 years of age?": "## Target type: {number}\n## Query:\nStep1: Find the horses with Age greater than 10\nQuery1: \"get_information(relation='Age', tail_entity>'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations won at least 10 medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entities that have Total medals at least 10\nQuery1: \"get_information(relation='Total', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "hom many justices served above 10 years before retirement?": "None",
    "how many candidates received over 10% of the vote?": "None",
    "is the number of opponents more or less than 10?": "None",
    "how many countries have at least 10 gold medals in the asian youth games?": "None",
    "how many nations earned at least ten bronze medals?": "None",
    "how many consecutive wins did western's men's team have?": "None",
    "which countries have same gdp growth as mauritius": "None",
    "which competition was in tokyo, japan but came in 2nd position?": "## Target type: {competition}\n## Query:\nStep1: Find the entity that Venue is Tokyo, Japan\nQuery1: \"get_information(relation='Venue', tail_entity='Tokyo, Japan')\"\nStep2: Find the entity that Position is 2nd\nQuery2: \"get_information(relation='Position', tail_entity='2nd')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what secretary of state served under both prime minister laurier and prime minister king?": "None",
    "yes or no: dundee is ranked in the top third of this for population.": "## Target type: {'yes' or 'no'}\n## Query:\nStep1: Find the population of Dundee\nQuery1: \"get_information(relation='Population (2001 Census)', head_entity='Dundee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity='output_of_query1')\"\nStep3: Find the Rank of output_of_query2\nQuery3: \"get_information(relation='Rank', head_entity='output_of_query2')\"\nStep4: Calculate the total number of rows in the table\nQuery4: \"count(set='row_number')\"\nStep5: Calculate the threshold for the top third (approximately 1/3 of the total rows)\nQuery5: \"calculate_threshold(total_rows='output_of_query4', percentage='0.33')\"\nStep6: Check if output_of_query3 is greater than or equal to output_of_query5\nQuery6: \"compare(a='output_of_query3', b='output_of_query5')\"",
    "who wrote the most music for c.v. sridhars movies ?": "## Target type: {music composer}\n## Query:\nStep1: Find the entity named C.V. Sridhar\nQuery1: \"get_information(relation='Film', tail_entity='C.V. Sridhar')\"\nStep2: Find the music composers of output_of_query1\nQuery2: \"get_information(relation='Music', head_entity='output_of_query1')\"\nStep3: Find the composer that appears the most\nQuery3: \"get_information(relation='Music', tail_entity>='most')\"",
    "in equal sized portions, do potatoes or plantains contain more grams of protein?": "None",
    "who was inducted after royal?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Royal\nQuery1: \"get_information(relation='Ring name', tail_entity='Royal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ring name of output_of_query4\nQuery5: \"get_information(relation='Ring name', head_entity='output_of_query4')\"",
    "the flandria and the patria are ships that both fly under what country's flag?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Flandria\nQuery1: \"get_information(relation='Name', tail_entity='Flandria')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Patria\nQuery3: \"get_information(relation='Name', tail_entity='Patria')\"\nStep4: Find the nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which river is positioned right, with a drainage area for 11.8": "## Target type: {river}\n## Query:\nStep1: Find the entity with the relation of Position being \"right\"\nQuery1: \"get_information(relation='Position', tail_entity='right')\"\nStep2: Find the entity with the relation of Drainage basin area being \"11.8\"\nQuery2: \"get_information(relation='Drainage basin area', tail_entity='11.8')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the river of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what was the first year in which jifar placed lower than 2nd?": "None",
    "what was the total number of medals won by all the teams combined?": "None",
    "the first year a game was released in north america": "None",
    "which country took the most time?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which type is consecutive in this chart": "None",
    "what is the top month on the list?": "None",
    "what is the total of titles on new worlds?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Album is New Worlds\nQuery1: \"get_information(relation='Album', tail_entity='New Worlds')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the total count of row_number in output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "john considine and michael vejar worked on what episode together?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named John Considine\nQuery1: \"get_information(relation='Written by', tail_entity='John Considine')\"\nStep2: Find the entity named Michael Vejar\nQuery2: \"get_information(relation='Directed by', tail_entity='Michael Vejar')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many athletes ranked in the top 15 are from the united states?": "None",
    "calculate the number of songs listed between 1994 and 2005.": "## Target type: {number of songs}\n## Query:\nStep1: Find the songs with the relation of Year between 1994 and 2005.\nQuery1: \"get_information(relation='Year', tail_entity>='1994', tail_entity<='2005')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which date had the top listed fee?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Fee\nQuery1: \"get_information(relation='Fee')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Fee\nQuery3: \"get_information(relation='Fee', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "on which dates were the highest scores?": "None",
    "which attendance was higher, july 1 or july 2?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Date as July 1\nQuery1: \"get_information(relation='Date', tail_entity='July 1')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date as July 2\nQuery3: \"get_information(relation='Date', tail_entity='July 2')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to find the higher attendance\nQuery5: \"if set1>'output_of_query4' then set1 else output_of_query4\"",
    "what date is at the top of the list?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what was the date of the first game?": "None",
    "what date was the first game played?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what was the date of the first game played?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what date did they play before feb 1?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Feb 1\nQuery1: \"get_information(relation='Date', tail_entity='Feb 1')\"\nStep2: Find all the row_number\nQuery2: \"get_information(relation='row_number')\"\nStep3: Find the row that is before output_of_query1\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query1')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which date is listed first on the table?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "only 402,026 kilometres were travelled in what service date?": "## Target type: {'Entered Service'}\n## Query:\nStep1: Find the entity with the relation of Kilometres Travelled as 402,026\nQuery1: \"get_information(relation='Kilometres Travelled', tail_entity='402,026')\"\nStep2: Find the Entered Service date of output_of_query1\nQuery2: \"get_information(relation='Entered Service', head_entity='output_of_query1')\"",
    "what was the first entered service date in the table?": "## Target type: {entered service date}\n## Query:\nStep1: Find all the entered service dates\nQuery1: \"get_information(relation='Entered service')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min entered service date\nQuery3: \"get_information(relation='Entered service', tail_entity='output_of_query2')\"",
    "who was withdrawn due to a broken wrist, kim clijsters or nikolay davydenko?": "## Target type: {player}\n## Query:\nStep1: Find the entity that was withdrawn due to a broken wrist\nQuery1: \"get_information(relation='Withdrew due to', tail_entity='broken wrist')\"\nStep2: Find the entity named Kim Clijsters\nQuery2: \"get_information(relation='Player', tail_entity='Kim Clijsters')\"\nStep3: Find the entity named Nikolay Davydenko\nQuery3: \"get_information(relation='Player', tail_entity='Nikolay Davydenko')\"\nStep4: Find the intersection of output_of_query1 and output_of_query2\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep5: Find the intersection of output_of_query1 and output_of_query3\nQuery5: \"set_intersection(set1='output_of_query1', set2='output_of_query3')\"",
    "what group has the same number of caucusing members as rpr group?": "None",
    "what other movies was aggarwal in the same year as her role in veera?": "None",
    "who was the top scorer from puerto rico during the nasl?": "None",
    "what is the combined time it took the first three competitors to finish the race?": "None",
    "who became winning couple for the first time in week 6?": "## Target type: {'Winning Couple'}\n## Query:\nStep1: Find the entity with the relation of Week 6\nQuery1: \"get_information(relation='Week', tail_entity='6')\"\nStep2: Find the winning couple of output_of_query1\nQuery2: \"get_information(relation='Winning Couple', head_entity='output_of_query1')\"",
    "how many consecutive games were played on october 10, 1999?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date on October 10, 1999\nQuery1: \"get_information(relation='Date', tail_entity='October 10, 1999')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was the goal difference on october 19, 2008?": "None",
    "how many more total appearances did shigeo yaegashi have than mitsuo kamata?": "None",
    "how many boat builders are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the boat builders\nQuery1: \"get_information(relation='Boat Builder')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how much greater is the population of clark township than freeman township?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Clark Township\nQuery1: \"get_information(relation='Township', tail_entity='Clark Township')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Freeman Township\nQuery3: \"get_information(relation='Township', tail_entity='Freeman Township')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtraction(a='output_of_query2', b='output_of_query4')\"",
    "in which county in new york did kerry win the most votes?": "None",
    "which mayor is in the conservative party and was a bank manager?": "## Target type: {mayor}\n## Query:\nStep1: Find the entity in Political Party named Conservative Party\nQuery1: \"get_information(relation='Political Party', tail_entity='Conservative Party')\"\nStep2: Find the entity in Occupation named Bank Manager\nQuery2: \"get_information(relation='Occupation', tail_entity='Bank Manager')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity in Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who was the first division 1 team to enter competition?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Entered Competition\nQuery1: \"get_information(relation='Entered Competition')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Entered Competition\nQuery3: \"get_information(relation='Entered Competition', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "doron mazar, which artist(s) had the most points?": "None",
    "what was the opening song on his album?": "## Target type: {'Title'}\n## Query:\nStep1: Find the row_number of the opening song\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many winners are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Outcome as \"Winner\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which opponent was the first one they won against?": "None",
    "who, of the years on this list, was the first team to win?": "## Target type: {team}\n## Query:\nStep1: Find the winning years on this list\nQuery1: \"get_information(relation='Winning Years')\"\nStep2: Sort the output_of_query1 in ascending order\nQuery2: \"sort(set='output_of_query1', ascending=True)\"\nStep3: Find the first year of output_of_query2\nQuery3: \"get_information(relation='Winning Years', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which team was the winner of the first final?": "## Target type: {'Winners'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Winners of output_of_query3\nQuery4: \"get_information(relation='Winners', head_entity='output_of_query3')\"",
    "how many feet separate the 7th and 8th ranked highest peaks?": "None",
    "what is the only mountain peak listed for the cascade range?": "## Target type: {mountain peak}\n## Query:\nStep1: Find the entity with the relation of Mountain Range is Cascade Range\nQuery1: \"get_information(relation='Mountain Range', tail_entity='Cascade Range')\"\nStep2: Find the mountain peak of output_of_query1\nQuery2: \"get_information(relation='Mountain Peak', head_entity='output_of_query1')\"",
    "what is the tallest peak in the alps?": "## Target type: {peak}\n## Query:\nStep1: Find the entity that contains the relation of Elevation (m)\nQuery1: \"get_information(relation='Elevation (m)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Elevation\nQuery3: \"get_information(relation='Elevation (m)', tail_entity='output_of_query2')\"\nStep4: Find the Peak of output_of_query3\nQuery4: \"get_information(relation='Peak', head_entity='output_of_query3')\"",
    "how many countries are listed?": "None",
    "what is the total number of children listed?": "None",
    "how many people are on the list?": "## Target type: {number of people}\n## Query:\nStep1: Find the entities with the relation of Player\nQuery1: \"get_information(relation='Player')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of racers who finished under 6:00.00?": "None",
    "which airport has the least amount of passengers going through london southend airport?": "## Target type: {airport}\n## Query:\nStep1: Find the entity named London Southend Airport\nQuery1: \"get_information(relation='Airport', tail_entity='London Southend Airport')\"\nStep2: Find the passengers handled of output_of_query1\nQuery2: \"get_information(relation='Passengers handled', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Passengers handled\nQuery3: \"get_information(relation='Passengers handled')\"\nStep4: Get the min output_of_query3\nQuery4: \"min(set='output_of_query3')\" \nStep5: Get the entity with the min Passengers handled\nQuery5: \"get_information(relation='Passengers handled', tail_entity='output_of_query4')\"",
    "how many camps did vavuniya represent?": "## Target type: {number of camps}\n## Query:\nStep1: Find the entity with the relation of Div Sec Division that is Vavuniya\nQuery1: \"get_information(relation='Div Sec Division', tail_entity='Vavuniya')\"\nStep2: Find the camps of output_of_query1\nQuery2: \"get_information(relation='Camp', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what are the number of laetare medalist that held a diplomat position?": "None",
    "what country is team djurg\u00e5rdens if not from?": "None",
    "which is the last experiment name and payload carrier hardware": "None",
    "who was the coach after joe connally?": "None",
    "which district has the next highest population after choiseul?": "None",
    "how many teams did germany have?": "None",
    "how many drivers from germany?": "None",
    "what is the number of total bronze medals that germany has won?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Bronze', head_entity='Germany')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total medals did germany win?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity that is Germany\nQuery1: \"get_information(relation='Nation', tail_entity='Germany')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the average length of the first three songs?": "## Target type: {average length}\n## Query:\nStep1: Find the row_number of the first three songs\nQuery1: \"get_information(relation='row_number', tail_entity<='3')\"\nStep2: Get the Length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "what is the longest song?": "## Target type: {'Title'}\n## Query:\nStep1: Find the length of all songs\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max length from output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the song with the max length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many songs are less than 4 minutes in length?": "None",
    "which is the shortest song?": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how long is the shortest song on the album?": "## Target type: {length}\n## Query:\nStep1: Find all the Lengths in the schema\nQuery1: \"get_information(relation='Length')\"\nStep2: Find the min length from output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "did they have more or less than 1 home win in 2010-2011?": "## Target type: {comparison result}\n## Query:\nStep1: Find the season that is 2010-2011\nQuery1: \"get_information(relation='Season', tail_entity='2010-2011')\"\nStep2: Find the entities that have relation of Home and their values are wins in output_of_query1\nQuery2: \"get_information(relation='Home', tail_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Compare output_of_query3 with 1\nQuery4: \"comparison(set1='output_of_query3', comparison_operator='<', set2='1')\"",
    "did the team win or lose more games?": "## Target type: {'Result'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the total number of games\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the number of wins\nQuery3: \"get_information(relation='Result', tail_entity='W')\"\nStep4: Find the number of losses\nQuery4: \"get_information(relation='Result', tail_entity='L')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "how many times did the runner finish below 10th place?": "None",
    "what was the team record during the 10th week of the season?": "None",
    "in how many meetings did kaseorg place 10th or better?": "None",
    "number of wins in the season.": "None",
    "how many times did the team loss and scored less than 10 points?": "None",
    "what is the number of seasons finished in 10th place or worse?": "None",
    "how long did sonia o'sullivan take to finish in 2003?": "None",
    "how did the match between zwick and william richley last?": "None",
    "who is the first ranking player?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many players were from england?": "None",
    "who is ranked #1?": "## Target type: {'Nation'}\n## Query:\nStep1: Find the entity with the relation of Rank and tail_entity of '1'\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "who is ranked at the top?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the min output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which nation is first ranking?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "who is ranked at the top": "None",
    "which player came in first place?": "## Target type: {player}\n## Query:\nStep1: Find the entity whose place is '1'\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Get the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who was in office after mustapha jaafar": "## Target type: {Menteri Besar}\n## Query:\nStep1: Find the entity named Mustapha Jaafar\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Mustapha Jaafar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number equal to output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Menteri Besar of output_of_query4\nQuery5: \"get_information(relation='Menteri Besar', head_entity='output_of_query4')\"",
    "what jockey won the triple crown in 1978?": "## Target type: {'Jockey'}\n## Query:\nStep1: Find the entity whose Year is 1978\nQuery1: \"get_information(relation='Year', tail_entity='1978')\"\nStep2: Find the Jockey of output_of_query1\nQuery2: \"get_information(relation='Jockey', head_entity='output_of_query1')\"",
    "which team earned the least amount of points in the apertura 2003 standings?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what is the difference in the meters for the 1985 competition and the 1987 competition?": "None",
    "whose name is listed after lee smith?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Lee Smith\nQuery1: \"get_information(relation='Name', tail_entity='Lee Smith')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many attacks occurred in alaska, usa?": "None",
    "what is the number of rex hartley medal for bob mason 1955": "None",
    "who came next after seve ballesteros?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Seve Ballesteros\nQuery1: \"get_information(relation='Player', tail_entity='Seve Ballesteros')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "who was the latest athlete to bear the samoan flag at the olympic games?": "None",
    "\"girl\" and \"el pro\" were performed by which artist?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named \"girl\"\nQuery1: \"get_information(relation='Song', tail_entity='girl')\"\nStep2: Find the artist of output_of_query1\nQuery2: \"get_information(relation='Artist', head_entity='output_of_query1')\"\nStep3: Find the entity named \"el pro\"\nQuery3: \"get_information(relation='Song', tail_entity='el pro')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the name of the song listed before the song \"yesh\"?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named \"Yesh\"\nQuery1: \"get_information(relation='Song', tail_entity='Yesh')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the song of output_of_query4\nQuery5: \"get_information(relation='Song', head_entity='output_of_query4')\"",
    "which album was released before chasing shadows?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Chasing Shadows\nQuery1: \"get_information(relation='Title', tail_entity='Chasing Shadows')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what song is listed in the table right before layla layla?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named Layla Layla\nQuery1: \"get_information(relation='Song', tail_entity='Layla Layla')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Song of output_of_query4\nQuery5: \"get_information(relation='Song', head_entity='output_of_query4')\"",
    "what was the name of the next publication after iron man?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named Iron Man\nQuery1: \"get_information(relation='Title', tail_entity='Iron Man')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "who is the only writer to write an episode by themselves?": "## Target type: {writer}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of row_number\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the row_number with count=1\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Written by of output_of_query3\nQuery4: \"get_information(relation='Written by', head_entity='output_of_query3')\"",
    "what director is listed with the same original air date as jeremiah chechik?": "None",
    "for how many years was the encyclopedia printed?": "None",
    "not i barbecue was written by matt tarses and who?": "None",
    "who directed the least number of the inspector episodes in 1967?": "None",
    "what was the title of the only episode written by nick thiel?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the entities with the relation of Written by\nQuery1: \"get_information(relation='Written by')\"\nStep2: Find the entity named Nick Thiel\nQuery2: \"get_information(relation='Written by', tail_entity='Nick Thiel')\"\nStep3: Find the Title of output_of_query2\nQuery3: \"get_information(relation='Title', head_entity='output_of_query2')\"",
    "which lake is located at an elevation above 193m?": "None",
    "which municipality has the highest number of quechua speakers?": "None",
    "what is difference in points between c.d. aguila and chalatenango?": "## Target type: {points difference}\n## Query:\nStep1: Find the entity named C.D. Aguila\nQuery1: \"get_information(relation='Team', tail_entity='C.D. Aguila')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Chalatenango\nQuery3: \"get_information(relation='Team', tail_entity='Chalatenango')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the points difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which tributary has their position to the left with a length of 46.6 km?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Position\nQuery1: \"get_information(relation='Position', tail_entity='left')\"\nStep2: Find the entity with the relation of Length\nQuery2: \"get_information(relation='Length', tail_entity='46.6')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who was the first team to be champion of the tournament?": "None",
    "the senators' first lost came against which team?": "None",
    "which nation holds first rank?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "the team from what country ranked first?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Rank is '1'\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "which wrestler is previous from vacant": "None",
    "how many goals did olle ahlund score?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Olle Ahlund\nQuery1: \"get_information(relation='name', tail_entity='Olle Ahlund')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='goals', head_entity='output_of_query1')\"",
    "who is the only team from the east region to reach the final round?": "None",
    "what destination is after the national pike?": "## Target type: {destination}\n## Query:\nStep1: Find the entity with the relation of Destinations containing \"National Pike\"\nQuery1: \"get_information(relation='Destinations', tail_entity='National Pike')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Destinations of output_of_query4\nQuery5: \"get_information(relation='Destinations', head_entity='output_of_query4')\"",
    "which race is the only one to be postponed a day because of rain?": "None",
    "who directed the film rajanna?": "## Target type: {'Director'}\n## Query:\nStep1: Find the entity named Rajanna\nQuery1: \"get_information(relation='Film', tail_entity='Rajanna')\"\nStep2: Find the director of output_of_query1\nQuery2: \"get_information(relation='Director', head_entity='output_of_query1')\"",
    "name one team that completed less than 160 laps.": "None",
    "what is the total of silver for cairo": "## Target type: {total number of silver}\n## Query:\nStep1: Find the entity named Cairo\nQuery1: \"get_information(relation='Place', tail_entity='Cairo')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Silver and the same row_number as output_of_query2\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Calculate the total of output_of_query3\nQuery4: \"sum(set='output_of_query3')\"",
    "how many games are played at 2pm?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Time is '2 p.m.'\nQuery1: \"get_information(relation='Time', tail_entity='2 p.m.')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the host of play-by-play after ray scott?": "None",
    "highest rd number?": "## Target type: {rd number}\n## Query:\nStep1: Find all the rd numbers\nQuery1: \"get_information(relation='Rd')\"\nStep2: Find the max rd number\nQuery2: \"max(set='output_of_query1')\"",
    "who has the highest rank?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "other than switzerland, which other nation won a total of three bronze awards?": "None",
    "name one nation that earned at least two silver medals.": "## Target type: {nation}\n## Query:\nStep1: Find the entities with the relation of Silver\nQuery1: \"get_information(relation='Silver', tail_entity>='2')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"\nStep3: Choose one nation from the output_of_query2\nQuery3: \"choose_one(set='output_of_query2')\"",
    "in how many games did the winning team score more than 4 points?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Score is more than 4\nQuery1: \"get_information(relation='Score', tail_entity>'4')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home Team', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many total games did they win?": "None",
    "how many games did they win by more than 7?": "None",
    "how many games did this team win this season?": "None",
    "when is the last year that the team has been division 2?": "None",
    "how long has internacional de madrid cf been playing in the 3\u00aa division?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Division is 3\u00aa division\nQuery1: \"get_information(relation='Division', tail_entity='3\u00aa division')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times did internacional de madrid cf end the season at the top of their division?": "None",
    "how many years has this team been a part of the 1s aut. pref. division?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity in Division that is '1\u00aa Aut. Pref.'\nQuery1: \"get_information(relation='Division', tail_entity='1\u00aa Aut. Pref.')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what swara is above shatshruti dhaivata?": "## Target type: {swara}\n## Query:\nStep1: Find the entity with the relation of Swara is Shatshruti Dhaivata\nQuery1: \"get_information(relation='Swara', tail_entity='Shatshruti Dhaivata')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Swara of output_of_query4\nQuery5: \"get_information(relation='Swara', head_entity='output_of_query4')\"",
    "lau nim yat and giovane alves de silva where both transferred to which team?": "## Target type: {transferred team}\n## Query:\nStep1: Find the entity named Lau Nim Yat\nQuery1: \"get_information(relation='Player', tail_entity='Lau Nim Yat')\"\nStep2: Find the transferred team of output_of_query1\nQuery2: \"get_information(relation='Transferred to', head_entity='output_of_query1')\"\nStep3: Find the entity named Giovane Alves De Silva\nQuery3: \"get_information(relation='Player', tail_entity='Giovane Alves De Silva')\"\nStep4: Find the transferred team of output_of_query3\nQuery4: \"get_information(relation='Transferred to', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which type is the most in power and input range": "None",
    "how many games were won on the road between november and january?": "None",
    "total number of assists and turnovers combined": "None",
    "how many awards has victoria rowell won?": "None",
    "how many times was war memorial stadium the game site?": "None",
    "how many of the courthouses in vermont are federal buildings?": "None",
    "in what year was bath abbey dissolved by henry viii?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Bath Abbey\nQuery1: \"get_information(relation='Name', tail_entity='Bath Abbey')\"\nStep2: Find the year dissolved of output_of_query1\nQuery2: \"get_information(relation='Year dissolved', head_entity='output_of_query1')\"",
    "how many brands treat the central nervous system?": "None",
    "how many times has the team played in divison 1 since 2000?": "None",
    "in how many total years did the team finish in the preferente division?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that Division is Preferente\nQuery1: \"get_information(relation='Division', tail_entity='Preferente')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in which years did at least 60% of black voters vote democrat between 148 and 1964?": "None",
    "what was the most percentage a republican achieved?": "## Target type: {percentage}\n## Query:\nStep1: Find the entity with the relation of Party as Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Get the Candidates of output_of_query1\nQuery2: \"get_information(relation='Candidates', head_entity='output_of_query1')\"\nStep3: Extract the percentage values from output_of_query2\nQuery3: \"extract(output_of_query2, pattern='(?<=\\()\\d+\\.\\d+(?=%)', modifier='g')\"\nStep4: Get the max output_of_query3\nQuery4: \"max(set='output_of_query3')\"",
    "how many matters require at least one tenth of the existing representatives or senators?": "None",
    "which jacksonian candidates got at least 76% of the vote in their races?": "None",
    "how many elections saw the share of votes more than 15%?": "## Target type: {number}\n## Query:\nStep1: Find the election where Share of votes is more than 15%\nQuery1: \"get_information(relation='Share of votes', tail_entity>'15%')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in how many poll sources did andrew cuomo receive above 60%?": "None",
    "other than games against the boston blazers how many did they win?": "None",
    "for each winning game, what was their score?": "None",
    "who is the first candidate to have over 25%?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity with the relation of Margin of error\nQuery1: \"get_information(relation='Margin of\\nerror')\"\nStep2: Find the entity with the relation of Undecided\nQuery2: \"get_information(relation='Undecided')\"\nStep3: Calculate the difference between 100 and the sum of output_of_query1 and output_of_query2\nQuery3: \"difference(num1=100, num2=sum(output_of_query1, output_of_query2))\"\nStep4: Find the entity with the relation of Rahm Emanuel whose percentage is larger than 25\nQuery4: \"get_information(relation='Rahm Emanuel', tail_entity>'25')\"\nStep5: Find the first entity of output_of_query4\nQuery5: \"first(set='output_of_query4')\"",
    "how many times has dev been nominated for an award but lost?": "None",
    "which competitor was ranked first?": "None",
    "what is the difference of population in easton and reno?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Easton\nQuery1: \"get_information(relation='Township', tail_entity='Easton')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Reno\nQuery3: \"get_information(relation='Township', tail_entity='Reno')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many total episodes of the big gay sketch show?": "None",
    "who was the first greek minister of development?": "None",
    "how many acts had no albums released under bad boy?": "None",
    "did andy hughes or john salako command the largest fee?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Andy Hughes\nQuery1: \"get_information(relation='Name', tail_entity='Andy Hughes')\"\nStep2: Find the fee of output_of_query1\nQuery2: \"get_information(relation='Fee', head_entity='output_of_query1')\"\nStep3: Find the entity named John Salako\nQuery3: \"get_information(relation='Name', tail_entity='John Salako')\"\nStep4: Find the fee of output_of_query3\nQuery4: \"get_information(relation='Fee', head_entity='output_of_query3')\"\nStep5: Compare the fee of output_of_query2 and output_of_query4\nQuery5: \"compare_value(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the name of the first competition on this chart?": "None",
    "who was in office previous to abdullah jaafar?": "## Target type: {Menteri Besar}\n## Query:\nStep1: Find the entity named Abdullah Jaafar\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Abdullah Jaafar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number named output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Menteri Besar of output_of_query4\nQuery5: \"get_information(relation='Menteri Besar', head_entity='output_of_query4')\"",
    "who is the next tallest player after thaisa menezes?": "None",
    "what are the combined number of years argentina and brazil placed in that top 4 or above?": "None",
    "what is the difference in gold medals earned between russia and great britain?": "## Target type: {difference in gold medals}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Great Britain\nQuery3: \"get_information(relation='Nation', tail_entity='Great Britain')\"\nStep4: Find the gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_diff(value1='output_of_query2', value2='output_of_query4')\"",
    "what div sec division comes before vavuniya?": "None",
    "how many competitors were from north and south korea combined?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the competitors from North Korea\nQuery1: \"get_information(relation='Nationality', tail_entity='North Korea')\"\nStep2: Find the competitors from South Korea\nQuery2: \"get_information(relation='Nationality', tail_entity='South Korea')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "name the flag bearer directly before zviadauri.": "None",
    "what is the shortest time the marathon was completed in since 1990?": "None",
    "which project location has the lowest outupt?": "## Target type: {location}\n## Query:\nStep1: Find the entity that has the relation of Output (MW AC)\nQuery1: \"get_information(relation='Output (MW AC)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Output\nQuery3: \"get_information(relation='Output (MW AC)', tail_entity='output_of_query2')\"\nStep4: Find the location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what is the name of the heaviest bell?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Weight\nQuery1: \"get_information(relation='Weight')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max weight\nQuery3: \"get_information(relation='Weight', tail_entity='output_of_query2')\"\nStep4: Find the name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which racer won consecutive races in 1992?": "None",
    "how many missions had launch failures?": "## Target type: {number of missions}\n## Query:\nStep1: Find the mission results that indicate launch failures\nQuery1: \"get_information(relation='Mission result', tail_entity='launch failure')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference of the amount sold between boeing and general dynamics in 2007?": "## Target type: {difference of the amount sold}\n## Query:\nStep1: Find the entity named Boeing\nQuery1: \"get_information(relation='Company (country)', tail_entity='Boeing')\"\nStep2: Find the arms sales of output_of_query1 in 2007\nQuery2: \"get_information(relation='2007 arms sales (US$ m.)', head_entity='output_of_query1')\"\nStep3: Find the entity named General Dynamics\nQuery3: \"get_information(relation='Company (country)', tail_entity='General Dynamics')\"\nStep4: Find the arms sales of output_of_query3 in 2007\nQuery4: \"get_information(relation='2007 arms sales (US$ m.)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many total games were at braly stadium?": "## Target type: {number}\n## Query:\nStep1: Find the games at Braly Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Braly Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which film was the best in terms of profit for walt disney productions?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Studio as \"Walt Disney Productions\"\nQuery1: \"get_information(relation='Studio', tail_entity='Walt Disney Productions')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the row with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which title has the largest number of performances?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Performances\nQuery1: \"get_information(relation='Performances')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Performances\nQuery3: \"get_information(relation='Performances', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what poetry prize is at the top of the list?": "None",
    "how many times were the braves listed as the opponents?": "None",
    "who is after robert hofstadter on the list?": "## Target type: {laureate}\n## Query:\nStep1: Find the entity named Robert Hofstadter\nQuery1: \"get_information(relation='Laureate', tail_entity='Robert Hofstadter')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Laureate of output_of_query4\nQuery5: \"get_information(relation='Laureate', head_entity='output_of_query4')\"",
    "which country has the most fide rated players after germany?": "None",
    "what was the date of the last game played by oxford united in which they lost?": "None",
    "what is the total number of destinations for the hancock location?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Location is Hancock\nQuery1: \"get_information(relation='Location', tail_entity='Hancock')\"\nStep2: Find the destinations of output_of_query1\nQuery2: \"get_information(relation='Destinations', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference in enrollment numbers (total graduate and undergraduate) between the highest attend and lowest attended ivy league school?": "None",
    "was the positioning better the year of the france venue or the year of the south korea venue?": "None",
    "how much longer is the 20th tour de france stage than the 19th?": "None",
    "which one is above in votes in rockland county": "None",
    "what is the number of the last pick on the list?": "## Target type: {pick number}\n## Query:\nStep1: Find all the picks on the list\nQuery1: \"get_information(relation='Pick')\"\nStep2: Get the max pick number in output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "which other album has the same length as topeng?": "None",
    "what is the total number of years that frederik beichmann was a deputy judge?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Frederik Beichmann\nQuery1: \"get_information(relation='Name', tail_entity='Frederik Beichmann')\"\nStep2: Find the Term as a Deputy Judge of output_of_query1\nQuery2: \"get_information(relation='Term as a Deputy Judge', head_entity='output_of_query1')\"\nStep3: Calculate the total number of years of output_of_query2\nQuery3: \"calculate_years(set='output_of_query2')\"",
    "tell me a game that did not have any goals scored.": "None",
    "who holds the top record in the 110 m hurdles?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named 110 m hurdles\nQuery1: \"get_information(relation='Event', tail_entity='110 m hurdles')\"\nStep2: Find the top record of output_of_query1\nQuery2: \"get_information(relation='Record', head_entity='output_of_query1')\"\nStep3: Get the entity with the top record\nQuery3: \"get_information(relation='Record', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "how many countries were represented?": "## Target type: {number}\n## Query:\nStep1: Find all the countries\nQuery1: \"get_information(relation='Country')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many turkish lakes are above 100 square kilometers in size?": "None",
    "what is the only crown entity monitored by the department of labour?": "None",
    "which competition was there not a position?": "None",
    "number of consecutive championships won by federbrau": "None",
    "what group had the greatest amount of members?": "None",
    "how many contestants call belfast their hometown?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Belfast\nQuery1: \"get_information(relation='Hometown', tail_entity='Belfast')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of jockeys listed here?": "## Target type: {number of jockeys}\n## Query:\nStep1: Find the entity with the relation of Jockey\nQuery1: \"get_information(relation='Jockey')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many sum's names start with \"t\"?": "None",
    "what is the number of oppositions who the chandigarh comets have 100% win rate against?": "## Target type: {number of oppositions}\n## Query:\nStep1: Find the entity named Chandigarh Comets\nQuery1: \"get_information(relation='Opposition', tail_entity='Chandigarh Comets')\"\nStep2: Find the win rate of output_of_query1\nQuery2: \"get_information(relation='Win%', head_entity='output_of_query1')\"\nStep3: Find the number of oppositions with 100% win rate\nQuery3: \"get_information(relation='Win%', tail_entity='100%')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many drivers scored at least 4 or more points?": "None",
    "how many counties gave bush at least 60 percent of the vote?": "None",
    "how many elections had at least a 0.2 percentage of constituency votes?": "None",
    "what is the exit beofre virginia avenue?": "None",
    "what is the only east coast u.s. state to have a recorded non-fatal wolf attack?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Type of attack equal to \"Captive\"\nQuery1: \"get_information(relation='Type of attack', tail_entity='Captive')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number equal to output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"\nStep5: Find the east coast u.s. state in output_of_query4\nQuery5: \"find_east_coast_state(set='output_of_query4')\" (use set operations to find the east coast state)",
    "what is the difference between the number of affiliates galavision has and the number of affiliates azteca 13 has?": "None",
    "which of damons' titles won the most awards?": "None",
    "what are the number of times astm d 638 is listed as the test method?": "## Target type: {number}\n## Query:\nStep1: Find the entity named ASTM D 638\nQuery1: \"get_information(relation='Test method', tail_entity='ASTM D 638')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of runner-ups listed on the chart?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Outcome as \"Runner-up\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Runner-up')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the top competitor in 2009?": "## Target type: {'Nation'}\n## Query:\nStep1: Find the entity in 2009 with the position of '1st'\nQuery1: \"get_information(relation='2009', tail_entity='1st')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many utility vehicle models originated in the united states?": "None",
    "what is the only years without representatives from either the democratic or republican party.": "None",
    "how many wins total between belgium and malta?": "None",
    "signed the same date as \"april fools day\".": "## Target type: {Player}\n## Query:\nStep1: Find the entity of April Fools Day\nQuery1: \"get_information(relation='Date signed', tail_entity='April Fools Day')\"\nStep2: Find the Player signed the same date as output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "\"i'll be your fool tonight\" and \"in another minute\" were on what album?": "## Target type: {album}\n## Query:\nStep1: Find the entity named \"I'll Be Your Fool Tonight\"\nQuery1: \"get_information(relation='Song', tail_entity='I'll Be Your Fool Tonight')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"\nStep3: Find the entity named \"In Another Minute\"\nQuery3: \"get_information(relation='Song', tail_entity='In Another Minute')\"\nStep4: Find the album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many rounds did the fight against ibrahim benazza last?": "## Target type: {number of rounds}\n## Query:\nStep1: Find the row_number of the fight against Ibrahim Benazza\nQuery1: \"get_information(relation='Opponent', tail_entity='Ibrahim Benazza')\"\nStep2: Find the number of rounds of output_of_query1\nQuery2: \"get_information(relation='Round', head_entity='output_of_query1')\"",
    "barbara mikulski took office immediately before who?": "None",
    "which four competitions are the only competitions that occurred once?": "None",
    "what is the only plant with deep red flower colour?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Flower colour being deep red\nQuery1: \"get_information(relation='Flower colour', tail_entity='deep red')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many mission failures were there for the cosmos 305?": "## Target type: {number of mission failures}\n## Query:\nStep1: Find the entity named Cosmos 305\nQuery1: \"get_information(relation='Name', tail_entity='Cosmos 305')\"\nStep2: Find the mission result of output_of_query1\nQuery2: \"get_information(relation='Mission result', head_entity='output_of_query1')\"\nStep3: Get the count of mission failures for output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of songs with a length over 4 minutes?": "None",
    "how many of the versions are over 6 minutes?": "## Target type: {number of versions}\n## Query:\nStep1: Find the versions with a length over 6 minutes\nQuery1: \"get_information(relation='Length', tail_entity>'6:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs are at least 4 minutes long?": "None",
    "which stadium seats the least number of people?": "None",
    "who was the opponent in the least attended game?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "which model has the most in service?": "## Target type: {Model}\n## Query:\nStep1: Find the entity with the relation of In Service\nQuery1: \"get_information(relation='In Service')\"\nStep2: Get the entity that appears the most in output_of_query1\nQuery2: \"get_most_common(set='output_of_query1')\" \nStep3: Find the entity with the most In Service\nQuery3: \"get_information(relation='In Service', tail_entity='output_of_query2')\"",
    "what model car was the most used?": "None",
    "what model names were dated after 1960?": "None",
    "what model is listed first in the table?": "## Target type: {model name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Model name of output_of_query3\nQuery4: \"get_information(relation='Model name', head_entity='output_of_query3')\"",
    "who was the only driver that had an accident?": "None",
    "what label was the only label to be used by france?": "## Target type: {label}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Region', tail_entity='France')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Region\nQuery3: \"get_information(relation='Region')\"\nStep4: Find the row_number that is the same as output_of_query2\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep5: Find the label of output_of_query4\nQuery5: \"get_information(relation='Label', head_entity='output_of_query4')\"",
    "which country had more drivers representing them, the us or germany?": "None",
    "which is the only player from germany?": "None",
    "which other nation had the lowest in bronze": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the entity's rank of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which years did the album \"changes\" not make it on the us dance list?": "None",
    "what other country was represented during 1927 other than australia, united states and great britain?": "None",
    "what is number of acres in castledon": "None",
    "what michael w smith album was released before his christmastime album?": "None",
    "how long was it between the attack on el al flight 432 and the attack on twa flight 841?": "None",
    "how long was w.b. kingsmill club president?": "None",
    "kbmk and kbyz call signs both have a city of license listed as what city?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Call sign as KBMK\nQuery1: \"get_information(relation='Call sign', tail_entity='KBMK')\"\nStep2: Find the City of License of output_of_query1\nQuery2: \"get_information(relation='City of License', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Call sign as KBYZ\nQuery3: \"get_information(relation='Call sign', tail_entity='KBYZ')\"\nStep4: Find the City of License of output_of_query3\nQuery4: \"get_information(relation='City of License', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "did the united states win above 10 medals?": "## Target type: {'Yes' or 'No'}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is greater than 10\nQuery3: \"compare(num1='output_of_query2', operator='>', num2=10)\"",
    "how many of the listed senators were at least 90 years old when they died?": "None",
    "what was the difference in points in week ones match up?": "## Target type: {difference of points}\n## Query:\nStep1: Find the entity with the relation of Week as 1\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Parse the points from output_of_query2\nQuery3: \"parse_points(text='output_of_query2')\"\nStep4: Find the difference of points in output_of_query3\nQuery4: \"calculate_difference(set='output_of_query3')\"",
    "in how many games was the opponent the green bay packers?": "None",
    "what was the number of points scored in week 3?": "None",
    "what is the total number of points scored by this team this season?": "None",
    "number of points the bears scored against the green bay packers and detroit lions in the season": "None",
    "which lifts were not manufactured by poma?": "None",
    "what is the total amount of time it took the first three teams to complete the qualifying round?": "None",
    "oklahoma state and penn state both have how many cws appearances?": "None",
    "who appeared first tom segura or jay larson?": "## Target type: {performer}\n## Query:\nStep1: Find the entity named Tom Segura\nQuery1: \"get_information(relation='Performer', tail_entity='Tom Segura')\"\nStep2: Find the appearance of output_of_query1\nQuery2: \"get_information(relation='Appearance', head_entity='output_of_query1')\"\nStep3: Find the entity named Jay Larson\nQuery3: \"get_information(relation='Performer', tail_entity='Jay Larson')\"\nStep4: Find the appearance of output_of_query3\nQuery4: \"get_information(relation='Appearance', head_entity='output_of_query3')\"\nStep5: Find the performer who appeared first between output_of_query2 and output_of_query4\nQuery5: \"set_min(set1='output_of_query2', set2='output_of_query4')\"",
    "what position did this team get after getting 9th place in 1999?": "## Target type: {position}\n## Query:\nStep1: Find the entity that got 9th place in 1999\nQuery1: \"get_information(relation='Position', tail_entity='9th', key='Season', value='1999')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Position of output_of_query4\nQuery5: \"get_information(relation='Position', head_entity='output_of_query4')\"",
    "what was henrick malberg's first film?": "None",
    "name the advisor who served under the same president as karl rove.": "None",
    "in how many consecutive races did he get a 7th place finish?": "None",
    "which show had the earliest opening date?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Opening date\nQuery1: \"get_information(relation='Opening date')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Opening date\nQuery3: \"get_information(relation='Opening date', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which seasons were not played in the california league?": "None",
    "at least how many gta games are listed?": "None",
    "how long (in number of contests) was the teams longest losing streak?": "None",
    "next manager of ttm samut sakhon after prajuk viengsong": "## Target type: {manager}\n## Query:\nStep1: Find the entity named Prajuk Viengsong\nQuery1: \"get_information(relation='Name', tail_entity='Prajuk Viengsong')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the manager of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which player comes below murle breer": "## Target type: {player}\n## Query:\nStep1: Find the entity named Murle Breer\nQuery1: \"get_information(relation='Player', tail_entity='Murle Breer')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "which country ranked first in the press freedom index in 2012?": "None",
    "which player is taller than andri agantis?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Andri Agantis\nQuery1: \"get_information(relation='Player', tail_entity='Andri Agantis')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the players whose height is larger than output_of_query2\nQuery3: \"get_information(relation='Height', tail_entity>'output_of_query2')\"\nStep4: Find the players of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what album won before borrowed time did in 2006?": "## Target type: {album}\n## Query:\nStep1: Find the entity whose Year is 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "how many drivers drove all the rounds?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is 'all the rounds'\nQuery1: \"get_information(relation='Rounds', tail_entity='all')\"\nStep2: Find the drivers of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games were released for the psp?": "## Target type: {number}\n## Query:\nStep1: Find the entity named PSP\nQuery1: \"get_information(relation='Handheld', tail_entity='PSP')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what album did the band release previous to 101?": "## Target type: {album}\n## Query:\nStep1: Find the entity that Peak chart positions is 101\nQuery1: \"get_information(relation='Peak chart positions', tail_entity='101')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "how many consecutive games did jay mills lose to fbs opponents?": "None",
    "which song on the list of top 100 of the 1990s is the only one from brazil?": "None",
    "how many drops does diego dominguez have?": "None",
    "tell me a match that matchup was the same as the first one.": "None",
    "who was the next opponent after germany in 2002?": "## Target type: {opponent}\n## Query:\nStep1: FInd the entity that Opponent is Germany\nQuery1: \"get_information(relation='Opponent', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "which date and opponent is next after june 12,1989": "None",
    "who was the last opponent?": "None",
    "who was the opponent on august 15th?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Date as August 15th\nQuery1: \"get_information(relation='Date', tail_entity='August 15')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "who was the opponent in the game before the game against plymouth albion on october 3rd?": "None",
    "who was the opponent that has the most attendance.": "None",
    "who was the first opponent she beat?": "None",
    "who was the first opponent he lost too?": "None",
    "what is the state above \"sagan\"?": "## Target type: {state}\n## Query:\nStep1: Find the entity named Sagan\nQuery1: \"get_information(relation='Name', tail_entity='Sagan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the state of output_of_query4\nQuery5: \"get_information(relation='State', head_entity='output_of_query4')\"",
    "what is the tallest building in kanpur?": "## Target type: {Name}\n## Query:\nStep1: Find the tallest building in Kanpur\nQuery1: \"get_information(relation='Height', tail_entity>='tallest')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which athlete had the fastest time for the 20km?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "other wrestler to win a match in cuernavaca besides mocho cota": "None",
    "which dutch language electoral district of belgium has the most seats in parliament?": "None",
    "henning berg and what other player transferred in the summer of 2004?": "None",
    "what was the first dioceses established?": "## Target type: {dioceses}\n## Query:\nStep1: Find the entity with the relation of Established\nQuery1: \"get_information(relation='Established')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Established\nQuery3: \"get_information(relation='Established', tail_entity='output_of_query2')\"\nStep4: Find the dioceses of output_of_query3\nQuery4: \"get_information(relation='Ecclesiastical Jurisdictions', head_entity='output_of_query3')\"",
    "which ship has the least years in service for cunard?": "None",
    "in what year was the lake compounce carousel moved to its present home?": "None",
    "what is the difference between the number of goals scored from the highest scoring team and the lowest scoring team?": "None",
    "how many medals total did poland win?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity that is Poland\nQuery1: \"get_information(relation='Country', tail_entity='Poland')\"\nStep2: Find the Total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "number of gold medals earned by the netherlands and italy": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Netherlands\nQuery1: \"get_information(relation='Nation', tail_entity='Netherlands')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Italy\nQuery3: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep4: Find the Gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Get the sum of output_of_query2 and output_of_query4\nQuery5: \"calculate(sum='output_of_query2', sum2='output_of_query4')\"",
    "how many medals did australia win in these olympics?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity with the relation of Nation as Australia\nQuery1: \"get_information(relation='Nation', tail_entity='Australia')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many gold medals where won in total?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nation is Total\nQuery1: \"get_information(relation='Nation', tail_entity='Total')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many matches were held in the netherlands?": "None",
    "how many medals have sweden and norway won combined?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity whose Nation is Sweden\nQuery1: \"get_information(relation='Nation', tail_entity='Sweden')\"\nStep2: Find the Total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose Nation is Norway\nQuery3: \"get_information(relation='Nation', tail_entity='Norway')\"\nStep4: Find the Total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the total medals of output_of_query2 and output_of_query4\nQuery5: \"calculate(total_medals='output_of_query2+output_of_query4')\"",
    "total number of gold medals by finland in the 1924 summer olympics": "None",
    "how many nations only took one medal?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entities with relation of Total and Total equals to 1\nQuery1: \"get_information(relation='Total', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many gold medals did germany earn?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Nation', tail_entity='Germany')\"\nStep2: Find the number of gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many guards were picked?": "## Target type: {number of guards}\n## Query:\nStep1: Find the entity with the relation of Position as Guard\nQuery1: \"get_information(relation='Position', tail_entity='Guard')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average number of defensive backs chosen in the seventh round?": "None",
    "how many defensive players were picked in the seventh round?": "None",
    "what was the total number of picks in round four?": "None",
    "how many free agents did this team pick up this season?": "None",
    "what was the number of qb's selected in the first round?": "## Target type: {number}\n## Query:\nStep1: Find the number of QBs selected in the first round\nQuery1: \"get_information(relation='Rnd.', tail_entity='1', key='Pos.', value='QB')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last rider in the 250cc class?": "## Target type: {'Rider'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "which rider held the pole position the most consecutive times?": "## Target type: {'Pole Position'}\n## Query:\nStep1: Find the entity in Pole Position that appears the most consecutively.\nQuery1: \"get_information(relation='Pole Position', tail_entity>='most')\"\nStep2: Find the Pole Position of output_of_query1.\nQuery2: \"get_information(relation='Pole Position', head_entity='output_of_query1')\"",
    "who was the only champion?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Finished as \"Champion\"\nQuery1: \"get_information(relation='Finished', tail_entity='Champion')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which rider earned only 2 points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Find the entity with Points equal to 2\nQuery2: \"get_information(relation='Points', tail_entity='2')\"\nStep3: Find the Rider of output_of_query2\nQuery3: \"get_information(relation='Rider', head_entity='output_of_query2')\"",
    "which rider in the top 15 positions scored no more than 1 point?": "None",
    "who is the only rider with 25 points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Points as 25\nQuery1: \"get_information(relation='Points', tail_entity='25')\"\nStep2: Find the Rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "the country that won the most medals was?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "how many buildings were built after 1950?": "## Target type: {number of buildings}\n## Query:\nStep1: Find the buildings built after 1950\nQuery1: \"get_information(relation='Year', tail_entity>'1950')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many parks were established after the year 2000?": "## Target type: {number of parks}\n## Query:\nStep1: Find the parks that were established after the year 2000\nQuery1: \"get_information(relation='Established', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many sites were notified after 2000?": "None",
    "how many locomotives were built before the 1900s?": "None",
    "what are the names of the locomotives produced after 1900?": "## Target type: {names of locomotives}\n## Query:\nStep1: Find the locomotives with the relation of Date after 1900\nQuery1: \"get_information(relation='Date', tail_entity>'1900')\"\nStep2: Get the names of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many parishes were founded before 1900?": "## Target type: {number}\n## Query:\nStep1: Find the founded year of all parishes\nQuery1: \"get_information(relation='Founded')\"\nStep2: Find the entities that were founded before 1900\nQuery2: \"get_information(relation='Founded', tail_entity<'1900')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "were there more or less than 15 points scored in week 7?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity whose week is 7\nQuery1: \"get_information(relation='Week', tail_entity='7')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the points scored in output_of_query2\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Compare the points scored with 15\nQuery4: \"comparison(set='output_of_query3', operator='<', value='15')\"",
    "what is the average number of points scored by opponents in the five games lost this season?": "None",
    "what is the least amount of points that the ravens scored but still won by in 2005?": "None",
    "what was the average number of points scored among the top five teams?": "None",
    "what was the first computer to use a decimal numeral system?": "None",
    "which track had the highest peak position?": "None",
    "which show had the highest rating?": "None",
    "in how many years was there a negative (listed in red) natural change?": "None",
    "how many people were appointed after 2011?": "None",
    "how many people were in attendance to the event in the year 2000?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity that Year is 2000\nQuery1: \"get_information(relation='Year', tail_entity='2000')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many olympic games occurred after 1992?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition as 'Olympic Games'\nQuery1: \"get_information(relation='Competition', tail_entity='Olympic Games')\"\nStep2: Find the entity with the relation of Year after 1992\nQuery2: \"get_information(relation='Year', tail_entity>'1992')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many were sunk?": "None",
    "what is the last year christel boeljon played in the ladies european tour as an amateur?": "None",
    "was rafael erich a deputy judge before or after mihajlo jovanovic?": "## Target type: {relation}\n## Query:\nStep1: Find the entity named Rafael Erich\nQuery1: \"get_information(relation='Name', tail_entity='Rafael Erich')\"\nStep2: Check if the row_number of output_of_query1 is before or after the row_number of Mihajlo Jovanovic\nQuery2: \"if(previous_row(set='output_of_query1')) then 'before' elif(next_row(set='output_of_query1')) then 'after' else 'unknown'\"",
    "where is olympic stadium in the netherlands?": "None",
    "when did he win his first title?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity that Outcome is 'Winner'\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Find the min Date of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "what designation comes after the m65 designation?": "## Target type: {designation}\n## Query:\nStep1: Find the entity named M65\nQuery1: \"get_information(relation='Designation', tail_entity='M65')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Designation of output_of_query4\nQuery5: \"get_information(relation='Designation', head_entity='output_of_query4')\"",
    "which songs does not have a producer listed.": "None",
    "what is the next location after altona?": "None",
    "which province consumes the least amount of spirits?": "None",
    "what is the total number of wrestlers on the chart": "## Target type: {number}\n## Query:\nStep1: Find all the row_number on the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many counties are not in blue highlighted boxes?": "None",
    "which teams faced off at miller park?": "None",
    "how many airlines have a steady ranking?": "None",
    "who has been elected more often, shri tej bhadur or shri anish ahemd khan?": "None",
    "how many consecutive years did pavel loskutov run in the joongang seoul marathon?": "None",
    "what is the number of toyota's on the list?": "None",
    "which model has a thrust of at least 12,000 kg?": "None",
    "what is the total number of class a models?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Class\nQuery1: \"get_information(relation='Class', tail_entity='A')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did alan prost have mclaren-honda or ferrari as the constructor in 1988?": "## Target type: {constructor}\n## Query:\nStep1: Find the entity named Alan Prost\nQuery1: \"get_information(relation='Driver', tail_entity='Alan Prost')\"\nStep2: Find the constructor of Alan Prost in 1988\nQuery2: \"get_information(relation='Constructor', tail_entity='output_of_query1', key='Year', value='1988')\"\nStep3: Check if output_of_query2 is 'McLaren-Honda' or 'Ferrari'\nQuery3: \"if(set='output_of_query2', 'McLaren-Honda' or 'Ferrari')\"",
    "what cyclist is listed next after matteo?": "## Target type: {cyclist}\n## Query:\nStep1: Find the entity named Matteo\nQuery1: \"get_information(relation='Cyclist', tail_entity='Matteo')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Cyclist of output_of_query4\nQuery5: \"get_information(relation='Cyclist', head_entity='output_of_query4')\"",
    "the patriot (danny dominion) won the title from what previous holder through an impromptu match?": "None",
    "what is the number of capacity that mega disk'o is able to hold?": "None",
    "his nickname is \"jimmy,\" but what is his full name?": "None",
    "which player previously played for sacred heart?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Sacred Heart\nQuery1: \"get_information(relation='Previous Team(s)', tail_entity='Sacred Heart')\"\nStep2: Find the player who previously played for output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how long has the the team not qualified for the open cup since 2008?": "None",
    "what is the first school on the list?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the row with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "how many games went into overtimes?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with the relation Result containing \"L\" or \"W\" and containing the dash \"-\"\nQuery1: \"get_information(relation='Result', key='-', value='L,W')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was the last year that the supercup got canceled?": "None",
    "what is next after joan o.": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Joan O.\nQuery1: \"get_information(relation='Rider', tail_entity='Joan O')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "who was the last person to complete the 250cc valencian community motorcycle grand prix?": "None",
    "when was the last round in this season?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "where did they place the last season?": "## Target type: {place}\n## Query:\nStep1: Find the entity named the last season\nQuery1: \"get_information(relation='Season', tail_entity>='last season')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"",
    "what year was his last race?": "None",
    "what is the last season that ton won?": "None",
    "which country won the gold medal?": "None",
    "which country took first place?": "## Target type: {'Country'}\n## Query:\nStep1: Find the place with value '1'\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "which country had the largest number of points?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "what country was the top performer from?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "the total number of losses at home.": "## Target type: {number of losses}\n## Query:\nStep1: Find the relation with Result contains 'L'\nQuery1: \"get_information(relation='Result', value='L')\"\nStep2: Find the relation with Site contains 'home'\nQuery2: \"get_information(relation='Site', value='home')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many consecutive times is china represented?": "## Target type: {number}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Opponent', tail_entity='China')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the difference between output_of_query4 and output_of_query2\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query2')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who won more total medals? japan or china?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named China\nQuery3: \"get_information(relation='Nation', tail_entity='China')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Find the nation with more total medals\nQuery5: \"if(set1 > set2, output_of_query1, output_of_query3)\"",
    "what country has 4 consecutive drivers on the roster?": "None",
    "how many drivers were competing for brazil?": "None",
    "who is the first driver listed?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what was the total number of wins?": "## Target type: {number}\n## Query:\nStep1: Find the rows with Result of Win\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the top uk single on the firehouse album?": "None",
    "which countries do not have multiple stars?": "## Target type: {list of countries}\n## Query:\nStep1: Find the entities with the relation of Number of stars less than 2\nQuery1: \"get_information(relation='Number of stars', tail_entity<'2')\"\nStep2: Get the National Team of output_of_query1\nQuery2: \"get_information(relation='National Team', head_entity='output_of_query1')\"",
    "how many films were released before july 1st, 2002?": "None",
    "name each of the mayors of the udf party who won the elections": "None",
    "what room was previous to week 5?": "## Target type: {room}\n## Query:\nStep1: Find the entity with Week equal to 5\nQuery1: \"get_information(relation='Week', tail_entity='5')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Room of output_of_query4\nQuery5: \"get_information(relation='Room', head_entity='output_of_query4')\"",
    "what is the only attack on an airline to involve grenade and small arms fire?": "None",
    "which country has the largest amount of total medals?": "None",
    "which country had more stage-winners than any other country?": "None",
    "what are the number of times a race was held in august?": "None",
    "what was the number of races aired only by fox?": "## Target type: {number of races}\n## Query:\nStep1: Find the races aired by Fox\nQuery1: \"get_information(relation='TV', tail_entity='Fox')\"\nStep2: Find the races not aired by other TV networks\nQuery2: \"set_difference(set1='output_of_query1', set2='TV Networks other than Fox')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many races are there total on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many races were there on the chart?": "## Target type: {number of races}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of races in this series?": "## Target type: {number}\n## Query:\nStep1: Find the entity related to the relation 'Race'\nQuery1: \"get_information(relation='Race')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of races held in march?": "None",
    "how many races were held in canada?": "None",
    "the last player picked came from what school?": "## Target type: {school}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the School/Club Team of output_of_query3\nQuery4: \"get_information(relation='School/Club Team', head_entity='output_of_query3')\"",
    "college attended of previous pick to bob anderegg": "## Target type: {college}\n## Query:\nStep1: Find the entity named Bob Anderegg\nQuery1: \"get_information(relation='Player', tail_entity='Bob Anderegg')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the College of output_of_query4\nQuery5: \"get_information(relation='College', head_entity='output_of_query4')\"",
    "what is the name of the title listed before music bank?": "## Target type: {title}\n## Query:\nStep1: Find the entity named Music Bank\nQuery1: \"get_information(relation='Hangul', tail_entity='\ubba4\uc9c1\ubc45\ud06c')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what was the first michael w smith album?": "None",
    "what song was previous to hot thing?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the Title \"Hot Thing\"\nQuery1: \"get_information(relation='Title', tail_entity='Hot Thing')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which song is previous to \"georgia on my mind\"": "## Target type: {song}\n## Query:\nStep1: Find the entity named \"Georgia on my mind\"\nQuery1: \"get_information(relation='Song', tail_entity='Georgia on my mind')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Song of output_of_query4\nQuery5: \"get_information(relation='Song', head_entity='output_of_query4')\"",
    "name an album released before celebration.": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity named Celebration\nQuery1: \"get_information(relation='Album', tail_entity='Celebration')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "what was the last year that had an achievement listed?": "## Target type: {'Year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the year of the last title?": "None",
    "what was the last term year represented in the chart?": "None",
    "who was the opponent for game 2?": "None",
    "who was the opponent faced when the first goal was scored in 2004?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Date is 2004\nQuery1: \"get_information(relation='Date', tail_entity='2004')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "who came in first?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with the relation of Pos as '1'\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what is the first tournament listed?": "## Target type: {'Tournament'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "at what venue did the first game take place?": "## Target type: {venue}\n## Query:\nStep1: Find the entity with the relation of Week that is 1\nQuery1: \"get_information(relation='Week', tail_entity='1')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "who was the first div sec division?": "## Target type: {div sec division}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the div sec division of output_of_query3\nQuery4: \"get_information(relation='Div Sec Division', head_entity='output_of_query3')\"",
    "what number of dates were won by the chicago bears?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Winner is Chicago Bears\nQuery1: \"get_information(relation='Winner', tail_entity='Chicago Bears')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the title before the episode \"target\"?": "## Target type: {'Episode title'}\n## Query:\nStep1: Find the entity with the relation of Episode title as \"target\"\nQuery1: \"get_information(relation='Episode title', tail_entity='target')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Episode title of output_of_query4\nQuery5: \"get_information(relation='Episode title', head_entity='output_of_query4')\"",
    "which is older, larned building or state tower building?": "None",
    "which artist only has its single entered on 2 january 1994?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Entered is '2 January 1994'\nQuery1: \"get_information(relation='Entered', tail_entity='2 January 1994')\"\nStep2: Find the Artist of output_of_query1\nQuery2: \"get_information(relation='Artist', head_entity='output_of_query1')\"",
    "what was the number of deductions given to all the teams combined?": "None",
    "where did seretse khama reign before he was the president of botswana?": "None",
    "how many players are not a junior?": "None",
    "which is the only team to have 9 wins?": "## Target type: {club}\n## Query:\nStep1: Find the entity whose Wins is 9\nQuery1: \"get_information(relation='Wins', tail_entity='9')\"\nStep2: Find the club of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "which drivers finished the 2007 steelback grand prix before simon pagenaud?": "## Target type: {drivers}\n## Query:\nStep1: Find the entity named Simon Pagenaud\nQuery1: \"get_information(relation='Driver', tail_entity='Simon Pagenaud')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is less than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Find the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "leal won on july 23, but when was the blue jays previous win?": "None",
    "what is the number of league goals billy sharp made?": "## Target type: {'number'}\n## Query:\nStep1: Find the entity named Billy Sharp\nQuery1: \"get_information(relation='Name', tail_entity='Billy Sharp')\"\nStep2: Find the League goals of output_of_query1\nQuery2: \"get_information(relation='League goals', head_entity='output_of_query1')\"",
    "which city is shown first on the table?": "None",
    "what was the last single released?": "## Target type: {'Single'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Single of output_of_query3\nQuery4: \"get_information(relation='Single', head_entity='output_of_query3')\"",
    "are more managers from costa rica or brazil?": "None",
    "what is the number of players from australia in the open?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Australia\nQuery1: \"get_information(relation='Country', tail_entity='Australia')\"\nStep2: Find the number of players from Australia in the Open\nQuery2: \"count(set='output_of_query1', relation='Player')\"",
    "people's life party has at most, how many party leaders?": "## Target type: {number}\n## Query:\nStep1: Find the entity named People's Life Party\nQuery1: \"get_information(relation='Party', tail_entity='People's Life Party')\"\nStep2: Find the party leaders of output_of_query1\nQuery2: \"get_information(relation='Party Leader(s)', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the year of the last election according to this chart?": "## Target type: {'Election year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Election year of output_of_query3\nQuery4: \"get_information(relation='Election year', head_entity='output_of_query3')\"",
    "when did john p. walters end his term?": "None",
    "what is the total number of years gordon wallace and robert cunning spent in office.": "None",
    "what number of years did john hailey serve?": "None",
    "how many consecutive years did ernest george jansen serve as governor-general of the union of south africa?": "None",
    "how many years did ulysses grant serve?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Ulysses Grant\nQuery1: \"get_information(relation='President', tail_entity='Ulysses Grant')\"\nStep2: Find the years served of output_of_query1\nQuery2: \"get_information(relation='Years served', head_entity='output_of_query1')\"",
    "what was the difference between the first and second wins for argentina?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='National Team', tail_entity='Argentina')\"\nStep2: Find the notes of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep3: Split the notes into two wins\nQuery3: \"split(text='output_of_query2', delimiter=',')\"\nStep4: Calculate the difference between the two wins\nQuery4: \"calculate_difference(value1='output_of_query3[0]', value2='output_of_query3[1]')\"",
    "what is the difference in points between first and last place?": "None",
    "what was the difference in the first and second leg for belgium?": "None",
    "how many teams scored more than 5 goals in either leg of the second round?": "## Target type: {number}\n## Query:\nStep1: Find the entity that appears in either leg of the second round and has a score greater than 5.\nQuery1: \"get_information(relation='2nd leg', tail_entity>'5')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the difference between the two scores of the last game?": "None",
    "what was the difference in points scored between the two teams in 1996?": "## Target type: {difference in points scored}\n## Query:\nStep1: Find the entity with the relation of Year is 1996\nQuery1: \"get_information(relation='Year', tail_entity='1996')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate the difference in points scored between the two teams in output_of_query2\nQuery3: \"Calculator(expression='abs(int(split(output_of_query2, '-')[0]) - int(split(output_of_query2, '-')[1]))')\"",
    "what is the difference between the number of points scored in the first game on july 13 and the 18th game on september 26?": "## Target type: {difference between the number of points}\n## Query:\nStep1: Find the first game on July 13\nQuery1: \"get_information(relation='Date', tail_entity='July 13')\"\nStep2: Find the number of points scored in the output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the 18th game on September 26\nQuery3: \"get_information(relation='row_number', tail_entity='18')\"\nStep4: Find the number of points scored in the output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Calculate the difference between the number of points scored in output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(points1='output_of_query2', points2='output_of_query4')\"",
    "what was the difference in score between the two teams for the last game?": "None",
    "which team had the most progress on penalties?": "None",
    "what was neha's last film?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "what place is listed last?": "## Target type: {place}\n## Query:\nStep1: Find the entities for row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Name of place', head_entity='output_of_query3')\"",
    "what was the world's most populous continent in 1965?": "None",
    "which countries had no listing for 2002?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of 2002\nQuery1: \"get_information(relation='2002', tail_entity='no listing')\"\nStep2: Get the Country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "what is the number of players that played for fc st. gallen?": "## Target type: {number}\n## Query:\nStep1: Find the entity named FC St. Gallen\nQuery1: \"get_information(relation='Club', tail_entity='FC St. Gallen')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the shortest player on this team?": "## Target type: {Name}\n## Query:\nStep1: Find all the Size of the players on this team\nQuery1: \"get_information(relation='Size')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the player with the min Size\nQuery3: \"get_information(relation='Size', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "after july 6 when was the next time murray scored a win?": "None",
    "what is the total number of games played at notre dame stadium notre dame, in?": "## Target type: {number}\n## Query:\nStep1: Find the site named Notre Dame Stadium \u2022 Notre Dame \u2022 IN\nQuery1: \"get_information(relation='Site', tail_entity='Notre Dame Stadium \u2022 Notre Dame \u2022 IN')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tour wins did nancy lopez have before 1980?": "None",
    "what is the most populated city in camarines sur?": "None",
    "how many f/c's (forward/center) are on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entities that have the Position F/C\nQuery1: \"get_information(relation='Position', tail_entity='F/C')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many draft picks did atlanta have?": "None",
    "how many players had the position of wr according to this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Position and value 'WR'\nQuery1: \"get_information(relation='Position', value='WR')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many draft picks were between frank tripucka and dale armstrong?": "None",
    "how many players play the position of point guard?": "## Target type: {number of players}\n## Query:\nStep1: Find the players whose position is Point Guard\nQuery1: \"get_information(relation='Position', tail_entity='Point Guard')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many 2nd positions were there?": "## Target type: {number of 2nd positions}\n## Query:\nStep1: Find the entity named 2nd positions\nQuery1: \"get_information(relation='Position', tail_entity='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players are middle blockers?": "None",
    "number of quarterbacks picks in the first round": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Pos. is QB\nQuery1: \"get_information(relation='Pos.', tail_entity='QB')\"\nStep2: Find the entity whose Rnd. is '1'\nQuery2: \"get_information(relation='Rnd.', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "team that won before mazowszanka pekaes pruszk\u00f3w": "None",
    "what is the number of show for 2010": "None",
    "only this movie had a worldwide opening of $390+ million in 2012?": "None",
    "in the 1992-1993 premier league, what was the total number of hat tricks scored by all players?": "None",
    "are there above or below 30 places?": "## Target type: {'number of places'}\n## Query:\nStep1: Get the number of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count is above or below 30\nQuery3: \"check_condition(condition='output_of_query2 > 30')\"",
    "what was the total number of clubs in division 1 in the 2010 northern football league season?": "None",
    "which years did chile place silver or bronze?": "None",
    "how many episodes were directed by perry lang": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity that Directed by Perry Lang\nQuery1: \"get_information(relation='Directed by', tail_entity='Perry Lang')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the first loser listed on this chart?": "## Target type: {loser}\n## Query:\nStep1: Find all the Loser entities\nQuery1: \"get_information(relation='Loser')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='Loser', tail_entity='output_of_query2')\"",
    "how many cities are in wisconsin?": "None",
    "how many conference schools were founded before 1900?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Founded\nQuery1: \"get_information(relation='Founded')\"\nStep2: Find the entities with output_of_query1 that are before 1900\nQuery2: \"get_information(relation='Founded', tail_entity<'1900')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many routes were formed in the 1920's?": "None",
    "how many constituencies were not created in the 1900s?": "None",
    "what is the number of hungarians in 1850?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Year is 1850\nQuery1: \"get_information(relation='Year', tail_entity='1850')\"\nStep2: Find the Hungarians of output_of_query1\nQuery2: \"get_information(relation='Hungarians', head_entity='output_of_query1')\"",
    "who was the first president in the 1900's?": "## Target type: {name of president}\n## Query:\nStep1: Find the entity with the relation of Year of Presidency where the year is in the 1900's.\nQuery1: \"get_information(relation='Year of Presidency', head_entity='1900')\"\nStep2: Find the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='Year of Presidency', tail_entity='output_of_query2')\"\nStep4: Find the Name of President of output_of_query3\nQuery4: \"get_information(relation='Name of President', head_entity='output_of_query3')\"",
    "who is the other marquis ruler besides si jun?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Si Jun\nQuery1: \"get_information(relation='Name', tail_entity='Si Jun')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what country uses the mitsubishi l200 by their military?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Mitsubishi L200\nQuery1: \"get_information(relation='Model', tail_entity='Mitsubishi L200')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Origin', head_entity='output_of_query1')\"",
    "what's the total limiting matitude of coast visible and coast infrared?": "None",
    "how many currency does the region of africa have": "None",
    "who drank more beer, quebec or northwest territories?": "None",
    "the population of cadiz is how much greater than jaen?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Cadiz\nQuery1: \"get_information(relation='Province', tail_entity='Cadiz')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Jaen\nQuery3: \"get_information(relation='Province', tail_entity='Jaen')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "who set consecutive world records in the 100m?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity that Event is 100m\nQuery1: \"get_information(relation='Event', tail_entity='100m')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "other than january how many encyclicals were in 1921?": "None",
    "when was the first launch and payload name": "None",
    "what are some songs that are not produced by e-swift?": "None",
    "what is the number of titles released by psikyo in 2004?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Release as 2004\nQuery1: \"get_information(relation='Release', tail_entity='2004')\"\nStep2: Find the entity with the relation of 6th Gen as PlayStation 2\nQuery2: \"get_information(relation='6th Gen', tail_entity='PlayStation 2')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which site held the most games?": "None",
    "what is the only location with a coordination of 60\u00b016&#8242;31.65&#8243;n 30\u00b032&#8242;45.66&#8243;e / 60.2754583\u00b0n 30.5460167\u00b0e?": "## Target type: {location}\n## Query:\nStep1: Find the entity with Coordinates 60\u00b016'31.65\"N 30\u00b032'45.66\"E / 60.2754583\u00b0N 30.5460167\u00b0E\nQuery1: \"get_information(relation='Coordinates', tail_entity='60\u00b016\u203231\u2033N 30\u00b032\u203245\u2033E\ufeff / \ufeff60.2754583\u00b0N 30.5460167\u00b0E')\"\nStep2: Find the Location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "which two republicans took office next to each other on the timeline?": "None",
    "out of all the people who have points, who has the least?": "None",
    "which athlete consecutively scored the lowest?": "None",
    "which opponent scored the least amount of points against them in a game?": "None",
    "who finished with the least time?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that has the relation Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which of the players listed had the least number of years in the nba?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Years in NBA\nQuery1: \"get_information(relation='Years in NBA')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Years in NBA\nQuery3: \"get_information(relation='Years in NBA', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which two players had the least number of goals?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get two entities with the min Goals\nQuery3: \"get_information(relation='Goals', tail_entity<='output_of_query2', limit=2)\"\nStep4: Find the players of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the number of locomotives built in the 1800s?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date in the 1800s\nQuery1: \"get_information(relation='Date', tail_entity>='1800' and tail_entity<='1899')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the first mayor in the 1900's?": "None",
    "what is the total number of ships sank or otherwise destroyed between 1940 and 1945?": "None",
    "what's the number of parishes founded in the 1800s?": "## Target type: {number}\n## Query:\nStep1: Find the founded parishes in the 1800s\nQuery1: \"get_information(relation='Founded', tail_entity>='1800', tail_entity<='1899')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the name of the last movie the actress appeared in?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "how long did zhao dan appear in films?": "None",
    "when was morgenstern's film debut?": "None",
    "what was the last show to air?": "None",
    "what was the last film directed by c. v. sridhar?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "when was the last time rade serbedzija won an award for best actor?": "## Target type: {'Year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the first date listed for the opponent \"reds\"?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Reds\nQuery1: \"get_information(relation='Opponent', tail_entity='Reds')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first_row of output_of_query2\nQuery3: \"first_row(set='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "how many point is tony kanaan": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Tony Kanaan\nQuery1: \"get_information(relation='Driver', tail_entity='Tony Kanaan')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how many times has michigan state been runner-up?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Michigan State\nQuery1: \"get_information(relation='Team', tail_entity='Michigan State')\"\nStep2: Find the runner-up count of output_of_query1\nQuery2: \"get_information(relation='Runner-up', head_entity='output_of_query1')\"",
    "who has the wolfpack as their nickname?": "## Target type: {Institution}\n## Query:\nStep1: Find the entity with the nickname Wolfpack\nQuery1: \"get_information(relation='Nickname', tail_entity='Wolfpack')\"\nStep2: Find the Institution of output_of_query1\nQuery2: \"get_information(relation='Institution', head_entity='output_of_query1')\"",
    "who was the first competitor to finish the race a lap behind?": "None",
    "how many riders had no points?": "None",
    "which city has only 5 barangays?": "## Target type: {City/Municipality}\n## Query:\nStep1: Find the entity whose No. of Barangays is 5\nQuery1: \"get_information(relation='No. of Barangays', tail_entity='5')\"\nStep2: Get the entity with output_of_query1\nQuery2: \"get_information(relation='City/Municipality', head_entity='output_of_query1')\"",
    "how long is the higashiyama line in length?": "## Target type: {'Length'}\n## Query:\nStep1: Find the entity named Higashiyama Line\nQuery1: \"get_information(relation='Name', tail_entity='Higashiyama Line')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "was no.1 or veteran built in 1847?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity named No.1\nQuery1: \"get_information(relation='Name', tail_entity='No.1')\"\nStep2: Find the Date built of output_of_query1\nQuery2: \"get_information(relation='Date built', head_entity='output_of_query1')\"\nStep3: Find the entity named Veteran\nQuery3: \"get_information(relation='Name', tail_entity='Veteran')\"\nStep4: Find the Date built of output_of_query3\nQuery4: \"get_information(relation='Date built', head_entity='output_of_query3')\"\nStep5: Check if the output_of_query2 is equal to \"1847\" or output_of_query4 is equal to \"1847\"\nQuery5: \"check_equal(value1='output_of_query2', value2='1847') or check_equal(value1='output_of_query4', value2='1847')\"",
    "what are the point differences between the first and last team?": "None",
    "what was the average score between matches 1 and 2?": "## Target type: {average score}\n## Query:\nStep1: Find the entity of match 1\nQuery1: \"get_information(relation='Match', tail_entity='1')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity of match 2\nQuery3: \"get_information(relation='Match', tail_entity='2')\"\nStep4: Find the score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Find the average of output_of_query2 and output_of_query4\nQuery5: \"average(set1='output_of_query2', set2='output_of_query4')\"",
    "total number of seasons presented by alessia marcuzzi:": "## Target type: {number}\n## Query:\nStep1: Find the series presented by Alessia Marcuzzi\nQuery1: \"get_information(relation='Main Presenter', tail_entity='Alessia Marcuzzi')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what year was lorenzo's latest competition?": "None",
    "at the 2006 gran premio telmex, who finished last?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which leg was the last leg?": "## Target type: {'leg'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the leg of output_of_query3\nQuery4: \"get_information(relation='leg', head_entity='output_of_query3')\"",
    "which district had least population growth from 2001-2011?": "None",
    "what is the least population of 2009?": "## Target type: {population}\n## Query:\nStep1: Find the entity with the relation Population (2009)\nQuery1: \"get_information(relation='Population (2009)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "which township has the least in population?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "which district in this city has the greatest population?": "## Target type: {district}\n## Query:\nStep1: Find the entity named Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the district of output_of_query3\nQuery4: \"get_information(relation='Districts', head_entity='output_of_query3')\"",
    "of the municipalities with positive population growth in the years 2006-2011, which had the least growth?": "None",
    "on average how many times was the president's party listed as whig?": "None",
    "what is the song after \"ova here\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity whose title is \"Ova Here\"\nQuery1: \"get_information(relation='Title', tail_entity='Ova Here')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many times were the san antonio spurs at home in december of 1976?": "None",
    "what country was the top producer of niobium in the year 2003?": "None",
    "how many total events are listed on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the first player on this list?": "## Target type: {'Player'}\n## Query:\nStep1: Find the player with row_number 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the total number of clubs listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what film did she star in after her special appearance in teri meri kahaani?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity named \"Teri Meri Kahaani\"\nQuery1: \"get_information(relation='Film', tail_entity='Teri Meri Kahaani')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what country had the most medals total at the the 1994 winter olympics biathlon?": "None",
    "which one of the players on the list weighs the least?": "None",
    "which player played in the least games?": "None",
    "what was the last year that this team placed 5th or better?": "None",
    "in how many games did this competitor place 5th or better?": "## Target type: {number}\n## Query:\nStep1: Find the competitor mentioned in the question\nQuery1: \"get_information(relation='Competition', tail_entity='European Championships')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the output_of_query2 placed 5th or better\nQuery3: \"get_information(relation='Position', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many schools had above 5 outright titles?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools that have greater than 5 outright titles\nQuery1: \"get_information(relation='Outright Titles', tail_entity>'5')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams are in the top five positions?": "## Target type: {number of teams}\n## Query:\nStep1: Find the row_number from 1 to 5\nQuery1: \"get_information(relation='row_number', tail_entity>=1, tail_entity<=5)\"\nStep2: Find the teams of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "list each venue where the 3rd position was achieved?": "None",
    "which location comes after kfar yona?": "None",
    "darlington and notts county both played in which tie in the first round proper?": "None",
    "which single was released before \"backslider\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is Backslider\nQuery1: \"get_information(relation='Title', tail_entity='Backslider')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what is the first destination in the chart?": "## Target type: {destination}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the destination of output_of_query3\nQuery4: \"get_information(relation='Destination', head_entity='output_of_query3')\"",
    "how many songs are on the list?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which is the top african nation that earns the most gdp in billions?": "None",
    "what is the total number of representatives from the democratic party?": "## Target type: {number of representatives}\n## Query:\nStep1: Find the entity with the relation of Party as Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how tall is it to the top of the ids tower in feet?": "## Target type: {height in feet}\n## Query:\nStep1: Find the entity named IDS Tower\nQuery1: \"get_information(relation='Name', tail_entity='IDS Tower')\"\nStep2: Find the height in feet of output_of_query1\nQuery2: \"get_information(relation='Height\\nft (m)', head_entity='output_of_query1')\"\nStep3: Get the value of height in feet\nQuery3: \"value(set='output_of_query2')\"",
    "how many districts did charles goodell serve in?": "None",
    "how many total counties did bush win in new york?": "None",
    "what is the first venue in calender year 2012?": "None",
    "how many different venues were played at?": "## Target type: {number}\n## Query:\nStep1: Find all the venues\nQuery1: \"get_information(relation='Venue')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total districts are there in this area?": "None",
    "how many districts are there in this city?": "## Target type: {number of districts}\n## Query:\nStep1: Find the entity with the relation of Districts\nQuery1: \"get_information(relation='Districts')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of members in all the districts?": "## Target type: {number of members}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me the number of districts with an area over 5000.": "## Target type: {number}\n## Query:\nStep1: Find the entity that has an Area greater than 5000\nQuery1: \"get_information(relation='Area (km\u00b2)', tail_entity>'5000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which district has the greatest total number of electorates?": "None",
    "which province has the most districts?": "None",
    "how many members does each district have?": "## Target type: {'number of members'}\n## Query:\nStep1: Find the entity named District 38\nQuery1: \"get_information(relation='District', tail_entity='District 38')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "who did manchester tie with before they tied bradford city?": "None",
    "which year did an american win both the men's and women's individual?": "None",
    "azteca 7 and azteca 13 are both owned by whom?": "## Target type: {owner}\n## Query:\nStep1: Find the entity named Azteca 7\nQuery1: \"get_information(relation='Network name', tail_entity='Azteca 7')\"\nStep2: Find the owner of output_of_query1\nQuery2: \"get_information(relation='Owner', head_entity='output_of_query1')\"\nStep3: Find the entity named Azteca 13\nQuery3: \"get_information(relation='Network name', tail_entity='Azteca 13')\"\nStep4: Find the owner of output_of_query3\nQuery4: \"get_information(relation='Owner', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how much shorter of a time did eduardo piccinini receive than diego cuenca?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Eduardo Piccinini\nQuery1: \"get_information(relation='Name', tail_entity='Eduardo Piccinini')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Diego Cuenca\nQuery3: \"get_information(relation='Name', tail_entity='Diego Cuenca')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtraction(set1='output_of_query2', set2='output_of_query4')\"",
    "how much greater was feinstein's percent in san francisco than in alameda?": "None",
    "how many countries had at least 25 points?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has Points at least 25\nQuery1: \"get_information(relation='Points', tail_entity>='25')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me a volume that does not have more than 30 issues.": "None",
    "how many silver medals did evgeni plushenko get?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Evgeni Plushenko\nQuery1: \"get_information(relation='Athlete', tail_entity='Evgeni Plushenko')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "in how many olympic games did imma clopes compete?": "None",
    "which year has the most games?": "None",
    "where was this competitor's first competition?": "None",
    "what was the first competition this competitor competed in?": "None",
    "what city has the largest density recorded?": "None",
    "which city has more in their built-up area than any other?": "## Target type: {city}\n## Query:\nStep1: Find the entity in Built-up Area that appears the most\nQuery1: \"get_information(relation='Built-up Area', tail_entity>='most')\"\nStep2: Find the Built-up Area of output_of_query1\nQuery2: \"get_information(relation='Built-up Area', head_entity='output_of_query1')\"",
    "which city has the most population in the 2010 census?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Population (2010 Census)\nQuery1: \"get_information(relation='Population (2010 Census)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population (2010 Census)\nQuery3: \"get_information(relation='Population (2010 Census)', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which month were the most games played in?": "None",
    "how many losses during stretch?": "None",
    "did any clubs have no losses?": "None",
    "what month were the most games played?": "None",
    "which month had the most number of losses on the road?": "None",
    "were there any clubs that had no losses?": "None",
    "name one game that they did not win in april.": "None",
    "how many times was the margin of victory 3 strokes or more?": "None",
    "how many strokes marked the margin of victory for justin rose in 2011?": "None",
    "how many times does tiger woods appear in the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Tiger Woods\nQuery1: \"get_information(relation='Player', tail_entity='Tiger Woods')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tournaments has he won by 3 or more strokes?": "None",
    "how many golfers shot at least 2 under par at the 2010 us open?": "None",
    "how many golfers shot 4 over par at the 2010 us open?": "None",
    "who won after tiger woods in 2010?": "None",
    "how many strokes was isao aoki behind larry nelson?": "## Target type: {number of strokes}\n## Query:\nStep1: Find the entity named Isao Aoki\nQuery1: \"get_information(relation='Player', tail_entity='Isao Aoki')\"\nStep2: Find the entity named Larry Nelson\nQuery2: \"get_information(relation='Player', tail_entity='Larry Nelson')\"\nStep3: Find the score of output_of_query1\nQuery3: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep4: Find the score of output_of_query2\nQuery4: \"get_information(relation='Score', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"calculator(operation='-', operand1='output_of_query3', operand2='output_of_query4')\"",
    "which game had a higher total number of goals scored, 1 or 16?": "## Target type: {game}\n## Query:\nStep1: Find the game with row_number 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the total number of goals scored in output_of_query1\nQuery2: \"get_information(relation='Score', tail_entity='output_of_query1')\"\nStep3: Find the game with row_number 16\nQuery3: \"get_information(relation='row_number', tail_entity='16')\"\nStep4: Get the total number of goals scored in output_of_query3\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Compare the total number of goals scored in output_of_query2 and output_of_query4\nQuery5: \"Calculator(function='greater_than', x='output_of_query2', y='output_of_query4')\"\n\nNote: The \"greater_than\" function in the Calculator will return True if x is greater than y, and False otherwise.",
    "what is the time for each name": "None",
    "what was the number of cyclists from heat 2?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Heat is 2\nQuery1: \"get_information(relation='Heat', tail_entity='2')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "london came before which city?": "None",
    "what year has no place indicated?": "None",
    "what is the total number of producing credits that this producer has?": "None",
    "what year had a total of 2 titles released?": "None",
    "how long did the japan super series take?": "None",
    "which engine was used the most by teams this season?": "## Target type: {'Engine'}\n## Query:\nStep1: Find the engines used by teams this season\nQuery1: \"get_information(relation='Engine', tail_entity='season')\"\nStep2: Find the engine that appears the most\nQuery2: \"get_information(relation='Engine', tail_entity>='most')\"\nStep3: Find the teams that used output_of_query2\nQuery3: \"get_information(relation='Engine', head_entity='output_of_query2')\"",
    "what kind of chassis and engine did the fastest driver drive?": "None",
    "what car was driven by the top ranked driver?": "## Target type: {'car'}\n## Query:\nStep1: Find the top ranked driver\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the car driven by output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"",
    "what was the only engine used one time?": "None",
    "which make of car was used the least by those that won races?": "None",
    "tell me an engine that was used by at least 3 different teams.": "## Target type: {engine}\n## Query:\nStep1: Find all the engines\nQuery1: \"get_information(relation='Engine')\"\nStep2: Find the count of each engine in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the engines that have a count of at least 3\nQuery3: \"get_information(relation='Engine', key='output_of_query2', value>='3')\"\nStep4: Get the output_of_query3\nQuery4: \"output_of_query3\"",
    "tony bettenhausen and paul russo drove cars with what kind of engine?": "## Target type: {engine}\n## Query:\nStep1: Find the entity named Tony Bettenhausen\nQuery1: \"get_information(relation='Driver', tail_entity='Tony Bettenhausen')\"\nStep2: Find the engine of output_of_query1\nQuery2: \"get_information(relation='Engine', head_entity='output_of_query1')\"\nStep3: Find the entity named Paul Russo\nQuery3: \"get_information(relation='Driver', tail_entity='Paul Russo')\"\nStep4: Find the engine of output_of_query3\nQuery4: \"get_information(relation='Engine', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what year was the first competition?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity with the relation of Competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Get the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='Competition', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the first date of the first international competition?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of \"row_number\"\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the first row of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity='1')\"\nStep3: Find the Date of output_of_query2\nQuery3: \"get_information(relation='Date', head_entity='output_of_query2')\"",
    "how many total medals has the united states won in women's figure skating?": "None",
    "how many silver medals did poland win?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is Poland\nQuery1: \"get_information(relation='NPC', tail_entity='Poland')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how many medals did france win at the 2000 olympics?": "None",
    "what was the total number of silver medals earned?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Medal\nQuery1: \"get_information(relation='Medal')\"\nStep2: Find the output_of_query1 that equals to 'Silver'\nQuery2: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which township has the least population density?": "## Target type: {township}\n## Query:\nStep1: Find the entity that has the relation of Population density\nQuery1: \"get_information(relation='Population density')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population density\nQuery3: \"get_information(relation='Population density', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "what tournament is at the top?": "None",
    "what is the next kingdom listed after sihag?": "## Target type: {kingdom}\n## Query:\nStep1: Find the entity named Sihag\nQuery1: \"get_information(relation='Name of Kingdom', tail_entity='Sihag')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of Kingdom of output_of_query4\nQuery5: \"get_information(relation='Name of Kingdom', head_entity='output_of_query4')\"",
    "what is the different of votes between both in orange county": "None",
    "what number of nations received 1 medal?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that has Total medals equal to 1\nQuery1: \"get_information(relation='Total', tail_entity='1')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "does each congressman have a party listed?": "## Target type: {Yes/No}\n## Query:\nStep1: Find all the row_number \nQuery1: \"get_information(relation='row_number')\"\nStep2: For each output_of_query1, check if output_of_query1 has a Party listed\nQuery2: \"exists(relation='Party', tail_entity='output_of_query1')\"",
    "what chart position did the single with david bowie reach in the us?": "None",
    "who is at the top?": "None",
    "who had the most points scored for the 191617 illinois fighting illini men's basketball team?": "## Target type: {player}\n## Query:\nStep1: Find the entity named 191617 illinois fighting illini men's basketball team\nQuery1: \"get_information(relation='Player', tail_entity='191617 illinois fighting illini men's basketball team')\"\nStep2: Find the points of the output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity with the max points\nQuery3: \"get_information(relation='Points', tail_entity>='max')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which city is served by the most full-power stations?": "None",
    "in what season did they finish in first place?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Place is first place\nQuery1: \"get_information(relation='Place', tail_entity='first place')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "which driver did the least number of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which institution has the most enrollment?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of Enrollment\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Enrollment\nQuery3: \"get_information(relation='Enrollment', tail_entity='output_of_query2')\"\nStep4: Find the institution of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "taylor kelly is shorter than 6' 3\", which other player is also shorter than 6' 3\"?": "None",
    "which nation is before peru": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Peru\nQuery1: \"get_information(relation='Nation', tail_entity='Peru')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "was mtv used more than mtv india?": "## Target type: {yes or no}\n## Query:\nStep1: Find the entity named MTV\nQuery1: \"get_information(relation='Show', tail_entity='MTV')\"\nStep2: Find the entity named MTV India\nQuery2: \"get_information(relation='Show', tail_entity='MTV India')\"\nStep3: Count the occurrences of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Count the occurrences of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"if(output_of_query3 > output_of_query4, 'yes', 'no')\"",
    "who released the most songs?": "None",
    "what is the most we scored in a single game?": "None",
    "what is the number of democratic gains listed?": "None",
    "how many subjects are there?": "None",
    "what's the number of people who attended the oregon state game?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity in the Opponent with the relation of Oregon State\nQuery1: \"get_information(relation='Opponent#', tail_entity='Oregon State')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "where were the championships held before the 1962 prague championships?": "## Target type: {location}\n## Query:\nStep1: Find the entity named 1962 Prague Championships\nQuery1: \"get_information(relation='Year', tail_entity='1962')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "which rider finished first?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Pos is '1'\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "which is the only rider with number 6 grid on the chart": "## Target type: {rider}\n## Query:\nStep1: Find the entity with the relation of Grid being 6\nQuery1: \"get_information(relation='Grid', tail_entity='6')\"\nStep2: Find the rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "which rider scored the least amount of points?": "None",
    "what are the number of times the venue was located in el salvador?": "None",
    "how many times was the venue in greece?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Venue is in Greece\nQuery1: \"get_information(relation='Venue', tail_entity='Greece')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times is the venue located in brazil?": "None",
    "how many countries are represented as venues?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity named Venue\nQuery1: \"get_information(relation='Venue')\"\nStep2: Calculate the count of unique values in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of times the competition was held at the semple stadium venue?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Venue is Semple Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Semple Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many people can attend a game in holon city arena?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity in Home city that is Holon\nQuery1: \"get_information(relation='Home city', tail_entity='Holon')\"\nStep2: Find the Capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"",
    "how many times was helsinki olympic stadium the venue?": "None",
    "how many venues had a capacity of at least 10,000?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose capacity is at least 10,000\nQuery1: \"get_information(relation='Capacity', tail_entity>='10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the last venue on this chart?": "## Target type: {venue}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many total non-fatal attacks by wolves have been recorded?": "## Target type: {number}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "does the tour take diesel or gas?": "## Target type: {fuel type}\n## Query:\nStep1: Find the entity named Tour\nQuery1: \"get_information(relation='Model', tail_entity='Tour')\"\nStep2: Find the Fuel of output_of_query1\nQuery2: \"get_information(relation='Fuel', head_entity='output_of_query1')\"",
    "how many consecutive weeks did the the gators win until the had their first lost in the 2010 season?": "None",
    "what is the number of employees who work for pgnig sa?": "## Target type: {number of employees}\n## Query:\nStep1: Find the entity named PGNiG SA\nQuery1: \"get_information(relation='Name of concern', tail_entity='PGNiG SA')\"\nStep2: Find the employees of output_of_query1\nQuery2: \"get_information(relation='Employees', head_entity='output_of_query1')\"",
    "what award was won previously just before the medaglia pontificia anno xiii was awarded?": "None",
    "how many wins did texas tech have in the regular season of 1993?": "None",
    "the 1987 syracuse orangemen football team scored a victory with a win of 35 points during a game held at the carrier dome in syracuse, ny on september 5th against maryland; they scored exactly the same number of winning points as on that date during a match against virginia tech just a few weeks later; when did that second match occur?": "## Target type: {date}\n## Query:\nStep1: Find the entity that is the match against Virginia Tech\nQuery1: \"get_information(relation='Opponent#', tail_entity='Virginia Tech')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Get the winning points of output_of_query2\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Find the entity that is the match against Maryland\nQuery4: \"get_information(relation='Opponent#', tail_entity='Maryland')\"\nStep5: Find the date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"\nStep6: Find the date of output_of_query3\nQuery6: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which team has the most third place wins in the speedway junior world championship between 2005 and 2012?": "None",
    "how many ships were laid down in september?": "None",
    "how many ties occurred in the second round?": "None",
    "total number of players drafted in round 1": "None",
    "what were the total number of players selected in the second round?": "## Target type: {number}\n## Query:\nStep1: Find the total number of players selected in the second round\nQuery1: \"get_information(relation='Round', tail_entity='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was the first success?": "## Target type: {year}\n## Query:\nStep1: Find the entity with relation of Mission result is \"Success\"\nQuery1: \"get_information(relation='Mission result', tail_entity='Success')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Launch date of output_of_query3\nQuery4: \"get_information(relation='Launch date', head_entity='output_of_query3')\"\nStep5: Extract the year from output_of_query4\nQuery5: \"extract_year(date='output_of_query4')\"",
    "how many friendly matches were in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the competitions in the table\nQuery1: \"get_information(relation='Competition')\"\nStep2: Find the friendly matches in output_of_query1\nQuery2: \"get_information(relation='Competition', tail_entity='Friendly match')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of seasons covered in the table?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years in does the table cover?": "None",
    "how long is the bit rate number for gold radio service?": "None",
    "what is the number of tracks under one minute in length?": "None",
    "what is the number of halfwidth are there?": "None",
    "how long is the diagonal size of a 1/10\" sensor?": "None",
    "what was the length of the shortest track?": "## Target type: {time}\n## Query:\nStep1: Find the length of all tracks\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the min length from output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "how many lasted at least 6 minutes?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Time that lasted at least 6 minutes\nQuery1: \"get_information(relation='Time', tail_entity>='6:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years of statistics are listed in chart?": "## Target type: {number}\n## Query:\nStep1: Find the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which route had plain stage terrain and was used on the 27th of june?": "None",
    "which intersecting road comes before range road 273?": "## Target type: {intersecting road}\n## Query:\nStep1: Find the entity that Intersecting road is Range Road 273\nQuery1: \"get_information(relation='Intersecting road', tail_entity='Range Road 273')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Intersecting road of output_of_query4\nQuery5: \"get_information(relation='Intersecting road', head_entity='output_of_query4')\"",
    "how many routes were formed in 1926?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Formed\nQuery1: \"get_information(relation='Formed')\"\nStep2: Find the output_of_query1 that contains \"1926\"\nQuery2: \"get_information(relation='Formed', tail_entity='1926')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many consecutive elections did william f. kopp win?": "## Target type: {number of consecutive elections}\n## Query:\nStep1: Find the entity named William F. Kopp\nQuery1: \"get_information(relation='Winner', tail_entity='William F. Kopp')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the previous name of matt dallas?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Matt Dallas\nQuery1: \"get_information(relation='Name', tail_entity='Matt Dallas')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which month held the least amount of competitions?": "None",
    "what city is listed with the least time?": "None",
    "what number of years has the most favourite movie award been given?": "None",
    "who had the largest win percentage?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Win %\nQuery1: \"get_information(relation='Win %')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Win %\nQuery3: \"get_information(relation='Win %', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what school has 3 football classes but only has 638 student enrollment?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Football class as 3\nQuery1: \"get_information(relation='Football class', tail_entity='3')\"\nStep2: Find the entity with the relation of Enrollment as 638\nQuery2: \"get_information(relation='Enrollment', tail_entity='638')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the school of output_of_query3\nQuery4: \"get_information(relation='School', head_entity='output_of_query3')\"",
    "the most points were scored by which player?": "None",
    "how long did sun caiyun hold her record position for pole vaulting?": "None",
    "what group/party holds the largest number of second duma seats?": "None",
    "what was the tallest building in canada after the toronto-dominion centre?": "None",
    "what was the number of aggregate goals in the poli ejido/villarreal series?": "None",
    "how many locations were used at least twice?": "None",
    "how many are in beijing's urban area?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Beijing\nQuery1: \"get_information(relation='Chinese', tail_entity='\u5317\u4eac')\"\nStep2: Find the urban area of output_of_query1\nQuery2: \"get_information(relation='Urban Area', head_entity='output_of_query1')\"",
    "what is the number of losses they have against france?": "## Target type: {number of losses}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Against', tail_entity='France')\"\nStep2: Find the losses of output_of_query1\nQuery2: \"get_information(relation='Lost', head_entity='output_of_query1')\"",
    "what are the total of super chinese games released?": "None",
    "how many total medals did china, japan, and south korea collect?": "None",
    "what is the only series listed in 2007-2008?": "## Target type: {series}\n## Query:\nStep1: Find the entity with the relation of Season being 2007-2008\nQuery1: \"get_information(relation='Season', tail_entity='2007-2008')\"\nStep2: Get the entity with the relation of Series of output_of_query1\nQuery2: \"get_information(relation='Series', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Check if output_of_query3 equals to 1\nQuery4: \"check_equal(value1='output_of_query3', value2=1)\"",
    "at which location was there only one elderly casualty?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Elderly\nQuery1: \"get_information(relation='Elderly')\"\nStep2: Find the entity with Elderly equals to 1\nQuery2: \"get_information(relation='Elderly', tail_entity='1')\"\nStep3: Find the location of output_of_query2\nQuery3: \"get_information(relation='Place', head_entity='output_of_query2')\"",
    "what is the last tv show he was in the in 90's?": "None",
    "what year was first time to win an event": "None",
    "how many silver medals did venezuela win?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how many named defenders played in 1988?": "None",
    "how many finalist were in season af3?": "None",
    "how many broadcasters performed at least twice?": "None",
    "what is the total number of publications?": "## Target type: {number}\n## Query:\nStep1: Find the row_number for all entities\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many skip positions has this curler played?": "None",
    "since 1886 how many austevoll mayors have had maritime related occupations?": "None",
    "what is the acreage difference between madingley wood and hayley wood?": "None",
    "which age range had over 45.6% catholic?": "None",
    "in which venue did he last compete in?": "## Target type: {venue}\n## Query:\nStep1: Find the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many times did morris win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Morris\nQuery1: \"get_information(relation='Win', tail_entity='Morris')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of people enrolled at the college of mount st. joseph?": "## Target type: {total number of people enrolled}\n## Query:\nStep1: Find the entity that is College of Mount St. Joseph\nQuery1: \"get_information(relation='Institution', tail_entity='College of Mount St. Joseph')\"\nStep2: Find the enrollment of output_of_query1\nQuery2: \"get_information(relation='Enrollment', head_entity='output_of_query1')\"",
    "which couple was the chumps the same amount of times as chantelle and steve?": "## Target type: {couple}\n## Query:\nStep1: Find the couple named Chantelle and Steve\nQuery1: \"get_information(relation='3rd Couple', tail_entity='Chantelle and Steve')\"\nStep2: Find the chumps of output_of_query1\nQuery2: \"get_information(relation='Chumps', head_entity='output_of_query1')\"\nStep3: Find the couple named Brad and Dale\nQuery3: \"get_information(relation='Winning Couple', tail_entity='Brad and Dale')\"\nStep4: Find the chumps of output_of_query3\nQuery4: \"get_information(relation='Chumps', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what nation was ranked first in total number of gold medals?": "## Target type: {'Nation'}\n## Query:\nStep1: Find the entity with the relation of Rank and value of 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "the team placed 1st in 1992/93. how did they place the previous year?": "## Target type: {Place}\n## Query:\nStep1: Find the entity with the relation of Season is 1992/93\nQuery1: \"get_information(relation='Season', tail_entity='1992/93')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "name the only team they had a losing record against.": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Lost\nQuery1: \"get_information(relation='Lost')\"\nStep2: Get the unique output_of_query1\nQuery2: \"unique(set='output_of_query1')\" \nStep3: Get the entity with the unique Lost\nQuery3: \"get_information(relation='Lost', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "which symbol uses a t-shape not as big as the sub post office?": "None",
    "who was the only person to be inducted for wrestling and managing?": "None",
    "which is a civil parish, aintree village or maghull?": "None",
    "who is the only medal winner of 1985?": "## Target type: {'Medal'}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year', tail_entity='1985')\"\nStep2: Find the medal winners of output_of_query1\nQuery2: \"get_information(relation='Medal', head_entity='output_of_query1')\"",
    "what is the current total number of seats in the federal parliament?": "None",
    "what is the rank number of stefan shalamanov in the slalom event": "None",
    "what team is before team botswana in column team 1?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team 1 is Botswana\nQuery1: \"get_information(relation='Team 1', tail_entity='Botswana')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team 1 of output_of_query4\nQuery5: \"get_information(relation='Team 1', head_entity='output_of_query4')\"",
    "what is the total number of wins?": "None",
    "how many songs did babou sing during his time on the x factor?": "None",
    "what was the last released game for game boy advance?": "None",
    "what is the names of the shows in which sharad kelkar was not himself?": "None",
    "in what year did chivas have the same number of wins as in 2012?": "None",
    "which is the only airline that uses the callsign siberian sky?": "## Target type: {airline}\n## Query:\nStep1: Find the entity with the relation CALLSIGN that is 'siberian sky'\nQuery1: \"get_information(relation='CALLSIGN', tail_entity='siberian sky')\"\nStep2: Find the airline of output_of_query1\nQuery2: \"get_information(relation='AIRLINE', head_entity='output_of_query1')\"",
    "what is the total number of lesbians in the table?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Notes being \"L\".\nQuery1: \"get_information(relation='Notes', tail_entity='L')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years does the table cover in total?": "None",
    "how many total bisexual females are in the table?": "None",
    "how many years has does this table cover?": "None",
    "which country is haifa in?": "None",
    "the only player that started his career in 1965": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity whose career started in 1965\nQuery1: \"get_information(relation='Career', tail_entity='1965')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the total amount of runs?": "None",
    "in which years did they finish at least 3rd?": "None",
    "what was the next film this director made after parva?": "## Target type: {Film Title}\n## Query:\nStep1: Find the entity named Parva\nQuery1: \"get_information(relation='Film Title', tail_entity='Parva')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film Title of output_of_query4\nQuery5: \"get_information(relation='Film Title', head_entity='output_of_query4')\"",
    "how many awards did she win for muneca brava?": "None",
    "how many total medals did brazil received?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which country ranks the least?": "None",
    "which song came out first? dopeman or surrender.": "## Target type: {song}\n## Query:\nStep1: Find the entity named \"Dopeman\"\nQuery1: \"get_information(relation='Single', tail_entity='Dopeman')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Surrender\"\nQuery3: \"get_information(relation='Single', tail_entity='Surrender')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Compare the Year of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 < output_of_query4 then 'Dopeman' else 'Surrender'\"",
    "how many counties had at least 35% or more listed under the obama column?": "None",
    "how many votes did deodar receive?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity named Deodar\nQuery1: \"get_information(relation='Constituency', tail_entity='Deodar')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"",
    "how many languages spoken are in the single digits in all municipalities?": "None",
    "were there more or less people living in ottawa than in vancouver in 2011?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity named Ottawa\nQuery1: \"get_information(relation='Census subdivision', tail_entity='Ottawa')\"\nStep2: Find the Population 2011 of output_of_query1\nQuery2: \"get_information(relation='Population 2011', head_entity='output_of_query1')\"\nStep3: Find the entity named Vancouver\nQuery3: \"get_information(relation='Census subdivision', tail_entity='Vancouver')\"\nStep4: Find the Population 2011 of output_of_query3\nQuery4: \"get_information(relation='Population 2011', head_entity='output_of_query3')\"\nStep5: Compare the population of Ottawa and Vancouver in 2011\nQuery5: \"if output_of_query2 > output_of_query4: 'more' else: 'less'\"",
    "how much higher is the takapu road station than the wellington station?": "## Target type: {height difference}\n## Query:\nStep1: Find the entity that is Wellington Station\nQuery1: \"get_information(relation='Station', tail_entity='Wellington Station')\"\nStep2: Find the height above sea level of output_of_query1\nQuery2: \"get_information(relation='Height above sea level (m)', head_entity='output_of_query1')\"\nStep3: Find the entity that is Takapu Road Station\nQuery3: \"get_information(relation='Station', tail_entity='Takapu Road Station')\"\nStep4: Find the height above sea level of output_of_query3\nQuery4: \"get_information(relation='Height above sea level (m)', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(number1='output_of_query4', number2='output_of_query2')\"",
    "how many times has christel boeljon had a top-10 finish in the ladies european tour?": "None",
    "what is the most consecutive doubles tournaments she has won?": "None",
    "how many years are recorded in the chart?": "None",
    "how many directors are in the england films?": "None",
    "how many drivers scored below 175 points in the 2007 season?": "## Target type: {number}\n## Query:\nStep1: Find the entity named 2007\nQuery1: \"get_information(relation='Driver / Passenger', tail_entity='2007')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity with Points below 175\nQuery3: \"get_information(relation='Points', tail_entity<'175')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many total points were scored during the inaugural maggie dixon classic by all 4 teams?": "None",
    "was ernst gaedckens a platoon leader or a commander?": "None",
    "who is the only person from the uk in the top 3?": "None",
    "who was the only player from new zealand to be player of the year?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality as New Zealand\nQuery1: \"get_information(relation='Nationality', tail_entity='New Zealand')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which country is the only one to have only one record holder for pole vaulting?": "None",
    "who is the only person to rank from jamaica?": "## Target type: {person}\n## Query:\nStep1: Find the entity with the relation of Nationality as Jamaica\nQuery1: \"get_information(relation='Nationality', tail_entity='Jamaica')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Rank as output_of_query2\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the person of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which athlete had the fastest time?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Time (hand)\nQuery1: \"get_information(relation='Time (hand)')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min time\nQuery3: \"get_information(relation='Time (hand)', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many number of 1 acts were there?": "## Target type: {number of acts}\n## Query:\nStep1: Find the entity in Sub\u00addivisions that has the value \"1 act\"\nQuery1: \"get_information(relation='Sub\u00addivisions', tail_entity='1 act')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the first term year represented in the chart?": "None",
    "how many were in the first tier?": "## Target type: {number}\n## Query:\nStep1: Find the tier division named \"First\"\nQuery1: \"get_information(relation='Tier', tail_entity='First')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many elements have data that is below the 25th?": "None",
    "how many partial members will occur before the first annular?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Annular\"\nQuery1: \"get_information(relation='Type', tail_entity='Annular')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities whose Type is \"Partial\" and row_number is smaller than output_of_query2\nQuery3: \"get_information(relation='Type', tail_entity='Partial', key='row_number', value<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "are there at least 13 different components on the chart?": "## Target type: {boolean}\n## Query:\nStep1: Find all the distinct components on the chart\nQuery1: \"get_information(relation='Component')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count is at least 13\nQuery3: \"compare(value='output_of_query2', operator='>=', threshold='13')\"",
    "in 2005, how many divisions had at least a population of at least 15,000?": "## Target type: {number}\n## Query:\nStep1: Find the population in 2005 of divisions\nQuery1: \"get_information(relation='Population (2005)')\"\nStep2: Find the divisions with population at least 15,000\nQuery2: \"get_information(relation='Population (2005)', tail_entity>='15000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many religious groups have a leteracy rate of 70% at most?": "None",
    "which driver had the slowest time in finishing this race?": "None",
    "what type of car was driven by the person in first?": "## Target type: {car}\n## Query:\nStep1: Find the person in first place\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the car driven by output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"",
    "which schools are scheduled consecutively?": "None",
    "how many episodes had both an original air date and an english air date?": "None",
    "how many episodes were unaired in u.s?": "## Target type: {number}\n## Query:\nStep1: Find the Original Air date entity that is Unaired in U.S.\nQuery1: \"get_information(relation='Original Air date', tail_entity='Unaired in U.S')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many shows were there in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the shows in the year 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many stations opened before 1926?": "None",
    "what was the date of the game played before august 10 2004.": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is August 10, 2004\nQuery1: \"get_information(relation='Date', tail_entity='August 10, 2004')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "who transferred before 1 august 2001?": "## Target type: {name}\n## Query:\nStep1: Find the entities with the relation of Date that is before 1 August 2001\nQuery1: \"get_information(relation='Date', tail_entity<'1 August 2001')\"\nStep2: Find the names of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "on how many dates was the outcome the same as on 1 august 2011": "None",
    "when was a title aired previous to july 5, 2007?": "## Target type: {'Original air date'}\n## Query:\nStep1: Find the entity that Original air date is July 5, 2007\nQuery1: \"get_information(relation='Original air date', tail_entity='July 5, 2007')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Original air date of output_of_query4\nQuery5: \"get_information(relation='Original air date', head_entity='output_of_query4')\"",
    "the date previous to june 14th 1993": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is June 14th, 1993\nQuery1: \"get_information(relation='Date', tail_entity='June 14th 1993')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "were there more n31 or e34 ordered?": "## Target type: {'Order'}\n## Query:\nStep1: Find the entity that Order is N31\nQuery1: \"get_information(relation='Order', tail_entity='N31')\"\nStep2: Find the Quantity of output_of_query1\nQuery2: \"get_information(relation='Quantity', head_entity='output_of_query1')\"\nStep3: Find the entity that Order is E34\nQuery3: \"get_information(relation='Order', tail_entity='E34')\"\nStep4: Find the Quantity of output_of_query3\nQuery4: \"get_information(relation='Quantity', head_entity='output_of_query3')\"\nStep5: Compare the quantities of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "number of cylinders the standard 8 have": "## Target type: {number of cylinders}\n## Query:\nStep1: Find the entity named Standard 8\nQuery1: \"get_information(relation='Typ', tail_entity='Standard 8')\"\nStep2: Find the number of cylinders of output_of_query1\nQuery2: \"get_information(relation='Cylinders', head_entity='output_of_query1')\"",
    "how many cars in a unit will the en71 accommodate?": "None",
    "which parameter has the most number of doors per car per side?": "None",
    "which is the only driver whose vehicle used a brm 202 v12 engine?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity whose engine is BRM 202 V12\nQuery1: \"get_information(relation='Engine', tail_entity='BRM 202 V12')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "who is the only country to win only golds?": "None",
    "what is the total number of districts of lima?": "None",
    "which has the least number of people served, black jack or jefferson city?": "## Target type: {city/county}\n## Query:\nStep1: Find the entity named Black Jack\nQuery1: \"get_information(relation='City/county', tail_entity='Black Jack')\"\nStep2: Find the population served of output_of_query1\nQuery2: \"get_information(relation='Population served', head_entity='output_of_query1')\"\nStep3: Find the entity named Jefferson City\nQuery3: \"get_information(relation='City/county', tail_entity='Jefferson City')\"\nStep4: Find the population served of output_of_query3\nQuery4: \"get_information(relation='Population served', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4, get the entity with the least population served\nQuery5: \"if(output_of_query2 < output_of_query4, output_of_query1, output_of_query3)\"",
    "how many have a most recent position angle of at least 200?": "None",
    "what was kelkar's last role?": "None",
    "which municipality has the most number of people who reside in it?": "None",
    "name a constituency that only has 139,110 electorates.": "## Target type: {constituency name}\n## Query:\nStep1: Find the entity with the relation of Number of electorates (2009) equal to 139,110\nQuery1: \"get_information(relation='Number of electorates (2009)', tail_entity='139,110')\"\nStep2: Get the constituency name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what was the difference in points in the game on october 30th against bury?": "## Target type: {difference in points}\n## Query:\nStep1: Find the game against Bury on October 30th\nQuery1: \"get_information(relation='Opponent', tail_entity='Bury', key='Date', value='October 30th')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Calculate the difference in points\nQuery3: \"Calculator(function='set_difference', set1='points_home', set2='points_away')\"",
    "on october 17th, what was the difference of the game's scores?": "## Target type: {score difference}\n## Query:\nStep1: Find the game on October 17th\nQuery1: \"get_information(relation='Date', tail_entity='October 17')\"\nStep2: Find the scores of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Calculate the difference of the scores in output_of_query2\nQuery3: \"calculate_difference(set='output_of_query2')\"",
    "what was the difference in the score in the 1976 game?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity with the relation of Date 1976\nQuery1: \"get_information(relation='Date', tail_entity='1976')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate the score difference of output_of_query2\nQuery3: \"calculate_score_difference(set='output_of_query2')\"",
    "what was the difference, in time, between the first place competitor and the third place competitor?": "None",
    "how many times has the team finished 9th?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Place equal to '9th'\nQuery1: \"get_information(relation='Place', tail_entity='9th')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of services broadcast with a mono lsf audio channel?": "## Target type: {number}\n## Query:\nStep1: Find the services with Audio channels of Mono LSF\nQuery1: \"get_information(relation='Audio channels', tail_entity='Mono LSF')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who played the most consecutive home games": "## Target type: {team}\n## Query:\nStep1: Find the entity that played the most consecutive home games\nQuery1: \"get_information(relation='Home', tail_entity>='most')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home', head_entity='output_of_query1')\"",
    "in what year did barton appear in the most films?": "## Target type: {Year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the number of nations that participated in the 1996 summer olympics?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity named \"1996 Summer Olympics\"\nQuery1: \"get_information(relation='Games', tail_entity='1996 Summer Olympics')\"\nStep2: Find the Participants of output_of_query1\nQuery2: \"get_information(relation='Participants', head_entity='output_of_query1')\"\nStep3: Find the Nations of output_of_query1\nQuery3: \"get_information(relation='Nations', head_entity='output_of_query1')\"",
    "what model is listed next after tr-2?": "## Target type: {model}\n## Query:\nStep1: Find the entity named TR-2\nQuery1: \"get_information(relation='Model name', tail_entity='TR-2')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model name of output_of_query4\nQuery5: \"get_information(relation='Model name', head_entity='output_of_query4')\"",
    "how many honda motorcycles completed the race?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Manufacturer as Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the male/female winners in the 1996 budapest half marathon.": "None",
    "what is the difference in height between garreth lodge and thomas pearson?": "None",
    "what persian unit is more than a league?": "None",
    "which other athlete with the same record 4.08m (13ft. 4 1/2in": "## Target type: {athlete}\n## Query:\nStep1: Find the record of 4.08m (13ft. 4 1/2in)\nQuery1: \"get_information(relation='Record', tail_entity='4.08m (13ft. 4 1/2in)')\"\nStep2: Find the athlete with the same record as output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"\nStep3: Exclude the output_of_query2 (Yelena Isinbayeva)\nQuery3: \"set_difference(set1='output_of_query2', set2='Yelena Isinbayeva')\"",
    "which election was the first to reach over 40% of the popular vote?": "## Target type: {election}\n## Query:\nStep1: Find the entity whose % of popular votes is larger than 40\nQuery1: \"get_information(relation='% of popular votes', tail_entity>'40')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the election of output_of_query4\nQuery5: \"get_information(relation='Election', head_entity='output_of_query4')\"",
    "what is the difference between the average for episode 1 and the average for episode 13?": "None",
    "how many months had more than 55 favor votes?": "## Target type: {number of months}\n## Query:\nStep1: Find the months with more than 55 favor votes\nQuery1: \"get_information(relation='Favor', tail_entity>'55')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the episode next to nypd blue": "None",
    "which circuit has the lest amount of screens?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Screens\nQuery1: \"get_information(relation='Screens')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Screens\nQuery3: \"get_information(relation='Screens', tail_entity='output_of_query2')\"\nStep4: Find the circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "city in the same parish of moncton": "None",
    "what was the first year in which mike rhodin was the host?": "None",
    "how man consecutive events took place in beijing?": "## Target type: {number of events}\n## Query:\nStep1: Find the entity named Beijing\nQuery1: \"get_information(relation='Location', tail_entity='Beijing')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "name the first country on the table?": "## Target type: {country}\n## Query:\nStep1: Find the entity in row_number that is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "name then number shot for the 80 yard in the new national round.": "None",
    "which model has the highest 'length of use' to 'last of whiteness' ratio?": "None",
    "how many more points did paul tracy earn during the race than max papis?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Paul Tracy\nQuery1: \"get_information(relation='Driver', tail_entity='Paul Tracy')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Max Papis\nQuery3: \"get_information(relation='Driver', tail_entity='Max Papis')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which artist has the most concerts?": "None",
    "how many managerial changes were there in 2009?": "None",
    "what belt would a practitioner receive next after completing the 10th kyu?": "## Target type: {belt}\n## Query:\nStep1: Find the entity with the relation of Rank and value of 10th kyu\nQuery1: \"get_information(relation='Rank', value='10th ky\u016b')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the belt of output_of_query4\nQuery5: \"get_information(relation='Belt Alternate', head_entity='output_of_query4')\"",
    "what was the total listed for camden county?": "## Target type: {total}\n## Query:\nStep1: Find the entity named Camden County\nQuery1: \"get_information(relation='County', tail_entity='Camden County')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "did the two competitors from hungary get more or less combined points than the two competitors from argentina?": "## Target type: {'\u03a3 Points'}\n## Query:\nStep1: Find the competitors from Hungary\nQuery1: \"get_information(relation='Player', tail_entity='Hungary')\"\nStep2: Find the \u03a3 Points of output_of_query1\nQuery2: \"get_information(relation='\u03a3 Points', head_entity='output_of_query1')\"\nStep3: Calculate the total points of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"\nStep4: Find the competitors from Argentina\nQuery4: \"get_information(relation='Player', tail_entity='Argentina')\"\nStep5: Find the \u03a3 Points of output_of_query4\nQuery5: \"get_information(relation='\u03a3 Points', head_entity='output_of_query4')\"\nStep6: Calculate the total points of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"\nStep7: Compare the total points of output_of_query3 and output_of_query6\nQuery7: \"compare(value1='output_of_query3', value2='output_of_query6')\"",
    "the total number of total vote percentage": "None",
    "which team scored the most goals in the apertura 2008 standings?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Goals Scored\nQuery1: \"get_information(relation='Goals Scored')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max goals scored\nQuery3: \"get_information(relation='Goals Scored', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how do you say 'i love you' in afrikaans?": "None",
    "which county is listed above calciana?": "None",
    "after tom burke was elected, what was the next year where another tom would be elected?": "None",
    "who had the most goals against them self for the year?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Goals Against\nQuery1: \"get_information(relation='Goals Against')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals Against\nQuery3: \"get_information(relation='Goals Against', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who got more votes? nationals sa or independent?": "## Target type: {Party}\n## Query:\nStep1: Find the entity named Nationals SA\nQuery1: \"get_information(relation='Party', tail_entity='Nationals SA')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity named Independent\nQuery3: \"get_information(relation='Party', tail_entity='Independent')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Compare the votes between output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the last operating quarry that connects to the rhiwbach tramway?": "None",
    "what is the difference in rank between nancy pelosi and john boehner?": "## Target type: {difference in rank}\n## Query:\nStep1: Find the entity named Nancy Pelosi\nQuery1: \"get_information(relation='Representative', tail_entity='Nancy Pelosi')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named John Boehner\nQuery3: \"get_information(relation='Representative', tail_entity='John Boehner')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "when was the last time kansas state lost with 0 points in manhattan?": "None",
    "how many locomotives are on display at the narrow gauge railway museum?": "None",
    "each game took place in what month.": "## Target type: {month}\n## Query:\nStep1: Find the entity with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Extract the month from output_of_query1\nQuery2: \"extract_month(date='output_of_query1')\"",
    "how many games did the tigers win?": "None",
    "how many artists had, at most, 40 points?": "None",
    "how many players had more than 2000 new points?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with New points greater than 2000\nQuery1: \"get_information(relation='New points', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many tournaments were in 1967?": "## Target type: {number of tournaments}\n## Query:\nStep1: Find the entity that Year is 1967\nQuery1: \"get_information(relation='Date', tail_entity='1967')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times were goals scored in the friendly competition?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Competition is Friendly\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "is almer\u00eda or c\u00f3rdoba's density 72.4/km2?": "None",
    "chesterfield is listed with a score of 1-0, but what team is listed with a score of 2-2?": "None",
    "what was the point difference of the october 10th game?": "## Target type: {point difference}\n## Query:\nStep1: Find the entity that Date is October 10th\nQuery1: \"get_information(relation='Date', tail_entity='October 10th')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Calculate the point difference of output_of_query2\nQuery3: \"Calculator(function='subtract', operand1='point1', operand2='point2', variable_list='output_of_query2')\"",
    "what was the first time in the season the ravens were held to under ten points?": "None",
    "how many episodes had a rank of more than 3?": "None",
    "what is the total number of components on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the component entities\nQuery1: \"get_information(relation='Component')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average number of teams that had a mugen-honda engine?": "None",
    "what is the number of games won for the 2009 utah utes football team?": "None",
    "how many abbreviations are after tarmo?": "None",
    "which place had the largest population?": "## Target type: {place}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "what is the number of athletes from the us?": "None",
    "name a senator who was elected before brown.": "## Target type: {name}\n## Query:\nStep1: Find the entity named Brown\nQuery1: \"get_information(relation='Name', tail_entity='Brown')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many countries had two athletes representing their country?": "None",
    "how long was the axwell remix version?": "## Target type: {length}\n## Query:\nStep1: Find the entity with the relation of Version as \"Axwell remix\"\nQuery1: \"get_information(relation='Version', tail_entity='Axwell remix')\"\nStep2: Find the Length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "which opponent was next after jackson state?": "None",
    "how many secretaries of state had the last name bouchard?": "None",
    "which city had the least amount of surface area?": "None",
    "what city has the most barangays?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of No. of Barangays\nQuery1: \"get_information(relation='No. of Barangays')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max number of Barangays\nQuery3: \"get_information(relation='No. of Barangays', tail_entity='output_of_query2')\"\nStep4: Find the City/Municipality of output_of_query3\nQuery4: \"get_information(relation='City/Municipality', head_entity='output_of_query3')\"",
    "is 35,000 above or below the amount of people that attended the march 11 1922 game?": "## Target type: {'above' or 'below'}\n## Query:\nStep1: Find the game on March 11, 1922\nQuery1: \"get_information(relation='Date', tail_entity='March 11, 1922')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Check if 35,000 is above or below the attendance of output_of_query2\nQuery3: \"compare(num1='35000', num2='output_of_query2')\"",
    "what was the average regular season place from years 2009-2012?": "None",
    "total number of medals earned by the 8th place finishers": "None",
    "what was the only battle in gonzales?": "## Target type: {'Battle'}\n## Query:\nStep1: Find the entity named Gonzales\nQuery1: \"get_information(relation='Location', tail_entity='Gonzales')\"\nStep2: Find the Battle that occurred in output_of_query1\nQuery2: \"get_information(relation='Battle', head_entity='output_of_query1')\"",
    "what is the difference of winning score between the san antonio texas open and the dallas centennial open?": "None",
    "as of october 25, 2005, what percentage of voters were unaffiliated?": "## Target type: {percentage}\n## Query:\nStep1: Find the entity that Party is Unaffiliated\nQuery1: \"get_information(relation='Party', tail_entity='Unaffiliated')\"\nStep2: Find the Percentage of output_of_query1\nQuery2: \"get_information(relation='Percentage', head_entity='output_of_query1')\"",
    "what is the difference in attendees for maryland on february 10, 1979 to february 11, 1978?": "## Target type: {difference in attendees}\n## Query:\nStep1: Find the entity that has Date of February 10, 1979\nQuery1: \"get_information(relation='Date', tail_entity='February 10, 1979')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that has Date of February 11, 1978\nQuery3: \"get_information(relation='Date', tail_entity='February 11, 1978')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "how many players have a height of at least 1.90?": "None",
    "what is the difference between the sales of \"think twice\" and \"back for good\"?": "None",
    "how many internationals has the sahrawi national football team won?": "None",
    "greg moore was from the same team as what other 9th place driver?": "None",
    "list each of the countries that have more than 4 in gold medals and also more than 3 in silver medals.": "## Target type: {countries}\n## Query:\nStep1: Find the countries with more than 4 gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>'4')\"\nStep2: Find the countries with more than 3 silver medals\nQuery2: \"get_information(relation='Silver', tail_entity>'3')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "which game had a bigger crowd, week 4 or week 9?": "## Target type: {week}\n## Query:\nStep1: Find the attendance of games in week 4\nQuery1: \"get_information(relation='Week', tail_entity='4')\"\nStep2: Find the attendance of games in week 9\nQuery2: \"get_information(relation='Week', tail_entity='9')\"\nStep3: Find the maximum attendance in the output_of_query1\nQuery3: \"max(set='output_of_query1')\"\nStep4: Find the maximum attendance in the output_of_query2\nQuery4: \"max(set='output_of_query2')\"\nStep5: Compare the attendance of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "how many were attendance at the lotusphere conference in orlando in 1993?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Location and Year both matching 'Orlando' and '1993'\nQuery1: \"get_information(relation='Location', tail_entity='Orlando', key='Year', value='1993')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many tribunals had more than 5 executions in persona?": "None",
    "what is the radio with the most mhz?": "None",
    "how many of the listed individuals were men?": "## Target type: {number of individuals}\n## Query:\nStep1: Find all the individuals\nQuery1: \"get_information(relation='Name')\"\nStep2: Find the gender of output_of_query1\nQuery2: \"get_information(relation='Gender', head_entity='output_of_query1')\"\nStep3: Find the individuals with gender equals to 'men'\nQuery3: \"get_information(relation='Name', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the next movie after kurradu?": "## Target type: {movie}\n## Query:\nStep1: Find the entity named Kurradu\nQuery1: \"get_information(relation='Film', tail_entity='Kurradu')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what is the number of second tops listed in the column header?": "None",
    "who has held the most records?": "None",
    "what number is previous to 13 february 1918 @ 0915 hours?": "None",
    "what is the last date?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "how many total games took place in 1999?": "None",
    "which university had the most years won?": "None",
    "after malaysia - which country had the most champions between 2001 and 2010?": "None",
    "how many players from wisconsin were picked in the first round?": "## Target type: {number}\n## Query:\nStep1: Find the players from Wisconsin\nQuery1: \"get_information(relation='College', tail_entity='Wisconsin')\"\nStep2: Find the players picked in the first round\nQuery2: \"get_information(relation='Rnd.', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many goalies drafted?": "None",
    "is the trainer 1 a cable car or a surface lift?": "## Target type: {type}\n## Query:\nStep1: Find the entity named Trainer 1\nQuery1: \"get_information(relation='Name', tail_entity='Trainer 1')\"\nStep2: Get the type of output_of_query1\nQuery2: \"get_information(relation='type', head_entity='output_of_query1')\"",
    "what show was he in before running man": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Running Man\nQuery1: \"get_information(relation='Title', tail_entity='Running Man')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what title had the longest run time?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the number of times belgrade is listed as the city?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Belgrade\nQuery1: \"get_information(relation='City', tail_entity='Belgrade')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many priests did not begin service until after 1880?": "None",
    "which team won the most games in london after 2005?": "None",
    "who has been the flag bearer for georgia the most from 1998-2012?": "## Target type: {'Flag bearer'}\n## Query:\nStep1: Find the entity named Georgia\nQuery1: \"get_information(relation='Flag bearer', head_entity='Georgia')\"\nStep2: Find the entity with the highest occurrence in output_of_query1 from 1998 to 2012\nQuery2: \"get_information(relation='Flag bearer', tail_entity>='most', key='Event Year', value>='1998', key='Event Year', value<='2012')\"",
    "who was the pilot of the mit monarch b?": "## Target type: {'Pilot'}\n## Query:\nStep1: Find the entity named MIT Monarch B\nQuery1: \"get_information(relation='Vehicle', tail_entity='MIT Monarch B')\"\nStep2: Find the pilot of output_of_query1\nQuery2: \"get_information(relation='Pilot', head_entity='output_of_query1')\"",
    "how many treaties had been introduced by 1986?": "## Target type: {number of treaties}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entities introduced by 1986\nQuery2: \"get_information(relation='Introduced', tail_entity<='1986')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long did it take for the international covenant on civil and political rights to be signed before it was ratified?": "None",
    "what is the name of the courthouse listed after federal building?": "None",
    "what was the only event that she participated in the vault?": "None",
    "in 2009, what were the total number of games played?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity in Tournament that is '2009'\nQuery1: \"get_information(relation='Tournament', tail_entity='2009')\"\nStep2: Find the games played of output_of_query1\nQuery2: \"get_information(relation='Games played', head_entity='output_of_query1')\"",
    "what cities are first canadian place and commerce court west": "## Target type: {city}\n## Query:\nStep1: Find the entity named First Canadian Place\nQuery1: \"get_information(relation='Building', tail_entity='First Canadian Place')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"\nStep3: Find the entity named Commerce Court West\nQuery3: \"get_information(relation='Building', tail_entity='Commerce Court West')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"",
    "whose spouse was hu jintao's? wang yeping, or liu yongqing?": "## Target type: {spouse}\n## Query:\nStep1: Find the entity named Hu Jintao\nQuery1: \"get_information(relation='Name', tail_entity='Hu Jintao')\"\nStep2: Find the spouse of output_of_query1\nQuery2: \"get_information(relation='spouse', tail_entity='output_of_query1')\"\nStep3: Check if Wang Yeping is in output_of_query2\nQuery3: \"is_in(set='output_of_query2', item='Wang Yeping')\"\nStep4: Check if Liu Yongqing is in output_of_query2\nQuery4: \"is_in(set='output_of_query2', item='Liu Yongqing')\"",
    "name one that has the same latitude as member number 12.": "None",
    "was the next game after august 31 home or away?": "## Target type: {'Venue'}\n## Query:\nStep1: Find the entity that is August 31\nQuery1: \"get_information(relation='Date', tail_entity='August 31')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "what are the number of times finland is listed as the nationality on this chart?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Nationality', tail_entity='Finland')\"\nStep2: Find the number of times output_of_query1 appears\nQuery2: \"count(set='output_of_query1')\"",
    "how many have a max speed of 20 but are only dual brakes?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Max speed as '20 mph (32 km/h)'\nQuery1: \"get_information(relation='Max speed', tail_entity='20 mph (32 km/h)')\"\nStep2: Find the entities with the relation of Brakes as 'dual'\nQuery2: \"get_information(relation='Brakes', tail_entity='dual')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many floors does the foshay tower have?": "## Target type: {number of floors}\n## Query:\nStep1: Find the entity named Foshay Tower\nQuery1: \"get_information(relation='Name', tail_entity='Foshay Tower')\"\nStep2: Find the floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "who was the first place driver?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Position being '1'\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what single did notorious b.i.g. release after \"victory\"?": "None",
    "in what year was the 3rd venue the same as 2011's 1st venue?": "None",
    "the 1987 syracuse orangemen football team scored their largest number of points in a game conducted on october 24th, 1987 at the carrier dome in syracuse, ny; who was the oposing team in that match?": "## Target type: {'Opponent#'}\n## Query:\nStep1: Find the game that matches the given criteria\nQuery1: \"get_information(relation='Date', tail_entity='October 24th, 1987')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the game with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent#', head_entity='output_of_query3')\"",
    "name a country listed other than norway?": "None",
    "how many american riders were present?": "None",
    "which is older, 68 west walk or leaden hall?": "## Target type: {place}\n## Query:\nStep1: Find the entity named 68 West Walk\nQuery1: \"get_information(relation='Name', tail_entity='68 West Walk')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep3: Find the entity named Leaden Hall\nQuery3: \"get_information(relation='Name', tail_entity='Leaden Hall')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"\nStep5: Compare the Dates of output_of_query2 and output_of_query4\nQuery5: \"comparator(a='output_of_query2', b='output_of_query4', operator='<')\"",
    "waht is the highest number of consecutive wins that west has won in a row?": "None",
    "how many games were scheduled between september 3rd and january 2nd?": "## Target type: {number of games}\n## Query:\nStep1: Find the games scheduled between September 3rd and January 2nd\nQuery1: \"get_information(relation='Date', key>='September 3rd', key<='January 2nd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "county has altoona and augusta?": "## Target type: {county}\n## Query:\nStep1: Find the entity named Altoona\nQuery1: \"get_information(relation='City', tail_entity='Altoona')\"\nStep2: Find the entity named Augusta\nQuery2: \"get_information(relation='City', tail_entity='Augusta')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the County(ies) of output_of_query3\nQuery4: \"get_information(relation='County(ies)', head_entity='output_of_query3')\"",
    "which team did liverpool play against?": "None",
    "who earned the most total points?": "None",
    "who was the only cuban to finish in the top eight?": "## Target type: {Swimmer}\n## Query:\nStep1: Find the entity with the relation of Country as Cuba\nQuery1: \"get_information(relation='Country', tail_entity='Cuba')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that row_number is output_of_query2 and Rank is '7'\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"",
    "what is the english american name that the most people have?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of English - 2001\nQuery1: \"get_information(relation='England - 2001')\"\nStep2: Find the entity that has the most occurrences in output_of_query1\nQuery2: \"most_common(set='output_of_query1')\" \nStep3: Find the Name of output_of_query2\nQuery3: \"get_information(relation='Name', head_entity='output_of_query2')\"",
    "who won the award after p-money won it in 2005?": "## Target type: {winner}\n## Query:\nStep1: Find the entity that Year is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the winner of output_of_query4\nQuery5: \"get_information(relation='Winner', head_entity='output_of_query4')\"",
    "how many events were won in malaysia?": "None",
    "name a city from the same country as bangalore.": "None",
    "was tht total population growth of amarican indians above or below that of native hawaiin or pacific islanders?": "## Target type: {above or below}\n## Query:\nStep1: Find the population growth of American Indians\nQuery1: \"get_information(relation='AIAN*', head_entity='Population growth')\"\nStep2: Find the population growth of Native Hawaiin or Pacific Islanders\nQuery2: \"get_information(relation='NHPI*', head_entity='Population growth')\"\nStep3: Compare the output_of_query1 and output_of_query2\nQuery3: \"if output_of_query1 > output_of_query2, return 'above', else return 'below'\"",
    "which has a larger aymara population, tortora or pocona municipalities?": "## Target type: {municipality}\n## Query:\nStep1: Find the entity named Totora Municipality\nQuery1: \"get_information(relation='Totora Municipality')\"\nStep2: Find the Aymara population of output_of_query1\nQuery2: \"get_information(relation='Aymara population', head_entity='output_of_query1')\"\nStep3: Find the entity named Pocona Municipality\nQuery3: \"get_information(relation='Pocona Municipality')\"\nStep4: Find the Aymara population of output_of_query3\nQuery4: \"get_information(relation='Aymara population', head_entity='output_of_query3')\"\nStep5: Compare the Aymara population of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='larger')\"",
    "what is the only season the club placed 5th?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Place being 5th.\nQuery1: \"get_information(relation='Place', tail_entity='5th')\"\nStep2: Get the season of output_of_query1.\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "which team was the first to win with a team captain?": "None",
    "which other player scored the same as the player from japan?": "None",
    "what are the number of pga winning golfers that zimbabwe has?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Country is Zimbabwe\nQuery1: \"get_information(relation='Country', tail_entity='Zimbabwe')\"\nStep2: Find the PGA of output_of_query1\nQuery2: \"get_information(relation='PGA', head_entity='output_of_query1')\"",
    "name a country that had two consecutive finishers.": "None",
    "which african country has the least champion golfers according to this table?": "None",
    "which year had the most titles released?": "## Target type: {year}\n## Query:\nStep1: Find all the years in the schema\nQuery1: \"get_information(relation='Release')\"\nStep2: Find the year with the most titles released\nQuery2: \"most(set='output_of_query1')\"",
    "who ranked first in the preliminary?": "## Target type: {diver}\n## Query:\nStep1: Find the entity with the relation of Preliminary\nQuery1: \"get_information(relation='Preliminary', tail_entity='first')\"\nStep2: Find the diver of output_of_query1\nQuery2: \"get_information(relation='Diver', head_entity='output_of_query1')\"",
    "what is the last type of dance listed?": "## Target type: {'Dance'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Dance of output_of_query3\nQuery4: \"get_information(relation='Dance', head_entity='output_of_query3')\"",
    "the drawwith the larges total": "## Target type: {draw}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the draw of output_of_query3\nQuery4: \"get_information(relation='Draw', head_entity='output_of_query3')\"",
    "how many times was carlow the runner-up?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Carlow\nQuery1: \"get_information(relation='Runners-up', tail_entity='Carlow')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "\"who scored the larger number of goals during the belgium game in 1951?\"": "None",
    "how many more points did kallithea score in the first leg of the second round of the 198485 greek cup than the second leg?": "None",
    "what were the number of goals scored by team a.d.isidro metapan?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named A.D. Isidro Metapan\nQuery1: \"get_information(relation='Team', tail_entity='A.D. Isidro Metapan')\"\nStep2: Find the goals scored of output_of_query1\nQuery2: \"get_information(relation='Goals\\nScored', head_entity='output_of_query1')\"",
    "what was the number of goals scored against san marino?": "None",
    "how many goals did gunter thiebaut score in the 2001/02 season?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Gunter Thiebaut\nQuery1: \"get_information(relation='Club', tail_entity='Gunter Thiebaut')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with the Season of 2001/02\nQuery3: \"get_information(relation='Season', tail_entity='2001/02')\"\nStep4: Find the Goals of output_of_query3\nQuery4: \"get_information(relation='Goals', head_entity='output_of_query3')\"",
    "what is the total number of all goals scored?": "None",
    "what was the total number of goals that was scored against romania in 2007?": "None",
    "what is the name of the next highest selling brand after opiren?": "None",
    "which is the difference between kw for allenheads and seaham": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Allenheads\nQuery1: \"get_information(relation='Transmitter', tail_entity='Allenheads')\"\nStep2: Find the kW of output_of_query1\nQuery2: \"get_information(relation='kW', head_entity='output_of_query1')\"\nStep3: Find the entity named Seaham\nQuery3: \"get_information(relation='Transmitter', tail_entity='Seaham')\"\nStep4: Find the kW of output_of_query3\nQuery4: \"get_information(relation='kW', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "which employer had the least number of employees?": "None",
    "total number of parties who lost seats in the argentine chamber of deputies in the legislative election of 1930": "None",
    "what is the number of times a boston red sox player has had two grand slams in one game?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Team as Boston Red Sox\nQuery1: \"get_information(relation='Team', tail_entity='Boston Red Sox')\"\nStep2: Find the entity with the relation of Player that belongs to output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which teams won the title at least twice?": "None",
    "what is the score in the top row?": "None",
    "what was the same problem that bernard collomb had as innes ireland?": "None",
    "which victor held at least six victories?": "None",
    "the least amount of females": "None",
    "what are the number of times super league appears under the top rugby league level column?": "None",
    "what are the number of times model 25 is listed on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Model 25\nQuery1: \"get_information(relation='Name', tail_entity='Model 25')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was the score in the 1st match between svendborg and goteborgs kvinnliga the same as the score in the secon match?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Svendborg\nQuery1: \"get_information(relation='Team #1', tail_entity='Svendborg')\"\nStep2: Find the entity named Goteborgs Kvinnliga\nQuery2: \"get_information(relation='Team #2', tail_entity='Goteborgs Kvinnliga')\"\nStep3: Find the score of the 1st match between output_of_query1 and output_of_query2\nQuery3: \"get_information(relation='1st match', head_entity1='output_of_query1', head_entity2='output_of_query2')\"\nStep4: Find the score of the 2nd match between output_of_query1 and output_of_query2\nQuery4: \"get_information(relation='2nd match', head_entity1='output_of_query1', head_entity2='output_of_query2')\"\nStep5: Check if output_of_query3 is the same as output_of_query4\nQuery5: \"equals(set1='output_of_query3', set2='output_of_query4')\"",
    "how many times has he been runner-up?": "## Target type: {number of times}\n## Query:\nStep1: Find the Outcome of Runner-up\nQuery1: \"get_information(relation='Outcome', tail_entity='Runner-up')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country had the highest number of runners-up?": "None",
    "what is the number of times player outcome was runner-up?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Outcome as Runner\u2013up\nQuery1: \"get_information(relation='Outcome', tail_entity='Runner\u2013up')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many runners-up were from the u.s.?": "None",
    "what is the number of runner ups in the chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Outcome as Runner-up\nQuery1: \"get_information(relation='Outcome', tail_entity='Runner-up')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years do not have a runner up?": "None",
    "according to the list, who has the most runners-up?": "None",
    "how many first place victories did the runner have?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position containing \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which player in the table has the most runners-up finishes?": "None",
    "how many times does m appear under the tyres column?": "None",
    "name the countries with the least amount if silver medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Silver\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which team(s) have the least amount of silver medals?": "## Target type: {team(s)}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Silver medals\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Find the teams of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "how many players placed 4th?": "None",
    "which players have at least 4 in the europa league?": "None",
    "how many players were in at least five seasons?": "None",
    "how many films were done before the 1950s?": "## Target type: {number}\n## Query:\nStep1: Find the films that were done before the 1950s\nQuery1: \"get_information(relation='Year', tail_entity<'1950')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "on what date did the first episode of the whole 19 yards air?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Episode is 'Caught In The Net'\nQuery1: \"get_information(relation='Episode', tail_entity='Caught In The Net')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number is 1\nQuery3: \"get_information(relation='row_number', tail_entity='1')\"\nStep4: Find the Airdate of output_of_query3\nQuery4: \"get_information(relation='Airdate', head_entity='output_of_query3')\"",
    "what were the number of episodes in the second season?": "None",
    "how many defedants were arrested in december of 1955?": "## Target type: {number}\n## Query:\nStep1: Find the defendants who were arrested in December 1955\nQuery1: \"get_information(relation='Arrested', value='December 1955')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many matches lasted at least 4 minutes?": "## Target type: {number}\n## Query:\nStep1: Find the matches with Time at least 4\nQuery1: \"get_information(relation='Time', tail_entity>='4')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations received at least two gold metals?": "None",
    "how many games were played at the meadowlands?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Meadowlands\nQuery1: \"get_information(relation='Game site', tail_entity='Meadowlands')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name one that ranked after man of steel.": "None",
    "if a man's nationality was from belgium, how many medals total has his country won?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Belgium\nQuery1: \"get_information(relation='Nation', tail_entity='Belgium')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the title of the next track after kreditz?": "None",
    "how many different opponents did baljic play?": "## Target type: {number}\n## Query:\nStep1: Find all the opponents that Baljic played against\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "ollie moran won in june 2007, who won the month after?": "None",
    "after rosenborg, which team has the most cup wins?": "None",
    "tell me the number of stations licensed in fort wayne.": "## Target type: {number}\n## Query:\nStep1: Find the entity whose City of license is Fort Wayne\nQuery1: \"get_information(relation='City of license', tail_entity='Fort Wayne')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "where did he win his last championship?": "None",
    "what is the difference, in years, between the founding of the heidelberg football club and the eltham football club?": "## Target type: {difference in years}\n## Query:\nStep1: Find the entity named Heidelberg Football Club\nQuery1: \"get_information(relation='Club', tail_entity='Heidelberg Football Club')\"\nStep2: Find the founding year of output_of_query1\nQuery2: \"get_information(relation='Founded', head_entity='output_of_query1')\"\nStep3: Find the entity named Eltham Football Club\nQuery3: \"get_information(relation='Club', tail_entity='Eltham Football Club')\"\nStep4: Find the founding year of output_of_query3\nQuery4: \"get_information(relation='Founded', head_entity='output_of_query3')\"\nStep5: Calculate the difference in years between output_of_query2 and output_of_query4\nQuery5: \"Calculator(function='subtract', operand1='output_of_query2', operand2='output_of_query4')\"",
    "in 1926 brazilian football,aside from the first place team, what other teams had winning records?": "None",
    "how many games were attended by at least 60,000 people?": "None",
    "what is the previous name after james goddard?": "None",
    "what was the total number of goals score in the sri lanka - malaysia game of march 24, 2007?": "None",
    "what operational date is next to zuse z3?": "None",
    "how many games have been won by only one point?": "None",
    "other then edi ann who else sang a song who's title had love in it?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Edi Ann\nQuery1: \"get_information(relation='Artist', tail_entity='Edi Ann')\"\nStep2: Find the song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"\nStep3: Find other artists who sang a song with the title containing 'love'\nQuery3: \"get_information(relation='Song', tail_entity='%love%')\"\n\nNote: \"%\" is a wildcard character that represents any sequence of characters.\n\nStep4: Find the artists of output_of_query3 excluding output_of_query1\nQuery4: \"set_difference(set1='output_of_query3',set2='output_of_query2')\"",
    "who was the first winner men's winner, in 1965?": "## Target type: {men's winner}\n## Query:\nStep1: Find the row_number that is 1965\nQuery1: \"get_information(relation='Year', tail_entity='1965')\"\nStep2: Find the entity with relation men's winner and head_entity output_of_query1\nQuery2: \"get_information(relation='men's winner', head_entity='output_of_query1')\"",
    "which game was higher scoring by nebraska, sept 1 or sept 8?": "## Target type: {game}\n## Query:\nStep1: Find the game played by Nebraska on September 1\nQuery1: \"get_information(relation='Date', tail_entity='September 1')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the game played by Nebraska on September 8\nQuery3: \"get_information(relation='Date', tail_entity='September 8')\"\nStep4: Find the Result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\nStep5: Compare the scores of output_of_query2 and output_of_query4 to find the higher scoring game\nQuery5: \"compare_scores(score1='output_of_query2', score2='output_of_query4')\"",
    "after western men's team win in 2007, who won the men's game next?": "None",
    "how many songs listed were originally on ost. alexandria?": "## Target type: {number}\n## Query:\nStep1: Find the entity named OST. Alexandria\nQuery1: \"get_information(relation='Original Album', tail_entity='OST. Alexandria')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last member to join the 20 metre club?": "None",
    "which is david d'or's oldest album?": "## Target type: {album}\n## Query:\nStep1: Find all the albums of David D'Or\nQuery1: \"get_information(relation='Title', tail_entity='David D\\'Or')\"\nStep2: Find the oldest album from output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "did the philippines or kazakhstan have a higher number of total medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that is Philippines\nQuery1: \"get_information(relation='Nation', tail_entity='Philippines')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity that is Kazakhstan\nQuery3: \"get_information(relation='Nation', tail_entity='Kazakhstan')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the total medals of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "which sunken u-boat had the most casualties": "None",
    "which game had a larger attendance, january 8 or december 11?": "None",
    "how many home games did st. gallen win?": "None",
    "candle in the wind had how many more sales than freed from desire?": "## Target type: {number of sales}\n## Query:\nStep1: Find the entity named Candle in the Wind\nQuery1: \"get_information(relation='Single', tail_entity='Candle in the Wind')\"\nStep2: Find the sales of output_of_query1\nQuery2: \"get_information(relation='Sales', head_entity='output_of_query1')\"\nStep3: Find the entity named Freed from Desire\nQuery3: \"get_information(relation='Single', tail_entity='Freed from Desire')\"\nStep4: Find the sales of output_of_query3\nQuery4: \"get_information(relation='Sales', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "who had the higher rank, katja saarinen or petra smarzova?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Katja Saarinen\nQuery1: \"get_information(relation='Name', tail_entity='Katja Saarinen')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Petra Smarzova\nQuery3: \"get_information(relation='Name', tail_entity='Petra Smarzova')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Find the name of the entity with higher rank\nQuery5: \"if value(output_of_query2) > value(output_of_query4) then output_of_query1 else output_of_query3\"",
    "how many games did the mercury play in june?": "None",
    "what year(s) did parnelli finish at least 4th or better?": "None",
    "which model comes after m939 truck?": "## Target type: {model}\n## Query:\nStep1: Find the entity named M939 Truck\nQuery1: \"get_information(relation='Model', tail_entity='M939 Truck')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model of output_of_query4\nQuery5: \"get_information(relation='Model', head_entity='output_of_query4')\"",
    "which type of hospitals are the same as grossmont hospital?": "## Target type: {Type of Hospital}\n## Query:\nStep1: Find the entity named Grossmont Hospital\nQuery1: \"get_information(relation='Hospital', tail_entity='Grossmont Hospital')\"\nStep2: Find the Type of Hospital of output_of_query1\nQuery2: \"get_information(relation='Type of Hospital', head_entity='output_of_query1')\"\nStep3: Find the entity with the same Type of Hospital as output_of_query2\nQuery3: \"get_information(relation='Type of Hospital', tail_entity='output_of_query2')\"",
    "does mack erwin have more or less wins than fred montsdeoca?": "## Target type: {wins}\n## Query:\nStep1: Find the entity named Mack Erwin\nQuery1: \"get_information(relation='Coach', tail_entity='Mack Erwin')\"\nStep2: Find the Wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Find the entity named Fred Montsdeoca\nQuery3: \"get_information(relation='Coach', tail_entity='Fred Montsdeoca')\"\nStep4: Find the Wins of output_of_query3\nQuery4: \"get_information(relation='Wins', head_entity='output_of_query3')\"\nStep5: Compare Wins of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the number of 800 meter events?": "## Target type: {number}\n## Query:\nStep1: Find the events that are 800 meter\nQuery1: \"get_information(relation='Event', tail_entity='800 meter')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the average number of votes for the first 5 elections?": "None",
    "previous to 2008 how many times was sweden the runner up?": "None",
    "what was the first tournament on the list that had a runner up who was not from the us?": "None",
    "was roddick a runner-up or winner more?": "None",
    "between the years 1954-2014 did boston university or harvard hold more \"runner-up\" positions?": "## Target type: {team}\n## Query:\n\nStep1: Find the entity with the relation of Runner-up between the years 1954-2014 for Boston University\nQuery1: \"get_information(relation='Runner-up', tail_entity='Boston University', key='Year', value>='1954', value<='2014')\"\nStep2: Find the entity with the relation of Runner-up between the years 1954-2014 for Harvard\nQuery2: \"get_information(relation='Runner-up', tail_entity='Harvard', key='Year', value>='1954', value<='2014')\"\nStep3: Calculate the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4 to find which team had more \"runner-up\" positions\nQuery5: \"ifelse(output_of_query3 > output_of_query4, 'Boston University', 'Harvard')\"",
    "who was the winner in the first year of 1992?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity in Year that is 1992\nQuery1: \"get_information(relation='Year', tail_entity='1992')\"\nStep2: Get the Winner of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "how many countries have produced the same number of championship golfers as canada?": "None",
    "how many golfers in the third round are from the united states?": "None",
    "who win the last pga tour event of the year?": "None",
    "who is the only player not from the u. s.?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the players\nQuery1: \"get_information(relation='Name')\"\nStep2: Get the set difference of output_of_query1 and \"U.S.\"\nQuery2: \"set_difference(set1='output_of_query1', set2='U.S.')\"\nStep3: Get the only element in output_of_query2\nQuery3: \"only_element(set='output_of_query2')\"",
    "is petrie airfield or breddan aerodome farther south in the hemisphere?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Petrie Airfield\nQuery1: \"get_information(relation='Airport name', tail_entity='Petrie Airfield')\"\nStep2: Find the entity named Breddan Aerodome\nQuery2: \"get_information(relation='Airport name', tail_entity='Breddan Aerodome')\"\nStep3: Find the coordinates of output_of_query1\nQuery3: \"get_information(relation='Coordinates', head_entity='output_of_query1')\"\nStep4: Find the coordinates of output_of_query2\nQuery4: \"get_information(relation='Coordinates', head_entity='output_of_query2')\"\nStep5: Determine if the latitude of output_of_query1 is farther south than the latitude of output_of_query2\nQuery5: \"compare_latitude(latitude1='output_of_query3', latitude2='output_of_query4')\"",
    "what's the number of songs that e-swift produced?": "None",
    "what is the number of albums made in 2012?": "## Target type: {number}\n## Query:\nStep1: Find the albums made in 2012\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which crowd was bigger, the first or third game?": "None",
    "which school had the largest enrollment?": "## Target type: {school}\n## Query:\nStep1: Find all the enrollments\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max enrollment\nQuery3: \"get_information(relation='Enrollment', tail_entity='output_of_query2')\"\nStep4: Find the school of output_of_query3\nQuery4: \"get_information(relation='School', head_entity='output_of_query3')\"",
    "what is the name of the first title?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what won best film previous to janji joni?": "None",
    "which place is larger (in area) than theunissen?": "None",
    "which diocese has a larger area, ondjiva or dundo?": "## Target type: {diocese}\n## Query:\nStep1: Find the entity Ondjiva\nQuery1: \"get_information(relation='Ecclesiastical Jurisdictions', tail_entity='Ondjiva')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area (km2)', head_entity='output_of_query1')\"\nStep3: Find the entity Dundo\nQuery3: \"get_information(relation='Ecclesiastical Jurisdictions', tail_entity='Dundo')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area (km2)', head_entity='output_of_query3')\"\nStep5: Compare the areas of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the population size difference between akrar and dalur?": "## Target type: {population size difference}\n## Query:\nStep1: Find the entity named Akrar\nQuery1: \"get_information(relation='Town/Village', tail_entity='Akrar')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Dalur\nQuery3: \"get_information(relation='Town/Village', tail_entity='Dalur')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "did mombasa or tana river have a larger population in 2009?": "## Target type: {residence}\n## Query:\nStep1: Find the population of Mombasa in 2009\nQuery1: \"get_information(relation='Population Census 2009', head_entity='Mombasa')\"\nStep2: Find the population of Tana River in 2009\nQuery2: \"get_information(relation='Population Census 2009', head_entity='Tana River')\"\nStep3: Compare the population of Mombasa and Tana River in 2009\nQuery3: \"compare(value1='output_of_query1', value2='output_of_query2', operator='larger')\"",
    "does oruro have more or less uninominal deputies than la paz?": "## Target type: {'Uninominal Deputies'}\n## Query:\nStep1: Find the entity that is Oruro\nQuery1: \"get_information(relation='Department', tail_entity='Oruro')\"\nStep2: Find the uninominal deputies of output_of_query1\nQuery2: \"get_information(relation='Uninominal Deputies', head_entity='output_of_query1')\"\nStep3: Find the entity that is La Paz\nQuery3: \"get_information(relation='Department', tail_entity='La Paz')\"\nStep4: Find the uninominal deputies of output_of_query3\nQuery4: \"get_information(relation='Uninominal Deputies', head_entity='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "the number of barangays in morong and rodriguez equals the number in which other municipality?": "None",
    "what is the difference in the number of temples between imabari and matsuyama?": "None",
    "does albino have more or less people than stezzano?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named Albino\nQuery1: \"get_information(relation='City', tail_entity='Albino')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Stezzano\nQuery3: \"get_information(relation='City', tail_entity='Stezzano')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Compare the population of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "in the dominican republic, does the province of independencia or the province of barahona have a smaller population?": "## Target type: {province}\n## Query:\nStep1: Find the province named Independencia\nQuery1: \"get_information(relation='Province', tail_entity='Independencia')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the province named Barahona\nQuery3: \"get_information(relation='Province', tail_entity='Barahona')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Compare the population of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "what was the total number of times sahi, m. & shilbuya, t. listed as co-authors?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Sahi, M.\nQuery1: \"get_information(relation='Author', tail_entity='Sahi, M.')\"\nStep2: Find the entity named Shilbuya, T.\nQuery2: \"get_information(relation='Author', tail_entity='Shilbuya, T.')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many titles had the same author listed as the illustrator?": "None",
    "which person has directed most of the titles?": "## Target type: {person}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Directed by of output_of_query3\nQuery4: \"get_information(relation='Directed by:', head_entity='output_of_query3')\"",
    "which publisher worked on a title consecutively from 1982-1989?": "## Target type: {publisher}\n## Query:\nStep1: Find the entity that Year is 1982\nQuery1: \"get_information(relation='Year', tail_entity='1982')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Publisher of output_of_query4\nQuery5: \"get_information(relation='Publisher', head_entity='output_of_query4')\"",
    "who authored the least number of titles?": "None",
    "how many titles did walker publish?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity named Walker\nQuery1: \"get_information(relation='Publisher', tail_entity='Walker')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many publications with atari as a topic folded in consecutive years?": "## Target type: {number}\n## Query:\nStep1: Find the entity that contains 'Atari' as a topic\nQuery1: \"get_information(relation='Topics', value='Atari')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the consecutive_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the total number of appearances in 2005?": "None",
    "how many featured guests are there in total?": "None",
    "how many songs were juried about eight?": "## Target type: {number}\n## Query:\nStep1: Find the entity where Jury is 8\nQuery1: \"get_information(relation='Jury', tail_entity='8')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many other appearance did this artist make in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Artist is \"Chikuzen Sato with Rimi Natsukawa\"\nQuery1: \"get_information(relation='Artist', tail_entity='Chikuzen Sato with Rimi Natsukawa')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the release of output_of_query2\nQuery3: \"get_information(relation='Release', tail_entity='output_of_query2')\"\nStep4: Find the entity in 2005\nQuery4: \"get_information(relation='Release', tail_entity='2005')\"\nStep5: Find the other appearances in output_of_query4\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query2')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many albums made the charts in 1998?": "## Target type: {number of albums}\n## Query:\nStep1: Find the albums in the year 1998\nQuery1: \"get_information(relation='Year', tail_entity='1998')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many performers appeared on the air date 21 january 2011?": "## Target type: {number of performers}\n## Query:\nStep1: Find the entity whose Air Date is 21 January 2011\nQuery1: \"get_information(relation='Air Date', tail_entity='21 January 2011')\"\nStep2: Find the Performer of output_of_query1\nQuery2: \"get_information(relation='Performer', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which is a higher standing hand: a straight or a flush?": "## Target type: {hand}\n## Query:\nStep1: Find the standing of a straight\nQuery1: \"get_information(relation='Hand', tail_entity='straight')\"\nStep2: Find the standing of a flush\nQuery2: \"get_information(relation='Hand', tail_entity='flush')\"\nStep3: Compare the standing of output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "which model is above 6 texan": "None",
    "how od was alberto ginastera when he died?": "## Target type: {age}\n## Query:\nStep1: Find the entity named Alberto Ginastera\nQuery1: \"get_information(relation='Composer', tail_entity='Alberto Ginastera')\"\nStep2: Find the died year of output_of_query1\nQuery2: \"get_information(relation='Died', head_entity='output_of_query1')\"\nStep3: Find the born year of output_of_query1\nQuery3: \"get_information(relation='Born', head_entity='output_of_query1')\"\nStep4: Calculate the age at death of output_of_query1\nQuery4: \"subtract(value='output_of_query2', key='output_of_query3')\"",
    "how long does this table cover in years?": "None",
    "which player is the oldest?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Date of Birth\nQuery1: \"get_information(relation='Date of Birth')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Date of Birth\nQuery3: \"get_information(relation='Date of Birth', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "in what year did the eighth place team have no wins?": "None",
    "which pump had the top cop variation at 35 degrees celsius?": "## Target type: {pump type}\n## Query:\nStep1: Find the COP variation at 35\u00b0C\nQuery1: \"get_information(relation='35 \u00b0C\\n(e.g. heated screed floor)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max COP variation at 35\u00b0C\nQuery3: \"get_information(relation='35 \u00b0C\\n(e.g. heated screed floor)', tail_entity='output_of_query2')\"\nStep4: Find the Pump type and source of output_of_query3\nQuery4: \"get_information(relation='Pump type and source', head_entity='output_of_query3')\"",
    "the town with the largest population desnsity": "## Target type: {town}\n## Query:\nStep1: Find the entity with the relation of Population density\nQuery1: \"get_information(relation='Population density')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Population density\nQuery3: \"get_information(relation='Population density', tail_entity='output_of_query2')\"\nStep4: Find the town of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "how many fumble recoveries did this player have in 2004?": "## Target type: {number of fumble recoveries}\n## Query:\nStep1: Find the entity with the relation of Year as 2004\nQuery1: \"get_information(relation='Year', tail_entity='2004')\"\nStep2: Find the fumble recoveries of output_of_query1\nQuery2: \"get_information(relation='Fumble Recoveries', head_entity='output_of_query1')\"",
    "what is he largest points scored in one game?": "None",
    "what is the highest number of consecutive wins by the 1990 southern miss golden eagles football team?": "None",
    "what was the highest number of points scored in a single game the texas tech football team in 1993?": "None",
    "how many times was tom boonen listed as the rider?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Tom Boonen\nQuery1: \"get_information(relation='Rider', tail_entity='Tom Boonen')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which swara holds the last position?": "## Target type: {swara}\n## Query:\nStep1: Find the entity with the relation of Position\nQuery1: \"get_information(relation='Position')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Position\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"\nStep4: Find the Swara of output_of_query3\nQuery4: \"get_information(relation='Swara', head_entity='output_of_query3')\"",
    "in which year were there more official guests--2012 or 2013?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Official guests\nQuery1: \"get_information(relation='Official guests')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\" \nStep3: Find the entity with the relation of Dates containing '2012'\nQuery3: \"get_information(relation='Dates', tail_entity='2012')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\" \nStep5: Find the entity with the relation of Dates containing '2013'\nQuery5: \"get_information(relation='Dates', tail_entity='2013')\"\nStep6: Get the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\" \nStep7: Compare the count of output_of_query4 and output_of_query6\nQuery7: \"if(count1 > count2, '2012', '2013')\" ",
    "how many times was the result listed as 1st under the regular season column?": "None",
    "which team took a shorter amount of time, ukraine or united states?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Ukraine\nQuery1: \"get_information(relation='Team', tail_entity='Ukraine')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named United States\nQuery3: \"get_information(relation='Team', tail_entity='United States')\"\nStep4: Find the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the time of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 < output_of_query4 then output_of_query1 else output_of_query3\"",
    "which other time was their the same score as the score in benin?": "None",
    "how many players were born before 1988?": "None",
    "which tour was the only one to take place in december?": "None",
    "who was the first united states driver?": "None",
    "which player had the largest number of &#931; points?": "None",
    "how many wins did the chiefs have in the 1974 season?": "None",
    "what date gives was their only loss?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Result as Loss\nQuery1: \"get_information(relation='Result', tail_entity='Loss')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "how many teams are in the east region.": "None",
    "what is the total number of medals given?": "None",
    "aspero and caral are both cities that can be found in which country?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Aspero\nQuery1: \"get_information(relation='City', tail_entity='Aspero')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Find the entity named Caral\nQuery3: \"get_information(relation='City', tail_entity='Caral')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "name a player shorter than kelli stack.": "None",
    "give the country with the next farthest distance from norway": "None",
    "which role is the most common from all the titles?": "## Target type: {role}\n## Query:\nStep1: Find the all titles\nQuery1: \"get_information(relation='Title')\"\nStep2: Find the all roles\nQuery2: \"get_information(relation='Role')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the count of each role\nQuery4: \"count(set='output_of_query3', key='Role')\"\nStep5: Find the role with the highest count\nQuery5: \"find_max(key='output_of_query4')\"",
    "how many total different committes are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the Committees\nQuery1: \"get_information(relation='Committee')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who weighs the most on the team?": "## Target type: {player name}\n## Query:\nStep1: Find the entity with the relation of Weight (lbs.)\nQuery1: \"get_information(relation='Weight (lbs.)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Weight\nQuery3: \"get_information(relation='Weight (lbs.)', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which governor served for the least number of years?": "None",
    "what is the only department witj 5 total deputies": "## Target type: {department}\n## Query:\nStep1: Find the entity that has a Total Deputies of 5\nQuery1: \"get_information(relation='Total Deputies', tail_entity='5')\"\nStep2: Find the Department of output_of_query1\nQuery2: \"get_information(relation='Department', head_entity='output_of_query1')\"",
    "name a match that had a total score above 40 but less than 65.": "None",
    "how many games took place in the araneta coliseum?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Araneta Coliseum\nQuery1: \"get_information(relation='Venue (Location)', tail_entity='Araneta Coliseum')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the \"to par\" difference between betty jameson and patty berg?": "## Target type: {to par difference}\n## Query:\nStep1: Find the entity named Betty Jameson\nQuery1: \"get_information(relation='Player', tail_entity='Betty Jameson')\"\nStep2: Find the \"to par\" value of output_of_query1\nQuery2: \"get_information(relation='To par', head_entity='output_of_query1')\"\nStep3: Find the entity named Patty Berg\nQuery3: \"get_information(relation='Player', tail_entity='Patty Berg')\"\nStep4: Find the \"to par\" value of output_of_query3\nQuery4: \"get_information(relation='To par', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many tribunals penanced at least 100 people?": "None",
    "tell me a scorer that had at least 3 scores in cfu club championships.": "None",
    "how many cities appear on this chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many states are on the chart?": "## Target type: {number of states}\n## Query:\nStep1: Find all the states\nQuery1: \"get_information(relation='State')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of countries on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the Country entities\nQuery1: \"get_information(relation='Country')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many puzzles are on the chart?": "None",
    "what is the total number of states listed on the chart?": "None",
    "how many winners had at least 50,000 votes?": "None",
    "who was the first woman to win belgian sportswoman of the year?": "None",
    "did the team finish the same as they did in 1956?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity that Season is 1956-57\nQuery1: \"get_information(relation='Season', tail_entity='1956-57')\"\nStep2: Find the Finish of output_of_query1\nQuery2: \"get_information(relation='Finish', head_entity='output_of_query1')\"\nStep3: Find the entity that Season is 1963-64\nQuery3: \"get_information(relation='Season', tail_entity='1963-64')\"\nStep4: Find the Finish of output_of_query3\nQuery4: \"get_information(relation='Finish', head_entity='output_of_query3')\"\nStep5: Check if the output_of_query2 is equal to output_of_query4\nQuery5: \"is_equal(set1='output_of_query2', set2='output_of_query4')\"",
    "when did the first sheriff's term start?": "None",
    "in what year did babin have the highest amount of fumble recoveries": "None",
    "in what year did finland first face greece?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Home team', tail_entity='Finland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"\nStep6: Extract the year from output_of_query5\nQuery6: \"extract_year(date='output_of_query5')\"",
    "which month averages the least precipitation in kindersley?": "None",
    "what was the name of the last competition?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what team did spain play before they played portugal?": "None",
    "what team started in 1949 and ended in 1973?": "## Target type: {team name}\n## Query:\nStep1: Find the entity with the relation of Year started 1949\nQuery1: \"get_information(relation='Year started', tail_entity='1949')\"\nStep2: Find the entity with the relation of Year ended 1973\nQuery2: \"get_information(relation='Year ended', tail_entity='1973')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Team name of output_of_query3\nQuery4: \"get_information(relation='Team name', head_entity='output_of_query3')\"",
    "what is the difference in total number of medals between india and nepal?": "## Target type: {number}\n## Query:\nStep1: Find the entity named India\nQuery1: \"get_information(relation='Nation', tail_entity='India')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Nepal\nQuery3: \"get_information(relation='Nation', tail_entity='Nepal')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the average number of winners each year?": "None",
    "which swimmer had the longest time?": "None",
    "how many groups had more than 100 members?": "None",
    "which athlete belongs to rank 10?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Rank 10\nQuery1: \"get_information(relation='Rank', tail_entity='10')\"\nStep2: Find the Athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "who came in first place?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number as 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what player got 10 total points in their game?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total', tail_entity='10')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many drivers use v8 engines?": "None",
    "did they only play the denver broncos once?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Denver Broncos\nQuery1: \"get_information(relation='Opponent', tail_entity='Denver Broncos')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count is equal to 1\nQuery3: \"equals(value='output_of_query2', key='1')\"",
    "how many number of teams played altogether?": "None",
    "which team came in last place?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Place\nQuery1: \"get_information(relation='Place')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max place\nQuery3: \"get_information(relation='Place', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many times has scribe won the award?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Scribe\nQuery1: \"get_information(relation='Winner', tail_entity='Scribe')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "besides david aaron kessler, what other person was in office under bill clinton?": "None",
    "after h.c. mcneille, who succeeded him in writing books about bulldog drummond?": "None",
    "how many total original works have been published?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Original work\nQuery1: \"get_information(relation='Original work')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country has the largest number of total medals?": "None",
    "who comes before marco loughran?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Marco Loughran\nQuery1: \"get_information(relation='Name', tail_entity='Marco Loughran')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "tell me an album that had the same artist as chillaa.": "None",
    "when in the 1990's did the inflation rate first become negative?": "None",
    "how many number of stages in the tour de france contain stages with mountains?": "## Target type: {number of stages}\n## Query:\nStep1: Find the stages with mountains\nQuery1: \"get_information(relation='Terrain', tail_entity='mountains')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many mountains were measured in the bd explorer in 2012?": "None",
    "from which competition were their the two largest score differences?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Calculate the score difference of output_of_query1\nQuery2: \"set_difference(set1='output_of_query1')\"\nStep3: Find the max score difference\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max score difference\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Find the competition of output_of_query4\nQuery5: \"get_information(relation='Competition', head_entity='output_of_query4')\"",
    "what was the difference in score in week 7?": "## Target type: {difference in score}\n## Query:\nStep1: Find the row_number of week 7\nQuery1: \"get_information(relation='Week', tail_entity='7')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Split the score of output_of_query2 into two parts\nQuery3: \"split(input='output_of_query2', delimiter='\u2013')\"\nStep4: Calculate the difference between two parts of output_of_query3\nQuery4: \"calculate_difference(set='output_of_query3')\"",
    "which game had the largest difference in score?": "None",
    "what is the first year there was a triple crown winner?": "None",
    "what golfer received the most money in the 1981 pga championship?": "## Target type: {golfer}\n## Query:\nStep1: Find the entity with the relation of Money ($)\nQuery1: \"get_information(relation='Money ($)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Money\nQuery3: \"get_information(relation='Money ($)', tail_entity='output_of_query2')\"\nStep4: Find the golfer of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "next to rasgas, what plant has the largest capacity?": "None",
    "which place has more jews, durdevo or zabalj?": "None",
    "which ship lasted longer, jaguar or jersey?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Jaguar\nQuery1: \"get_information(relation='Name', tail_entity='Jaguar')\"\nStep2: Find the entity named Jersey\nQuery2: \"get_information(relation='Name', tail_entity='Jersey')\"\nStep3: Find the laid down date of output_of_query1\nQuery3: \"get_information(relation='Laid down', head_entity='output_of_query1')\"\nStep4: Find the completed date of output_of_query1\nQuery4: \"get_information(relation='Completed', head_entity='output_of_query1')\"\nStep5: Find the laid down date of output_of_query2\nQuery5: \"get_information(relation='Laid down', head_entity='output_of_query2')\"\nStep6: Find the completed date of output_of_query2\nQuery6: \"get_information(relation='Completed', head_entity='output_of_query2')\"\nStep7: Calculate the duration of output_of_query1\nQuery7: \"calculate_duration(start_date='output_of_query3', end_date='output_of_query4')\" \nStep8: Calculate the duration of output_of_query2\nQuery8: \"calculate_duration(start_date='output_of_query",
    "how many award did he win?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity with the relation of Result as 'Won'\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many awards were won?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity with the relation of Result as \"Won\"\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many awards did this actor win?": "## Target type: {'number of awards'}\n## Query:\nStep1: Find the entity with the relation of Title that is \"Marty\"\nQuery1: \"get_information(relation='Title', tail_entity='Marty')\"\nStep2: Find the entity with the relation of Result that is \"Won\"\nQuery2: \"get_information(relation='Result', tail_entity='Won')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of wins for hank azaria?": "None",
    "how many medalist had at least 35.00 time in silver?": "None",
    "what location comes after gretna?": "None",
    "how many minutes below giandomenico basso did luca betti finish?": "None",
    "in how many years was the number of liberal councillors above three?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Liberal councillors that is greater than three\nQuery1: \"get_information(relation='Liberal councillors', tail_entity>'3')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "year with largest number of candidates selected": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Candidates elected\nQuery1: \"get_information(relation='Candidates elected')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Candidates elected\nQuery3: \"get_information(relation='Candidates elected', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year of election', head_entity='output_of_query3')\"",
    "which game came in first in the 2012 indian premier league?": "None",
    "television movie to openly discuss aids.": "## Target type: {'Title'}\n## Query:\nStep1: Find all the Title that openly discuss AIDS\nQuery1: \"get_information(relation='Title', Notes='openly discuss AIDS')\"\nStep2: Get the output_of_query1\nQuery2: \"set='output_of_query1'\"",
    "how many typs have a top speed above 30 mph?": "None",
    "what number of pump types have a 35 \u00b0c (e.g. heated screed floor) greater than 5.0?": "## Target type: {number}\n## Query:\nStep1: Find the pump types with a temperature of 35 \u00b0C larger than 5.0\nQuery1: \"get_information(relation='35 \u00b0C\\n(e.g. heated screed floor)', tail_entity>'5.0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wins did the red raiders have?": "None",
    "desmond trufant and robert alford both played which position?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Desmond Trufant\nQuery1: \"get_information(relation='Player', tail_entity='Desmond Trufant')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named Robert Alford\nQuery3: \"get_information(relation='Player', tail_entity='Robert Alford')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what were the total number of circuits that took place in june?": "## Target type: {number of circuits}\n## Query:\nStep1: Find the circuits that took place in June\nQuery1: \"get_information(relation='Date', tail_entity='June')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did the bombers win?": "## Target type: {number of games}\n## Query:\nStep1: Find the games where the Result is \"Win\"\nQuery1: \"get_information(relation='Result', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which circuit has the most sites?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Sites\nQuery1: \"get_information(relation='Sites')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Sites\nQuery3: \"get_information(relation='Sites', tail_entity='output_of_query2')\"\nStep4: Find the Circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "what is the number of world championships?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition as World Championships\nQuery1: \"get_information(relation='Competition', tail_entity='World Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "when month were most of the songs recorded on this album?": "None",
    "what is the total number of \"df\" positions on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Position with \"df\"\nQuery1: \"get_information(relation='Position', tail_entity='df')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which town has the most people in their 2011 population?": "None",
    "which town/village has the highest number of people?": "## Target type: {town/village}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the Town/Village of output_of_query3\nQuery4: \"get_information(relation='Town/Village', head_entity='output_of_query3')\"",
    "which community has the most population?": "## Target type: {community}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the Community of output_of_query3\nQuery4: \"get_information(relation='Community', head_entity='output_of_query3')\"",
    "how long after 2008 did it take for division 4 to qualify for the playoffs once again?": "None",
    "how many top 3 finishes does gordeeva have?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Position is '1st' or '2nd' or '3rd'\nQuery1: \"get_information(relation='Position', tail_entity<='3rd')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the first listed news talk information station?": "## Target type: {Call sign}\n## Query:\nStep1: Find the entity that Format is 'News Talk'\nQuery1: \"get_information(relation='Format', tail_entity='News Talk')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Call sign of output_of_query4\nQuery5: \"get_information(relation='Call sign', head_entity='output_of_query4')\"",
    "how many albums did this singer release from 2004 to 2009?": "None",
    "what comes after susie": "None",
    "which buildings have the same number of floors as at least two others?": "None",
    "what is the name of the building listed after idaho state capitol?": "None",
    "what was the first anime convention name held in canada?": "None",
    "how many total laps have been driven in the indy 500?": "None",
    "what is the name of the last performer on this chart?": "## Target type: {'Performer'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Performer of output_of_query3\nQuery4: \"get_information(relation='Performer', head_entity='output_of_query3')\"",
    "which association awarded jones' first award after the year 2000?": "None",
    "which reps were only appointed by franklin pierce?": "## Target type: {representatives}\n## Query:\nStep1: Find the entity named Franklin Pierce\nQuery1: \"get_information(relation='Appointed by', tail_entity='Franklin Pierce')\"\nStep2: Find the representatives of output_of_query1\nQuery2: \"get_information(relation='Representative', head_entity='output_of_query1')\"",
    "what was the name of the first album this singer produced?": "None",
    "how many plugs in the list are not earthed?": "## Target type: {number}\n## Query:\nStep1: Find the plugs in the list\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the plugs that are not earthed\nQuery2: \"get_information(relation='Earthed', tail_entity='No')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many votes did obama win by in iron county?": "None",
    "how long in years down this table cover?": "None",
    "what was the name of the only player with the position listed as s?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the Position listed as S\nQuery1: \"get_information(relation='Position', tail_entity='S')\"\nStep2: Find the name of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "name a wrestler who held the title the same number of days as stripped.": "None",
    "how many titles have also starred michael douglas?": "None",
    "how many times did he compete in the european championships?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition as \"European Championships\"\nQuery1: \"get_information(relation='Competition', tail_entity='European Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams have not ever won the supercup?": "None",
    "how many times has fc shakhtyor salihorsk played in the uefa europa league competition?": "None",
    "how many euro 2000 qualifying competitions are listed?": "None",
    "the number of events that occur after the crucifixion of jesus": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Crucifixion of Jesus\nQuery1: \"get_information(relation='Event', tail_entity='Crucifixion of Jesus')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the events that occur after the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of members between all of the groups?": "None",
    "did the hydro power increase or decrease from 2010 to 2012?": "None",
    "how many players are norwegian?": "None",
    "who was picked after jamarcus russell?": "None",
    "which model has the higher capacity, skater or surf's up?": "## Target type: {'Model name'}\n## Query:\nStep1: Find the entity named Skater\nQuery1: \"get_information(relation='Model name', tail_entity='Skater')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity named Surf's Up\nQuery3: \"get_information(relation='Model name', tail_entity='Surf's Up')\"\nStep4: Find the capacity of output_of_query3\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find the model with higher capacity\nQuery5: \"if(output_of_query2 > output_of_query4, 'Skater', 'Surf's Up')\"",
    "what was the only castle to be built as a hunting lodge?": "## Target type: {Name}\n## Query:\nStep1: Find the entity that is a hunting lodge\nQuery1: \"get_information(relation='Notes', tail_entity='Built as a hunting lodge')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "who came in first for the men?": "None",
    "who came in first place in 1966?": "## Target type: {'Champion'}\n## Query:\nStep1: Find the entity named 1966\nQuery1: \"get_information(relation='Year', tail_entity='1966')\"\nStep2: Find the Champion of output_of_query1\nQuery2: \"get_information(relation='Champion', head_entity='output_of_query1')\"",
    "who was the top chef?": "None",
    "how many episodes only had one performer?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the episodes with the relation of Appearance as \"only\"\nQuery1: \"get_information(relation='Appearance', tail_entity='only')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which contestant's culinary point of view had a longer description than \"vintage with a modern twist\"?": "None",
    "what is the only train to reach a top speed of 500 or more?": "None",
    "how many riders on the surf's up?": "## Target type: {number of riders}\n## Query:\nStep1: Find the entity named Surf's Up\nQuery1: \"get_information(relation='Model name', tail_entity='Surf's Up')\"\nStep2: Find the riders of output_of_query1\nQuery2: \"get_information(relation='Riders', head_entity='output_of_query1')\"",
    "what was the number of pulse chart position?": "None",
    "who was the last player selected in round nine?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many times was waterford the opposition?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Waterford\nQuery1: \"get_information(relation='Opposition', tail_entity='Waterford')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long is the song \"i love you jesus?\"": "## Target type: {time}\n## Query:\nStep1: Find the entity named \"I Love You Jesus\"\nQuery1: \"get_information(relation='Title', tail_entity='I Love You Jesus')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what is the total number of wins by the given home team?": "None",
    "which artist came in last place in the national final?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Place\nQuery1: \"get_information(relation='Place')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Place\nQuery3: \"get_information(relation='Place', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "how long did this person throw the javelin in the commonwealth games?": "## Target type: {'Notes'}\n## Query:\nStep1: Find the entity with the relation of Competition being \"Commonwealth Games\"\nQuery1: \"get_information(relation='Competition', tail_entity='Commonwealth Games')\"\nStep2: Find the Notes of output_of_query1\nQuery2: \"get_information(relation='Notes', head_entity='output_of_query1')\"",
    "the title \"swat 4\" shared the same developer as what other title?": "None",
    "which was the only champion to obtain sixth place in the llws?": "## Target type: {champion}\n## Query:\nStep1: Find the entity with the relation of LLWS\nQuery1: \"get_information(relation='LLWS', tail_entity='6th place')\"\nStep2: Find the champion of output_of_query1\nQuery2: \"get_information(relation='Champion', head_entity='output_of_query1')\"",
    "what is the difference in enrollment between the top 2 schools listed in the table?": "None",
    "which was released in 2011, undefeated or freakonomics?": "None",
    "how many points did the france 2007 women's six nations championship have all together in the top 20 players?": "None",
    "does matthew hoggard have at least one inning?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Matthew Hoggard\nQuery1: \"get_information(relation='Player', tail_entity='Matthew Hoggard')\"\nStep2: Find the number of innings of output_of_query1\nQuery2: \"get_information(relation='Innings', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is greater than or equal to 1\nQuery3: \"if_greater_or_equal(value='output_of_query2', threshold='1')\"",
    "what is the total number of carpet surfaces used?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation 'Surface' and value 'Carpet'\nQuery1: \"get_information(relation='Surface', tail_entity='Carpet')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of ties listed?": "None",
    "what were the number of goals for listed for the hercules cf club?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity that Club is Hercules CF\nQuery1: \"get_information(relation='Club', tail_entity='Hercules CF')\"\nStep2: Find the goals for of output_of_query1\nQuery2: \"get_information(relation='Goals for', head_entity='output_of_query1')\"",
    "what was the total amount of times the tacoma not qualify for the playoffs during the years of 2006 to 2013": "None",
    "what other company has the same founding year as ace?": "None",
    "other than oasis, tell me a drop that has both a special ops mission and a face off map.": "None",
    "which year is the most episodes he played in shows?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Notes\nQuery3: \"get_information(relation='Notes', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many times was there a winner?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Outcome being Winner\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many episodes were there where nobody was sent home?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Sent Home is None\nQuery1: \"get_information(relation='Sent Home', tail_entity='None')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which show was the winningest?": "None",
    "what number of episodes won outstanding film editing for a series?": "None",
    "how many seasons did someone get 3rd place?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Pos. being \"3rd\"\nQuery1: \"get_information(relation='Pos.', tail_entity='3rd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who has only 2 wins?": "None",
    "what is the number of countries in each team?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity named Team 1\nQuery1: \"get_information(relation='Team 1')\"\nStep2: Find the number of countries of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity named Team 2\nQuery3: \"get_information(relation='Team 2')\"\nStep4: Find the number of countries of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the time for the driver who came in last place?": "## Target type: {time}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"",
    "what is the total number of plants in algeria?": "## Target type: {number of plants}\n## Query:\nStep1: Find the entity named Algeria\nQuery1: \"get_information(relation='Country', tail_entity='Algeria')\"\nStep2: Find the total number of plants in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which all-time player is after derek cockroft?": "None",
    "which did he win more, best foreign actor or best actor?": "None",
    "what were the total amount of times minsk is listed as a location?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Minsk\nQuery1: \"get_information(relation='Location', tail_entity='Minsk')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the first jockey on this chart?": "## Target type: {'Jockey'}\n## Query:\nStep1: Find the entity with the relation of 'Finished' is '1st'\nQuery1: \"get_information(relation='Finished', tail_entity='1st')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of 'row_number' is 'output_of_query2'\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Jockey of output_of_query3\nQuery4: \"get_information(relation='Jockey', head_entity='output_of_query3')\"",
    "what is the difference in height between key tower and 55 public square": "None",
    "how long is the song \"likwit\"?": "## Target type: {'Length'}\n## Query:\nStep1: Find the entity with the relation Title \"Likwit\"\nQuery1: \"get_information(relation='Title', tail_entity='Likwit')\"\nStep2: Find the Length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "how many total municipalities are there in camarines sur?": "None",
    "which town has the same population in 2011 as bruno?": "None",
    "who has the least number on hits?": "None",
    "is the order # of top 10 more than that of top 7?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Top 10\nQuery1: \"get_information(relation='Week #', tail_entity='Top 10')\"\nStep2: Find the order number of output_of_query1\nQuery2: \"get_information(relation='Order #', head_entity='output_of_query1')\"\nStep3: Find the entity named Top 7\nQuery3: \"get_information(relation='Week #', tail_entity='Top 7')\"\nStep4: Find the order number of output_of_query3\nQuery4: \"get_information(relation='Order #', head_entity='output_of_query3')\"\nStep5: Check if the order number of output_of_query2 is greater than the order number of output_of_query4\nQuery5: \"is_greater_than(value1='output_of_query2', value2='output_of_query4')\"",
    "what was u.s. city that was founded before los vegas, nevada?": "None",
    "which is the only city of license to carry the daystar network?": "## Target type: {city of license}\n## Query:\nStep1: Find the entity that carries the Daystar Network\nQuery1: \"get_information(relation='Network', tail_entity='Daystar')\"\nStep2: Find the city of license of output_of_query1\nQuery2: \"get_information(relation='City of license', head_entity='output_of_query1')\"\nStep3: Get the intersection of output_of_query2 and output_of_query2 (just to confirm if it is unique)\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query2')\"",
    "how many captains are listed?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Captain\nQuery1: \"get_information(relation='Captain')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "first opponent to defeat mocho cota in mexico city": "None",
    "who is the last to coach the san antonio scorpions?": "None",
    "what is the number of games that lawrence roehm started in?": "## Target type: {'Games started'}\n## Query:\nStep1: Find the entity named Lawrence Roehm\nQuery1: \"get_information(relation='Player', tail_entity='Lawrence Roehm')\"\nStep2: Find the games started by output_of_query1\nQuery2: \"get_information(relation='Games started', head_entity='output_of_query1')\"",
    "how many countries received silver medals?": "None",
    "which season had the smallest audience?": "None",
    "did athens or rome receive more votes in round 3?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Athens\nQuery1: \"get_information(relation='City', tail_entity='Athens')\"\nStep2: Find the votes of output_of_query1 in Round 3\nQuery2: \"get_information(relation='Round 3', head_entity='output_of_query1')\"\nStep3: Find the entity named Rome\nQuery3: \"get_information(relation='City', tail_entity='Rome')\"\nStep4: Find the votes of output_of_query3 in Round 3\nQuery4: \"get_information(relation='Round 3', head_entity='output_of_query3')\"\nStep5: Compare the votes of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query2', set2='output_of_query4', operator='greater_than')\"",
    "how many acts did guntram have?": "## Target type: {number of acts}\n## Query:\nStep1: Find the entity with the Title \"Guntram\"\nQuery1: \"get_information(relation='Title', tail_entity='Guntram')\"\nStep2: Find the number of acts of output_of_query1\nQuery2: \"get_information(relation='Sub\u00addivisions', head_entity='output_of_query1')\"",
    "how many people total are there in aberdeen and alameda combined?": "None",
    "how many people were head of the medici longer than piero i de'medici?": "None",
    "what home team has the most points scored?": "## Target type: {home team}\n## Query:\nStep1: Find the entity with the relation of Agg\nQuery1: \"get_information(relation='Agg')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Agg\nQuery3: \"get_information(relation='Agg', tail_entity='output_of_query2')\"\nStep4: Find the home team of output_of_query3\nQuery4: \"get_information(relation='Home Team', head_entity='output_of_query3')\"",
    "what is the total population for aberdeen in 2011?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Aberdeen\nQuery1: \"get_information(relation='Name', tail_entity='Aberdeen')\"\nStep2: Find the population in 2011 of output_of_query1\nQuery2: \"get_information(relation='Population (2011)', head_entity='output_of_query1')\"",
    "when did the album hallelujah - live volume 2 come out?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity with the relation of Album that matches \"Hallelujah - Live Volume 2\"\nQuery1: \"get_information(relation='Album', tail_entity='Hallelujah - Live Volume 2')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many men winners had times at least 46 minutes or under?": "None",
    "who scored the least number of points on the 191617 illinois fighting illini men's basketball team?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "13.7 million watched the 22nd year. how many watched the previous year?": "None",
    "how long did michael jackson hold the top spot?": "None",
    "the team with the most goals": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Goals\nQuery3: \"get_information(relation='Goals', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "how many teams played in the 2011 caf u-23 championship qualification?": "None",
    "how many films has she been in?": "## Target type: {number}\n## Query:\nStep1: Find all the films\nQuery1: \"get_information(relation='Film')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who won the giro d'italia race after wouter weylandt?": "None",
    "does the crest white strips pro last as long as the crest white strips renewal?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Crest Whitestrips Pro\nQuery1: \"get_information(relation='Model', tail_entity='Crest Whitestrips Pro')\"\nStep2: Find the Length of use of output_of_query1\nQuery2: \"get_information(relation='Length of use', head_entity='output_of_query1')\"\nStep3: Find the entity named Crest Whitestrips Renewal\nQuery3: \"get_information(relation='Model', tail_entity='Crest Whitestrips Renewal')\"\nStep4: Find the Length of use of output_of_query3\nQuery4: \"get_information(relation='Length of use', head_entity='output_of_query3')\"\nStep5: Compare the Length of use of output_of_query1 and output_of_query4\nQuery5: \"output_of_query2 == output_of_query4\"",
    "homochitto river bridge is in the same county as what other bridge built in 1920?": "None",
    "what was the opponent after new zealand warriors on march 25th?": "None",
    "who was the last flag bearer for georgia?": "None",
    "which countries have the same number of silver medals in the asian youth games as north korea?": "None",
    "what country has won at least eight silvers?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Filter the entities that have at least eight silvers\nQuery2: \"filter(set='output_of_query1', relation='Silver', value>='8')\"\nStep3: Get the output_of_query2",
    "how long from the first election date did the elections go on?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity with the relation of Election\nQuery1: \"get_information(relation='Election')\"\nStep2: Sort the output_of_query1 in ascending order based on the Election date\nQuery2: \"sort(set='output_of_query1', ascending=True)\"\nStep3: Get the first row of output_of_query2\nQuery3: \"first_row(set='output_of_query2')\"\nStep4: Find the Election date of output_of_query3\nQuery4: \"get_information(relation='Election', tail_entity='output_of_query3')\"\nStep5: Calculate the time duration from 'output_of_query4' to '6 March 2005'\nQuery5: \"calculate_time_duration(start_date='output_of_query4', end_date='6 March 2005')\"",
    "what was the total number of centers selected in the first round?": "None",
    "who won more races, the usa or canada?": "None",
    "how many administrative areas have a population of at least 500?": "None",
    "how many competitors competed in the semifinal 2?": "None",
    "on how many songs is m. isham listed as a songwriter?": "None",
    "how many roles did actor ikuta toma have in 2009?": "None",
    "what is the difference, in years, between the length of eddie giacomin's career and mark messier?": "None",
    "brant's crossing is not in callicoon, new york but where?": "None",
    "what is the number of times that scott simpson was runner-up to him?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Scott Simpson\nQuery1: \"get_information(relation='Runner(s)-up', tail_entity='Scott Simpson')\"\nStep2: Find the number of times that output_of_query1 was runner-up to him\nQuery2: \"count(set='output_of_query1')\"",
    "which tracks feature the same producer(s) in consecutive order on this album?": "None",
    "which table has a higher horiz disp, university of witwatersrand or iit guwahati?": "## Target type: {table}\n## Query:\nStep1: Find the table with entity of University of Witwatersrand\nQuery1: \"get_information(relation='Location', tail_entity='University of Witwatersrand')\"\nStep2: Find the X Horiz Disp of output_of_query1\nQuery2: \"get_information(relation='X Horiz Disp', head_entity='output_of_query1')\"\nStep3: Find the table with entity of IIT Guwahati\nQuery3: \"get_information(relation='Location', tail_entity='IIT Guwahati')\"\nStep4: Find the X Horiz Disp of output_of_query3\nQuery4: \"get_information(relation='X Horiz Disp', head_entity='output_of_query3')\"\nStep5: Compare the X Horiz Disp of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4, 'X Horiz Disp')\"",
    "what was the name of the person who finished the 2012 budapest half marathon the fastest?": "None",
    "what was the highest amount of penalty points?": "None",
    "which was the only song to earn less than 60 points?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of Points that is less than 60\nQuery1: \"get_information(relation='Points', tail_entity<'60')\"\nStep2: Find the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "who is the artist listed before ben e. king?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Ben E. King\nQuery1: \"get_information(relation='Artist', tail_entity='Ben E. King')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Artist of output_of_query4\nQuery5: \"get_information(relation='Artist', head_entity='output_of_query4')\"",
    "how many canadian drivers finished in at least 10th position or better?": "None",
    "steve maestas represented nai maestas and ward on the board of directors, bu he also served as what position on the board of directors?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Steve Maestas\nQuery1: \"get_information(relation='Name', tail_entity='Steve Maestas')\"\nStep2: Find the position of output_of_query1 on the board of directors\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"",
    "which country has the most fastest lap winners?": "None",
    "how long was pilzbach's period of service?": "None",
    "what is the only title listed for 1999?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Year as 1999\nQuery1: \"get_information(relation='Year', tail_entity='1999')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count of output_of_query2 is equal to 1\nQuery3: \"check_equal(value='output_of_query2', target='1')\"\nStep4: Get the Title of output_of_query1\nQuery4: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many finished all 225 laps?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Laps is 225\nQuery1: \"get_information(relation='Laps', tail_entity='225')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was the last building built?": "None",
    "what is the number of mpixels/s that voodoo banshee had?": "## Target type: {number of mpixels/s}\n## Query:\nStep1: Find the entity named Voodoo Banshee\nQuery1: \"get_information(relation='Model', tail_entity='Voodoo Banshee')\"\nStep2: Find the number of mpixels/s of output_of_query1\nQuery2: \"get_information(relation='Fillrate', head_entity='output_of_query1')\"",
    "how many times were the dallas cowboys listed as an opponent?": "None",
    "what is the first game listed on the schedule?": "None",
    "what is the name of the last album title on this chart?": "## Target type: {'Album title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album title of output_of_query3\nQuery4: \"get_information(relation='Album title', head_entity='output_of_query3')\"",
    "how long did it take for jan urfer to complete run 2?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity named Jan Urfer\nQuery1: \"get_information(relation='Athlete', tail_entity='Jan Urfer')\"\nStep2: Find the duration of Run 2 of output_of_query1\nQuery2: \"get_information(relation='Run 2', head_entity='output_of_query1')\"",
    "what is the nationality of the performer listed before niki palli?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity named Niki Palli\nQuery1: \"get_information(relation='Name', tail_entity='Niki Palli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the nationality of output_of_query4\nQuery5: \"get_information(relation='Nationality', head_entity='output_of_query4')\"",
    "how many apps were obtained in season 04/05?": "## Target type: {number of apps}\n## Query:\nStep1: Find the season with the relation Season is \"04/05\"\nQuery1: \"get_information(relation='Season', tail_entity='04/05')\"\nStep2: Find the Apps of output_of_query1\nQuery2: \"get_information(relation='Apps', head_entity='output_of_query1')\"",
    "who placed in first according to medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity in Rank that placed first\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many countries have a name that begins with a vowel?": "None",
    "how many people attended the game in november against sunderland?": "None",
    "what is the only year that had 114 minor children registered?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Registration of a minor child\nQuery1: \"get_information(relation='Registration of a minor child')\"\nStep2: Find the output_of_query1 that is 114\nQuery2: \"get_information(relation='Registration of a minor child', tail_entity='114')\"\nStep3: Find the year of output_of_query2\nQuery3: \"get_information(relation='Year', head_entity='output_of_query2')\"",
    "who is the singer of the only song over 5 minutes in length?": "## Target type: {singer}\n## Query:\nStep1: Find the entity that Length (m:ss) is over 5 minutes\nQuery1: \"get_information(relation='Length (m:ss)', tail_entity>'5:00')\"\nStep2: Get the singer of output_of_query1\nQuery2: \"get_information(relation='Singers', head_entity='output_of_query1')\"",
    "which county did feinstein have the least amount of votes in?": "None",
    "how many games during this season were aired on cbs?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with the relation of TV of \"CBS\"\nQuery1: \"get_information(relation='TV', tail_entity='CBS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who shot the least at 40 yd": "## Target type: {person}\n## Query:\nStep1: Find the entity with the relation of 40 yd\nQuery1: \"get_information(relation='40 yd (37 m)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min shots\nQuery3: \"get_information(relation='40 yd (37 m)', tail_entity='output_of_query2')\"",
    "who is the last constructor?": "## Target type: {constructor}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Constructor of output_of_query3\nQuery4: \"get_information(relation='Constructor', head_entity='output_of_query3')\"",
    "what other film is in malayalam besides koothara?": "## Target type: {film}\n## Query:\nStep1: Find the entity named Koothara\nQuery1: \"get_information(relation='Film', tail_entity='Koothara')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "how many times was nolan ryan the opening day pitcher for the astros?": "None",
    "which year had at most a time of 9.72?": "None",
    "which nationality had no result above 40?": "## Target type: {nationality}\n## Query:\nStep1: Find the nationality with result less than or equal to 40\nQuery1: \"get_information(relation='Result', tail_entity<'40')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "what was the last released featured performance by notorious b.i.g.": "None",
    "how many songs did ishaan dev create for the movies kai thunindavan and thaazhvaarakaatu?": "None",
    "tell me the total number that were laid down on an unknown date.": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Laid down as 'Unknown'\nQuery1: \"get_information(relation='Laid down', tail_entity='Unknown')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the last convention held outside of europe or north america was held when?": "None",
    "what is the other location after frisco tx": "## Target type: {location}\n## Query:\nStep1: Find the entity named Frisco TX\nQuery1: \"get_information(relation='Location', tail_entity='Frisco TX')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "who as the first rmc club president of the 20th century?": "None",
    "what is the number of class 08 models whos voltage is 90 v": "## Target type: {number of class 08 models}\n## Query:\nStep1: Find the entity named \"Class 08\"\nQuery1: \"get_information(relation='Electrical system', tail_entity='90 V')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many members were party of lower west province?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Province is Lower West\nQuery1: \"get_information(relation='Province', tail_entity='Lower West')\"\nStep2: Find the members of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference between the year clio left and atherton left?": "None",
    "which position between the quarterback and defensive end has the larger count?": "## Target type: {'Position'}\n## Query:\nStep1: Find the count of quarterbacks\nQuery1: \"get_information(relation='Position', tail_entity='quarterback')\"\nStep2: Find the count of defensive ends\nQuery2: \"get_information(relation='Position', tail_entity='defensive end')\"\nStep3: Calculate the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "how many players had a free transfer fee?": "## Target type: {number}\n## Query:\nStep1: Find the players with a free transfer fee\nQuery1: \"get_information(relation='Transfer fee', tail_entity='Free')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what team had the worst goal difference in the league?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has the relation of Goal Difference\nQuery1: \"get_information(relation='Goal Difference')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Goal Difference\nQuery3: \"get_information(relation='Goal Difference', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "name two people whose height is at least 174 cm": "None",
    "how many different types of world plugs are earthed?": "None",
    "which card was issued most?": "None",
    "does alexandria county have a higher or lower population than delaware county?": "## Target type: {'higher' or 'lower'}\n## Query:\nStep1: Find the entity named Alexandria county\nQuery1: \"get_information(relation='Township', tail_entity='Alexandria county')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Delaware county\nQuery3: \"get_information(relation='Township', tail_entity='Delaware county')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Set the population of output_of_query2 as input_1 and population of output_of_query4 as input_2\nQuery5: \"compare(input_1='output_of_query2', input_2='output_of_query4')\"",
    "how many games are defined as empire building?": "None",
    "what is the difference in majority between hindmarsh and hinkler?": "## Target type: {difference in majority}\n## Query:\nStep1: Find the entity named Hindmarsh\nQuery1: \"get_information(relation='Seat', tail_entity='Hindmarsh')\"\nStep2: Find the Majority of output_of_query1\nQuery2: \"get_information(relation='Majority', head_entity='output_of_query1')\"\nStep3: Find the entity named Hinkler\nQuery3: \"get_information(relation='Seat', tail_entity='Hinkler')\"\nStep4: Find the Majority of output_of_query3\nQuery4: \"get_information(relation='Majority', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculation(operator='subtract', operand1='output_of_query2', operand2='output_of_query4')\"",
    "what is the total number of position as listed?": "## Target type: {number}\n## Query:\nStep1: Find all the positions listed\nQuery1: \"get_information(relation='Position')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which other traine, other than wall street, had philadelphia as a destination?": "## Target type: {train name}\n## Query:\nStep 1: Find the entity named Wall Street\nQuery1: \"get_information(relation='Named trains', tail_entity='Wall Street')\"\nStep 2: Find the destination of output_of_query1\nQuery2: \"get_information(relation='Destination', head_entity='output_of_query1')\"\nStep 3: Find the entity with the relation of Destination and its value is Philadelphia\nQuery3: \"get_information(relation='Destination', value='Philadelphia')\"\nStep 4: Subtract the output_of_query1 from output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "what team comes before confey": "## Target type: {team}\n## Query:\nStep1: Find the entity named Confey\nQuery1: \"get_information(relation='Team', tail_entity='Confey')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "james bland catlett and john maulbetsch played which position in common?": "## Target type: {position}\n## Query:\nStep1: Find the entity named James Bland Catlett\nQuery1: \"get_information(relation='Player', tail_entity='James Bland Catlett')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named John Maulbetsch\nQuery3: \"get_information(relation='Player', tail_entity='John Maulbetsch')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many audio versions are at least 6 minutes long?": "## Target type: {number}\n## Query:\nStep1: Find the versions with Length at least 6 minutes\nQuery1: \"get_information(relation='Length', tail_entity>='6:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which is the most popular single on the album?": "## Target type: {'Single'}\n## Query:\nStep1: Find the entity with the relation of Chart\nQuery1: \"get_information(relation='Chart')\"\nStep2: Find the entity with the relation of row_number\nQuery2: \"get_information(relation='row_number')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Single of output_of_query4\nQuery5: \"get_information(relation='Single', head_entity='output_of_query4')\"",
    "which religious denomination had a higher percentage in 1900, jewish or roman catholic?": "## Target type: {'Denomination'}\n## Query:\nStep1: Find the percentage of Jewish in 1900\nQuery1: \"get_information(relation='1900')\"\nStep2: Find the percentage of Roman Catholic in 1900\nQuery2: \"get_information(relation='1900')\"\nStep3: Compare the percentages of output_of_query1 and output_of_query2\nQuery3: \"if(output_of_query1 > output_of_query2, 'Jewish', 'Roman Catholic')\"",
    "what was the capital of puerto rico after caparra?": "None",
    "which district has a higher population, angul or cuttack?": "None",
    "what competition did japan compete in 2013?": "None",
    "are there more or less than 24 titles on the chart?": "## Target type: {'number'}\n## Query:\nStep1: Get all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if output_of_query2 is more than 24 or not\nQuery3: \"compare(set='output_of_query2', operator='>', value=24)\"",
    "name of the first nobel laureates from penn.": "None",
    "how many weeks was \"i see fire\" at number one?": "## Target type: {number of weeks}\n## Query:\nStep1: Find the entity named \"I See Fire\"\nQuery1: \"get_information(relation='Song title', tail_entity='I See Fire')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the week of output_of_query2\nQuery3: \"get_information(relation='Week', tail_entity='output_of_query2')\"\nStep4: Find the count of output_of_query3 where the value is \"1\"\nQuery4: \"count(set='output_of_query3', value='1')\"",
    "in how many games was the crowd above 20,000 people?": "None",
    "if ordering political parties from the most representatives to the least, which would come first?": "None",
    "how many total goals were scored between ue lleida and ud las palmas?": "None",
    "did al jackson air before or after kyle kinane?": "## Target type: {'Air Date'}\n## Query:\nStep1: Find the entity named Al Jackson\nQuery1: \"get_information(relation='Performer', tail_entity='Al Jackson')\"\nStep2: Find the air date of output_of_query1\nQuery2: \"get_information(relation='Air Date', head_entity='output_of_query1')\"\nStep3: Find the entity named Kyle Kinane\nQuery3: \"get_information(relation='Performer', tail_entity='Kyle Kinane')\"\nStep4: Find the air date of output_of_query3\nQuery4: \"get_information(relation='Air Date', head_entity='output_of_query3')\"\nStep5: Compare the air dates of output_of_query2 and output_of_query4 to determine the order\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4')\"",
    "how many total years did golding compete?": "None",
    "who is the first finisher from russia?": "None",
    "name one game that you can not play on the wii.": "None",
    "which area was featured after the south?": "None",
    "how many german women won medals?": "None",
    "who was first?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Rank = 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "if you were to arrange the locations from the smallest to largest area, which one would be first on the list?": "## Target type: {MAINLAND}\n## Query:\nStep1: Find all the entities with the relation of Area (sq miles)\nQuery1: \"get_information(relation='Area (sq miles)')\"\nStep2: Sort the output_of_query1 in ascending order\nQuery2: \"sort(set='output_of_query1', order='ascending')\"\nStep3: Get the first element of output_of_query2\nQuery3: \"get_information(relation='Area (sq miles)', tail_entity='output_of_query2')\"\nStep4: Find the MAINLAND of output_of_query3\nQuery4: \"get_information(relation='MAINLAND', head_entity='output_of_query3')\"",
    "in what year did miss pokhara last win the miss nepal award?": "None",
    "what season comes after 1986": "## Target type: {season}\n## Query:\nStep1: Find the entity that Season is 1986\nQuery1: \"get_information(relation='Season', tail_entity='1986')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Season of output_of_query4\nQuery5: \"get_information(relation='Season', head_entity='output_of_query4')\"",
    "what competition was his top performance?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Position is 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "what movie was he nominated the most times for?": "None",
    "who 2 players had at least 6 goals?": "## Target type: {players}\n## Query:\nStep1: Find the players with at least 6 goals\nQuery1: \"get_information(relation='goals', tail_entity>='6')\"\nStep2: Get the players from output_of_query1\nQuery2: \"get_information(relation='name', head_entity='output_of_query1')\"",
    "who has scored the most points this in the 2007 women's six nations championship?": "None",
    "what is the game after 81?": "None",
    "adam lyth has the lowest strike rate listed, who has the next lowest strike rate listed?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Adam Lyth\nQuery1: \"get_information(relation='Player', tail_entity='Adam Lyth')\"\nStep2: Find the strike rate of output_of_query1\nQuery2: \"get_information(relation='Strike Rate', head_entity='output_of_query1')\"\nStep3: Find the entity whose strike rate is larger than output_of_query2\nQuery3: \"get_information(relation='Strike Rate', tail_entity>'output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what was the difference in win percentage between john pawlowski and porter grant?": "## Target type: {win percentage difference}\n## Query:\nStep1: Find the entity named John Pawlowski\nQuery1: \"get_information(relation='Coach', tail_entity='John Pawlowski')\"\nStep2: Find the win percentage of output_of_query1\nQuery2: \"get_information(relation='Pct.', head_entity='output_of_query1')\"\nStep3: Find the entity named Porter Grant\nQuery3: \"get_information(relation='Coach', tail_entity='Porter Grant')\"\nStep4: Find the win percentage of output_of_query3\nQuery4: \"get_information(relation='Pct.', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate(set1='output_of_query2', operator='-', set2='output_of_query4')\"",
    "name a member number with a latitude above 60 s.": "None",
    "new zealand and wales played rugby union matches in the rugby world cup against in each other in 2003 and which other year?": "None",
    "the half-bridge's energy storage is not a transformer but what?": "## Target type: {'Energy storage'}\n## Query:\nStep1: Find the entity that is Half-Bridge\nQuery1: \"get_information(relation='Type', tail_entity='Half-bridge')\"\nStep2: Find the energy storage of output_of_query1\nQuery2: \"get_information(relation='Energy storage', head_entity='output_of_query1')\"\nStep3: Find the entity that is not a transformer\nQuery3: \"get_information(relation='Energy storage', tail_entity!='Transformer')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"",
    "what was the last locomotive?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many years passed between the historic listing of public libraries in quincy and bronson?": "None",
    "how much more are the weekly collections from cathedral of christ the king than most blessed sacrament catholic church?": "None",
    "who is the next artist after artist enomoto atsuko?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Enomoto Atsuko\nQuery1: \"get_information(relation='Artist(s)', tail_entity='Enomoto Atsuko')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Artist(s) of output_of_query4\nQuery5: \"get_information(relation='Artist(s)', head_entity='output_of_query4')\"",
    "how many non-finishers fates were unseated riders?": "## Target type: {number of non-finisher fates}\n## Query:\nStep1: Find the entities that have non-finisher fates\nQuery1: \"get_information(relation='Fate', tail_entity='non-finisher')\"\nStep2: Find the entities with unseated riders as fate\nQuery2: \"get_information(relation='Fate', tail_entity='unseated riders')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what city was the race held before montreal on august 24?": "## Target type: {city}\n## Query:\nStep1: Find the entity that Location is Montreal\nQuery1: \"get_information(relation='Location', tail_entity='Montreal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "amazon is at the top of the chart, but what is the name below it?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Amazon\nQuery1: \"get_information(relation='Name', tail_entity='Amazon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what album was released the same year as mind control?": "None",
    "how many years did an jae-sung play?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named An Jae-Sung\nQuery1: \"get_information(relation='Player', tail_entity='An Jae-Sung')\"\nStep2: Find the Years Played of output_of_query1\nQuery2: \"get_information(relation='Years Played', head_entity='output_of_query1')\"\nStep3: Calculate the number of years from output_of_query2\nQuery3: \"calculate_years(set='output_of_query2')\"",
    "how many matters have political party as their \"type\"?": "## Target type: {number of matters}\n## Query:\nStep1: Find the matters with the relation of Type\nQuery1: \"get_information(relation='Type', tail_entity='Political party')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "other members of the state regents from tulsa besides joseph l. parker jr.": "## Target type: {other members}\n## Query:\nStep1: Find the entity named Joseph L. Parker Jr.\nQuery1: \"get_information(relation='Name', tail_entity='Joseph L. Parker Jr.')\"\nStep2: Find the hometown of output_of_query1\nQuery2: \"get_information(relation='Hometown', head_entity='output_of_query1')\"\nStep3: Find all the row_numbers\nQuery3: \"get_information(relation='row_number')\"\nStep4: Find the entities with the same Hometown as output_of_query2\nQuery4: \"get_information(relation='Hometown', tail_entity='output_of_query2')\"\nStep5: Get the set difference of output_of_query4 and output_of_query1\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query1')\"",
    "what is the least number of points that daly won in a single seasons": "None",
    "how many actors/actresses took 20 years or less to complete egot?": "None",
    "who was the previous advisor before pete rouse?": "## Target type: {advisor}\n## Query:\nStep1: Find the entity named Pete Rouse\nQuery1: \"get_information(relation='Name', tail_entity='Pete Rouse')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many movies has ahsan been in?": "None",
    "how many consecutive compositions did the republicans win from 1865 to 1874?": "None",
    "which single was released after \"song i hate\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"Song I Hate\"\nQuery1: \"get_information(relation='Title', tail_entity='Song I Hate')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many titles does fortuna 60 have?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity named Fortuna 60\nQuery1: \"get_information(relation='Club', tail_entity='Fortuna 60')\"\nStep2: Find the titles of output_of_query1\nQuery2: \"get_information(relation='Titles', head_entity='output_of_query1')\"",
    "how many players play cb or og?": "## Target type: {number}\n## Query:\nStep1: Find the players who play CB\nQuery1: \"get_information(relation='Position', tail_entity='CB')\"\nStep2: Find the players who play OG\nQuery2: \"get_information(relation='Position', tail_entity='OG')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many orbit pair have no notes?": "None",
    "what are the total number of radio stations on this list?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year did it only take place in sherbrooke, canada?": "## Target type: {year}\n## Query:\nStep1: Find the entity where venue is Sherbrooke, Canada\nQuery1: \"get_information(relation='Venue', tail_entity='Sherbrooke, Canada')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "which player won more money that skee riegel?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Skee Riegel\nQuery1: \"get_information(relation='Player', tail_entity='Skee Riegel')\"\nStep2: Find the money of output_of_query1\nQuery2: \"get_information(relation='Money ($)', head_entity='output_of_query1')\"\nStep3: Find the entity with more money than output_of_query2\nQuery3: \"get_information(relation='Money ($)', tail_entity>'output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the total number of times chelsea williams was the winner between 2007 and 2010?": "None",
    "was delaware's land area above or below 45 square miles?": "## Target type: {comparison result: above or below}\n## Query:\nStep1: Find the entity named Delaware\nQuery1: \"get_information(relation='Township', tail_entity='Delaware')\"\nStep2: Find the Land area of output_of_query1\nQuery2: \"get_information(relation='Land area km\u00b2 (sq mi)', head_entity='output_of_query1')\"\nStep3: Find the square miles of output_of_query2\nQuery3: \"get_information(relation='sq mi', tail_entity='output_of_query2')\"\nStep4: Compare the square miles with 45\nQuery4: \"compare(value='45', set='output_of_query3')\"",
    "what tv network showed the largest number of games during the 2010/2011 season?": "None",
    "who was the first team a.c milan played against in the uefa championship league?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Match\nQuery1: \"get_information(relation='Match', tail_entity='1')\"\nStep2: Find the opponent team of output_of_query1\nQuery2: \"get_information(relation='Opponent team', head_entity='output_of_query1')\"",
    "the russian title of track 03 is &#1042;&#1086;&#1089;&#1082;&#1086;&#1074;&#1099;&#1077; &#1092;&#1080;&#1075;&#1091;&#1088;&#1099;, but what is the the english title?": "None",
    "what is the number of times the total population was 6,000 or more?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the output_of_query1 that is greater than or equal to 6000\nQuery2: \"get_information(relation='Total', tail_entity>='6000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what school did the last spouse attend?": "None",
    "who is first on the roster?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many people attended the 2000 animeiowa?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named AnimeIowa\nQuery1: \"get_information(relation='Name', tail_entity='AnimeIowa')\"\nStep2: Find the attendance of output_of_query1 in 2000\nQuery2: \"get_information(relation='2000 attendance', head_entity='output_of_query1')\"",
    "who was the next priest after seitz michael?": "None",
    "who is the only player to have 3 fl trophies?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of FL Trophy equals to 3\nQuery1: \"get_information(relation='FL Trophy', tail_entity='3')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: If output_of_query2 equals to 1, find the Name of output_of_query1\nQuery3: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "was pick #137's nationality united states, soviet union, or canada?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity with the relation of Pick # and value 137\nQuery1: \"get_information(relation='Pick #', tail_entity='137')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "how many representatives come from the green wind party?": "None",
    "who was the next rider after tetsuya harada?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Tetsuya Harada\nQuery1: \"get_information(relation='Rider', tail_entity='Tetsuya Harada')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "how many total gold medals were awarded?": "None",
    "what team had the first pick in round 17 of the 1969 nfl draft?": "None",
    "who was the next head coach after marty brill?": "None",
    "what was the number of people who attended game number six?": "## Target type: {'Attendance'}\n## Query:\nStep1: Find the row_number of game number six\nQuery1: \"get_information(relation='Game', tail_entity='6')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "who scored the least on whitewater kayak?": "None",
    "\"niji-iro no sneaker\" was released on march 5, 1991; which single was released the previous year?": "None",
    "total number of games in the season, including playoff games?": "## Target type: {number}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which player is listed first in the table?": "None",
    "what is the total amount of winnings for the united states in gold, silver and bronze?": "None",
    "did the liberal party of canada have more or less members after the dissolution of the 37th parliament of canada in the senate?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity in the Senate Members after the 37th parliament dissolution\nQuery1: \"get_information(relation='Senate Members', head_entity='37th parliament dissolution')\"\nStep2: Get the entity with the relation of Affiliation\nQuery2: \"get_information(relation='Affiliation')\"\nStep3: Find the entity named Liberal Party of Canada in output_of_query2\nQuery3: \"get_information(relation='Affiliation', tail_entity='Liberal Party of Canada')\"\nStep4: Compare the number of members in output_of_query1 and output_of_query3\nQuery4: \"compare(set1='output_of_query1', set2='output_of_query3')\"",
    "of the managerial changes in the 2007-08 football league championship season, of which were there more: managers who were fired or managers who left through mutual consent?": "## Target type: {'Manner of departure'}\n## Query:\nStep1: Find the entity that Manner of departure is 'Mutual consent'\nQuery1: \"get_information(relation='Manner of departure', tail_entity='Mutual consent')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\" \nStep3: Find the entity that Manner of departure is 'Fired'\nQuery3: \"get_information(relation='Manner of departure', tail_entity='Fired')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\" \nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "which president is listed at the top of the chart?": "None",
    "how many different kit manufacturers are involved?": "## Target type: {number}\n## Query:\nStep1: Find all the Kit manufacturers\nQuery1: \"get_information(relation='Kit manufacturer')\"\nStep2: Get the number of unique kit manufacturers\nQuery2: \"count(set='output_of_query1')\"",
    "does belgium or france have more people appointed?": "None",
    "what is the last track on the list?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "the number of delegates in competition": "## Target type: {number}\n## Query:\nStep1: Find the entity named Contestant\nQuery1: \"get_information(relation='Contestant')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of games in which one team was left with a score of 0?": "None",
    "how long was the biggest losing streak?": "None",
    "who was director after rajeshwar prasad?": "None",
    "heikki kovalainen and lewis hamilton both had which constructor?": "## Target type: {constructor}\n## Query:\nStep1: Find the entity named Heikki Kovalainen\nQuery1: \"get_information(relation='Driver', tail_entity='Heikki Kovalainen')\"\nStep2: Find the constructor of output_of_query1\nQuery2: \"get_information(relation='Constructor', head_entity='output_of_query1')\"\nStep3: Find the entity named Lewis Hamilton\nQuery3: \"get_information(relation='Driver', tail_entity='Lewis Hamilton')\"\nStep4: Find the constructor of output_of_query3\nQuery4: \"get_information(relation='Constructor', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which ship sunk the most u-boats": "## Target type: {'Sunk by'}\n## Query:\nStep1: Find the entity with the relation 'Sunk by'\nQuery1: \"get_information(relation='Sunk by')\"\nStep2: Find the count of each entity in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the most count\nQuery3: \"get_information(relation='Sunk by', tail_entity>='most')\"",
    "other than rough cut, name another movie that he won an award for in 2008.": "None",
    "which nfl blitz installment was released in the same year as nfl blitz special edition?": "None",
    "how many more seats does at&t stadium have than ford field?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity named AT&T Stadium\nQuery1: \"get_information(relation='Stadium', tail_entity='AT&T Stadium')\"\nStep2: Find the entity named Ford Field\nQuery2: \"get_information(relation='Stadium', tail_entity='Ford Field')\"\nStep3: Find the Capacity of output_of_query1\nQuery3: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep4: Find the Capacity of output_of_query2\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"calculate_difference(set1='output_of_query3', set2='output_of_query4')\"",
    "how many riders manufacturer is honda?": "## Target type: {number}\n## Query:\nStep1: Find the riders with the manufacturer of Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was natalia lesz's most popular song, according to the polish charts?": "None",
    "what was the number of days of the denver open?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Denver Open\nQuery1: \"get_information(relation='Event', tail_entity='Denver Open')\"\nStep2: Find the Dates of output_of_query1\nQuery2: \"get_information(relation='Dates', head_entity='output_of_query1')\" \nStep3: Calculate the number of days of output_of_query2 \nQuery3: \"calculate_difference(set='output_of_query2')\"",
    "how many consecutive years did rosenborg win gold?": "None",
    "name the first pornographic film listed on the table.": "None",
    "what position did madonna rank on the top 40 singles of 1995 chart?": "## Target type: {position}\n## Query:\nStep1: Find the entity that Artist is Madonna\nQuery1: \"get_information(relation='Artist', tail_entity='Madonna')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Position of output_of_query2\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"",
    "how many total goals were scored against nigeria?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Nigeria\nQuery1: \"get_information(relation='Opponent', tail_entity='Nigeria')\"\nStep2: Find the total goals against output_of_query1\nQuery2: \"get_information(relation='Goal', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "next to mystique's \"op zo'n dag\", who had the least amount of points?": "None",
    "how many of the players weigh under 200 lbs?": "None",
    "what was the first record broken?": "## Target type: {'Record'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Record of output_of_query3\nQuery4: \"get_information(relation='Record', head_entity='output_of_query3')\"",
    "did each player who had 6 caps score over 3 goals?": "## Target type: {boolean}\n## Query:\nStep1: Find the player who had 6 caps\nQuery1: \"get_information(relation='Caps', tail_entity='6')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the player who did not score over 3 goals\nQuery3: \"get_information(relation='Goals', tail_entity<='3')\"\nStep4: Find the intersection of output_of_query1 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query3')\"\nStep5: Check if output_of_query4 is an empty set\nQuery5: \"is_empty(set='output_of_query4')\"",
    "on what date did the detroit tigers play the cleveland indians?": "None",
    "which country has won more gold medals: china or mexico?": "## Target type: {country}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Gold', tail_entity='China')\"\nStep2: Find the entity named Mexico\nQuery2: \"get_information(relation='Gold', tail_entity='Mexico')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"if output_of_query3 > output_of_query4, then 'China', else 'Mexico'\"",
    "is the relative cost of the flyback above or below 1.5?": "## Target type: {relative cost}\n## Query:\nStep1: Find the entity with the relation of Type as 'Flyback'\nQuery1: \"get_information(relation='Type', tail_entity='Flyback')\"\nStep2: Find the relative cost of output_of_query1\nQuery2: \"get_information(relation='Relative cost', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is above or below 1.5\nQuery3: \"compare(value='output_of_query2', operator='<', key='1.5')\"",
    "what is the last album to win?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "how many portions are lo?cated in netanya": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Netanya\nQuery1: \"get_information(relation='Location', tail_entity='Netanya')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year did this team finish the same in the open cup as they did in 2004?": "None",
    "how long did operation sky monitor last?": "None",
    "other than lake ercek, name a lake in van.": "None",
    "how many dukedoms are listed?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Title that contains \"Duke\"\nQuery1: \"get_information(relation='Title', tail_entity~='Duke')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which network comes after cootel in alphabetical order?": "None",
    "what is the name of first visitor on this chart?": "## Target type: {visitor}\n## Query:\nStep1: Find the entity at row_number 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the visitor of output_of_query1\nQuery2: \"get_information(relation='Visitor', head_entity='output_of_query1')\"",
    "how many miles is the us 522 south - berkeley springs, wv location?": "None",
    "how many countries did not win any gold medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entities where Gold is 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the top ten women from the 2007 women's six nations championship played for england": "None",
    "who won more silvers, venezuela or chile?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Chile\nQuery3: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Compare the silvers obtained by output_of_query1 and output_of_query3\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='>')\"\nStep6: If output_of_query5 is True, then output_of_query1, else output_of_query3.",
    "what is the number of games from produced from 1963 to 1973?": "None",
    "what is the difference in employees for rank 1 and rank 3?": "None",
    "what is the population of the yamato flat inland plain": "## Target type: {population}\n## Query:\nStep1: Find the entity named Yamato flat inland plain\nQuery1: \"get_information(relation='District', tail_entity='Yamato flat inland plain')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "what is the total purse amount for the salta open and the tandil open?": "## Target type: {purse amount}\n## Query:\nStep1: Find the tournament named Salta Open\nQuery1: \"get_information(relation='Tournament', tail_entity='Salta Open')\"\nStep2: Find the purse amount of output_of_query1\nQuery2: \"get_information(relation='Purse ($)', head_entity='output_of_query1')\"\nStep3: Find the tournament named Tandil Open\nQuery3: \"get_information(relation='Tournament', tail_entity='Tandil Open')\"\nStep4: Find the purse amount of output_of_query3\nQuery4: \"get_information(relation='Purse ($)', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"",
    "what core diameter (in) comes after 0.0930?": "## Target type: {core diameter (in)}\n## Query:\nStep1: Find the entity with Core diameter (in) is 0.0930\nQuery1: \"get_information(relation='Core diameter (in)', tail_entity='0.0930')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Core diameter (in) of output_of_query4\nQuery5: \"get_information(relation='Core diameter (in)', head_entity='output_of_query4')\"",
    "tourism income in latin american countries in 2003 was at most what percentage of gdp?": "None",
    "what is the name of the swara that comes after panchama?": "## Target type: {swara}\n## Query:\nStep1: Find the entity named Panchama\nQuery1: \"get_information(relation='Swara', tail_entity='Panchama')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Swara of output_of_query4\nQuery5: \"get_information(relation='Swara', head_entity='output_of_query4')\"",
    "who was the oldest player on the squad in the 2011-12 season?": "None",
    "is there a difference between marker name 2 and 4?": "None",
    "how long was the longest military career for a canadian house of commons member?": "None",
    "what number of athletes had times that were below 12.40?": "None",
    "how long did it take for croatia to qualify after the 2006 world cup?": "None",
    "which school has the least number of students attending it?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Enrollment\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Enrollment\nQuery3: \"get_information(relation='Enrollment', tail_entity='output_of_query2')\"\nStep4: Find the Institution name of output_of_query3\nQuery4: \"get_information(relation='Institution', head_entity='output_of_query3')\"",
    "when was the last ship laid down?": "None",
    "how long did it take piotr to run the medley relay in 2001?": "None",
    "how many ships were attacked by u-502 but not sunk?": "None",
    "when did \u00e1d\u00e1m szalai make his first international goal?": "None",
    "what party had the least number of seats?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Seats\nQuery1: \"get_information(relation='Seats')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Seats\nQuery3: \"get_information(relation='Seats', tail_entity='output_of_query2')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "how many managers were fired before november 2007?": "None",
    "how long is the song look through my eyes by everlife?": "## Target type: {length}\n## Query:\nStep1: Find the entity named Everlife\nQuery1: \"get_information(relation='Performer(s)', tail_entity='Everlife')\"\nStep2: Find the entity named Look Through My Eyes\nQuery2: \"get_information(relation='Title', tail_entity='Look Through My Eyes')\"\nStep3: Find the length of output_of_query2\nQuery3: \"get_information(relation='Length', head_entity='output_of_query2')\"",
    "what is the average windspeed brussels had?": "None",
    "number of nominations in 2009": "## Target type: {number of nominations}\n## Query:\nStep1: Find the entity with the relation of Year is 2009\nQuery1: \"get_information(relation='Year', tail_entity='2009')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many were released after power man?": "## Target type: {number}\n## Query:\nStep1: Find the entity titled Power Man\nQuery1: \"get_information(relation='Title', tail_entity='Power Man')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities released after output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which date is below april 17, 1854": "None",
    "what type of record group is above the asian record group?": "None",
    "when was the last wimbledon won?": "None",
    "how many people live in tortona?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Tortona\nQuery1: \"get_information(relation='City', tail_entity='Tortona')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "how many lifts are detach quads?": "## Target type: {number of lifts}\n## Query:\nStep1: Find the lifts with the type of 'detach quad'\nQuery1: \"get_information(relation='Type', tail_entity='detach quad')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the date of the last playoff game?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "in how many races did michael andretti come in pole position?": "None",
    "what is the highest number of consecutive wins that the fighting irish had in the 1946 season?": "None",
    "name the only american who did not finish the race.": "None",
    "did babin record more sacks for houston or for jacksonville?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Babin\nQuery1: \"get_information(relation='Name', tail_entity='Babin')\"\nStep2: Find the sacks of output_of_query1\nQuery2: \"get_information(relation='Sacks', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Team\nQuery3: \"get_information(relation='Team')\"\nStep4: Find the sacks of output_of_query3\nQuery4_houston: \"get_information(relation='Sacks', tail_entity='output_of_query3', head_entity='Houston')\"\nQuery4_jacksonville: \"get_information(relation='Sacks', tail_entity='output_of_query3', head_entity='Jacksonville')\"\nStep5: Compare the sacks between output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many station are located in kita-ku, okayama?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entity that the Location is Kita-ku, Okayama\nQuery1: \"get_information(relation='Location', tail_entity='Kita-ku, Okayama')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many grand slam events are there?": "None",
    "how many total players are on the current roster?": "None",
    "which is taller, the aep building or the one columbus center?": "## Target type: {building}\n## Query:\nStep1: Find the entity named AEP Building\nQuery1: \"get_information(relation='Name', tail_entity='AEP Building')\"\nStep2: Find the height of output_of_query1 in ft/m\nQuery2: \"get_information(relation='Height ft / m', head_entity='output_of_query1')\"\nStep3: Find the entity named One Columbus Center\nQuery3: \"get_information(relation='Name', tail_entity='One Columbus Center')\"\nStep4: Find the height of output_of_query3 in ft/m\nQuery4: \"get_information(relation='Height ft / m', head_entity='output_of_query3')\"\nStep5: Compare the height of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='larger')\"",
    "the artist ash only had one song that appeared in the o.c. what is the name of that song?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named Ash\nQuery1: \"get_information(relation='Artist', tail_entity='Ash')\"\nStep2: Find the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "how many goalies did the islanders draft?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Position is Goalie\nQuery1: \"get_information(relation='Position', tail_entity='Goalie')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which code is above cl": "## Target type: {code}\n## Query:\nStep1: Find the entity named CL\nQuery1: \"get_information(relation='Code', tail_entity='CL')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Code of output_of_query4\nQuery5: \"get_information(relation='Code', head_entity='output_of_query4')\"",
    "which tornado event occurred after the late-may 1965 tornado outbreak?": "None",
    "what was the number of clubs that entered administration in 1992?": "None",
    "what was the average combined score in february, 2009?": "None",
    "who has a lower strike rate, anthony mcgrath or tim bresnan?": "## Target type: {Player}\n## Query:\nStep1: Find the entity named Anthony McGrath\nQuery1: \"get_information(relation='Player', tail_entity='Anthony McGrath')\"\nStep2: Find the Strike Rate of output_of_query1\nQuery2: \"get_information(relation='Strike Rate', head_entity='output_of_query1')\"\nStep3: Find the entity named Tim Bresnan\nQuery3: \"get_information(relation='Player', tail_entity='Tim Bresnan')\"\nStep4: Find the Strike Rate of output_of_query3\nQuery4: \"get_information(relation='Strike Rate', head_entity='output_of_query3')\"\nStep5: Compare the Strike Rate of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"<br>",
    "what was the only opponent that had a result of 4-0?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the entity with the relation of Result is '4-0'\nQuery1: \"get_information(relation='Result', tail_entity='4-0')\"\nStep2: Find the Opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "what is the long name for m63?": "None",
    "which country conceded the least goals?": "None",
    "madeline cripe directed \"burnin' down the house\". what was the next episode she directed?": "None",
    "how many weeks was babou safe on the x factor": "None",
    "which place has the most women?": "None",
    "how long after farley was seward elected?": "None",
    "how many games did the 1981 atlanta falcons win?": "None",
    "what player is below pankaj roy?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Pankaj Roy\nQuery1: \"get_information(relation='Player', tail_entity='Pankaj Roy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "which team did lau nim yat play for after he was transferred?": "## Target type: {'Transferred to'}\n## Query:\nStep1: Find the entity named Lau Nim Yat\nQuery1: \"get_information(relation='Player', tail_entity='Lau Nim Yat')\"\nStep2: Find the Transferred to of output_of_query1\nQuery2: \"get_information(relation='Transferred to', head_entity='output_of_query1')\"",
    "which game had a bigger attendance, week four at carolina or week thirteen at seattle?": "None",
    "which team had the same number of losses as the new york yankees' wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity named New York Yankees\nQuery1: \"get_information(relation='Team', tail_entity='New York Yankees')\"\nStep2: Find the wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Find the entity that has the same number of losses as output_of_query2's wins\nQuery3: \"get_information(relation='Losses', tail_entity='output_of_query2')\"",
    "which country has the most bronze medals in european baseball championships?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Bronze medals\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what is the total number of translations?": "None",
    "how many candidates got more than 5% of the votes?": "None",
    "how many players won in 2013?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 2013\nQuery1: \"get_information(relation='Year', tail_entity='2013')\"\nStep2: Find the players of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what circuit is listed below autodromo di pergusa, enna?": "None",
    "how many countries appear at least four times?": "None",
    "count the number of schools with \"cy\" governments.": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools with government \"CY\"\nQuery1: \"get_information(relation='Gov', tail_entity='CY')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in kw between naga and bacolod radio?": "None",
    "fort gratiot lighthouse and fort st. joseph are located in what city?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Fort Gratiot Lighthouse\nQuery1: \"get_information(relation='Name', tail_entity='Fort Gratiot Lighthouse')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"\nStep3: Find the entity named Fort St. Joseph\nQuery3: \"get_information(relation='Name', tail_entity='Fort St. Joseph')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "did liz larin or ty stone win more categories?": "None",
    "how many total points did eric langton score?": "## Target type: {number of total points}\n## Query:\nStep1: Find the entity named Eric Langton\nQuery1: \"get_information(relation='Rider', tail_entity='Eric Langton')\"\nStep2: Find the Total Points of output_of_query1\nQuery2: \"get_information(relation='Total Points', head_entity='output_of_query1')\"",
    "which transfer in was next after john salako's in 2002?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named John Salako\nQuery1: \"get_information(relation='Name', tail_entity='John Salako')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "total number of gangster games released.": "None",
    "what is the total number of doubles tournaments stephanie has won?": "None",
    "did he act longer on sinndoor tere naam ka or saat phere?": "None",
    "what component comes after bluetooth?": "None",
    "how many songs sung were by cl\u00e1udio zoli?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity named Cl\u00e1udio Zoli\nQuery1: \"get_information(relation='Original Artist', tail_entity='Cl\u00e1udio Zoli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Count the number of songs sung by Cl\u00e1udio Zoli\nQuery3: \"count(set='output_of_query2')\"",
    "what are the number of villages johiya has according to this chart?": "## Target type: {number of villages}\n## Query:\nStep1: Find the entity named Johiya\nQuery1: \"get_information(relation='Name of Kingdom', tail_entity='Johiya')\"\nStep2: Find the number of villages of output_of_query1\nQuery2: \"get_information(relation='No. of villages', head_entity='output_of_query1')\"",
    "how many nations have a total of 1 medal won?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entity that has a total of 1 medal won\nQuery1: \"get_information(relation='Total', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps did tony stewart race in 2012?": "None",
    "which song was the toadies first single?": "None",
    "what is the total years on the chart": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "lavia is ranked 6, but who is ranked above it?": "None",
    "who is immediately before biro on the list?": "None",
    "how many years in the nba did mark madsen play?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Mark Madsen\nQuery1: \"get_information(relation='Name', tail_entity='Mark Madsen')\"\nStep2: Find the years in NBA of output_of_query1\nQuery2: \"get_information(relation='Years in NBA', head_entity='output_of_query1')\"",
    "where was the location on september 14?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Date is September 14\nQuery1: \"get_information(relation='Date', tail_entity='September 14')\"\nStep2: Find the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "is each white strip discontinued?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Crest Whitestrips 3D Vivid\nQuery1: \"get_information(relation='Model', tail_entity='Crest Whitestrips 3D Vivid')\"\nStep2: Find the Last of whiteness of output_of_query1\nQuery2: \"get_information(relation='Last of whiteness', head_entity='output_of_query1')\"\nStep3: Check if the output_of_query2 contains the word \"discontinued\"\nQuery3: \"contains(string='output_of_query2', substring='discontinued')\"",
    "which woman finished first in the 1971 world figured skating championships?": "## Target type: {Name}\n## Query:\nStep1: Find the entity that won the 1971 World Figure Skating Championships\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the difference between the per capita income in richland county and in sheridan county?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Richland County\nQuery1: \"get_information(relation='County', tail_entity='Richland County')\"\nStep2: Find the per capita income of output_of_query1\nQuery2: \"get_information(relation='Per capita income', head_entity='output_of_query1')\"\nStep3: Find the entity named Sheridan County\nQuery3: \"get_information(relation='County', tail_entity='Sheridan County')\"\nStep4: Find the per capita income of output_of_query3\nQuery4: \"get_information(relation='Per capita income', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "did crystal-eizou venus or crystal-eizou grace make tawawana 18 sai shoko goto?": "## Target type: {'Company'}\n## Query:\nStep1: Find the entity that is Crystal-Eizou Venus\nQuery1: \"get_information(relation='Company', tail_entity='Crystal-Eizou Venus')\"\nStep2: Find the entity that is Crystal-Eizou Grace\nQuery2: \"get_information(relation='Company', tail_entity='Crystal-Eizou Grace')\"\nStep3: Find the Video title that is 'Tawawana 18 Sai Shoko Goto'\nQuery3: \"get_information(relation='Video title', tail_entity='Tawawana 18 Sai Shoko Goto')\"\nStep4: Check if output_of_query1 or output_of_query2 made output_of_query3\nQuery4: \"is_in(set1='output_of_query3', set2='output_of_query1') or is_in(set1='output_of_query3', set2='output_of_query2')\"",
    "how many entrants have names that contain the word \"team\"?": "None",
    "who was the first miami heat player to have their jersey retired?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Team is Miami Heat\nQuery1: \"get_information(relation='Team', tail_entity='Miami Heat')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min Row Number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "besides c.d. arcense which other team has 17 points?": "## Target type: {team}\n## Query:\nStep1: Find the entity named C.D. Arcense\nQuery1: \"get_information(relation='Team', tail_entity='C.D. Arcense')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity whose points is 17\nQuery3: \"get_information(relation='Points', tail_entity='17')\"\nStep4: Get the set_difference of output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "which is the only winner who had 100% of votes?": "## Target type: {Winner}\n## Query:\nStep1: Find the entity with the relation of Percentage of Votes\nQuery1: \"get_information(relation='Percentage of Votes')\"\nStep2: Find the entity with 100% of votes\nQuery2: \"get_information(relation='Percentage of Votes', tail_entity='100%')\"\nStep3: Find the winner of output_of_query2\nQuery3: \"get_information(relation='Winner', head_entity='output_of_query2')\"",
    "what is the total number of buildings that are monuments?": "None",
    "which contestant is the same age as chris hodgson?": "None",
    "how many teams played them in october?": "None",
    "starting with the 2007 - 08 season, does ecs kempten appear in any of the previous years?": "None",
    "who was the opponent in the last game played?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "how many times was nina hagan the evil queen?": "None",
    "who has had only 7 gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold', tail_entity='7')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "name a competition listed more than eaff east asian cup.": "None",
    "which album was released after \"raw\"?": "## Target type: {album}\n## Query:\nStep1: Find the album named \"Raw\"\nQuery1: \"get_information(relation='Album', tail_entity='Raw')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "did zhao dan star in more movies in the 1940s or 1950s?": "None",
    "what staple has the most potassium?": "None",
    "what was the largest difference in goals scored in any game?": "## Target type: {goals}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Split the result into two parts (number of goals scored by home team and number of goals scored by away team)\nQuery2: \"split(output_of_query1, '-')\"\nStep3: Calculate the difference between two numbers in output_of_query2\nQuery3: \"abs(int(output_of_query2[0]) - int(output_of_query2[1]))\"\nStep4: Find the max output_of_query3\nQuery4: \"max(set='output_of_query3')\"",
    "how many games did the irish win by at least 30 points?": "None",
    "the theoretical lorentzen cycle has the same cop variation at 45 degrees celsius as what other pump at 35 degrees celsius?": "## Target type: {Pump type and source}\n## Query:\nStep1: Find the Pump type and source at 45 degrees Celsius\nQuery1: \"get_information(relation='45 \u00b0C (e.g. heated screed floor)', tail_entity='7.1')\"\nStep2: Find the Pump type and source at 35 degrees Celsius\nQuery2: \"get_information(relation='35 \u00b0C (e.g. heated screed floor)', tail_entity='8.8')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "what is the name of the only airport in portugal that is among the 10 busiest routes to and from london southend airport in 2012?": "## Target type: {airport}\n## Query:\nStep1: Find the entity named London Southend Airport\nQuery1: \"get_information(relation='Airport', tail_entity='London Southend Airport')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row numbers that are among the 10 busiest routes to and from London Southend Airport in 2012\nQuery3: \"get_information(relation='row_number', tail_entity<='10')\"\nStep4: Find the airports that have the row_number in output_of_query3\nQuery4: \"get_information(relation='Airport', head_entity='output_of_query3')\"\nStep5: Find the airport that is in Portugal\nQuery5: \"get_information(relation='Airport', tail_entity='Portugal')\"",
    "what is the name of the last cahokia phase?": "## Target type: {'Cahokia Phases'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Cahokia Phases of output_of_query3\nQuery4: \"get_information(relation='Cahokia Phases', head_entity='output_of_query3')\"",
    "only state senator who caucuses with idc whose last name ends in 'v'": "None",
    "how many films does jennifer tilly do a voice over role in?": "None",
    "how many iops can the ocz vertex 3 handle at most?": "## Target type: {IOPS}\n## Query:\nStep1: Find the entity named OCZ Vertex 3\nQuery1: \"get_information(relation='Device', tail_entity='OCZ Vertex 3')\"\nStep2: Find the IOPS of output_of_query1\nQuery2: \"get_information(relation='IOPS', head_entity='output_of_query1')\"\nStep3: Get the max of output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "who is the top in giant slalom": "None",
    "what are the total number of laps driven by scott pruett?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Scott Pruett\nQuery1: \"get_information(relation='Driver', tail_entity='Scott Pruett')\"\nStep2: Find the total number of laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many seasons finishing better than 7th place?": "None",
    "what was the first movie ishaan dev created a song for?": "## Target type: {FILM}\n## Query:\nStep1: Find the entity named Ishaan Dev\nQuery1: \"get_information(relation='SONG', tail_entity='Ishaan Dev')\"\nStep2: Find the first movie of output_of_query1\nQuery2: \"get_information(relation='FILM', head_entity='output_of_query1')\"",
    "which player is from the united states and played on the springfield jr. blues?": "## Target type: {player}\n## Query:\nStep1: Find the entity from the United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Find the entity that played on the Springfield Jr. Blues\nQuery2: \"get_information(relation='College/Junior/Club Team (League)', tail_entity='Springfield Jr. Blues')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what was the finishing place of the last race in december 2010?": "## Target type: {place}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"\nStep5: Check if output_of_query4 contains \"December 2010\"\nQuery5: \"contains(set='output_of_query4', value='December 2010')\"\nStep6: Get the Place of output_of_query3 if output_of_query5 is True\nQuery6: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "what is the title of queen's song on the chart?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of Artist as Queen\nQuery1: \"get_information(relation='Artist', tail_entity='Queen')\"\nStep2: Find the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "he scored at least how many points on haiti": "None",
    "how many russians finished at least 3rd in the 20km walk?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Nationality is Russia\nQuery1: \"get_information(relation='Nationality', tail_entity='Russia')\"\nStep2: Find the rank of output_of_query1 is at least 3\nQuery2: \"get_information(relation='Rank', tail_entity>='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many teams finished in less than 45?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entities that have a Result less than 45\nQuery1: \"get_information(relation='Result', tail_entity<'45')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what film did the actor star in after \"street angel\"?": "## Target type: {'English Title'}\n## Query:\nStep1: Find the entity that English Title is \"Street Angel\"\nQuery1: \"get_information(relation='English Title', tail_entity='Street Angel')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the English Title of output_of_query4\nQuery5: \"get_information(relation='English Title', head_entity='output_of_query4')\"",
    "which was the only competition to occur in china?": "## Target type: {competition}\n## Query:\nStep1: Find the entity whose venue is China\nQuery1: \"get_information(relation='Venue', tail_entity='China')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "before the match against germany, who was the previous friendly match against?": "None",
    "what year did the champions have a 3-0 record before 1983?": "None",
    "which airline has the most listed destinations?": "None",
    "how many more consoles can bionicle heroes be played on than bionicle: the game?": "None",
    "how much larger was the attendance on 11/25/2013 than 12/21/2013?": "## Target type: {attendance difference}\n## Query:\nStep1: Find the entity with the relation of Date as 11/25/2013\nQuery1: \"get_information(relation='Date', tail_entity='11/25/2013')\"\nStep2: Get the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date as 12/21/2013\nQuery3: \"get_information(relation='Date', tail_entity='12/21/2013')\"\nStep4: Get the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the attendance difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtraction(set1='output_of_query2', set2='output_of_query4'))\"",
    "dvd shorter than 5 episodes": "None",
    "what was the average age of the first three on the list?": "None",
    "how many films have no notes?": "None",
    "who was the last head of medici?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what was the time of the last finisher?": "## Target type: {time}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"",
    "for how many consecutive years did juan g\u00f3mez gonz\u00e1lez score international goals?": "None",
    "which competition has the least notes?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Notes\nQuery3: \"get_information(relation='Notes', tail_entity='output_of_query2')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "how many solid base singles charted on the finnish singles chart?": "None",
    "what is the name of the last network listed on this chart?": "## Target type: {'Network'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Network of output_of_query3\nQuery4: \"get_information(relation='Network', head_entity='output_of_query3')\"",
    "which of each game in 2007 was in the 2nd position?": "None",
    "which african country had more total medal wins then nigeria?": "## Target type: {country}\n## Query:\nStep1: Find the entity that is Nigeria\nQuery1: \"get_information(relation='Nation', tail_entity='Nigeria')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose total medals is larger than output_of_query2\nQuery3: \"get_information(relation='Total', tail_entity>'output_of_query2')\"\nStep4: Find the entity that is from Africa\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "are there more or less than 2 winners in the 3rd medal listed?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity of the 3rd medal listed\nQuery1: \"get_information(relation='Medal', tail_entity='3')\"\nStep2: Check if there are more or less than 2 winners in output_of_query1\nQuery2: \"if(count(set='output_of_query1') > 2, 'more', 'less')\"",
    "other than audio, what type of payload types are there?": "None",
    "what is the average variation when using ground source heat pump water at 0degrees.": "None",
    "in how many consecutive games was ty lawson the player with the most assists?": "None",
    "which team won more matches, finland or norway?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Team', tail_entity='Finland')\"\nStep2: Find the matches won by output_of_query1\nQuery2: \"get_information(relation='Won', head_entity='output_of_query1')\"\nStep3: Find the entity named Norway\nQuery3: \"get_information(relation='Team', tail_entity='Norway')\"\nStep4: Find the matches won by output_of_query3\nQuery4: \"get_information(relation='Won', head_entity='output_of_query3')\"\nStep5: Compare the matches won by output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='greater')\"",
    "which tribunal sentenced the largest number of executions?": "None",
    "when was there a larger amount of natural change than in 1980?": "None",
    "which county had 15.79% for seymour?": "## Target type: {county}\n## Query:\nStep1: Find the entity named Seymour\nQuery1: \"get_information(relation='Seymour', tail_entity='15.79%')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "how many total evening gown scores above 9.000 were given?": "## Target type: {number}\n## Query:\nStep1: Find the evening gown scores above 9.000\nQuery1: \"get_information(relation='Evening Gown', tail_entity>'9.000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of rounds?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who directed the punisher?": "None",
    "what is the number of losses for dinamo tiran\u00eb": "## Target type: {number of losses}\n## Query:\nStep1: Find the entity named Dinamo Tiran\u00eb\nQuery1: \"get_information(relation='Opponent', tail_entity='Dinamo Tiran\u00eb')\"\nStep2: Find the losses of output_of_query1\nQuery2: \"get_information(relation='Losses', head_entity='output_of_query1')\"",
    "nama player that rode a honda and also placed.": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Manufacturer as Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Find the entity with the relation of Pos as Placed\nQuery2: \"get_information(relation='Pos', tail_entity='Placed')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "in the last season 2011-2012 what was the teams finishing place?": "## Target type: {'Place'}\n## Query:\nStep1: Find the entity named last season 2011-2012\nQuery1: \"get_information(relation='Season', tail_entity='2011-2012')\"\nStep2: Find the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"",
    "how many consecutive wins has philippe gilbert won?": "None",
    "how many teams have the same amount of promotions as scafati basket?": "None",
    "how many drivers completed the 2007 steelback grand prix?": "None",
    "which co-star of 'night journey' also performed the theme song to the show?": "None",
    "who had the most free throws?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Free Throws\nQuery1: \"get_information(relation='Free Throws')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Free Throws\nQuery3: \"get_information(relation='Free Throws', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who had more gold medals than the soviet union?": "None",
    "what is the difference of stations available between the higashiyama line and the kamiida line?": "None",
    "what is the first title on this chart?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which other districts besides castries has a population that is more than 20,000?": "None",
    "what is the total amount of members in the socialist group not including caucusing members?": "## Target type: {total amount of members}\n## Query:\nStep1: Find the entity named Socialist\nQuery1: \"get_information(relation='Group', tail_entity='Socialist')\"\nStep2: Find the total amount of members of output_of_query1\nQuery2: \"get_information(relation='Members', head_entity='output_of_query1')\"\nStep3: Find the caucusing members of output_of_query1\nQuery3: \"get_information(relation='Caucusing', head_entity='output_of_query1')\"\nStep4: Find the set difference between output_of_query2 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query2', set2='output_of_query3')\"",
    "what is the total number of seating for the yate town?": "None",
    "what year did both diddy and the notorious b.i.g. sign with bad boy records?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Diddy\nQuery1: \"get_information(relation='Act', tail_entity='Diddy')\"\nStep2: Find the year signed of output_of_query1\nQuery2: \"get_information(relation='Year signed', head_entity='output_of_query1')\"\nStep3: Find the entity named The Notorious B.I.G.\nQuery3: \"get_information(relation='Act', tail_entity='The Notorious B.I.G.')\"\nStep4: Find the year signed of output_of_query3\nQuery4: \"get_information(relation='Year signed', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the least about of runs anyone has?": "## Target type: {number of runs}\n## Query:\nStep1: Find the entity with the relation of Runs\nQuery1: \"get_information(relation='Runs')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "the most goals scored by brazil in a game": "None",
    "which circuit has the most screens?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of screens\nQuery1: \"get_information(relation='Screens')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max screens\nQuery3: \"get_information(relation='Screens', tail_entity='output_of_query2')\"\nStep4: Find the circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "how many awards did liz larin win?": "None",
    "which person medaled, but was not from south korea?": "None",
    "what is the number of teams located in bobruisk?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Location as Bobruisk\nQuery1: \"get_information(relation='Location', tail_entity='Bobruisk')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which month had more games played, january or december?": "## Target type: {month}\n## Query:\nStep1: Find the games played in the month of January\nQuery1: \"get_information(relation='Game', tail_entity='January')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the games played in the month of December\nQuery3: \"get_information(relation='Game', tail_entity='December')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4 to find the month with more games played\nQuery5: \"if output_of_query2 > output_of_query4, return 'January', else return 'December'\"",
    "what was the only year there was no slogan?": "## Target type: {'registration year'}\n## Query:\nStep1: Find all the registration years\nQuery1: \"get_information(relation='First issued')\"\nStep2: Find the entity that has no slogan\nQuery2: \"get_information(relation='Slogan', tail_entity='none')\"\nStep3: Find the registration years of output_of_query2\nQuery3: \"get_information(relation='First issued', head_entity='output_of_query2')\"",
    "what is the difference, in years, between the completion dates of 53 king street and castlefield congregational chapel?": "None",
    "what is the formula for the compound that has the same pearson symbol as pacl4?": "None",
    "which party has the most second duma": "None",
    "how many prisoners is artik designed to hold?": "## Target type: {number of prisoners}\n## Query:\nStep1: Find the entity named Artik\nQuery1: \"get_information(relation='Name', tail_entity='Artik')\"\nStep2: Find the number of prisoners of output_of_query1\nQuery2: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query1')\"",
    "what are the number of films starring henrik malberg that have translated english titles?": "None",
    "what year was the last pylon in germany built?": "None",
    "which group of voters had a higher percentage of voters in 1952, grade school educated or white collar?": "None",
    "what was the average amount of missions that were successful?": "## Target type: {number}\n## Query:\nStep1: Find all the mission results\nQuery1: \"get_information(relation='Mission result')\"\nStep2: Find the successful mission results\nQuery2: \"get_information(relation='Mission result', tail_entity='successful')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of multi-platinum songs?": "None",
    "how many away games did the bridgeport barrage have?": "None",
    "the first car that murphy used in the new zealand v8 supercar": "## Target type: {car}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with the min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Car of output_of_query3\nQuery4: \"get_information(relation='Car', head_entity='output_of_query3')\"",
    "what is the total number of times that the competition is listed as \"world championships\"?": "## Target type: {number}\n## Query:\nStep1: Find the rows where the competition is listed as \"World Championships\"\nQuery1: \"get_information(relation='Competition', tail_entity='World Championships')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps did paul tracy complete?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Paul Tracy\nQuery1: \"get_information(relation='Driver', tail_entity='Paul Tracy')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many entities have finance as a responsible minister?": "## Target type: {number}\n## Query:\nStep1: Find the entities where the Responsible Minister is Finance\nQuery1: \"get_information(relation='Responsible Minister(s)', tail_entity='Finance')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of jamaicans granted british citizenship in 2008?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the entity that is Jamaicans granted British citizenship of output_of_query1\nQuery2: \"get_information(relation='Numer of Jamaicans granted British citizenship', head_entity='output_of_query1')\" \nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many work orders were there in the 50's?": "None",
    "which race was faster, 1990 or 1993?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity that Year is 1990\nQuery1: \"get_information(relation='Year', tail_entity='1990')\"\nStep2: Find the entity that Year is 1993\nQuery2: \"get_information(relation='Year', tail_entity='1993')\"\nStep3: Find the Notes of output_of_query1\nQuery3: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep4: Find the Notes of output_of_query2\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query2')\"\nStep5: Calculate the time difference between output_of_query3 and output_of_query4\nQuery5: \"Calculator(subtraction='output_of_query3 - output_of_query4')\"",
    "how many destinations does air florida have at this airport?": "None",
    "what is the total number of albums that 2ne1 has released?": "## Target type: {number of albums}\n## Query:\nStep1: Find the entity named 2NE1\nQuery1: \"get_information(relation='Artist', tail_entity='2NE1')\"\nStep2: Find the total number of albums of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the last title that sid marcus directed?": "None",
    "what city is listed below heredia?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Heredia\nQuery1: \"get_information(relation='City', tail_entity='Heredia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the City of output_of_query4\nQuery5: \"get_information(relation='City', head_entity='output_of_query4')\"",
    "what is the difference area for lubango and luanda": "None",
    "which movie did matthew j. morrison play a policeman and what year was it released?": "None",
    "what material has a dispersion of .018nm?": "## Target type: {material}\n## Query:\nStep1: Find the entity that has the dispersion of 0.018nm\nQuery1: \"get_information(relation='Dispersion 431 - 687 nm', tail_entity='0.018nm')\"\nStep2: Find the material of output_of_query1\nQuery2: \"get_information(relation='Material', head_entity='output_of_query1')\"",
    "fairground street bridge and confederate avenue brick arch bridge were both built in which county?": "## Target type: {county}\n## Query:\nStep1: Find the entity named Fairground Street Bridge\nQuery1: \"get_information(relation='Name', tail_entity='Fairground Street Bridge')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"\nStep3: Find the entity named Confederate Avenue Brick Arch Bridge\nQuery3: \"get_information(relation='Name', tail_entity='Confederate Avenue Brick Arch Bridge')\"\nStep4: Find the county of output_of_query3\nQuery4: \"get_information(relation='County', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what region was in the sir021-1cd catalog?": "## Target type: {region}\n## Query:\nStep1: Find the entity named sir021-1cd\nQuery1: \"get_information(relation='Catalog', tail_entity='sir021-1cd')\"\nStep2: Find the region of output_of_query1\nQuery2: \"get_information(relation='Region', head_entity='output_of_query1')\"",
    "how many consecutive years did a volkswagen win world car of the year?": "None",
    "what was the last game created by spicy horse": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Spicy Horse\nQuery1: \"get_information(relation='Developer', tail_entity='Spicy Horse')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "who was the last winner of the western open(2013)?": "## Target type: {player}\n## Query:\nStep1: Find the entity that Year is 2013\nQuery1: \"get_information(relation='Year', tail_entity='2013')\"\nStep2: Find the winner of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "are there more christian russians or ukrainians in kazakhstan?": "None",
    "what was the first opponent oxford united f.c. defeated during the season?": "None",
    "venezuela was 7th overall in total medals. who is next on the list?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "how many awards did this actor win for his work in my girlfriend is an agent?": "None",
    "name three items created not long after the equatorial armillary sphere.": "None",
    "how many of finland's national parks are more than 100 square kilometers in size?": "None",
    "which is the previous attendance for week 10": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Week is 10\nQuery1: \"get_information(relation='Week', tail_entity='10')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Attendance of output_of_query4\nQuery5: \"get_information(relation='Attendance', head_entity='output_of_query4')\"",
    "what is the name of the last opponent on this chart?": "## Target type: {opponent}\n## Query:\nStep1: Find the row_number in the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "what the tier before 2006/7?": "## Target type: {tier}\n## Query:\nStep1: Find the entity named 2006/7\nQuery1: \"get_information(relation='Season', tail_entity='2006/7')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row with row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tier of output_of_query4\nQuery5: \"get_information(relation='Tier', head_entity='output_of_query4')\"",
    "how many times was the rosemont convention center used?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Rosemont Convention Center\nQuery1: \"get_information(relation='Location', tail_entity='Rosemont Convention Center')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did alex polita finish above or below lorenzo lanzi?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Alex Polita\nQuery1: \"get_information(relation='Rider', tail_entity='Alex Polita')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Pos', head_entity='output_of_query1')\"\nStep3: Find the entity named Lorenzo Lanzi\nQuery3: \"get_information(relation='Rider', tail_entity='Lorenzo Lanzi')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Pos', head_entity='output_of_query3')\"\nStep5: Compare the positions of output_of_query2 and output_of_query4\nQuery5: \"compare(position1='output_of_query2', position2='output_of_query4')\"",
    "other than bjorgvinsson, name someone who id not finish a race.": "None",
    "what name comes after santiago romero's name on the list?": "None",
    "what was the next publication after the june 2010 publication of radio nacional de venezuela?": "None",
    "what team is listed previous to belgium?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Belgium\nQuery1: \"get_information(relation='Team', tail_entity='Belgium')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "which of the madison sports teams was established first?": "## Target type: {'Club'}\n## Query:\nStep1: Find the entity with the relation of Club\nQuery1: \"get_information(relation='Club')\"\nStep2: Find the entity with the relation of Sport\nQuery2: \"get_information(relation='Sport')\"\nStep3: Find the entity with the relation of Established\nQuery3: \"get_information(relation='Established')\"\nStep4: Find the min output_of_query3\nQuery4: \"min(set='output_of_query3')\" \nStep5: Find the entity with the min Established\nQuery5: \"get_information(relation='Established', tail_entity='output_of_query4')\"\nStep6: Find the Club of output_of_query5\nQuery6: \"get_information(relation='Club', head_entity='output_of_query5')\"",
    "what is the number of score in the final in 1969?": "None",
    "what's the difference in meters between the 2004 and 2009 competitions?": "None",
    "name of trainer of the horse that came in first in the 1997 kentucky derby": "None",
    "what company is ranked below apple?": "None",
    "what was the total number of opponents?": "None",
    "who did jim osborne partner with the most during the open era titles?": "## Target type: {'Partner'}\n## Query:\nStep1: Find the entity named Jim Osborne\nQuery1: \"get_information(relation='Name', tail_entity='Jim Osborne')\"\nStep2: Find the Partner of output_of_query1\nQuery2: \"get_information(relation='Partner', head_entity='output_of_query1')\"\nStep3: Find the count of each Partner in output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Find the Partner that appears the most\nQuery4: \"get_information(relation='Partner', tail_entity>='most')\"",
    "how many more silver medals did gillis grafstr\u00f6m have compared to sonja henie?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Gillis Grafstr\u00f6m\nQuery1: \"get_information(relation='Athlete', tail_entity='Gillis Grafstr\u00f6m')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Sonja Henie\nQuery3: \"get_information(relation='Athlete', tail_entity='Sonja Henie')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "who other than thomas lloyd managed the sunset league?": "None",
    "which position did this curler hold before becoming skip in the 1997-1998 season?": "None",
    "how many willy deville albums have reached the chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Willy DeVille\nQuery1: \"get_information(relation='Artist', tail_entity='Willy DeVille')\"\nStep2: Find the albums of output_of_query1 that have reached the chart\nQuery2: \"get_information(relation='Peak chart positions', tail_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which country had the earliest opening date?": "None",
    "was the result of the game on the 2nd the same as the game on the 23rd?": "None",
    "how much longer is the peak 2 peak gondola than the 32 aerial tramway?": "None",
    "what is the difference of megawatts between the total in 2000 and 2001?": "None",
    "what was the title of the first improv challenge?": "None",
    "which party had more staying councilors?": "None",
    "who was the tallest fullback?": "None",
    "how many times did sd ponferradina b come in better than 5th place?": "None",
    "which was the only year that the event was not run?": "None",
    "what is the number of markers in highland, new york?": "None",
    "in 1926 brazilian football, how many teams scored above 10 points in the season?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams in Brazilian football in 1926\nQuery1: \"get_information(relation='Team', tail_entity='Brazilian football', key='Year', value='1926')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the teams with points above 10\nQuery3: \"get_information(relation='Points', tail_entity>'10')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many sites are in coldwater?": "## Target type: {number}\n## Query:\nStep1: Find the City named Coldwater\nQuery1: \"get_information(relation='City', tail_entity='Coldwater')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which subdivision is at the top of the list?": "## Target type: {census subdivision}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the census subdivision of output_of_query3\nQuery4: \"get_information(relation='Census subdivision', head_entity='output_of_query3')\"",
    "which plates used the serial format of 12345 in consecutive years?": "None",
    "what is the total number of nations that participated in the beach games of 2012?": "None",
    "what was the last event held?": "None",
    "which building was the first completed?": "None",
    "which player's average is higher than ira gooch's?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Ira Gooch\nQuery1: \"get_information(relation='Player', tail_entity='Ira Gooch')\"\nStep2: Find the Average of output_of_query1\nQuery2: \"get_information(relation='Avg.', head_entity='output_of_query1')\"\nStep3: Find the entity whose Average is higher than output_of_query2\nQuery3: \"get_information(relation='Avg.', tail_entity>'output_of_query2')\"",
    "in what event did chelsea williams win her first title?": "None",
    "who had more draws? south korea or north korea?": "None",
    "who is the only player to be listed twice as an opponent in the finals?": "None",
    "what place was 1a aficio and 3a aficio?": "## Target type: {place}\n## Query:\nStep1: Find the entity named 1a aficio\nQuery1: \"get_information(relation='Division', tail_entity='1a aficio')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity named 3a aficio\nQuery3: \"get_information(relation='Division', tail_entity='3a aficio')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "in which two consecutive years were there atp wins recorded?": "None",
    "what is the first town with \"river\" in its name?": "## Target type: {town}\n## Query:\nStep1: Find the entity that has \"river\" in its name\nQuery1: \"get_information(relation='Name', tail_entity='river')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is the minimum value of output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the town of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which was the longest nato operation in terms of time?": "## Target type: {'Operation'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Operation of output_of_query3\nQuery4: \"get_information(relation='Operation', head_entity='output_of_query3')\"",
    "did the austria davis cup team score more than 10 goals in 1990?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity in Year that is 1990\nQuery1: \"get_information(relation='Year', tail_entity='1990')\"\nStep2: Find the entity in Score that is greater than 10\nQuery2: \"get_information(relation='Score', tail_entity>'10')\"\nStep3: Find the output_of_query2 that matches the entity in output_of_query1\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Check if the intersection set is empty or not\nQuery4: \"if_empty(set='output_of_query3', value='no', value='yes')\"",
    "who is the only person to drive a veritas?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with relation of Constructor is Veritas\nQuery1: \"get_information(relation='Constructor', tail_entity='Veritas')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what was the total combined number of wins between february and march?": "None",
    "what is the number of works titled \"salome?\"": "None",
    "which was the first treaty in morocco to be ratified?": "## Target type: {Treaty}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Treaty of output_of_query3\nQuery4: \"get_information(relation='Treaty', head_entity='output_of_query3')\"",
    "what is the total wins for club kotayk abovian?": "None",
    "true or false. the television show \"the two ronnies\" featured more than 10 episodes in a season.": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named \"The Two Ronnies\"\nQuery1: \"get_information(relation='DVD Title', tail_entity='The Two Ronnies')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the No. of Ep. of output_of_query2\nQuery3: \"get_information(relation='No. of Ep.', head_entity='output_of_query2')\"\nStep4: Check if the output_of_query3 is greater than 10\nQuery4: \"output_of_query3 > 10\"",
    "how many teams have received deductions thus far?": "None",
    "to what teams other than alabama did the tigers lose in 2009?": "None",
    "was the academy of the sacred heart school established before 1900?": "None",
    "last home opponent of the season": "None",
    "who do pcha play before vancouver on the 18th of january?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Vancouver\nQuery1: \"get_information(relation='Visitor', tail_entity='Vancouver')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Visitor of output_of_query4\nQuery5: \"get_information(relation='Visitor', head_entity='output_of_query4')\"",
    "what was the top song in the competition?": "None",
    "who directed the first episode of psi factor: chronicles of the paranormal?": "## Target type: {'Directed by'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Directed by of output_of_query3\nQuery4: \"get_information(relation='Directed by', head_entity='output_of_query3')\"",
    "which location is before the \"no event\" row of 1994?": "## Target type: {location}\n## Query:\nStep1: Find the row_number that is \"no event\" in the year of 1994\nQuery1: \"get_information(relation='Year', tail_entity='1994')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "which song has the same people doing drum and synth programming as the skate remix to \"melodies from heaven?\"": "None",
    "what was the only release title for the artist black sun productions?": "## Target type: {'Release title'}\n## Query:\nStep1: Find the entity named Black Sun Productions\nQuery1: \"get_information(relation='Artist', tail_entity='Black Sun Productions')\"\nStep2: Find the release title of output_of_query1\nQuery2: \"get_information(relation='Release title', head_entity='output_of_query1')\"",
    "who placed after manjeet kaur?": "None",
    "which country had the most riders?": "None",
    "what is the average temp of the nesccap electric double-layer capacitor?": "## Target type: {temperature}\n## Query:\nStep1: Find the entity with the relation of Capacitor type equals \"Nesccap Electric double-layer capacitor\"\nQuery1: \"get_information(relation='Capacitor type', tail_entity='Nesccap Electric double-layer capacitor')\"\nStep2: Find the Temperature of output_of_query1\nQuery2: \"get_information(relation='Temp.', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "which season was the only season to come in 18th?": "## Target type: {season}\n## Query:\nStep1: Find the entity that came in 18th place\nQuery1: \"get_information(relation='Place', tail_entity='18th')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "what has zip code 80110, downtown or dos?": "## Target type: {place}\n## Query:\nStep1: Find the entity with the ZIP code 80110\nQuery1: \"get_information(relation='ZIP code', tail_entity='80110')\"\nStep2: Get the Name of place of output_of_query1\nQuery2: \"get_information(relation='Name of place', head_entity='output_of_query1')\"",
    "which interface appears first, sata 6 gbit/s or pcie?": "## Target type: {interface}\n## Query:\nStep1: Find the entity with the relation of Interface as \"SATA 6 Gbit/s\"\nQuery1: \"get_information(relation='Interface', tail_entity='SATA 6 Gbit/s')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Interface as \"PCIe\"\nQuery3: \"get_information(relation='Interface', tail_entity='PCIe')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_numbers to determine which one appears first\nQuery5: \"compare(row_number1='output_of_query2', row_number2='output_of_query4')\"",
    "how many competitors were from the same country as david moller?": "None",
    "what year was the last school established?": "## Target type: {'Establishment'}\n## Query:\nStep1: Find the entity with relation of Establishment\nQuery1: \"get_information(relation='Establishment')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with max Establishment\nQuery3: \"get_information(relation='Establishment', tail_entity='output_of_query2')\"",
    "on game days, which line do you want to use?": "None",
    "how many matches did the 1987 syracuse orangemen football team play against rival colleges during the month of september, 1987?": "None",
    "syracuse and notre dame had the same final conference record of what during this season?": "None",
    "list the number of items written by brad falchuk": "## Target type: {number}\n## Query:\nStep1: Find the entity named Brad Falchuk\nQuery1: \"get_information(relation='Written by', tail_entity='Brad Falchuk')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total population of all the counties combined?": "None",
    "who had the highest number of assists in the october 19th game?": "None",
    "where was her first win?": "None",
    "which single did she first release?": "None",
    "in which month were more games played--september or october?": "## Target type: {month}\n## Query:\nStep1: Find the games played in September\nQuery1: \"get_information(relation='Date', tail_entity='September')\"\nStep2: Find the games played in October\nQuery2: \"get_information(relation='Date', tail_entity='October')\"\nStep3: Get the count of output_of_query1 and output_of_query2\nQuery3: \"count(set='output_of_query1')\", \"count(set='output_of_query2')\"\nStep4: Compare the counts of output_of_query3 and output_of_query4\nQuery4: \"if output_of_query3>output_of_query4: September else: October\"",
    "did the australian labor part get more votes than the independent party?": "## Target type: {yes or no}\n## Query:\nStep1: Find the entity with the relation of Party and \"Australian Labor Party\"\nQuery1: \"get_information(relation='Party', tail_entity='Australian Labor Party')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Party and \"Independent Party\"\nQuery3: \"get_information(relation='Party', tail_entity='Independent Party')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Compare the votes of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "in which year did rugby union matches between new zealand and wales occur most frequently?": "None",
    "what is the total number of songs that are listed in the table?": "## Target type: {number of songs}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was marco loughran's time more or less than ashley delaney's time?": "## Target type: {'time'}\n## Query:\nStep1: Find the entity named Ashley Delaney\nQuery1: \"get_information(relation='Name', tail_entity='Ashley Delaney')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Marco Loughran\nQuery3: \"get_information(relation='Name', tail_entity='Marco Loughran')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the time of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "are there at least 4 teams in the column of team 2?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity in the column of Team 2\nQuery1: \"get_information(relation='Team 2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count is at least 4\nQuery3: \"check(count='output_of_query2' operator='at least' number=4)\"",
    "what is one type that has at least a relative cost of 1.0?": "None",
    "what is the number of mayors during 2010-2013 who were part of the 1st class?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Income Class is 1st class\nQuery1: \"get_information(relation='Income Class', tail_entity='1st class')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Mayor of output_of_query4\nQuery5: \"get_information(relation='Mayor', head_entity='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what is the pearson symbol for the formula with the lightest density?": "None",
    "what film did r. padmanaban have as their release?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named R. Padmanaban\nQuery1: \"get_information(relation='Director', tail_entity='R. Padmanaban')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row that has the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the next airport listed after darwin international airport?": "## Target type: {airport}\n## Query:\nStep1: Find the entity with the relation of Airport named Darwin International Airport\nQuery1: \"get_information(relation='Airport', tail_entity='Darwin International Airport')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Airport of output_of_query4\nQuery5: \"get_information(relation='Airport', head_entity='output_of_query4')\"",
    "what is the only season they were in 19th place?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Place and the value of '19th place'\nQuery1: \"get_information(relation='Place', tail_entity='19th place')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "in what season were a number of 6 goals scored?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Goals is 6\nQuery1: \"get_information(relation='Goals', tail_entity='6')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "how many times was golding in 2nd position?": "None",
    "who lived longer evelyn irons or arturo islas?": "## Target type: {person}\n## Query:\nStep1: Find the entity named Evelyn Irons\nQuery1: \"get_information(relation='Name', tail_entity='Evelyn Irons')\"\nStep2: Find the entity named Arturo Islas\nQuery2: \"get_information(relation='Name', tail_entity='Arturo Islas')\"\nStep3: Find the Lifetime of output_of_query1\nQuery3: \"get_information(relation='Lifetime', head_entity='output_of_query1')\"\nStep4: Find the Lifetime of output_of_query2\nQuery4: \"get_information(relation='Lifetime', head_entity='output_of_query2')\"\nStep5: Compare the Lifetime of output_of_query3 and output_of_query4\nQuery5: \"if_condition(operation='>', operand1='output_of_query3', operand2='output_of_query4', true='output_of_query1', false='output_of_query2')\"",
    "how much taller is thomas pearson than garreth lodge?": "None",
    "who was the first to have the best result": "None",
    "what city has the least amount of area recorded (not to include any city with n.a. recorded)?": "None",
    "which team finished last in this conference this season?": "None",
    "what was the score of the buffalo sabres in the last game?": "None",
    "what is the next event after hardcore tv #15?": "None",
    "which delta omicron chapter was founded before zeta beta?": "None",
    "what is the only album produced by river records for this group?": "## Target type: {album}\n## Query:\nStep1: Find the entity named River Records\nQuery1: \"get_information(relation='Label', tail_entity='River Records')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"",
    "how many of the five games the astros played against the chicago cubs in september, 2007 did the astros win?": "None",
    "who came in first when it comes to new points?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of New points\nQuery1: \"get_information(relation='New points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max New points \nQuery3: \"get_information(relation='New points', tail_entity='output_of_query2')\"\nStep4: Find the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "does any country have more than 5 winners?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if output_of_query2 is greater than 5\nQuery3: \"output_of_query2 > 5\"",
    "what label was italy on?": "## Target type: {label}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Region', tail_entity='Italy')\"\nStep2: Find the label of output_of_query1\nQuery2: \"get_information(relation='Label', head_entity='output_of_query1')\"",
    "name each team that eric has played for.": "None",
    "who had the fastest ski time?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Ski time\nQuery1: \"get_information(relation='Ski time')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Ski time\nQuery3: \"get_information(relation='Ski time', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "how many riders in the top 15 were riding a honda?": "None",
    "what is the name of a driver that ferrari was not a constructor for?": "None",
    "how many times did kansas and kansas state play in lawrence from 1902-1968?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that Year is 1902\nQuery1: \"get_information(relation='Year', tail_entity='1902')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that Year is 1968\nQuery3: \"get_information(relation='Year', tail_entity='1968')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the games between Kansas and Kansas State in Lawrence within the range of row_number from output_of_query2 to output_of_query4\nQuery5: \"get_information(relation='Site', tail_entity='Lawrence', key='row_number', value>'output_of_query2', value<'output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which is the only station with 8 affiliates?": "## Target type: {station}\n## Query:\nStep1: Find the entity with the relation of Affiliates has a value equal to 8\nQuery1: \"get_information(relation='Affiliates', tail_entity='8')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number equal to output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Network name of output_of_query3\nQuery4: \"get_information(relation='Network name', head_entity='output_of_query3')\"",
    "who was the first mayor of austevoll?": "None",
    "during the 2010 pre-season, who did the la clippers play after utah?": "## Target type: {Team}\n## Query:\nStep1: Find the entity named Utah\nQuery1: \"get_information(relation='Team', tail_entity='Utah')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "what was the total amount of points earned by ralf woods?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Ralf Woods\nQuery1: \"get_information(relation='Player', tail_entity='Ralf Woods')\"\nStep2: Find the points earned by output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "who was the first loan?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "tell me reservoir that is from the sme river as parambikulam.": "None",
    "how many games did the barrage play in july and august?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that is July\nQuery1: \"get_information(relation='Date', tail_entity='July')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that is August\nQuery3: \"get_information(relation='Date', tail_entity='August')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the games played between output_of_query2 and output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity>='output_of_query2', head_entity<='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "after pick #123 paul ames being picked for defense, what was the next united states defense pick named?": "None",
    "what is the only destination served by american eagle airlines?": "## Target type: {destination}\n## Query:\nStep1: Find the entity that Airline is American Eagle Airlines\nQuery1: \"get_information(relation='Airline', tail_entity='American Eagle Airlines')\"\nStep2: Find the destination of output_of_query1\nQuery2: \"get_information(relation='Destination(s)', head_entity='output_of_query1')\"\nStep3: Get the intersection of output_of_query2 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query2')\"",
    "how many transmitters have a kw value more then 0.1?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of kW\nQuery1: \"get_information(relation='kW')\"\nStep2: Find the entities with kW value more than 0.1\nQuery2: \"get_information(relation='kW', tail_entity>'0.1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which team came in as runners up the most often between 1950 and 1960": "None",
    "state a song that received no televotes.": "None",
    "who has the fastest recorded finish for the men's bupa great south run, between 1990 and 2013?": "None",
    "what is the difference in the number of mobile prefixes between the company with the most and the company with the least?": "None",
    "in season 1996/97 was the place above or below 10th?": "## Target type: {'Place'}\n## Query:\nStep1: Find the entity in Season 1996/97\nQuery1: \"get_information(relation='Season', tail_entity='1996/97')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Check if the place is above or below 10th\nQuery3: \"if output_of_query2 > 10 then 'above' else 'below'\"",
    "how many players went to indiana": "None",
    "which album contains no original music?": "None",
    "who scored the same number of goals as adriano leite ribeiro?": "None",
    "list the nation which participated in the 2008 worlds qualification tournament and hans spitzauer was one of the sailors.": "None",
    "how many awards did kang ji-hwan win before 2010?": "None",
    "was the attendance of the game held on 11/19/2013 greater than 1,000?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that the Date is 11/19/2013\nQuery1: \"get_information(relation='Date', tail_entity='11/19/2013')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Compare the attendance with 1,000\nQuery3: \"compare_inequality(value1='output_of_query2', value2='1000', operator='greater than')\"",
    "which ship was in service before the yamal?": "## Target type: {ship}\n## Query:\nStep1: Find the entity named Yamal\nQuery1: \"get_information(relation='Ship Name', tail_entity='Yamal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ship Name of output_of_query4\nQuery5: \"get_information(relation='Ship Name', head_entity='output_of_query4')\"",
    "which season was more successful, 2012-13 or 2011-12.": "None",
    "what was the total number of competitors?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Athlete\nQuery1: \"get_information(relation='Athlete')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "elton john released the \"candle in the wind\", the #2 hit single of the 1990s, in 1997. what was an earlier top 100 hit single of elton john's in the 1990s?": "None",
    "which product come before egonet": "## Target type: {product}\n## Query:\nStep1: Find the entity named Egonet\nQuery1: \"get_information(relation='Product', tail_entity='Egonet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the product of output_of_query4\nQuery5: \"get_information(relation='Product', head_entity='output_of_query4')\"",
    "what was the least number of laps made?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"",
    "what is the total number of natural change in 1980?": "None",
    "the united states has won only one time. what place did they come in?": "None",
    "did will.i.am or talib kweli produce \"a dream\"?": "## Target type: {producer}\n## Query:\nStep1: Find the entity named Will.I.Am\nQuery1: \"get_information(relation='Performer (s)', tail_entity='Will.I.Am')\"\nStep2: Find the producer of output_of_query1\nQuery2: \"get_information(relation='Producer(s)', head_entity='output_of_query1')\"\nStep3: Find the entity named Talib Kweli\nQuery3: \"get_information(relation='Performer (s)', tail_entity='Talib Kweli')\"\nStep4: Find the producer of output_of_query3\nQuery4: \"get_information(relation='Producer(s)', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 or output_of_query4 includes the producer 'A Dream'\nQuery5: \"is_included(set1='output_of_query2', set2='A Dream') or is_included(set1='output_of_query4', set2='A Dream')\"",
    "what is the total amount of people who first served in 2008?": "None",
    "who was the competitor that finished above jessie maclean?": "None",
    "name one building that is at least 600 feet tall.": "None",
    "who took office after onn jaafar?": "## Target type: {Menteri Besar}\n## Query:\nStep1: Find the entity named Onn Jaafar\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Onn Jaafar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Menteri Besar of output_of_query4\nQuery5: \"get_information(relation='Menteri Besar', head_entity='output_of_query4')\"",
    "51st position and 31st position were both obtained by this runner at which competition?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Position and value of '51st'\nQuery1: \"get_information(relation='Position', value='51st')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Position and value of '31st'\nQuery3: \"get_information(relation='Position', value='31st')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which pylon has the most remarks about it?": "None",
    "who is listed above jeean behra?": "None",
    "was it the dravida munnetra kazhagam party or the janata party that won the second pondicherry assembly?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Pondicherry Assembly as Second\nQuery1: \"get_information(relation='Pondicherry Assembly', tail_entity='Second')\"\nStep2: Find the Party Affiliation of output_of_query1\nQuery2: \"get_information(relation='Party Affiliation', head_entity='output_of_query1')\"",
    "how many dates are in 1972?": "None",
    "which nation won the same number of bronze medals as peru?": "None",
    "how many players were taller than van hatchell?": "None",
    "what is the difference between the value of 0.01 in 2008 than that if 0.01 in 2002?": "None",
    "other than scafati basket, who appeared in 9 seasons?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Scafati Basket\nQuery1: \"get_information(relation='Team', tail_entity='Scafati Basket')\"\nStep2: Find the Seasons of output_of_query1\nQuery2: \"get_information(relation='Seasons', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the entity that appeared in 9 seasons\nQuery4: \"get_information(relation='Seasons', tail_entity='9')\"\nStep5: Find other than output_of_query1 in output_of_query4\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query1')\"\nStep6: Get the Team of output_of_query5\nQuery6: \"get_information(relation='Team', head_entity='output_of_query5')\"",
    "how many cars were in the set for the december 24, 1997 record?": "None",
    "what is the total drivers with a ferrari chassis?": "None",
    "in what year did the first h-ii flight take place?": "None",
    "how many companies are under the united states?": "None",
    "how many fewer maps were present between the 1986 and 1983 editions?": "None",
    "true or false, in 1991 there was not a game winner in the advanced strategy catagory.": "## Target type: {boolean}\n## Query:\nStep1: Find the entity with the relation of Year equal to 1991\nQuery1: \"get_information(relation='Year', tail_entity='1991')\"\nStep2: Find the game winner in the Advanced strategy category of output_of_query1\nQuery2: \"get_information(relation='Advanced strategy', head_entity='output_of_query1')\"\nStep3: Check if the output_of_query2 is empty or not\nQuery3: \"is_empty(set='output_of_query2')\"",
    "names of players who were exactly 6 feet, 4 inches tall, but did not weight over 200 pounds": "## Target type: {name}\n## Query:\nStep1: Find all the entities with a Height of \"6\u20134\"\nQuery1: \"get_information(relation='Height', tail_entity='6\u20134')\"\nStep2: Find all the entities with a Weight less than or equal to 200 pounds\nQuery2: \"get_information(relation='Weight', tail_entity<='200')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many movies total did zhao dan star in between 1930 and 1940": "## Target type: {number}\n## Query:\nStep1: Find the entity named Zhao Dan\nQuery1: \"get_information(relation='Role', tail_entity='Zhao Dan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"\nStep6: Find the Year is in the range of 1930 and 1940\nQuery6: \"get_information(relation='Year', tail_entity>='1930', tail_entity<='1940')\"\nStep7: Calculate the count of output_of_query6\nQuery7: \"count(set='output_of_query6')\"",
    "besides russia which other nation had an athlete ranked in the top 3?": "None",
    "what is the number of times that \"pulse\" had been released?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Pulse\nQuery1: \"get_information(relation='Album', tail_entity='Pulse')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of churches with k-8 schools?": "## Target type: {number of churches}\n## Query:\nStep1: Find the churches that have k-8 schools\nQuery1: \"get_information(relation='School', tail_entity='Yes')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total titles were published by walker?": "None",
    "who is the only driver to use a v12 engine?": "None",
    "total number of players that signed in march?": "None",
    "what is the next highest mountain peak after north palisade?": "## Target type: {mountain peak}\n## Query:\nStep1: Find the entity named North Palisade\nQuery1: \"get_information(relation='Mountain Peak', tail_entity='North Palisade')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Mountain Peak of output_of_query4\nQuery5: \"get_information(relation='Mountain Peak', head_entity='output_of_query4')\"",
    "what is the total number of immigrants from africa?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Region/Country is Africa\nQuery1: \"get_information(relation='Region/Country', tail_entity='Africa')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what nation ranks previous of chile?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Chile\nQuery1: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "at which event did taylor jensen first win?": "None",
    "what team has the same amount of wins as sd compostela?": "None",
    "how many days difference was there between the release of perverted desire shoko goto and fetish world?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Perverted Desire Shoko Goto\nQuery1: \"get_information(relation='Video title', tail_entity='Perverted Desire Shoko Goto')\"\nStep2: Find the release date of output_of_query1\nQuery2: \"get_information(relation='Released', head_entity='output_of_query1')\"\nStep3: Find the entity named Fetish World\nQuery3: \"get_information(relation='Video title', tail_entity='Fetish World')\"\nStep4: Find the release date of output_of_query3\nQuery4: \"get_information(relation='Released', head_entity='output_of_query3')\"\nStep5: Calculate the difference in days between output_of_query2 and output_of_query4\nQuery5: \"days_difference(date1='output_of_query2', date2='output_of_query4')\"",
    "how many times was the budapest half marathon held before 2001?": "## Target type: {number}\n## Query:\nStep1: Find the entity with relation of Year that is less than 2001\nQuery1: \"get_information(relation='Year', tail_entity<2001)\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was manager of manchester city after stuart pearce left in 2007?": "None",
    "what was the number of events she took place in?": "None",
    "how many more points did w connection score than san juan jabloteh in 2005?": "None",
    "how many students are enrolled at navy?": "## Target type: {number of students}\n## Query:\nStep1: Find the entity that Institution is Navy\nQuery1: \"get_information(relation='Institution', tail_entity='Navy')\"\nStep2: Find the enrollment of output_of_query1\nQuery2: \"get_information(relation='Enrollment', head_entity='output_of_query1')\"",
    "what was the title of the only single to not receive top 20 on the uk singles chart?": "None",
    "which is deeper, lake tuz or lake palas tuzla?": "## Target type: {lake}\n## Query:\nStep1: Find the entity named Lake Tuz\nQuery1: \"get_information(relation='Name in English', tail_entity='Lake Tuz')\"\nStep2: Find the depth of output_of_query1\nQuery2: \"get_information(relation='Depth', head_entity='output_of_query1')\"\nStep3: Find the entity named Lake Palas Tuzla\nQuery3: \"get_information(relation='Name in English', tail_entity='Lake Palas Tuzla')\"\nStep4: Find the depth of output_of_query3\nQuery4: \"get_information(relation='Depth', head_entity='output_of_query3')\"\nStep5: Compare the depth of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "what was the total number of events held in 1966?": "None",
    "what year did the first asian games take place?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Competition and value of 'Asian Games'\nQuery1: \"get_information(relation='Competition', tail_entity='Asian Games')\"\nStep2: Get the min Year of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "how many years has it been since the first and last japanese title was made?": "None",
    "who was elected earlier, amedee or cortez?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Amedee\nQuery1: \"get_information(relation='Name', tail_entity='Amedee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Cortez\nQuery3: \"get_information(relation='Name', tail_entity='Cortez')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what debut album, reached no. 26 on uk albums chart in 1989?": "None",
    "which came out first, fetish world or big bust evolution shoko goto?": "None",
    "what year did the album \"jezebel\" on blockshok records release?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Album is Jezebel\nQuery1: \"get_information(relation='Album', tail_entity='Jezebel')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the difference in vote percent between 1968 and 1974?": "## Target type: {vote percent difference}\n## Query:\nStep1: Find the entity with the relation Year being 1968\nQuery1: \"get_information(relation='Year', tail_entity='1968')\"\nStep2: Find the Vote % of output_of_query1\nQuery2: \"get_information(relation='Vote %', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation Year being 1974\nQuery3: \"get_information(relation='Year', tail_entity='1974')\"\nStep4: Find the Vote % of output_of_query3\nQuery4: \"get_information(relation='Vote %', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(value1='output_of_query4', value2='output_of_query2')\"",
    "which division three team also played in the division two season during the 1980s?": "None",
    "which player has the most years in the nba?": "## Target type: {player name}\n## Query:\nStep1: Find the entity with the relation \"Years in NBA\"\nQuery1: \"get_information(relation='Years in NBA')\"\nStep2: Find the max value of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Years in NBA\nQuery3: \"get_information(relation='Years in NBA', tail_entity='output_of_query2')\"\nStep4: Find the name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which recored album is listed before february 1984?": "## Target type: {record album}\n## Query:\nStep1: Find the entity named February 1984\nQuery1: \"get_information(relation='Release date', tail_entity='February 1984')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the record album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "how many goals did cardiff city f.c. score in the month of april?": "None",
    "which was the only title where he was a narrator?": "None",
    "which township has the highest average population density": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population density\nQuery1: \"get_information(relation='Population density')\"\nStep2: Calculate the average of output_of_query1\nQuery2: \"average(set='output_of_query1')\" \nStep3: Find the entity with the max average population density\nQuery3: \"get_information(relation='Population density', tail_entity='output_of_query2')\" \nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "what was the number of competitors during the 1995 finals?": "None",
    "which singles each appear at position 22?": "## Target type: {single}\n## Query:\nStep1: Find the entity that Position is 22\nQuery1: \"get_information(relation='Position', tail_entity='22')\"\nStep2: Find the singles at output_of_query1\nQuery2: \"get_information(relation='Single', head_entity='output_of_query1')\"",
    "what was the name of paul reubens's character in the popular t.v. show \"murphy brown?\"": "## Target type: {character name}\n## Query:\nStep1: Find the entity that is \"Murphy Brown\"\nQuery1: \"get_information(relation='Title', tail_entity='Murphy Brown')\"\nStep2: Find the character name of output_of_query1 played by Paul Reubens\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"",
    "which community has the least number of acres?": "## Target type: {community}\n## Query:\nStep1: Find the entity with the relation of Area\nQuery1: \"get_information(relation='Area')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Area\nQuery3: \"get_information(relation='Area', tail_entity='output_of_query2')\"\nStep4: Find the community of output_of_query3\nQuery4: \"get_information(relation='Community', head_entity='output_of_query3')\"",
    "how many times did iowa state win in the 21st century?": "None",
    "what country with more than 20 total medals has the least amount of silver medals?": "None",
    "the number of electorates represented in the niwari segment is more than those in which other segment?": "None",
    "how many films star eddie murphy?": "None",
    "who is listed below romeo bonzo?": "None",
    "what is the total number of divisions on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the divisions in the chart\nQuery1: \"get_information(relation='Division')\"\nStep2: Get the total count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of national parks that have a landmass of under 50 square km?": "None",
    "which transmitter is previous to staithes": "## Target type: {transmitter}\n## Query:\nStep1: Find the entity named Staithes\nQuery1: \"get_information(relation='Transmitter', tail_entity='Staithes')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the transmitter of output_of_query4\nQuery5: \"get_information(relation='Transmitter', head_entity='output_of_query4')\"",
    "what nation was next to great britain in total medal count?": "None",
    "who did they play after florida state seminoles?": "None",
    "who was the first to die after elisabeth irwin?": "None",
    "which defendant received the same sentence as reginald shaffer?": "None",
    "what number of last names start with \"b\"?": "## Target type: {number}\n## Query:\nStep1: Find all the last names\nQuery1: \"get_information(relation='Name')\"\nStep2: Find the last names that start with \"B\"\nQuery2: \"get_information(relation='Name', tail_entity>'B', key='start_with')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was the the number of canadian players more or less than the number of other players?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the number of Canadian players\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the number of other players\nQuery3: \"get_information(relation='Nationality', tail_entity!='Canada')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare_counts(count1='output_of_query2', count2='output_of_query4')\"",
    "how many half marathons did krisztina papp win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Krisztina Papp\nQuery1: \"get_information(relation='Women's winner', tail_entity='Krisztina Papp')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "is episode 6 nightly rank above or below 11?": "None",
    "what is the last name of trial on the list?": "## Target type: {'Name of Trial'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of Trial of output_of_query3\nQuery4: \"get_information(relation='Name of Trial', head_entity='output_of_query3')\"",
    "what is the highest number of goals podolski has scored in an international game?": "None",
    "who finished before ellen van dijk?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Ellen van Dijk\nQuery1: \"get_information(relation='Name', tail_entity='Ellen van Dijk')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many songs was claudio zoli the original artist?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Claudio Zoli\nQuery1: \"get_information(relation='Original Artist', tail_entity='Claudio Zoli')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the first opponent faced by the sooners in september 1971?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Date is September 1971\nQuery1: \"get_information(relation='Date', tail_entity='September 1971')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent# of output_of_query4\nQuery5: \"get_information(relation='Opponent#', head_entity='output_of_query4')\"",
    "how many movies have at least 20 episodes?": "## Target type: {number of movies}\n## Query:\nStep1: Find the movies with the relation Number of episodes >= 20\nQuery1: \"get_information(relation='Number of episodes', tail_entity>='20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the difference in attendance between the broncos' most-attended game and their least attended game?": "None",
    "what venue is previous to gin\u00e1sio chico neto, maring\u00e1?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Gin\u00e1sio Chico Neto, Maring\u00e1\nQuery1: \"get_information(relation='Venue', tail_entity='Gin\u00e1sio Chico Neto, Maring\u00e1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "number of victories": "None",
    "how many players have values from the fa cup?": "None",
    "number of goals scored in los angeles": "None",
    "who is the only player from hamden?": "## Target type: {player}\n## Query:\nStep1: Find the entity that School is Hamden\nQuery1: \"get_information(relation='School', tail_entity='Hamden')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "list each team with the most draws.": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Draw\nQuery1: \"get_information(relation='Draw')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Draw\nQuery3: \"get_information(relation='Draw', tail_entity='output_of_query2')\" \nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "after the 1990/91 season, which place was earned in the next season?": "## Target type: {place}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='1990/91')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "how many countries do not have any gold medals?": "None",
    "what persian unit is at least five feet?": "None",
    "who won previous to graham hill?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Graham Hill\nQuery1: \"get_information(relation='Driver', tail_entity='Graham Hill')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "which episode was written by steve young and directed by jeff mccracken?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Steve Young\nQuery1: \"get_information(relation='Written by', tail_entity='Steve Young')\"\nStep2: Find the entity named Jeff McCracken\nQuery2: \"get_information(relation='Directed by', tail_entity='Jeff McCracken')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which player went to the same university as lazo alavanja in 1998?": "None",
    "what was the date of the first speed recorded that was over 450 km/h?": "None",
    "was the cathedral church of st. mary built before or after harnham bridge?": "## Target type: {relation}\n## Query:\nStep1: Find the entity named Harnham Bridge\nQuery1: \"get_information(relation='Name', tail_entity='Harnham Bridge')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Cathedral Church of St. Mary\nQuery3: \"get_information(relation='Name', tail_entity='Cathedral Church of St. Mary')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4 to determine the order\nQuery5: \"if(output_of_query2 <= output_of_query4, 'before', 'after')\"",
    "how many teams won at least 85 games?": "## Target type: {number}\n## Query:\nStep1: Find the teams with Wins at least 85\nQuery1: \"get_information(relation='Wins', tail_entity>='85')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many face values are there on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the Face Values on the chart\nQuery1: \"get_information(relation='Face Value')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total of games that were won in the helsinki olympic stadium?": "None",
    "in 2001 and what other year did he have 55 points?": "None",
    "how many races did ricky stenhouse, jr. when during this season?": "## Target type: {number of races}\n## Query:\nStep1: Find the entity named Ricky Stenhouse, Jr.\nQuery1: \"get_information(relation='Winner', tail_entity='Ricky Stenhouse, Jr.')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the only \"c\" mill located in colney health?": "## Target type: {name of mill}\n## Query:\nStep1: Find the mills located in Colney Health\nQuery1: \"get_information(relation='Location', tail_entity='Colney Health')\"\nStep2: Find the mills with the name starting with \"C\" in output_of_query1\nQuery2: \"get_information(relation='Name of mill and grid reference', head_entity='output_of_query1', key='Name of mill and grid reference', value_starts_with='C')\"\nStep3: Get the only one mill from output_of_query2\nQuery3: \"only(set='output_of_query2')\"",
    "which television channels in nambour, queensland are owned by the same organization as abc1?": "None",
    "in what country is bologna?": "None",
    "what delegate is the same age as rita elizabeth meda cojul\u00fan": "None",
    "who is the manufacturer for loris capirossi and ralf waldmann?": "## Target type: {manufacturer}\n## Query:\nStep1: Find the entity named Loris Capirossi\nQuery1: \"get_information(relation='Rider', tail_entity='Loris Capirossi')\"\nStep2: Find the manufacturer of output_of_query1\nQuery2: \"get_information(relation='Manufacturer', head_entity='output_of_query1')\"\nStep3: Find the entity named Ralf Waldmann\nQuery3: \"get_information(relation='Rider', tail_entity='Ralf Waldmann')\"\nStep4: Find the manufacturer of output_of_query3\nQuery4: \"get_information(relation='Manufacturer', head_entity='output_of_query3')\"",
    "what is the difference between the greatest winnings and the least winnings?": "None",
    "who won the most bronze medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Bronze\nQuery1: \"get_information(relation='Bronze')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Bronze\nQuery3: \"get_information(relation='Bronze', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which is the only opponent to have used the lambeau field?": "None",
    "the ship with the most tonnage is named after whom?": "## Target type: {'Ship'}\n## Query:\nStep1: Find the entity with the relation of Tonnage\nQuery1: \"get_information(relation='Tonnage')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Tonnage\nQuery3: \"get_information(relation='Tonnage', tail_entity='output_of_query2')\"\nStep4: Find the Ship named after output_of_query3\nQuery4: \"get_information(relation='Ship', head_entity='output_of_query3')\"",
    "what is the name of the artist that had consecutive wins in the outstanding pop artist/group category?": "None",
    "was the album beautiful released before the album love in heart?": "None",
    "what is the number of buildings under 200 ft?": "## Target type: {number of buildings}\n## Query:\nStep1: Find the entity that has the relation of Height ft / m\nQuery1: \"get_information(relation='Height ft / m')\"\nStep2: Find the buildings that have a height under 200 ft\nQuery2: \"get_information(relation='Height ft / m', tail_entity<'200')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which game date only had a bit more than 20,000 in attendance?": "## Target type: {game date}\n## Query:\nStep1: Find the entity with Attendance slightly more than 20000\nQuery1: \"get_information(relation='Attendance', tail_entity='20000<')\"\nStep2: Find the game date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "how many of timberline lodge's lifts were installed after 2000?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Timberline Lodge\nQuery1: \"get_information(relation='Lift Name', tail_entity='Timberline Lodge')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the lifts that were installed after 2000\nQuery3: \"get_information(relation='Year installed', tail_entity>'2000')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "is k2 taller than kangchenjunga?": "None",
    "what member comes next after hon trish worth?": "## Target type: {member}\n## Query:\nStep1: Find the entity named Hon Trish Worth\nQuery1: \"get_information(relation='Member', tail_entity='Hon Trish Worth')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Member of output_of_query4\nQuery5: \"get_information(relation='Member', head_entity='output_of_query4')\"",
    "how long did it take michael schumacher to finish the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Michael Schumacher\nQuery1: \"get_information(relation='Driver', tail_entity='Michael Schumacher')\"\nStep2: Find the time/retired of output_of_query1\nQuery2: \"get_information(relation='Time/Retired', head_entity='output_of_query1')\"",
    "was los angeles or houston the busiest international route at manzanillo international airport in 2013?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Los Angeles\nQuery1: \"get_information(relation='City', tail_entity='Los Angeles')\"\nStep2: Find the entity named Houston\nQuery2: \"get_information(relation='City', tail_entity='Houston')\"\nStep3: Find the passengers of output_of_query1\nQuery3: \"get_information(relation='Passengers', head_entity='output_of_query1')\"\nStep4: Find the passengers of output_of_query2\nQuery4: \"get_information(relation='Passengers', head_entity='output_of_query2')\"\nStep5: Check if output_of_query3 is larger than output_of_query4 or not\nQuery5: \"output_of_query3 > output_of_query4\"",
    "how many games had no points scored?": "## Target type: {number}\n## Query:\nStep1: Find the games with no points scored\nQuery1: \"get_information(relation='Score', tail_entity='0-0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of times 13 or greater was listed in the wins column?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that is greater than or equal to 13 in the Wins column\nQuery1: \"get_information(relation='Wins', tail_entity>='13')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many current ncaa teams exist?": "None",
    "how many townships have no water area?": "None",
    "did oklahoma score more or less than 50 points against kansas state?": "## Target type: {'Score'}\n## Query:\nStep1: Find the entity that is Oklahoma\nQuery1: \"get_information(relation='Opponent#', tail_entity='Kansas State')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Get the numerical value of output_of_query2\nQuery3: \"calculate(operation='extract_number', value='output_of_query2')\"\nStep4: Check if output_of_query3 is greater or less than 50\nQuery4: \"compare(set1='output_of_query3', set2=50)\"",
    "which is the first city listed alphabetically?": "## Target type: {city}\n## Query:\nStep1: Find all the Name of place\nQuery1: \"get_information(relation='Name of place')\"\nStep2: Sort the output_of_query1 alphabetically\nQuery2: \"sort(set='output_of_query1', key='alphabetical')\"\nStep3: Get the first element of output_of_query2\nQuery3: \"first(set='output_of_query2')\"",
    "how many people attended the first wikimania conference in 2005?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of Conference as Wikimania 2005\nQuery1: \"get_information(relation='Conference', tail_entity='Wikimania 2005')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='attendance', head_entity='output_of_query1')\"",
    "mag ruffman's role as alice lawson, who she first played in anne of green gables in 1985, was renewed in what movie?": "None",
    "larger parish": "None",
    "what are the number of times tokyu is listed as a manufacturer on this chart?": "None",
    "how many players transferred after 2010?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year that is after 2010\nQuery1: \"get_information(relation='Year', tail_entity>'2010')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times is \"psycho clown\" the winner?": "None",
    "how many summer flag bearers have there been?": "## Target type: {number}\n## Query:\nStep1: Find the season with Summer\nQuery1: \"get_information(relation='Season', tail_entity='Summer')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what opponent was the only game that resulted in a tie?": "None",
    "what is the last tallest building in canada to have the word court in its building name?": "None",
    "which album has the least peak in the us?": "None",
    "how many compilation albums were released after 2000?": "None",
    "what is the last iec world plugs type in the list?": "## Target type: {'IEC World Plugs Type'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the IEC World Plugs Type of output_of_query3\nQuery4: \"get_information(relation='IEC World Plugs Type', head_entity='output_of_query3')\"",
    "how long is the list of countries that won any medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries that won any medals\nQuery1: \"get_information(relation='Nation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the pick after moses malone?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Moses Malone\nQuery1: \"get_information(relation='Player', tail_entity='Moses Malone')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "was james iii or sancho born in the year 1276?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named James III\nQuery1: \"get_information(relation='Name', tail_entity='James III')\"\nStep2: Find the birth year of output_of_query1\nQuery2: \"get_information(relation='Birth', head_entity='output_of_query1')\"\nStep3: Find the entity named Sancho\nQuery3: \"get_information(relation='Name', tail_entity='Sancho')\"\nStep4: Find the birth year of output_of_query3\nQuery4: \"get_information(relation='Birth', head_entity='output_of_query3')\"\nStep5: Check if the birth year of output_of_query1 or output_of_query3 is 1276\nQuery5: \"check_equality(value1='output_of_query2', value2='1276') or check_equality(value1='output_of_query4', value2='1276')\"",
    "who discussed a larger amount of events between matthew and mark?": "## Target type: {event}\n## Query:\nStep1: Find the events discussed by Matthew\nQuery1: \"get_information(relation='Event', tail_entity='Matthew')\"\nStep2: Find the events discussed by Mark\nQuery2: \"get_information(relation='Event', tail_entity='Mark')\"\nStep3: Compare the amount of events in output_of_query1 and output_of_query2\nQuery3: \"compare_amount(set1='output_of_query1', set2='output_of_query2')\"",
    "how many swimmers had a time of at least 1:00": "None",
    "how long is manjeet kaur's time?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Manjeet Kaur\nQuery1: \"get_information(relation='Athlete', tail_entity='Manjeet Kaur')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "has frits pirard won more or less than bert oosterbosch?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named Frits Pirard\nQuery1: \"get_information(relation='Winner', tail_entity='Frits Pirard')\"\nStep2: Find the entity named Bert Oosterbosch\nQuery2: \"get_information(relation='Winner', tail_entity='Bert Oosterbosch')\"\nStep3: Find the number of wins of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Find the number of wins of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Determine if output_of_query3 is greater than output_of_query4\nQuery5: \"compare_greater_than(value1='output_of_query3', value2='output_of_query4')\"",
    "what was the highest amount of points scored in a single game in the second round of the 198485 greek cup?": "None",
    "what was the challenge for scientific after the solar stage?": "None",
    "which chassis is in the middle of simca 1300 and alfa romeo gta?": "None",
    "this team faced sta. lucia and had who as their top scorer which was the same top scoerer as their game against coca cola?": "None",
    "did taiwan receive more or less bronze medals than singapore?": "## Target type: {'Bronze medals'} or {'more', 'less'}\n## Query:\nStep1: Find the entity named Taiwan\nQuery1: \"get_information(relation='Nation', tail_entity='Taiwan')\"\nStep2: Find the entity named Singapore\nQuery2: \"get_information(relation='Nation', tail_entity='Singapore')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Find the Bronze medals of output_of_query1\nQuery5: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep6: Find the Bronze medals of output_of_query2\nQuery6: \"get_information(relation='Bronze', head_entity='output_of_query2')\"\nStep7: Compare output_of_query5 and output_of_query6\nQuery7: \"if output_of_query5 > output_of_query6 then 'more' else 'less'\"",
    "who finished directly before lakmali?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Lakmali\nQuery1: \"get_information(relation='Name', tail_entity='Lakmali')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many names were not given to girls?": "## Target type: {number}\n## Query:\nStep1: Find all the Gender entities that have a value of 'Girl'\nQuery1: \"get_information(relation='Gender', tail_entity='Girl')\"\nStep2: Find all the row_number entities that are associated with the Gender entities from output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find all the row_number entities\nQuery3: \"get_information(relation='row_number')\"\nStep4: Find the difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is previous to complete series 10?": "## Target type: {'DVD Title'}\n## Query:\nStep1: Find the entity named Complete Series 10\nQuery1: \"get_information(relation='DVD Title', tail_entity='Complete Series 10')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the DVD Title of output_of_query4\nQuery5: \"get_information(relation='DVD Title', head_entity='output_of_query4')\"",
    "how many friendly compeitions occurred after september 6?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date after September 6\nQuery1: \"get_information(relation='Date', tail_entity>'September 6')\"\nStep2: Find the entity with the relation of Competition is 'Friendly'\nQuery2: \"get_information(relation='Competition', head_entity='Friendly')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many luxembourg cities had a date of law of feb 24, 1843?": "## Target type: {number of cities}\n## Query:\nStep1: Find the entities with the relation of Date of law of Feb 24, 1843\nQuery1: \"get_information(relation='Date of law', tail_entity='24 February 1843')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the last venue brian preformed in?": "## Target type: {'Venue'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many medici served after lorenzo the magnificent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Lorenzo the Magnificent\nQuery1: \"get_information(relation='Name', tail_entity='Lorenzo the Magnificent')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with the relation of Name\nQuery3: \"get_information(relation='Name')\"\nStep4: Find the entities with the row_number greater than output_of_query2\nQuery4: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the last recorded ship sunk on august 25?": "## Target type: {'Name of ship'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"\nStep5: Check if output_of_query4 is equal to 'August 25'\nQuery5: \"Calculator(check='output_of_query4', operator='==', value='August 25')\"\nStep6: If output_of_query5 is True, get the Name of ship of output_of_query3\nQuery6: \"get_information(relation='Name of ship', head_entity='output_of_query3')\"",
    "what was the total number of home team wins in the first round proper, november 1988?": "None",
    "what is the difference between the number of wins pallac. reggiana reggio emilia has had and the number of wins progresso castelmaggiore has had?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Team is \"Pallac. Reggiana Reggio Emilia\"\nQuery1: \"get_information(relation='Team', tail_entity='Pallac. Reggiana Reggio Emilia')\"\nStep2: Find the Ch.Wins of output_of_query1\nQuery2: \"get_information(relation='Ch.Wins', head_entity='output_of_query1')\"\nStep3: Find the entity that Team is \"Progresso Castelmaggiore\"\nQuery3: \"get_information(relation='Team', tail_entity='Progresso Castelmaggiore')\"\nStep4: Find the Ch.Wins of output_of_query3\nQuery4: \"get_information(relation='Ch.Wins', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "which was built first? the 4/8 ps or the k 5/13 ps?": "## Target type: {car model}\n## Query:\nStep1: Find the entity named 4/8 ps\nQuery1: \"get_information(relation='Typ', tail_entity='4/8 ps')\"\nStep2: Find the Construction Time of output_of_query1\nQuery2: \"get_information(relation='Construction Time', head_entity='output_of_query1')\"\nStep3: Find the entity named k 5/13 ps\nQuery3: \"get_information(relation='Typ', tail_entity='k 5/13 ps')\"\nStep4: Find the Construction Time of output_of_query3\nQuery4: \"get_information(relation='Construction Time', head_entity='output_of_query3')\"\nStep5: Compare the Construction Time of output_of_query2 and output_of_query4\nQuery5: \"earlier(output1='output_of_query2', output2='output_of_query4')\"",
    "which date had at least 55 casualties?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Casualties at least 55\nQuery1: \"get_information(relation='Casualties', tail_entity>='55')\"\nStep2: Get the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "what is the larger laps between 1963 or 1968": "None",
    "name a horse that did not place in the top ten of the 1997 kentucky derby": "None",
    "in 2008 in track and field events how many world records did usain bolt break?": "None",
    "who was the only member of the country party to be elected in 1919?": "## Target type: {member}\n## Query:\nStep1: Find the entity named Country Party\nQuery1: \"get_information(relation='Party', tail_entity='Country Party')\"\nStep2: Find the first elected year of output_of_query1\nQuery2: \"get_information(relation='First elected', head_entity='output_of_query1')\"\nStep3: Find the entity whose first elected year is 1919\nQuery3: \"get_information(relation='First elected', tail_entity='1919')\"\nStep4: Find the member of output_of_query3\nQuery4: \"get_information(relation='Member', head_entity='output_of_query3')\"",
    "which players played the same position as ardo kreek?": "None",
    "which dance is previous to tango": "## Target type: {dance}\n## Query:\nStep1: Find the entity that Dance is Tango\nQuery1: \"get_information(relation='Dance', tail_entity='Tango')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Dance of output_of_query4\nQuery5: \"get_information(relation='Dance', head_entity='output_of_query4')\"",
    "how long has atari been manufacturing the the game off the wall?": "None",
    "what is the other previous title of design of death?": "None",
    "what is the difference between the stadium capacity at taylor's avenue and the stadium capacity at dixon park?": "None",
    "how many buildings had alfred waterhouse as their architect?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Alfred Waterhouse\nQuery1: \"get_information(relation='Architect', tail_entity='Alfred Waterhouse')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many days is fbn live available each week?": "None",
    "which was added to the list first, the mccleary farm or the nordica homestead?": "None",
    "who was the only person to discuss the pre-existence of christ?": "None",
    "how long has early sawmill been standing ?": "None",
    "which sheriff came before thomas wickes?": "None",
    "how many players were on the 2010-11 uab blazers men's basketball team?": "None",
    "the fbs opponent faced before the georgia bulldogs?": "None",
    "who was the opponent before mexico?": "None",
    "who was the only competitor from el salvador?": "## Target type: {name}\n## Query:\nStep1: Find the entity that has the nationality of El Salvador\nQuery1: \"get_information(relation='Nationality', tail_entity='El Salvador')\"\nStep2: Find the name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which township has the least water area in miles?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Water area (mi\u00b2)\nQuery1: \"get_information(relation='Water area (mi\u00b2)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Water area (mi\u00b2)\nQuery3: \"get_information(relation='Water area (mi\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "name at least two labels that released the group's albums.": "None",
    "how many interchanges were recorded from 2000 to 2005": "None",
    "how many people completed 200 laps?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps', tail_entity='200')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "notorious b.i.g. released their album \"total\" in what year?": "None",
    "gabon is ranked 32, what country is ranked next?": "None",
    "when was the benetton b198 chassis used?": "## Target type: {'Year'}\n## Query:\nStep1: Find the chassis with the name Benetton B198\nQuery1: \"get_information(relation='Chassis', tail_entity='Benetton B198')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what are the total number of pillow pals on this chart?": "None",
    "was jos\u00e9 joaqu\u00edn rojas from the movistar team or team katusha?": "None",
    "valencia cc and who else won the most division ii community college?": "None",
    "where was the location for the fastest test done?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Speed [km/h (mph)]\nQuery1: \"get_information(relation='Speed [km/h (mph)]')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Speed\nQuery3: \"get_information(relation='Speed [km/h (mph)]', tail_entity='output_of_query2')\"\nStep4: Find the location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "who was the next winner after jin au-yeung in 2011?": "None",
    "wrestler junior fatu was eliminated by a total of how many wrestlers?": "None",
    "what is the number of countries that are listed in the table?": "None",
    "how many times was the position listed as 1st?": "None",
    "what model was in service the least?": "## Target type: {'Model'}\n## Query:\nStep1: Find the entity in In Service that appears the least.\nQuery1: \"get_information(relation='In Service', tail_entity='least')\"\nStep2: Find the Model of output_of_query1.\nQuery2: \"get_information(relation='Model', head_entity='output_of_query1')\"",
    "how many laps did ronnie bucknum complete?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Ronnie Bucknum\nQuery1: \"get_information(relation='Drivers', tail_entity='Ronnie Bucknum')\"\nStep2: Find the laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "what name is listed before davis?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Davis\nQuery1: \"get_information(relation='Name', tail_entity='Davis')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how long was harald v of norway the king of norway at the university of oxford?": "None",
    "what is the least amount of ways you can conjugate the verb \"be\"?": "None",
    "which school has no cws appearances?": "None",
    "what country only received gold medals in the 1994 winter olympics biathlon?": "None",
    "how many divisions had a population of at least 15,000?": "## Target type: {number}\n## Query:\nStep1: Find the divisions with a population of at least 15,000\nQuery1: \"get_information(relation='Population (2005)', tail_entity>='15000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many 1st place round results were there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Round Result being 1st\nQuery1: \"get_information(relation='Round Result', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many athletes were faster than 12.40 seconds?": "None",
    "what was the average tyre used in the race?": "## Target type: {'Tyre'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of row_number\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Tyre\nQuery3: \"get_information(relation='Tyre')\"\nStep4: Calculate the average count of Tyre\nQuery4: \"average(set='output_of_query3', count='output_of_query2')\"",
    "who finished next after kaitlin sandeno?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Kaitlin Sandeno\nQuery1: \"get_information(relation='Name', tail_entity='Kaitlin Sandeno')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "did terry jenkins or per laursen win in 2014?": "None",
    "how many loses did the clippers face in the pre-season before they finally won a game?": "None",
    "what was his best finish before his first win?": "None",
    "what is the number of losses this team had in the 2006/2007 season?": "None",
    "what was the best position achieved at the olympic games after the 1996 atlanta games?": "None",
    "how many total games did the chicago bears win in the 1980s?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Winner is Chicago Bears and Year is in the 1980s\nQuery1: \"get_information(relation='Winner', tail_entity='Chicago Bears', key='Year', value=>'1980', value<='1989')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what other languages are listed in the table besides sotho?": "## Target type: {languages}\n## Query:\nStep1: Find the entity with the relation of Most spoken language\nQuery1: \"get_information(relation='Most spoken language')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find all the other languages besides Sotho\nQuery3: \"get_information(relation='Most spoken language', tail_entity!='output_of_query1')\"\nStep4: Get the set of output_of_query3\nQuery4: \"set(output='output_of_query3')\"",
    "who was the only chief of mission to india from north carolina?": "## Target type: {Name}\n## Query:\nStep1: Find the entity that State is North Carolina\nQuery1: \"get_information(relation='State', tail_entity='North Carolina')\"\nStep2: Find the entity that Title is Chief of Mission\nQuery2: \"get_information(relation='Title', tail_entity='Chief of Mission')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "uladzimir kazlou participated in two olympic games, but how many other competitions did he participate in between 2005 and 2013?": "None",
    "how many world green cars are there before 2007?": "None",
    "how many intervals had more than 30 steps?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose size (steps) is larger than 30\nQuery1: \"get_information(relation='size (steps)', tail_entity>'30')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many monkey pillow pals were there?": "None",
    "in what year were the first pillow pals introduced?": "None",
    "how many songs had at least 500,000 sales?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Sales\nQuery1: \"get_information(relation='Sales')\"\nStep2: Find the entity whose Sales is at least 500,000\nQuery2: \"get_information(relation='Sales', tail_entity>='500000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many of the schools have a creature mascot?": "None",
    "what is the total number of interferometers that have comments stating they are closed?": "None",
    "who was the only nominee for the episode \"the triangle\"?": "## Target type: {nominee}\n## Query:\nStep1: Find the entity named \"The Triangle\"\nQuery1: \"get_information(relation='Episode', tail_entity='The Triangle')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Nominee(s) of output_of_query3\nQuery4: \"get_information(relation='Nominee(s)', head_entity='output_of_query3')\"",
    "what is the number of blocks made by moses malone?": "None",
    "how many rounds did the boxing fight against alexander vasiliev take?": "## Target type: {number of rounds}\n## Query:\nStep1: Find the entity named Alexander Vasiliev\nQuery1: \"get_information(relation='Opponent', tail_entity='Alexander Vasiliev')\"\nStep2: Find the rounds of output_of_query1\nQuery2: \"get_information(relation='Round', head_entity='output_of_query1')\"",
    "what was the first club for the north in the 2000's?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Season as '2000's'\nQuery1: \"get_information(relation='Season', tail_entity='2000's')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2 as '1'\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the club of output_of_query3 with the relation of North\nQuery4: \"get_information(relation='North', head_entity='output_of_query3')\"",
    "what is the least count of stars amongst south american countries? /": "None",
    "what were the first and last movies greenstreet acted in?": "None",
    "what is the total amount of points for florencia?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Florencia\nQuery1: \"get_information(relation='Artist', tail_entity='Florencia')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "what is the difference in the scores in 2000?": "## Target type: {difference in scores}\n## Query:\nStep1: Find the row_number of the year 2000\nQuery1: \"get_information(relation='Year', tail_entity='2000')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Parse the score into two integers (score1 and score2)\nQuery3: \"parse_score(score='output_of_query2')\"\nStep4: Calculate the difference between score1 and score2\nQuery4: \"calculate_difference(score1='output_of_query3', score2='output_of_query3')\"",
    "does russia or japan have the longer time?": "None",
    "how many airlines have at least three service dates?": "## Target type: {number of airlines}\n## Query:\nStep1: Find the entities that have at least 3 Service Date(s)\nQuery1: \"get_information(relation='Service Date(s)', tail_entity>='3')\"\nStep2: Find the Airline of output_of_query1\nQuery2: \"get_information(relation='Airline', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the model of the only utility vehicle used by the philippine marines that has its origin in the united kingdom?": "None",
    "what is the different in area between the 1/10\" and the 1/8\"?": "None",
    "what ship is recorded as sunk before the ss eros?": "## Target type: {ship}\n## Query:\nStep1: Find the entity named SS Eros\nQuery1: \"get_information(relation='Name of ship', tail_entity='SS Eros')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of ship of output_of_query4\nQuery5: \"get_information(relation='Name of ship', head_entity='output_of_query4')\"",
    "what's the total number of ties?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the ties in output_of_query1\nQuery2: \"get_information(relation='Result', tail_entity='T')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "other than the united states, what other nationality were the submarines?": "None",
    "in which competition did he throw the most?": "None",
    "who was the top player in 2012?": "## Target type: {'Champion'}\n## Query:\nStep1: Find the entity in Year that is \"2012\"\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Find the Champion of output_of_query1\nQuery2: \"get_information(relation='Champion', head_entity='output_of_query1')\"",
    "when is the next game played after november 17th?": "## Target type: {date}\n## Query:\nStep1: Find the entity named November 17\nQuery1: \"get_information(relation='Date', tail_entity='November 17')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how long was kazlou's longest throw in major international competition?": "None",
    "which year has the most per capita income (as % of usa)?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity that has the relation Per Capita Income (as % of USA)\nQuery1: \"get_information(relation='Per Capita Income\\n(as\u00a0% of USA)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Per Capita Income\nQuery3: \"get_information(relation='Per Capita Income\\n(as\u00a0% of USA)', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "in which year was only top ten ranking in monetary earnings recorded?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Money list rank being '1-10'\nQuery1: \"get_information(relation='Money list rank', tail_entity='1-10')\"\nStep2: Get the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many trains were discontinued in 1958?": "None",
    "which was the only race held in cameroon?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find the entity with the relation of Location as Cameroon\nQuery1: \"get_information(relation='Location', tail_entity='Cameroon')\"\nStep2: Find the Race Name of output_of_query1\nQuery2: \"get_information(relation='Race Name', head_entity='output_of_query1')\"",
    "of those actresses receiving a tony after 1960, which took the most amount of years to get their egot completed.": "## Target type: {name}\n## Query:\nStep1: Find the actresses who received a Tony after 1960\nQuery1: \"get_information(relation='Tony', tail_entity>'1960')\"\nStep2: Find their EGOT completed years\nQuery2: \"get_information(relation='EGOT completed', head_entity='output_of_query1')\"\nStep3: Get the maximum number of years from output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the actress with the maximum years\nQuery4: \"get_information(relation='EGOT completed', tail_entity='output_of_query3')\"\nStep5: Get the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "was the attendance more or less in the saturday, april 13th game compared to the saturday, may 11th": "## Target type: {attendance}\n## Query:\nStep1: Find the game on Saturday, April 13th\nQuery1: \"get_information(relation='Date', tail_entity='Saturday, April 13th')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the game on Saturday, May 11th\nQuery3: \"get_information(relation='Date', tail_entity='Saturday, May 11th')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare the attendance of output_of_query2 and output_of_query4 to check if it is more or less\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which of the listed teams has the most players elected to the hall of fame according to this table?": "None",
    "list the opponent in which the result was the least out of all the results.": "## Target type: {opponent}\n## Query:\nStep1: Find all the result values\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the min value of output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the opponent with the min result\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "who was the champion previous to s raj?": "None",
    "the service with the least bit rate": "## Target type: {service}\n## Query:\nStep1: Find the entity with relation Bit rate\nQuery1: \"get_information(relation='Bit rate')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Bit rate\nQuery3: \"get_information(relation='Bit rate', tail_entity='output_of_query2')\"\nStep4: Find the service of output_of_query3\nQuery4: \"get_information(relation='Service', head_entity='output_of_query3')\"",
    "what was the last baekje temple?": "## Target type: {'Temple name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Temple name of output_of_query3\nQuery4: \"get_information(relation='Temple name', head_entity='output_of_query3')",
    "calculate the difference in the number of gold medals won between venezuela and colombia.": "## Target type: {number}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the number of gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Colombia\nQuery3: \"get_information(relation='Nation', tail_entity='Colombia')\"\nStep4: Find the number of gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the name of the only episode directed by bob balaban?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Bob Balaban\nQuery1: \"get_information(relation='Directed by', tail_entity='Bob Balaban')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "which song did not have more than 15% of the votes and was not unknown?": "None",
    "what was the venue for the only edition to take place in the dominican republic?": "None",
    "who was the last color commentator?": "None",
    "what driver was the only one to score 8 points while driving a mitsubishi?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that scored 8 points\nQuery1: \"get_information(relation='Points', tail_entity='8')\"\nStep2: Find the entity that drove a Mitsubishi\nQuery2: \"get_information(relation='Car', tail_entity='Mitsubishi')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "marek le&#347;niak's first international goal was scored against what country?": "None",
    "what sport has the second most number of gold medals won?": "## Target type: {sport}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the second max output_of_query1\nQuery2: \"second_max(set='output_of_query1')\"\nStep3: Get the entity with the second max Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the sport of output_of_query3\nQuery4: \"get_information(relation='Sport', head_entity='output_of_query3')\"",
    "how many times did dicksboro win the championship?": "None",
    "which pga tour event gave out the least prize money to its 1st place finisher?": "## Target type: {Tournament}\n## Query:\nStep1: Find the entity with the relation of 1st prize ($)\nQuery1: \"get_information(relation='1st prize ($)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min prize money\nQuery3: \"get_information(relation='1st prize ($)', tail_entity='output_of_query2')\"\nStep4: Find the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "what country has the most female tennis winners at the asian games?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Count the female tennis winners per country\nQuery2: \"count(set='output_of_query1', conditions='female tennis')\"\nStep3: Find the country with the most female tennis winners\nQuery3: \"argmax(set='output_of_query2')\"",
    "which building has the same number of floors as the lumber exchange building?": "None",
    "what is the last power rating on the chart?": "## Target type: {power rating}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Power rating of output_of_query3\nQuery4: \"get_information(relation='Power rating', head_entity='output_of_query3')\"",
    "who finished after nico rosberg?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Nico Rosberg\nQuery1: \"get_information(relation='Driver', tail_entity='Nico Rosberg')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "are there more silver or bronze medals in total?": "## Target type: {medal category}\n## Query:\nStep1: Find the entity named Total\nQuery1: \"get_information(relation='Nation', tail_entity='Total')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the bronze medals of output_of_query1\nQuery3: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep4: Compare the count of output_of_query2 and output_of_query3\nQuery4: \"compare(set1='output_of_query2', set2='output_of_query3') == 'greater'\"",
    "what is the total number of gold medals awarded?": "None",
    "how many people at most are american?": "None",
    "what is the number of countries ranked in the top 8?": "None",
    "what are the names of each temple in the city of naruto?": "## Target type: {temple}\n## Query:\nStep1: Find the entity named Naruto\nQuery1: \"get_information(relation='City/Town/Village', tail_entity='Naruto')\"\nStep2: Find the temples in output_of_query1\nQuery2: \"get_information(relation='Temple', head_entity='output_of_query1')\"",
    "how many cities from canada are on this list?": "None",
    "in what year did the muncie flyers have an undefeated record?": "None",
    "how many singles did celine dion sing?": "## Target type: {number of singles}\n## Query:\nStep1: Find the entity named Celine Dion\nQuery1: \"get_information(relation='Artist', tail_entity='Celine Dion')\"\nStep2: Find the number of singles of output_of_query1\nQuery2: \"get_information(relation='Single', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "at least how many parties have won?": "## Target type: {number}\n## Query:\nStep1: Find all the parties in the schema\nQuery1: \"get_information(relation='Party')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which decade is the only one to have fewer years in its row than the others?": "None",
    "its alan whiteley yacht's name dehler magic": "None",
    "how many rounds are there in this season?": "None",
    "what is the total number of scandinavian skaters?": "None",
    "when was the last time the event was held in minnesota?": "None",
    "which employers have at least 300 employees?": "## Target type: {employers}\n## Query:\nStep1: Find the entity with the relation of # of Employees at least 300\nQuery1: \"get_information(relation='# of Employees', tail_entity>='300')\"\nStep2: Get the employers of output_of_query1\nQuery2: \"get_information(relation='Employer', head_entity='output_of_query1')\"",
    "what position is next to squad # 3?": "None",
    "which chip has the fewest amount of eeprom?": "## Target type: {chip}\n## Query:\nStep1: Find the entity with the relation of EEPROM\nQuery1: \"get_information(relation='EEPROM')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min EEPROM\nQuery3: \"get_information(relation='EEPROM', tail_entity='output_of_query2')\"\nStep4: Find the chip of output_of_query3\nQuery4: \"get_information(relation='Chip', head_entity='output_of_query3')\"",
    "which prime ministers spent more than 1,500 days in the office?": "None",
    "which nhl team had the last pick?": "## Target type: {NHL team}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the NHL team of output_of_query3\nQuery4: \"get_information(relation='NHL team', head_entity='output_of_query3')\"",
    "where are kane ferdinand and michael timlin from?": "None",
    "does the second name have above or below 20 shelters?": "## Target type: {'above' or 'below'}\n## Query:\nStep1: Find the entity with the row_number of 2\nQuery1: \"get_information(relation='row_number', tail_entity='2')\"\nStep2: Find the number of shelters of output_of_query1\nQuery2: \"get_information(relation='Shelters', head_entity='output_of_query1')\"\nStep3: Check if the number of shelters is above or below 20\nQuery3: \"conditions(set='output_of_query2', condition='output_of_query2 > 20', true_value='above', false_value='below')\"",
    "how many employees did the last listed employer have?": "None",
    "how many consecutive years has there been a wikimania conference?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that is Wikimania conference\nQuery1: \"get_information(relation='Conference', tail_entity='Wikimania conference')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Date of output_of_query2\nQuery3: \"get_information(relation='Date', tail_entity='output_of_query2')\"\nStep4: Find the consecutive years of output_of_query3\nQuery4: \"consecutive_years(set='output_of_query3')\"",
    "how many total movies did m.s. viswanathan do the music for?": "## Target type: {number of movies}\n## Query:\nStep1: Find the entity named M.S. Viswanathan\nQuery1: \"get_information(relation='Music', tail_entity='M.S. Viswanathan')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did brazil play against argentina in the international friendly competition?": "None",
    "how many people attended the game held on november 10, 1996?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of Date that matches November 10, 1996\nQuery1: \"get_information(relation='Date', tail_entity='November 10, 1996')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "whats the number of games released in 1998?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Release is 1998\nQuery1: \"get_information(relation='Release', tail_entity='1998')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who took office after abdullah jaafar?": "## Target type: {person}\n## Query:\nStep1: Find the entity named Abdullah Jaafar\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Abdullah Jaafar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Get the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Menteri Besar of output_of_query4\nQuery5: \"get_information(relation='Menteri Besar', head_entity='output_of_query4')\"",
    "what is the total number of countries participating this season": "None",
    "what is the difference (in years) between when the royal blue began and the year the crusader began?": "## Target type: {difference in years}\n## Query:\nStep1: Find the entity named Royal Blue\nQuery1: \"get_information(relation='Named trains', tail_entity='Royal Blue')\"\nStep2: Find the year begun of output_of_query1\nQuery2: \"get_information(relation='Year begun', head_entity='output_of_query1')\"\nStep3: Find the entity named Crusader\nQuery3: \"get_information(relation='Named trains', tail_entity='Crusader')\"\nStep4: Find the year begun of output_of_query3\nQuery4: \"get_information(relation='Year begun', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(year1='output_of_query2', year2='output_of_query4')\"",
    "which events had less than fifty nations participating?": "None",
    "how many total members of the 10th canadian parliament were there?": "None",
    "what is the total number of teams playing in this division?": "## Target type: {number}\n## Query:\nStep1: Find the total number of teams playing in this division\nQuery1: \"get_information(relation='Team')\" \nStep2: Calculate the count of output_of_query1 \nQuery2: \"count(set='output_of_query1')\"",
    "which year were there less than 672 contestants?": "None",
    "what are the number of runners-up did arsenal have?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Team as Arsenal\nQuery1: \"get_information(relation='Team', tail_entity='Arsenal')\"\nStep2: Find the number of runners-up of output_of_query1\nQuery2: \"get_information(relation='Runners-up', head_entity='output_of_query1')\"",
    "what is the number of american skaters?": "## Target type: {number of skaters}\n## Query:\nStep1: Find the entity with the relation of Nation is America\nQuery1: \"get_information(relation='Nation', tail_entity='America')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of deanery as \"new haven\"?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Deanery as \"New Haven\"\nQuery1: \"get_information(relation='Deanery', tail_entity='New Haven')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "whose number of goals was greater against columbia, lucimar ferreira da silva or adriano leite ribeiro?": "None",
    "what was the average of miss oklahoma's scores?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Miss Oklahoma\nQuery1: \"get_information(relation='State', tail_entity='Miss Oklahoma')\"\nStep2: Find the average of output_of_query1\nQuery2: \"get_information(relation='Average', head_entity='output_of_query1')\"",
    "what is the most consecutive gauges that were standard?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Gauge\nQuery1: \"get_information(relation='Gauge')\"\nStep2: Find the consecutive gauges that were standard\nQuery2: \"consecutive(output_of_query1, value='Standard')\"\nStep3: Find the max consecutive count of output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "which venue was the first to have over 30,000 attendees": "None",
    "which category does each train have in common?": "None",
    "how many wins did georgetown achieve in 1941?": "None",
    "how many psikyo shooting collection games were released?": "None",
    "how many parishes are named st. anthony?": "## Target type: {number}\n## Query:\nStep1: Find the entity named St. Anthony\nQuery1: \"get_information(relation='Name', tail_entity='St. Anthony')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "is the order of bardney abbey the same as abingdon abbey?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Bardney Abbey\nQuery1: \"get_information(relation='Name', tail_entity='Bardney Abbey')\"\nStep2: Find the order of output_of_query1\nQuery2: \"get_information(relation='Order', head_entity='output_of_query1')\"\nStep3: Find the entity named Abingdon Abbey\nQuery3: \"get_information(relation='Name', tail_entity='Abingdon Abbey')\"\nStep4: Find the order of output_of_query3\nQuery4: \"get_information(relation='Order', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is the same as output_of_query4\nQuery5: \"equals(set1='output_of_query2', set2='output_of_query4')\"",
    "f\u00e1mjin and fro\u00f0ba are located on which island?": "## Target type: {island}\n## Query:\nStep1: Find the entity named F\u00e1mjin\nQuery1: \"get_information(relation='Town/Village', tail_entity='F\u00e1mjin')\"\nStep2: Find the island of output_of_query1\nQuery2: \"get_information(relation='Island', head_entity='output_of_query1')\"\nStep3: Find the entity named Fro\u00f0ba\nQuery3: \"get_information(relation='Town/Village', tail_entity='Fro\u00f0ba')\"\nStep4: Find the island of output_of_query3\nQuery4: \"get_information(relation='Island', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the difference between the time of the fastest runner and the slowest?": "None",
    "szczecin and what other city had the same time that the windspeed was counted?": "None",
    "what player placed nest after dustin johnson?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Dustin Johnson\nQuery1: \"get_information(relation='Player', tail_entity='Dustin Johnson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what is the last state in the table?": "## Target type: {state}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the State of output_of_query3\nQuery4: \"get_information(relation='State', head_entity='output_of_query3')\"",
    "what is the number of spectators in attendance in the hull city vs. oldham athletic game?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Home team is Hull City and Away team is Oldham Athletic\nQuery1: \"get_information(relation='Home team', tail_entity='Hull City')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "how long did the tour of libya last?": "None",
    "which institution has the highest enrollment after elmhurst college?": "None",
    "what was the number of weeks that julie covington's single \" don't cry for me argentinia,\" was at number 1 in 1977?": "None",
    "how many times did erbedija win best actor between 1994 and 2012?": "None",
    "how many combined gold medals did japan and france win?": "None",
    "the team with the largest number of caps after 1988": "## Target type: {team}\n## Query:\nStep1: Find the years after 1988\nQuery1: \"get_information(relation='Years', tail_entity>'1988')\"\nStep2: Find the entity with the relation of International caps\nQuery2: \"get_information(relation='International caps')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max caps\nQuery4: \"get_information(relation='International caps', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Club', head_entity='output_of_query4')\"",
    "which country's team holds the track record for men's luge singles?": "None",
    "how many cities do not have lower populations than valenza?": "None",
    "which of these stations broadcasts with the least power?": "None",
    "after his second fight with frank mir who did he fight next?": "None",
    "what club is listed next to june 4, 1972?": "None",
    "which cyclist had the most points?": "None",
    "which country had a release with the same label as germany?": "None",
    "how many times did camerin oppose maria sharapova in singles finals?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Maria Sharapova\nQuery1: \"get_information(relation='Opponent in final', tail_entity='Maria Sharapova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that opposed Maria Sharapova in singles finals\nQuery3: \"get_information(relation='Opponent in final', head_entity='output_of_query1')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the date of the only match to occur in sapporo, japan?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Location as Sapporo, Japan\nQuery1: \"get_information(relation='Location', tail_entity='Sapporo, Japan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "how many gold medals did india win?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named India\nQuery1: \"get_information(relation='Nation', tail_entity='India')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many silver medalists did not have at least 2 silver medals listed?": "None",
    "whats the percentage of difference between the frog and zebra fish?": "None",
    "which congressman preceded alexander mckim?": "None",
    "the team's record in 2011 was the same was it's record in what year": "None",
    "does clemson or western michigan have more cws appearances?": "## Target type: {school}\n## Query:\nStep1: Find the entity named Clemson\nQuery1: \"get_information(relation='School', tail_entity='Clemson')\"\nStep2: Find the CWS appearances of output_of_query1\nQuery2: \"get_information(relation='CWS appearances', head_entity='output_of_query1')\"\nStep3: Find the entity named Western Michigan\nQuery3: \"get_information(relation='School', tail_entity='Western michigan')\"\nStep4: Find the CWS appearances of output_of_query3\nQuery4: \"get_information(relation='CWS appearances', head_entity='output_of_query3')\"\nStep5: Compare the appearances of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "which other stadiums are in the same city as windsor park?": "None",
    "which ethnicity has the most buddhists in kazakhstan?": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity with the relation of Buddhism\nQuery1: \"get_information(relation='Buddhism')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Buddhist population\nQuery3: \"get_information(relation='Buddhism', tail_entity='output_of_query2')\"\nStep4: Find the ethnicity of output_of_query3\nQuery4: \"get_information(relation='Ethnicity', head_entity='output_of_query3')\"",
    "jan and scott took part in trial number 10. who took part in the previous trial?": "None",
    "number of goals manchester united scored against preston north end in the season": "None",
    "what staple has the least amount of fat?": "None",
    "how many ministers of transport were members of the liberal party?": "None",
    "how long did roberto feliberti cintron serve before retirement?": "## Target type: {years of service}\n## Query:\nStep1: Find the entity named Roberto Feliberti Cintron\nQuery1: \"get_information(relation='Name', tail_entity='Roberto Feliberti Cintron')\"\nStep2: Find the Years until mandatory retirement of output_of_query1\nQuery2: \"get_information(relation='Years until mandatory retirement', head_entity='output_of_query1')\"",
    "what was the number of swedes in the top fifteen?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nation as Sweden\nQuery1: \"get_information(relation='Nation', tail_entity='Sweden')\"\nStep2: Find the entities in the top fifteen\nQuery2: \"get_information(relation='row_number', tail_entity<='15')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many members of estonia's men's national volleyball team were born in 1988?": "None",
    "how many consecutive years starting in 2004 did krishna release a film?": "None",
    "how many athletes took more than 8 minutes to run complete the race?": "None",
    "what is the last school to be founded in the aac?": "None",
    "how many players and both guard (g) and forward (f)?": "None",
    "how many crown entities in the table are crown agents but not monitored by the education department?": "## Target type: {number of crown entities}\n## Query:\nStep1: Find the crown entities that are crown agents\nQuery1: \"get_information(relation='Category / Type', tail_entity='Crown agent')\"\nStep2: Find the crown entities that are monitored by the education department\nQuery2: \"get_information(relation='Monitoring Department(s)', tail_entity='Education Department')\"\nStep3: Get the set difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "in what year were the the most workers affected by a strike?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Number of Members Affected\nQuery1: \"get_information(relation='Number of Members Affected')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Members Affected\nQuery3: \"get_information(relation='Number of Members Affected', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many 1st place finished did he have?": "## Target type: {number of 1st place finishes}\n## Query:\nStep1: Find the entity with the relation of Position is 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which teams have more wins that werder bremen?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Werder Bremen\nQuery1: \"get_information(relation='Team', tail_entity='Werder Bremen')\"\nStep2: Find the Winners of output_of_query1\nQuery2: \"get_information(relation='Winners', head_entity='output_of_query1')\"\nStep3: Find the teams with more wins than output_of_query2\nQuery3: \"get_information(relation='Winners', tail_entity>'output_of_query2')\"",
    "who is the next representative after madina begum?": "None",
    "which country won the largest haul of bronze medals?": "None",
    "what township has the most land area?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of \"Land area\"\nQuery1: \"get_information(relation='Land area')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max \"Land area\"\nQuery3: \"get_information(relation='Land area', tail_entity='output_of_query2')\"\nStep4: Find the Township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "which high school left the same year as fenton high school?": "None",
    "what is the difference in semifinalists between panama and vietnam?": "None",
    "how many events did idaho win?": "## Target type: {number of events}\n## Query:\nStep1: Find the entity named Idaho\nQuery1: \"get_information(relation='State', tail_entity='Idaho')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the events that Idaho won\nQuery3: \"get_information(relation='State', tail_entity='output_of_query2')\"\nStep4: Count the number of events in output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what come after rex f.": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Rex F.\nQuery1: \"get_information(relation='Name', tail_entity='Rex F.')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many years was maurice lecoq a market gardener?": "None",
    "who finished the same amount of laps as belmondo?": "None",
    "what was the difference in r&b ranking between \"come go with me\" and \"dance 4 me.\"?": "## Target type: {difference in R&B ranking}\n## Query:\nStep1: Find the entity titled \"Come Go with Me\"\nQuery1: \"get_information(relation='Title', tail_entity='Come Go with Me')\"\nStep2: Find the R&B ranking of output_of_query1\nQuery2: \"get_information(relation='US R&B', head_entity='output_of_query1')\"\nStep3: Find the entity titled \"Dance 4 Me\"\nQuery3: \"get_information(relation='Title', tail_entity='Dance 4 Me')\"\nStep4: Find the R&B ranking of output_of_query3\nQuery4: \"get_information(relation='US R&B', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the number of conservative representatives listed?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as 'Conservative'\nQuery1: \"get_information(relation='Party', tail_entity='Conservative')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which county has a higher population, alamance or alexander?": "None",
    "what is the number of games the senators have played?": "None",
    "what was the total wins for this team?": "None",
    "what is weldell r. beitzel's party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Weldell R. Beitzel\nQuery1: \"get_information(relation='Delegate', tail_entity='Weldell R. Beitzel')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "in regards to anna zagorska, what was her finishing time?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity named Anna Zagorska\nQuery1: \"get_information(relation='Athlete', tail_entity='Anna Zagorska')\"\nStep2: Find the finishing time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "the air date with the most viewers": "## Target type: {air date}\n## Query:\nStep1: Find the entity with the relation of Viewers (m)\nQuery1: \"get_information(relation='Viewers (m)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max viewers\nQuery3: \"get_information(relation='Viewers (m)', tail_entity='output_of_query2')\"\nStep4: Find the air date of output_of_query3\nQuery4: \"get_information(relation='Air Date', head_entity='output_of_query3')\"",
    "which winner is next to mount leinster rangers?": "None",
    "purdue had how many consecutive in the 1960s?": "## Target type: {number of consecutive}\n## Query:\nStep1: Find the entity that is Purdue\nQuery1: \"get_information(relation='College', tail_entity='Purdue')\"\nStep2: Find the row_number that is in the 1960s\nQuery2: \"get_information(relation='row_number', tail_entity>='1960' and tail_entity<='1969')\"\nStep3: Find the consecutive count of output_of_query1\nQuery3: \"consecutive_count(set='output_of_query2')\"",
    "which locomotive entered service first: 4107 or 4103?": "## Target type: {'Number'}\n## Query:\nStep1: Find the entity with the relation of Entered Service\nQuery1: \"get_information(relation='Entered Service')\"\nStep2: Find the Entered Service of 4107\nQuery2: \"get_information(relation='Entered Service', tail_entity='4107')\"\nStep3: Find the Entered Service of 4103\nQuery3: \"get_information(relation='Entered Service', tail_entity='4103')\"\nStep4: Compare the Entered Service dates of output_of_query2 and output_of_query3\nQuery4: \"compare(date1='output_of_query2', date2='output_of_query3')\"",
    "who is the first producer with the least amount of time?": "## Target type: {producer}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the producer of output_of_query3\nQuery4: \"get_information(relation='Producer(s)', head_entity='output_of_query3')\"",
    "how many were affiliated with the janata party?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Party Affiliation that is Janata Party\nQuery1: \"get_information(relation='Party Affiliation', tail_entity='Janata Party')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long did the first director serve in office?": "None",
    "what is the first week of the tournament?": "## Target type: {'Week'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number from output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Week of output_of_query3\nQuery4: \"get_information(relation='Week', head_entity='output_of_query3')\"",
    "which era of the reign of sun quan was the longest?": "None",
    "who was the last player to be transferred this season?": "## Target type: {player}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "previous to tom andrews who was elected?": "## Target type: {member}\n## Query:\nStep1: Find the entity named Tom Andrews\nQuery1: \"get_information(relation='Member', tail_entity='Tom Andrews')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the member of output_of_query4\nQuery5: \"get_information(relation='Member', head_entity='output_of_query4')\"",
    "who received more total medals, ecuador or chile?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Ecuador\nQuery1: \"get_information(relation='Nation', tail_entity='Ecuador')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Chile\nQuery3: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Find the ensemble who has more medals between output_of_query2 and output_of_query4\nQuery5: \"Calculator(function='max', set1='output_of_query2', set2='output_of_query4')\"",
    "what is the tallest building in columbus?": "## Target type: {'Name'}\n## Query:\nStep1: Find the tallest building in Columbus\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which manager has the earliest date of appointment?": "## Target type: {manager}\n## Query:\nStep1: Find the earliest date of appointment\nQuery1: \"get_information(relation='Date of appointment', tail_entity>='earliest')\"\nStep2: Find the manager of output_of_query1\nQuery2: \"get_information(relation='Outgoing manager', head_entity='output_of_query1')\"",
    "does the united states have more nation of citzenship then united kingdom?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity that is United States\nQuery1: \"get_information(relation='Nation of citizenship', tail_entity='United States')\"\nStep2: Find the entity that is United Kingdom\nQuery2: \"get_information(relation='Nation of citizenship', tail_entity='United Kingdom')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Calculate the count of output_of_query1\nQuery5: \"count(set='output_of_query1')\"\nStep6: Calculate the count of output_of_query2\nQuery6: \"count(set='output_of_query2')\"\nStep7: Compare the count of output_of_query1 and output_of_query2\nQuery7: \"compare(count1='output_of_query5', count2='output_of_query6')\"",
    "which choke has the least constriction?": "## Target type: {choke}\n## Query:\nStep1: Find the entity with the relation of Choke\nQuery1: \"get_information(relation='Choke')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min choke\nQuery3: \"get_information(relation='Choke', tail_entity='output_of_query2')\"",
    "who's the only player with a 2-phase career?": "None",
    "in how many poll sources did rob astorino not receive 25% or more?": "None",
    "who was the lead vocalist in \"sweat it out\"?": "## Target type: {'Lead vocalist'}\n## Query:\nStep1: Find the entity named \"Sweat it Out\"\nQuery1: \"get_information(relation='Title', tail_entity='Sweat it Out')\"\nStep2: Find the lead vocalist of output_of_query1\nQuery2: \"get_information(relation='Lead vocalist', head_entity='output_of_query1')\"",
    "which bridge has their location in summit, delaware?": "## Target type: {bridge}\n## Query:\nStep1: Find the entity which has the location of Summit, Delaware\nQuery1: \"get_information(relation='Location', tail_entity='Summit, Delaware')\"\nStep2: Find the bridge of output_of_query1\nQuery2: \"get_information(relation='Crossing', head_entity='output_of_query1')\"",
    "which program is only available on thursdays?": "## Target type: {program}\n## Query:\nStep1: Find the entity that Days available is Thursday\nQuery1: \"get_information(relation='Days available', tail_entity='Thursday')\"\nStep2: Find the program of output_of_query1\nQuery2: \"get_information(relation='Program', head_entity='output_of_query1')\"",
    "date on which the fewest attendees were at a dolphins game (home or away)": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which numbers were not withdrawn from service in 1957?": "None",
    "what is the difference between suicides in poland and sudetendeutsch?": "None",
    "hank aaron played at least what number of years": "None",
    "which was the first location to uses a grass surface?": "None",
    "what is the better season, 2005/06 or 2006/07?": "## Target type: {season}\n## Query:\nStep1: Find the entity with the relation of Season as 2005/06\nQuery1: \"get_information(relation='Season', tail_entity='2005/06')\"\nStep2: Find the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Season as 2006/07\nQuery3: \"get_information(relation='Season', tail_entity='2006/07')\"\nStep4: Find the Place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Compare the Place of output_of_query2 and output_of_query4\nQuery5: \"compare(op='>', value1='output_of_query2', value2='output_of_query4')\"",
    "how many losses did finland obtain?": "None",
    "how many employees does vitol have?": "## Target type: {number of employees}\n## Query:\nStep1: Find the entity named Vitol\nQuery1: \"get_information(relation='Company', tail_entity='Vitol')\"\nStep2: Find the employees of output_of_query1\nQuery2: \"get_information(relation='Employees', head_entity='output_of_query1')\"",
    "after sedan, which township has the next highest population?": "None",
    "was only nominated for best actor in a supporting role at satellite awards in 2008?": "None",
    "in the 1974-75 golden seals hockey season, how many draft picks were canadian?": "None",
    "which country got at least one of each medal?": "None",
    "which town name is the best if you want an area with the largest square miles?": "None",
    "how many games did the bolton wanderers and newcastle united play before there was a definitive winner in the fifth round proper?": "None",
    "what is the next fastest after the rocket-powered aircraft?": "None",
    "who is the slowest athlete in run 2?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity in Run 2 that appears the slowest.\nQuery1: \"get_information(relation='Run 2', tail_entity<'slowest')\"\nStep2: Find the athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "what is the number of times deggendorfer sc ii is on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Deggendorfer SC II\nQuery1: \"get_information(relation='East', tail_entity='Deggendorfer SC II')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of yachts launched in 2001?": "## Target type: {number}\n## Query:\nStep1: Find the yachts that were launched during the year 2001\nQuery1: \"get_information(relation='Launch year', tail_entity='2001')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was the morna launched the same year as the toyota aurion?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Morna\nQuery1: \"get_information(relation='Yacht', tail_entity='Morna')\"\nStep2: Find the Launch year of output_of_query1\nQuery2: \"get_information(relation='Launch year', head_entity='output_of_query1')\"\nStep3: Find the entity named Toyota Aurion\nQuery3: \"get_information(relation='Yacht', tail_entity='Toyota Aurion')\"\nStep4: Find the Launch year of output_of_query3\nQuery4: \"get_information(relation='Launch year', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is the same as output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4, operator='=')\"",
    "which was released earlier, atomic or last dayz?": "None",
    "which song was released earlier--\"sister mary\" or \"run to me\"?": "## Target type: {'Single title'}\n## Query:\nStep1: Find the release date of \"Sister Mary\"\nQuery1: \"get_information(relation='Single title', tail_entity='Sister Mary')\"\nStep2: Find the release date of \"Run to Me\"\nQuery2: \"get_information(relation='Single title', tail_entity='Run to Me')\"\nStep3: Compare the release dates of output_of_query1 and output_of_query2\nQuery3: \"compare(output_of_query1, output_of_query2)\"",
    "which is before david moller": "## Target type: {Athlete}\n## Query:\nStep1: Find the entity named David Moller\nQuery1: \"get_information(relation='Athlete', tail_entity='David Moller')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "what is the total number of athletes from japan?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that is Japan\nQuery1: \"get_information(relation='Country', tail_entity='Japan')\"\nStep2: Find the total number of athletes from output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was her highest all around score?": "## Target type: {'Final-Score'}\n## Query:\nStep1: Find the entity named All Around\nQuery1: \"get_information(relation='Event', tail_entity='All Around')\"\nStep2: Find the final score of output_of_query1\nQuery2: \"get_information(relation='Final-Score', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "does olivier jacque have the same time as tetsuya harada?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Olivier Jacque\nQuery1: \"get_information(relation='Rider', tail_entity='Olivier Jacque')\"\nStep2: Find the time/retired of output_of_query1\nQuery2: \"get_information(relation='Time/Retired', head_entity='output_of_query1')\"\nStep3: Find the entity named Tetsuya Harada\nQuery3: \"get_information(relation='Rider', tail_entity='Tetsuya Harada')\"\nStep4: Find the time/retired of output_of_query3\nQuery4: \"get_information(relation='Time/Retired', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is equal to output_of_query4\nQuery5: \"equal(value1='output_of_query2', value2='output_of_query4')\"",
    "what year was the only year were a tie occurred?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Winner(s) is a tie\nQuery1: \"get_information(relation='Winner(s)', tail_entity='tie')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what was the next wave class oiler after wave emperor?": "None",
    "how many districts does punia have?": "None",
    "did catherine jean milligan or lori moore get a higher placement in miss world?": "None",
    "which motorcycle did garry mccoy use on his team?": "## Target type: {motorcycle}\n## Query:\nStep1: Find the entity named Garry McCoy\nQuery1: \"get_information(relation='Rider', tail_entity='Garry McCoy')\"\nStep2: Find the motorcycle of output_of_query1\nQuery2: \"get_information(relation='Motorcycle', head_entity='output_of_query1')\"",
    "which township has the most land area?": "## Target type: {township}\n## Query:\nStep1: Find the entity with relation Land area\nQuery1: \"get_information(relation='Land area km\u00b2 (sq mi)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Land area\nQuery3: \"get_information(relation='Land area km\u00b2 (sq mi)', tail_entity='output_of_query2')\"\nStep4: Find the Township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "what was the first single to be released?": "None",
    "fc schalke 04 and what other club beat them?": "None",
    "was pat enright in rank 5 or rank 9?": "## Target type: {rank}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Find the entity named Pat Enright\nQuery2: \"get_information(relation='Player', tail_entity='Pat Enright')\"\nStep3: Find the rank of output_of_query2\nQuery3: \"get_information(relation='Rank', head_entity='output_of_query2')\"\nStep4: Check if output_of_query3 is equal to 5 or 9\nQuery4: \"output_of_query3 == 5 or output_of_query3 == 9\"",
    "name a manufacturer other than honda?": "## Target type: {manufacturer}\n## Query:\nStep1: Find the entity named Honda\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep2: Find all the manufacturers other than output_of_query1\nQuery2: \"get_information(relation='Manufacturer', tail_entity!='output_of_query1')\"\nStep3: Choose one manufacturer from output_of_query2\nQuery3: \"choose(set='output_of_query2')\"",
    "what is the other song title by michael jackson besides \"you are not alone\"?": "None",
    "tell me the number of games in 2012.": "None",
    "the countries of the united states and denmark where the only two countries represented that shot under what score?": "None",
    "which political party did most ministers side with?": "## Target type: {'Political party'}\n## Query:\nStep1: Find the entity that is the Political party with the most ministers\nQuery1: \"get_information(relation='Political party', tail_entity>='most')\"\nStep2: Find the Political party of output_of_query1\nQuery2: \"get_information(relation='Political party', head_entity='output_of_query1')\"",
    "who won on february 16: victorias or ottawa?": "None",
    "which schools are not primary schools?": "None",
    "how many television stations serve the cape girardeau area?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Area served is Cape Girardeau\nQuery1: \"get_information(relation='Area served', tail_entity='Cape Girardeau')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of times a brazilian has won a medal?": "None",
    "on how many shows did he play himself?": "## Target type: {number of shows}\n## Query:\nStep1: Find the entity with the relation of Role as 'himself'\nQuery1: \"get_information(relation='Role', tail_entity='himself')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the area (in acres) of the last table entry?": "None",
    "what year is next to the title cheat on you?": "None",
    "when was the last tour date of 2010?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "comparing january and february, who had the least average rainy days?": "## Target type: {month}\n## Query:\nStep1: Find the average rainy days in January\nQuery1: \"get_information(relation='Jan', tail_entity>='average rainy days')\"\nStep2: Find the average rainy days in February\nQuery2: \"get_information(relation='Feb', tail_entity>='average rainy days')\"\nStep3: Compare the average rainy days of output_of_query1 and output_of_query2\nQuery3: \"if average_of_query1 < average_of_query2: return 'January'; else: return 'February'\"",
    "how many nations are there?": "None",
    "who was faster, mikio oyama or arnulf sunde?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Mikio Oyama\nQuery1: \"get_information(relation='Athlete', tail_entity='Mikio Oyama')\"\nStep2: Find the entity named Arnulf Sunde\nQuery2: \"get_information(relation='Athlete', tail_entity='Arnulf Sunde')\"\nStep3: Get the time of output_of_query1\nQuery3: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep4: Get the time of output_of_query2\nQuery4: \"get_information(relation='Time', head_entity='output_of_query2')\"\nStep5: Compare the time of output_of_query3 and output_of_query4 to find who is faster\nQuery5: \"if(output_of_query3 < output_of_query4, 'output_of_query1', 'output_of_query2')\"",
    "how many players scored a greater number of touchdowns than anthony hines?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity that Player is Anthony Hines\nQuery1: \"get_information(relation='Player', tail_entity='Anthony Hines')\"\nStep2: Find the TD's of output_of_query1\nQuery2: \"get_information(relation='TD's', head_entity='output_of_query1')\"\nStep3: Find the entity whose TD's is larger than output_of_query2\nQuery3: \"get_information(relation='TD's', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which township has the greatest population total?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "how many total athletes have track records?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Record as Track\nQuery1: \"get_information(relation='Record', tail_entity='Track')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country had the most people named player of the year?": "## Target type: {country}\n## Query:\nStep1: Find all the entities with the relation of Name\nQuery1: \"get_information(relation='Name')\"\nStep2: Find the count of occurrence of each country in output_of_query1\nQuery2: \"count_occurrence(set='output_of_query1', group_by='Country')\"\nStep3: Find the country with the max occurrence in output_of_query2\nQuery3: \"get_information(relation='Country', tail_entity>='max_output_of_query2')\"",
    "who is the top ranking nation with the most medals received?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Get the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many victories did he have in april?": "None",
    "which professional wrestler has had the most number of reigns as nwa world heavyweight champion?": "## Target type: {professional wrestler}\n## Query:\nStep1: Find the entity with the relation of No. of reigns\nQuery1: \"get_information(relation='No. of reigns')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max reigns\nQuery3: \"get_information(relation='No. of reigns', tail_entity='output_of_query2')\"\nStep4: Find the wrestler of output_of_query3\nQuery4: \"get_information(relation='Wrestler', head_entity='output_of_query3')\"",
    "which opponent had the largest amount of points scored?": "None",
    "what was the number of passengers in phoenix arizona?": "## Target type: {number of passengers}\n## Query:\nStep1: Find the entity with the relation of City being Phoenix Arizona\nQuery1: \"get_information(relation='City', tail_entity='Phoenix Arizona')\"\nStep2: Find the number of passengers of output_of_query1\nQuery2: \"get_information(relation='Passengers', head_entity='output_of_query1')\"",
    "are the riders of the camel yamaha team the same as tech 3 yamaha?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Camel Yamaha Team\nQuery1: \"get_information(relation='Team', tail_entity='Camel Yamaha Team')\"\nStep2: Find the riders of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"\nStep3: Find the entity named Tech 3 Yamaha\nQuery3: \"get_information(relation='Team', tail_entity='Tech 3 Yamaha')\"\nStep4: Find the riders of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 and output_of_query4 are the same\nQuery5: \"is_same(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the number of christian radio stations broadcasted by mxr yorkshire?": "None",
    "how many administrative centre is there?": "## Target type: {number}\n## Query:\nStep1: Find all the Administrative centre\nQuery1: \"get_information(relation='Administrative centre')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many people live in beatrix mine?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Beatrix Mine\nQuery1: \"get_information(relation='Place', tail_entity='Beatrix Mine')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "how many of the landmarks are defined as bunkers?": "None",
    "how many ships were sunk in action total?": "None",
    "how many nominees were there in 1985?": "None",
    "what is the first club listed in the chart?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "how many districts are in the province of kunduz?": "None",
    "who is in first place?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity in the first place\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many horses started the breeders cup juvenile in 2013?": "## Target type: {number of horses}\n## Query:\nStep1: Find the entity named Breeders Cup Juvenile\nQuery1: \"get_information(relation='Year', tail_entity='2013')\"\nStep2: Find the number of starters of output_of_query1\nQuery2: \"get_information(relation='Starters', head_entity='output_of_query1')\"",
    "scott dixon led how many laps?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Scott Dixon\nQuery1: \"get_information(relation='Driver', tail_entity='Scott Dixon')\"\nStep2: Find the Laps Led of output_of_query1\nQuery2: \"get_information(relation='Laps Led', head_entity='output_of_query1')\"",
    "does m90 have a higher or lower apparent magnitude than m63?": "## Target type: {'higher' or 'lower'}\n## Query:\nStep1: Find the entity named M90\nQuery1: \"get_information(relation='Designation', tail_entity='M90')\"\nStep2: Find the apparent magnitude of output_of_query1\nQuery2: \"get_information(relation='Apparent Magnitude', head_entity='output_of_query1')\"\nStep3: Find the entity named M63\nQuery3: \"get_information(relation='Designation', tail_entity='M63')\"\nStep4: Find the apparent magnitude of output_of_query3\nQuery4: \"get_information(relation='Apparent Magnitude', head_entity='output_of_query3')\"\nStep5: Compare the apparent magnitudes of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4: 'higher' else: 'lower'\"",
    "what is the number of power rating for type a, b and c": "None",
    "tell me the number with a \"fab\" of 500 nm.": "None",
    "tell me the transmitter directly above the one with a kw of 0.04 and a bbca of 22.": "## Target type: {transmitter}\n## Query:\nStep1: Find the entity with kW is 0.04 and BBCA is 22\nQuery1: \"get_information(relation='kW', tail_entity='0.04')\"\nQuery2: \"get_information(relation='BBCA', tail_entity='22')\"\nStep2: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the previous_row of output_of_query3\nQuery5: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_number is output_of_query5\nQuery6: \"get_information(relation='row_number', tail_entity='output_of_query5')\"\nStep6: Find the Transmitter of output_of_query6\nQuery7: \"get_information(relation='Transmitter', head_entity='output_of_query6')\"",
    "how many consecutive 10mhz frequency chips are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Frequency [MHz]\nQuery1: \"get_information(relation='Frequency [MHz]')\"\nStep2: Find the chips with consecutive 10 MHz frequency\nQuery2: \"get_information(relation='Frequency [MHz]', tail_entity='10')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many bells weight less than 1000 kg?": "## Target type: {number of bells}\n## Query:\nStep1: Find the entities with the relation of Weight\nQuery1: \"get_information(relation='Weight')\"\nStep2: Find the entities that have weight less than 1000 kg\nQuery2: \"get_information(relation='Weight', tail_entity<'1000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many players hit more than 600 runs in their career?": "## Target type: {number of players}\n## Query:\nStep1: Find the players who hit more than 600 runs in their career\nQuery1: \"get_information(relation='HR', tail_entity>'600')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of teams that had drivers all from the same country?": "None",
    "what spot was listed immediately after the russell a. alger, jr. house?": "None",
    "which town had the least vicitims?": "## Target type: {town}\n## Query:\nStep1: Find the entity with the relation of Total victims\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min victims\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the town of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "to which team did charleston southern give up at most 40 points?": "None",
    "what percentage of votes did boddie have in sacramento?": "None",
    "which record on the chart was set earlier, the 200 or 400 m?": "## Target type: {record}\n## Query:\nStep1: Find the entity named 200 m\nQuery1: \"get_information(relation='Event', tail_entity='200 m')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named 400 m\nQuery3: \"get_information(relation='Event', tail_entity='400 m')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4')\"",
    "what is the title of the last album?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "besides team ibv, which other team had 6 total wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity named \u00cdBV\nQuery1: \"get_information(relation='Team', tail_entity='\u00cdBV')\"\nStep2: Find the won games of output_of_query1\nQuery2: \"get_information(relation='Won', head_entity='output_of_query1')\"\nStep3: Find the entity that has 6 won games\nQuery3: \"get_information(relation='Won', tail_entity='6')\"\nStep4: Get the difference between output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who's fee was higher between steven davis and chris baird?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Steven Davis\nQuery1: \"get_information(relation='Name', tail_entity='Steven Davis')\"\nStep2: Find the fee of output_of_query1\nQuery2: \"get_information(relation='Fee', head_entity='output_of_query1')\"\n\nStep3: Find the entity named Chris Baird\nQuery3: \"get_information(relation='Name', tail_entity='Chris Baird')\"\nStep4: Find the fee of output_of_query3\nQuery4: \"get_information(relation='Fee', head_entity='output_of_query3')\"\n\nStep5: Compare the fee of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query2', set2='output_of_query4', comparison='greater')\"",
    "the nation above algeria": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Algeria\nQuery1: \"get_information(relation='Nation', tail_entity='Algeria')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "which tournament had the most points per game?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity with the relation of Points per game\nQuery1: \"get_information(relation='Points per game')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points per game\nQuery3: \"get_information(relation='Points per game', tail_entity='output_of_query2')\"\nStep4: Find the tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "how much taller in oliver venno than rait rikberg?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Oliver Venno\nQuery1: \"get_information(relation='Player', tail_entity='Oliver Venno')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the entity named Rait Rikberg\nQuery3: \"get_information(relation='Player', tail_entity='Rait Rikberg')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate(operation='subtraction', operand1='output_of_query2', operand2='output_of_query4')\"",
    "how many players had a transfer fee of at least 8 million?": "## Target type: {number}\n## Query:\nStep1: Find the players with a transfer fee of at least 8 million\nQuery1: \"get_information(relation='Transfer fee', tail_entity>='8')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the date of the first international goal?": "## Target type: {date}\n## Query:\nStep1: Find the row_number of the first international goal\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "who won the race in 2014?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity in Year that equals 2014\nQuery1: \"get_information(relation='Year', tail_entity='2014')\"\nStep2: Find the Driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "how many conservative provincial representatives has gilbert plains had?": "## Target type: {number of representatives}\n## Query:\nStep1: Find the entity named Gilbert Plains\nQuery1: \"get_information(relation='Name', tail_entity='Gilbert Plains')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Party and Conservative\nQuery3: \"get_information(relation='Party', tail_entity='Conservative')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many different poll companies are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the Poll companies\nQuery1: \"get_information(relation='Poll company')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many plan accidents were there in 2008?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the row with year 2008\nQuery2: \"get_information(relation='year', tail_entity='2008')\"\nStep3: Get the # of accidents of output_of_query2\nQuery3: \"get_information(relation='# of accidents', head_entity='output_of_query2')\"",
    "2006 and what other year were internationl passengers in the 80,000 range?": "## Target type: {year}\n## Query:\nStep1: Find the entity that International passengers is in the 80,000 range in the year 2006\nQuery1: \"get_information(relation='International passengers', tail_entity='80,000', key='Change', value='-14.3%', year='2006')\"\nStep2: Find the entity that International passengers is in the 80,000 range in other years\nQuery2: \"get_information(relation='International passengers', tail_entity='80,000', key='Change', value='-14.3%', year!='2006')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "who was the last opponent the texas tech team faced in 1993?": "None",
    "who was the last to win against his opponent?": "None",
    "is there a points difference between the 9th position and 19th position on the list?": "## Target type: {points difference}\n## Query:\nStep1: Find the entity with the 9th position\nQuery1: \"get_information(relation='Pos', tail_entity='9')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity with the 19th position\nQuery3: \"get_information(relation='Pos', tail_entity='19')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the largest religious denomination in budapest?": "None",
    "how many days does the japan super series last?": "None",
    "how many european baseball championship gold medals does italy need in order to have the same total amount of any type of medal as netherlands?": "None",
    "which church is listed below christ the king?": "None",
    "how many of the singles are under the chart of pop singles?": "## Target type: {number of singles}\n## Query:\nStep1: Find the entity with the relation of Chart\nQuery1: \"get_information(relation='Chart', tail_entity='pop singles')\"\nStep2: Find the single of output_of_query1\nQuery2: \"get_information(relation='Single', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which album has the highest number of sales but doesn't have a designated artist?": "None",
    "which songwriter is credited with the largest number of songs?": "None",
    "name an original artist that had their song performed two consecutive weeks.": "None",
    "who was named first team all american goalkeeper the year after stefan frei?": "None",
    "what was the total number of days for the tour?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of home games played?": "## Target type: {number}\n## Query:\nStep1: Find all the games that are played at home\nQuery1: \"get_information(relation='Home/Away', tail_entity='Home')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the average number of fans in attendance in the first three games?": "None",
    "which senior advisor is after pete rouse?": "## Target type: {advisor}\n## Query:\nStep1: Find the entity named Pete Rouse\nQuery1: \"get_information(relation='Name', tail_entity='Pete Rouse')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many times is each religion listed?": "None",
    "which university has the most in undergraduate enrollment after cornell university?": "None",
    "what was the difference, in years between the founding of st. agnes and the founding of good shepherd?": "None",
    "what was the last movie morgan creek made for a budget under thirty million?": "None",
    "how many consecutive years did biff jones coach?": "None",
    "the nebraska cornhuskers last game was played where": "None",
    "has the earthquake commission or the charities commission been around longer?": "None",
    "which artist was first in point after nunzio gallo?": "None",
    "how many drivers had no points?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity with the relation of Points as 'no'\nQuery1: \"get_information(relation='Points', tail_entity='no')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country had the most deputy judges?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Term as a Deputy Judge\nQuery1: \"get_information(relation='Term as a Deputy Judge')\"\nStep2: Get the country of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Calculate the count of each country in output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Find the country with the most deputy judges\nQuery4: \"get_information(relation='Nationality', tail_entity>='most')\"",
    "which other city has the same number of barangays as jalajala": "None",
    "list each player drafted from canada.": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality as Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Find the players from output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the combined weight of the big boy and the m1?": "None",
    "when were the madison mallards established?": "## Target type: {established year}\n## Query:\nStep1: Find the entity named Madison Mallards\nQuery1: \"get_information(relation='Club', tail_entity='Madison Mallards')\"\nStep2: Find the established year of output_of_query1\nQuery2: \"get_information(relation='Established', head_entity='output_of_query1')\"",
    "what brand has been constructor the most?": "## Target type: {'Constructor'}\n## Query:\nStep1: Find the entity that appears the most in the relation of Constructor\nQuery1: \"get_information(relation='Constructor', tail_entity>='most')\"\nStep2: Find the Constructor of output_of_query1\nQuery2: \"get_information(relation='Constructor', head_entity='output_of_query1')\"",
    "how many total wolverine volumes are there?": "None",
    "how many more adherents does constantinople have compared to jerusalem?": "## Target type: {difference}\n## Query:\nStep1: Find the jurisdiction named Constantinople\nQuery1: \"get_information(relation='Jurisdiction', tail_entity='Constantinople')\"\nStep2: Find the adherents of output_of_query1\nQuery2: \"get_information(relation='Adherents', head_entity='output_of_query1')\"\nStep3: Find the jurisdiction named Jerusalem\nQuery3: \"get_information(relation='Jurisdiction', tail_entity='Jerusalem')\"\nStep4: Find the adherents of output_of_query3\nQuery4: \"get_information(relation='Adherents', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "the difference in time between junior fatu and kaz?": "None",
    "which season held the most series?": "None",
    "what is the top temple name listed that also has a personal name listed?": "None",
    "what is the difference in chart position between \"bleach\" and \"you & me\"?": "## Target type: {chart position difference}\n## Query:\nStep1: Find the entity named Bleach\nQuery1: \"get_information(relation='Single/EP', tail_entity='Bleach')\"\nStep2: Find the chart position of output_of_query1\nQuery2: \"get_information(relation='UK Singles Chart Position', head_entity='output_of_query1')\"\nStep3: Find the entity named You & Me\nQuery3: \"get_information(relation='Single/EP', tail_entity='You & Me')\"\nStep4: Find the chart position of output_of_query3\nQuery4: \"get_information(relation='UK Singles Chart Position', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1=output_of_query2, value2=output_of_query4)\"",
    "what is the difference in gold between algeria and cameroon?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Algeria\nQuery1: \"get_information(relation='Nation', tail_entity='Algeria')\"\nStep2: Find the gold of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Cameroon\nQuery3: \"get_information(relation='Nation', tail_entity='Cameroon')\"\nStep4: Find the gold of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(num1='output_of_query2', num2='output_of_query4')\"",
    "number of teams not to win a match in first leg": "None",
    "how many more games were released in 2005 than 2003?": "None",
    "what year did the first model have its first flight?": "None",
    "what is the difference (in years) between the time \"swat 4\" was released and the time \"swat force\" was released?": "None",
    "how many of the classes are type salvage tug?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Type as Salvage Tug\nQuery1: \"get_information(relation='Type', tail_entity='Salvage Tug')\"\nStep2: Get the classes of output_of_query1\nQuery2: \"get_information(relation='Class', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games have been held in minneapolis?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Minneapolis\nQuery1: \"get_information(relation='City', tail_entity='Minneapolis')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many of these games were played at the suncorp stadium?": "## Target type: {number}\n## Query:\nStep1: Find all the games played at Suncorp Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Suncorp Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long is the duration of one season (from the first game to the last)?": "None",
    "bazaly, ostrava was used on 6 september 1004, but what venue was used on 18 september 1996?": "## Target type: {venue}\n## Query:\nStep1: Find the venue used on September 6, 1004\nQuery1: \"get_information(relation='Date', tail_entity='September 6, 1004')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"\nStep3: Find the venue used on September 18, 1996\nQuery3: \"get_information(relation='Date', tail_entity='September 18, 1996')\"\nStep4: Find the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "which total is higher, the europa league total or the league total?": "## Target type: {'total'}\n## Query:\nStep1: Find the entity with the relation of Europa League\nQuery1: \"get_information(relation='Europa League')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of League\nQuery3: \"get_information(relation='League')\"\nStep4: Find the Total of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the Total of output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4', operator='greater')\"",
    "which film is under the year of 1999 and has the role of mandy murphy?": "## Target type: {film title}\n## Query:\nStep1: Find the entity with the relation of Year and the value of 1999\nQuery1: \"get_information(relation='Year', value='1999')\"\nStep2: Find the entity with the relation of Role and the value of Mandy Murphy\nQuery2: \"get_information(relation='Role', value='Mandy Murphy')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which of the major staple foods contains the highest number of grams of carbohydrates in a 100 gram portion?": "None",
    "how many times has the position of 1st been achieved?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position being 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team finished after the adamson pep squad": "None",
    "what were the total amount of successful defenses andre ward had?": "None",
    "which one is the last on the chart": "## Target type: {'Player'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how long did the broadcast last in spain, from what date to what date?": "None",
    "which county had the most bronze medals?": "None",
    "which submarine was from the uk and was almost at 2,000 in tonnage?": "## Target type: {submarine}\n## Query:\nStep1: Find the entity from the UK\nQuery1: \"get_information(relation='Nationality', tail_entity='UK')\"\nStep2: Find the entity with Tonnage (GRT) almost equal to 2,000\nQuery2: \"get_information(relation='Tonnage (GRT)', tail_entity='2,000')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the submarine of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the total number of positions listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "before 1990, how many second places were obtained?": "None",
    "what was the earliest winner?": "## Target type: {'Winner'}\n## Query:\nStep1: Find all the row numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "how many goals did ismail isa score this season?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Ismail Isa\nQuery1: \"get_information(relation='Player', tail_entity='Ismail Isa')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "who had more silver medals, cuba or brazil?": "## Target type: {'Nation'}\n## Query:\nStep1: Find the entity named Cuba\nQuery1: \"get_information(relation='Nation', tail_entity='Cuba')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Brazil\nQuery3: \"get_information(relation='Nation', tail_entity='Brazil')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Compare the silver medals of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "the first person to finish in heat 1?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number and tail_entity of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the number of ties?": "None",
    "how many losses from 1984 to 1988": "None",
    "don january won the tucson open invitational twice, in 1960 and which year?": "None",
    "how many locations are above sedona?": "None",
    "is ireland before greece in regards of amount of points?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Ireland\nQuery1: \"get_information(relation='Country', tail_entity='Ireland')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Greece\nQuery3: \"get_information(relation='Country', tail_entity='Greece')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Check if the points of output_of_query1 is less than the points of output_of_query3\nQuery5: \"if less_than('output_of_query2', 'output_of_query4', 'yes', 'no')\"",
    "are there more players from sweden or canada?": "## Target type: {country}\n## Query:\nStep1: Find the players from Sweden\nQuery1: \"get_information(relation='Nationality', tail_entity='Sweden')\"\nStep2: Find the players from Canada\nQuery2: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "how many turkish lakes ate less than 10 square kilometers in size?": "None",
    "how many awards has philippe gilbert won?": "None",
    "in how many countries did the series premiere in the year 2011?": "None",
    "how many years were held in summer?": "## Target type: {number}\n## Query:\nStep1: Find the events with the relation of Season as \"Summer\"\nQuery1: \"get_information(relation='Season', tail_entity='Summer')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "when did their world cup games take place?": "## Target type: {date}\n## Query:\nStep1: Find the row_number of the World Cup games\nQuery1: \"get_information(relation='Competition', tail_entity='World Cup')\"\nStep2: Find the Date of the output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "how man awards did the film win at the mirchi music awards?": "None",
    "which swecon has had the least guests of honor?": "None",
    "how many first tops class numbers are less than 200?": "None",
    "how many club members put the shot at least 20.15 the first time they broke 20m?": "None",
    "in which year did the number of pages first increase?": "None",
    "14-17 was published in 1836. when was the previous one published?": "None",
    "what is the first year the scores are recorded?": "None",
    "which touchstone energy 300 top 10 driver also came in first at the auto club 300?": "None",
    "what two hospitals holding consecutive rankings of 8 and 9 respectively, both provide 1200 hospital beds?": "None",
    "which electoral district in the dutch language group has the most seats allotted to it?": "None",
    "nelsano albano served in the same year as which washington twp. member?": "None",
    "who was the highest ranking player to withdraw from the 2010 french open tournament?": "None",
    "what was the world rank of paris?": "## Target type: {'world rank'}\n## Query:\nStep1: Find the entity named Paris\nQuery1: \"get_information(relation='Location', tail_entity='Paris')\"\nStep2: Find the world rank of output_of_query1\nQuery2: \"get_information(relation='world rank', head_entity='output_of_query1')\"",
    "how many versions are at least 7 minutes long?": "## Target type: {number}\n## Query:\nStep1: Find the row_number where Length is at least 7 minutes\nQuery1: \"get_information(relation='Length', tail_entity>='7:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of points for the medal winners?": "None",
    "what is the number of total gold medals awarded?": "None",
    "which team had the fastest time?": "None",
    "which one has the most vote": "None",
    "are there at least 16 wrestlers on this list?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Wrestlers\nQuery1: \"get_information(relation='Wrestlers')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count is at least 16\nQuery3: \"compare(count='output_of_query2', operator='>=', value='16')\"",
    "who coached the muncie flyers to an indiana state championship?": "## Target type: {coach}\n## Query:\nStep1: Find the entity whose Finish is Indiana state championship\nQuery1: \"get_information(relation='Finish', tail_entity='Indiana State Championship')\"\nStep2: Find the coach of output_of_query1\nQuery2: \"get_information(relation='Coach', head_entity='output_of_query1')\"",
    "which is the other besides asia the most region charted": "None",
    "who won the open the year after tengku hadzali shah won it?": "None",
    "who had the most or highest transfer fee?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Fee\nQuery1: \"get_information(relation='Fee')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Fee\nQuery3: \"get_information(relation='Fee', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "on what date did the bears win by a difference of 27 points?": "## Target type: {date}\n## Query:\nStep1: Find the row_number where the result is a win by a difference of 27 points\nQuery1: \"get_information(relation='Result', tail_entity='W 27-')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "which game did they score more, week 10 or 12?": "## Target type: {'week'}\n## Query:\nStep1: Find the entity with the relation of Week and Week 10\nQuery1: \"get_information(relation='Week', tail_entity='10')\"\nStep2: Find the entity with the relation of Week and Week 12\nQuery2: \"get_information(relation='Week', tail_entity='12')\"\nStep3: Find the entity with the relation of Result and output_of_query1\nQuery3: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep4: Find the entity with the relation of Result and output_of_query2\nQuery4: \"get_information(relation='Result', head_entity='output_of_query2')\"\nStep5: Find the entity with the relation of Score and output_of_query3\nQuery5: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep6: Find the entity with the relation of Score and output_of_query4\nQuery6: \"get_information(relation='Score', tail_entity='output_of_query4')\"",
    "after playing seven games, how many players individual points were above 30?": "None",
    "which opponent had the lowest amount of points in one game?": "None",
    "what's the difference between horne's votes in marin and his votes in santa cruz?": "None",
    "what is the least amount of points scored throughout the 2004/05 season?": "None",
    "which party received the least votes": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Votes\nQuery1: \"get_information(relation='Votes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min votes\nQuery3: \"get_information(relation='Votes', tail_entity='output_of_query2')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "who scored the least points in the june 25 game?": "None",
    "which team had the least deficit?": "None",
    "what team scored the least opposition strength?": "None",
    "when was the last 2009 utah utes football game?": "## Target type: {Date}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "was the attendance higher in nebraska or in colorado?": "None",
    "how many league goals walter langton made?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Walter Langton\nQuery1: \"get_information(relation='Name', tail_entity='Walter Langton')\"\nStep2: Find the league goals of output_of_query1\nQuery2: \"get_information(relation='League goals', head_entity='output_of_query1')\"",
    "which age range had the top number for protestant and other christians?": "## Target type: {age range}\n## Query:\nStep1: Find the entity with the relation of Protestant and other Christian\nQuery1: \"get_information(relation='Protestant and other Christian')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max number\nQuery3: \"get_information(relation='Protestant and other Christian', tail_entity='output_of_query2')\"\nStep4: Find the age range of output_of_query3\nQuery4: \"get_information(relation='Ages attained (years)', head_entity='output_of_query3')\"",
    "which bishop served between the years of 1846 and 1866?": "## Target type: {bishop}\n## Query:\nStep1: Find the entity with the relation of Office started as 1846\nQuery1: \"get_information(relation='Office started', tail_entity='1846')\"\nStep2: Find the entity with the relation of Office ended as 1866\nQuery2: \"get_information(relation='Office ended', tail_entity='1866')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the bishop of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many people live in santa maria?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Santa Maria\nQuery1: \"get_information(relation='Location', tail_entity='Santa Maria')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "aside from 316, what was the other works number used in 1883?": "## Target type: {works number}\n## Query:\nStep1: Find the entity with the relation of Year Built as 1883\nQuery1: \"get_information(relation='Year Built', tail_entity='1883')\"\nStep2: Find the entity with the relation of Works Number as 316\nQuery2: \"get_information(relation='Works Number', tail_entity='316')\"\nStep3: Find the set difference of all works number and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "which model weighs the most, according to the table?": "None",
    "who was the first player chosen by the cincinnati bengals, in round seven?": "None",
    "who was the first player born?": "None",
    "who was the first player to play for the st louis cardinals?": "None",
    "which team had the first pick?": "## Target type: {NFL team}\n## Query:\nStep1: Find the entity in Pick # that is the minimum.\nQuery1: \"get_information(relation='Pick #', tail_entity='smallest')\"\nStep2: Find the NFL team of output_of_query1.\nQuery2: \"get_information(relation='NFL team', head_entity='output_of_query1')\"",
    "which team held first position during the 1993-94 season?": "## Target type: {team}\n## Query:\nStep1: Find the entity related to Position in 1993-94 which indicates first position\nQuery1: \"get_information(relation='Position in 1993\u201394', tail_entity='1')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which team did the rangers play first in november of 1992 in the uefa champions league?": "None",
    "which team was the first to beat italy": "None",
    "who was the first team to beat the 1987 chicago cubs in august?": "None",
    "name one that was released in the 1980's but was not used for plumbers merchants.": "None",
    "which episode of the whole 19 yards had the least amount of viewers?": "## Target type: {episode}\n## Query:\nStep1: Find the entity that has the relation of Viewers\nQuery1: \"get_information(relation='Viewers')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min viewers\nQuery3: \"get_information(relation='Viewers', tail_entity='output_of_query2')\"\nStep4: Find the episode of output_of_query3\nQuery4: \"get_information(relation='Episode', head_entity='output_of_query3')\"",
    "what is the previous time for the saros on october 3, 2415?": "None",
    "how many total times has this team finished 1st in mid south?": "## Target type: {number}\n## Query:\nStep1: Find the entity that finished 1st in Mid South\nQuery1: \"get_information(relation='Regular Season', tail_entity='1st, Mid South')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name an abbey located in greater london county.": "None",
    "what track/title had the most songwriters?": "None",
    "what is the only building in canada to have more than 60 floors?": "## Target type: {building}\n## Query:\nStep1: Find the buildings with more than 60 floors\nQuery1: \"get_information(relation='Floors', tail_entity>'60')\"\nStep2: Find the buildings in Canada\nQuery2: \"get_information(relation='City', tail_entity='Canada')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "how many districts in saint lucia have populations greater than 10,000 people?": "None",
    "how many districts have a population density of at lest 1000.0?": "## Target type: {number}\n## Query:\nStep1: Find the entities with a population density of at least 1000.0\nQuery1: \"get_information(relation='Population density (/km\u00b2)', tail_entity>='1000.0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me a district that did not have a population over 600,000.": "None",
    "what was the total number of overall wins for harvard?": "None",
    "after lance armstrong, who led next in the 1995 tour de france?": "None",
    "where was the only 5km event held?": "## Target type: {venue}\n## Query:\nStep1: Find the entity with the relation of Event as 5 km\nQuery1: \"get_information(relation='Event', tail_entity='5 km')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "how many titles have at least 5 episodes?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Episodes\nQuery1: \"get_information(relation='Episodes')\"\nStep2: Find the entities with at least 5 episodes\nQuery2: \"get_information(relation='Episodes', tail_entity>='5')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference between hayley wood and thorpe wood?": "None",
    "how did silva plce in the competition after the olympic games in 1996?": "None",
    "what is the number of poles that daly has won in his career?": "None",
    "how many points did the tigers score in november?": "None",
    "andi langenhan and johannes ludwig came in a total of how many seconds behind first place?": "None",
    "who had more field goals alwood or woods?": "None",
    "who scored more goals: mccoist or hateley?": "## Target type: {'Scorers'}\n## Query:\nStep1: Find the entity named McCoist\nQuery1: \"get_information(relation='Scorers', tail_entity='McCoist')\"\nStep2: Find the number of goals scored by output_of_query1\nQuery2: \"get_information(relation='Scorers', head_entity='output_of_query1')\"\nStep3: Find the entity named Hateley\nQuery3: \"get_information(relation='Scorers', tail_entity='Hateley')\"\nStep4: Find the number of goals scored by output_of_query3\nQuery4: \"get_information(relation='Scorers', head_entity='output_of_query3')\"\nStep5: Find the entity with more goals\nQuery5: \"if(set1>=set2, output_of_query1, output_of_query3)\"",
    "what are the number of times the united states is listed as the country?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last player who went to indiana to win an award?": "None",
    "where there more or less than 5 players picked from the united states?": "## Target type: {more or less}\n## Query:\nStep1: Find the entity that Country of origin is United States\nQuery1: \"get_information(relation='Country of origin*', tail_entity='United States')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Compare the count with 5\nQuery3: \"compare(count='output_of_query2', operator='>', value='5')\"",
    "how many times was first place won?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Place that has the value of 1.\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1.\nQuery2: \"count(set='output_of_query1')\"",
    "who is the only player who is not a fly-half?": "None",
    "how many total elected seats in 1991?": "None",
    "how long has it been since japan won gold?": "None",
    "who was the player that the team drafted after bob dean?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Bob Dean\nQuery1: \"get_information(relation='Player', tail_entity='Bob Dean')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "which title is listed next after \"the way to fight\"?": "## Target type: {'English title'}\n## Query:\nStep1: Find the entity with the relation of English title as \"The Way to Fight\"\nQuery1: \"get_information(relation='English title', tail_entity='The Way to Fight')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the English title of output_of_query4\nQuery5: \"get_information(relation='English title', head_entity='output_of_query4')\"",
    "with which team has pastor maldonado competed with the most?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Pastor Maldonado\nQuery1: \"get_information(relation='row_number', tail_entity='Pastor Maldonado')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the team that competes the most with output_of_query2\nQuery3: \"get_information(relation='Team', tail_entity>='most')\"",
    "which racer finished after jose camacho?": "## Target type: {racer}\n## Query:\nStep1: Find the entity named Jose Camacho\nQuery1: \"get_information(relation='Driver', tail_entity='Jose Camacho')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "which players on loan played neither mf or df?": "None",
    "what is the difference in prize money between ben hogan and sam snead?": "## Target type: {prize money difference}\n## Query:\nStep1: Find the entity named Ben Hogan\nQuery1: \"get_information(relation='Player', tail_entity='Ben Hogan')\"\nStep2: Find the Money of output_of_query1\nQuery2: \"get_information(relation='Money ($)', head_entity='output_of_query1')\"\nStep3: Find the entity named Sam Snead\nQuery3: \"get_information(relation='Player', tail_entity='Sam Snead')\"\nStep4: Find the Money of output_of_query3\nQuery4: \"get_information(relation='Money ($)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculation(subtraction='output_of_query2-output_of_query4')\"",
    "how many were played before 1985?": "None",
    "what is the number of singles released in the 1940s?": "None",
    "how many nations won no gold medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations with relation of Gold as 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many counties participated in the election?": "## Target type: {number of counties}\n## Query:\nStep1: Find the unique counties in the data\nQuery1: \"get_information(relation='County')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference between the highest average and the lowest avaerage?": "## Target type: {difference}\n## Query:\nStep1: Find the entity with the relation of Avg.\nQuery1: \"get_information(relation='Avg.')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the min output_of_query1\nQuery3: \"min(set='output_of_query1')\" \nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(value1='output_of_query2', value2='output_of_query3')\"",
    "how long was the duration of follow-up for revuelta?": "None",
    "his last score was written in...": "None",
    "how many different mayors served between 1970 and 2010?": "None",
    "what was the most consecutive regular season 1st place finishes?": "None",
    "which building is after the bonds hall?": "## Target type: {building}\n## Query:\nStep1: Find the entity named Bonds Hall\nQuery1: \"get_information(relation='Name', tail_entity='Bonds Hall')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "was the white spruce used in 1985 from michigan or minnesota?": "## Target type: {state}\n## Query:\nStep1: Find the entity named White Spruce\nQuery1: \"get_information(relation='Species', tail_entity='White Spruce')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity='output_of_query3')\"\nStep5: Find the entity with the Year of 1985\nQuery5: \"get_information(relation='Year', tail_entity='1985')\"\nStep6: Find the state of output_of_query3\nQuery6: \"get_information(relation='State', head_entity='output_of_query3')\"\nStep7: Find the state of output_of_query5\nQuery7: \"get_information(relation='State', head_entity='output_of_query5')\"\nStep8: Check if the state of output_of_query6 is Michigan OR the state of output_of_query7 is Minnesota\nQuery8: \"boolean_or(get_information(re",
    "how many names do not have images next to them?": "None",
    "how many more winners were there than nominees?": "None",
    "name a girl that had the same score in cycling and archery.": "None",
    "what was their award at the janison short sharp film festival?": "## Target type: {'Award'}\n## Query:\nStep1: Find the entity that Festival is Janison Short Sharp Film Festival\nQuery1: \"get_information(relation='Festival', tail_entity='Janison Short Sharp Film Festival')\"\nStep2: Get the Award of output_of_query1\nQuery2: \"get_information(relation='Award', head_entity='output_of_query1')\"",
    "how many coaches have nebraska as their alma mater?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Alma Mater is Nebraska.\nQuery1: \"get_information(relation='Alma Mater', tail_entity='Nebraska')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was andorra the opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Andorra\nQuery1: \"get_information(relation='Opponent', tail_entity='Andorra')\"\nStep2: Count the occurrences of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of courthouses located in aberdeen?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Aberdeen\nQuery1: \"get_information(relation='City', tail_entity='Aberdeen')\"\nStep2: Find the entities with the relation of Courthouse and the head entity of output_of_query1.\nQuery2: \"get_information(relation='Courthouse', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the total number of silver medals awarded to the french and the germans in the 1994 winter olympic biathlon?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is French\nQuery1: \"get_information(relation='Nation', tail_entity='French')\"\nStep2: Find the entity that is German\nQuery2: \"get_information(relation='Nation', tail_entity='German')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the total silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "during the 1951 world ice hockey championships, what was the difference between the first and last place teams for number of games won ?": "## Target type: {difference}\n## Query:\nStep1: Find the entity in row_number that is first place\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the no. of games won of output_of_query1\nQuery2: \"get_information(relation='Won', head_entity='output_of_query1')\"\nStep3: Find the entity in row_number that is last place\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the no. of games won of output_of_query3\nQuery4: \"get_information(relation='Won', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "nation that earned the most total medals after spain": "None",
    "only one team has won more than 10 bronze medals in the biathlon at the winter paralympics. which team is it?": "None",
    "which athlete completed the race in the same time as jan bazen?": "None",
    "what is the number of times that dalian wanda/shide has won the tournament?": "None",
    "how many of mccullough's bridges were completed in 1922": "None",
    "how many lifts are of the detach quad type?": "## Target type: {number of lifts}\n## Query:\nStep1: Find the lifts with the relation of Type\nQuery1: \"get_information(relation='Type', tail_entity='detach quad')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of records set by dennis rodman": "None",
    "how many wins are listed for the season?": "None",
    "name a team that scored at most 3 points in a losing effort.": "None",
    "what is the title of the first track on the best of benassi bros greatest hit album?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity in row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "is a water closet the same as a toilet?": "None",
    "how many games were won by the swarm by over 2 goals?": "None",
    "how many more people live in clear creek township than columbia township in ellsworth county, kansas?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Clear Creek Township in Ellsworth County, Kansas\nQuery1: \"get_information(relation='Township', tail_entity='Clear Creek Township')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Columbia Township in Ellsworth County, Kansas\nQuery3: \"get_information(relation='Township', tail_entity='Columbia Township')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(set1='output_of_query2', set2='output_of_query4')\"",
    "after 2000, how many times has yelena koshcheyeva finished first?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Yelena Koshcheyeva\nQuery1: \"get_information(relation='Name', tail_entity='Yelena Koshcheyeva')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity who has the relation of Position that is '1st'\nQuery5: \"get_information(relation='Position', tail_entity='1st')\"\nStep6: Find the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "when was the last race that was timed at greater than 10 seconds?": "None",
    "is the zuse z3 computing system the same as the zuse z4?": "## Target type: {yes/no}\n## Query:\nStep1: Find the row_number of the Zuse Z3 computing system\nQuery1: \"get_information(relation='Name', tail_entity='Zuse Z3 computing system')\"\nStep2: Find the row_number of the Zuse Z4 computing system\nQuery2: \"get_information(relation='Name', tail_entity='Zuse Z4 computing system')\"\nStep3: Check if the output_of_query1 is the same as output_of_query2\nQuery3: \"is_same(output_of_query1, output_of_query2)\"",
    "what sport is listed next after canoeing?": "## Target type: {sport}\n## Query:\nStep1: Find the entity where Sport is Canoeing\nQuery1: \"get_information(relation='Sport', tail_entity='Canoeing')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Sport of output_of_query4\nQuery5: \"get_information(relation='Sport', head_entity='output_of_query4')\"",
    "what ship was built before the mauretania?": "None",
    "what is the title listed after parva?": "## Target type: {Film Title}\n## Query:\nStep1: Find the entity named Parva\nQuery1: \"get_information(relation='Film Title', tail_entity='Parva')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film Title of output_of_query4\nQuery5: \"get_information(relation='Film Title', head_entity='output_of_query4')\"",
    "which stage had the most cyclists withdraw?": "None",
    "what is the number of players drafted who are from norway?": "None",
    "how many times was first place listed as the position?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position as \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many championships does nippon sport science university have": "None",
    "kent benson and glenn robinson were both award winners to be drafted by which nba team?": "None",
    "who served as manager longer--francis bosschaerts or peter maes?": "## Target type: {manager}\n## Query:\nStep1: Find the entity named Francis Bosschaerts\nQuery1: \"get_information(relation='Name', tail_entity='Francis Bosschaerts')\"\nStep2: Find Time as manager of output_of_query1\nQuery2: \"get_information(relation='Time as manager', head_entity='output_of_query1')\"\nStep3: Find the entity named Peter Maes\nQuery3: \"get_information(relation='Name', tail_entity='Peter Maes')\"\nStep4: Find Time as manager of output_of_query3\nQuery4: \"get_information(relation='Time as manager', head_entity='output_of_query3')\"\nStep5: Calculate the length of output_of_query2\nQuery5: \"length(set='output_of_query2')\"\nStep6: Calculate the length of output_of_query4\nQuery6: \"length(set='output_of_query4')\"\nStep7: Compare the length of output_of_query5 and output_of_query6 to determine who served as a manager longer",
    "which county had the lower percentage votes for obama: amador, humboldt, or lake?": "None",
    "what countrys had first runs that were longer than their second runs?": "None",
    "which stage was longer, 3 or 8?": "## Target type: {stage}\n## Query:\nStep1: Find the entity that Stage is 3\nQuery1: \"get_information(relation='Stage', tail_entity='3')\"\nStep2: Find the entity that Stage is 8\nQuery2: \"get_information(relation='Stage', tail_entity='8')\"\nStep3: Find the Length of output_of_query1\nQuery3: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep4: Find the Length of output_of_query2\nQuery4: \"get_information(relation='Length', head_entity='output_of_query2')\"\nStep5: Compare the Length of output_of_query3 and output_of_query4\nQuery5: \"compare(set1='output_of_query3', set2='output_of_query4')\"",
    "which ruler is not king or marquis?": "None",
    "who got a larger number of votes, macneill or olsson?": "None",
    "which competition was shi dongpeng in before the world junior championships?": "None",
    "kazakhstan had a position of 23rd in 1999 world championships and what other competition?": "None",
    "the 1990 european championships and the 1988 olympic games both resulted in what position for this competitor?": "None",
    "in what competition did this competitor place the same as he did at the 1984 olympic games?": "None",
    "how many more people live in dennery than the forest reserve?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Dennery\nQuery1: \"get_information(relation='District', tail_entity='Dennery')\"\nStep2: Find the Population of output_of_query1\nQuery2: \"get_information(relation='Population (2010 census)', head_entity='output_of_query1')\"\nStep3: Find the entity named Forest Reserve\nQuery3: \"get_information(relation='District', tail_entity='Forest Reserve')\"\nStep4: Find the Population of output_of_query3\nQuery4: \"get_information(relation='Population (2010 census)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "who is the only main author who found 98.2% of freedom for all patients?": "None",
    "how many times did gene sarazen win?": "None",
    "how many times has he played against honduras?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Honduras\nQuery1: \"get_information(relation='Opponent', tail_entity='Honduras')\"\nStep2: Count the occurrences of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "yoichiro kakitani scored above 2 goals in how many major competitions?": "## Target type: {number of major competitions}\n## Query:\nStep1: Find the entity named Yoichiro Kakitani\nQuery1: \"get_information(relation='Team', tail_entity='Yoichiro Kakitani')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the major competitions with goals above 2\nQuery3: \"get_information(relation='Goals', tail_entity>'2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times was josh constable second?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Josh Constable\nQuery1: \"get_information(relation='Second', tail_entity='Josh Constable')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many points were scored when there were less than 15 races?": "## Target type: {points}\n## Query:\nStep1: Find the entity with the relation of Races less than 15\nQuery1: \"get_information(relation='Races', tail_entity<'15')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "which other club had 13 wins, but more points than cd cartagena?": "## Target type: {club}\n## Query:\nStep1: Find the entity named CD Cartagena\nQuery1: \"get_information(relation='Club', tail_entity='CD Cartagena')\"\nStep2: Find the Wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Find the Points of output_of_query1\nQuery3: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep4: Find the entity with Wins equals to 13\nQuery4: \"get_information(relation='Wins', tail_entity='13')\"\nStep5: Find the entity with Points larger than output_of_query3\nQuery5: \"get_information(relation='Points', tail_entity>'output_of_query3')\"\nStep6: Get the intersection of output_of_query4 and output_of_query5\nQuery6: \"set_intersection(set1='output_of_query4', set2='output_of_query5')\"",
    "how many teams finished faster than 4:10?": "None",
    "how many times has this racer finished below 20th position?": "None",
    "how many teams had at least 15 wins?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Find the entities that have at least 15 wins\nQuery2: \"get_information(relation='Wins', tail_entity>='15')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which racer only had 4 points?": "## Target type: {racer}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points', tail_entity='4')\"\nStep2: Get the racer of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "name a racer that had at least 20 points.": "None",
    "how many teams failed to finish the race after 2 laps?": "## Target type: {number}\n## Query:\nStep1: Find the entity that the laps is 2\nQuery1: \"get_information(relation='Laps', tail_entity='2')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Get the difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "which nation is the top nation in number of gold awards won?": "None",
    "what country had the most receipts per capita in 2005?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Receipts per capita 2005 USD\nQuery1: \"get_information(relation='Receipts per capita 2005 USD')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max receipts per capita\nQuery3: \"get_information(relation='Receipts per capita 2005 USD', tail_entity='output_of_query2')\"",
    "who was the only titleholder to reach the top 15 at miss world?": "## Target type: {Miss Northern Ireland titleholder}\n## Query:\nStep1: Find the entity with the relation Miss World and Placement at Miss World of Top 15\nQuery1: \"get_information(relation='Placement at Miss World', tail_entity='Top 15')\"\nStep2: Find the Miss Northern Ireland titleholder of output_of_query1\nQuery2: \"get_information(relation='Miss Northern Ireland', head_entity='output_of_query1')\"",
    "who is the only canadian in the tournaments?": "None",
    "who was the only rider to score 9 points?": "## Target type: {Rider}\n## Query:\nStep1: Find the entity with the relation of Points and value of 9\nQuery1: \"get_information(relation='Points', value='9')\"\nStep2: Find the entity with the relation of Rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "the next rider from italy aside from winner marco simoncelli was": "None",
    "is enping more/less dense than kaiping?": "## Target type: {density comparison}\n## Query:\nStep1: Find the entity named Enping\nQuery1: \"get_information(relation='Name', tail_entity='Enping')\"\nStep2: Find the density of output_of_query1\nQuery2: \"get_information(relation='Density (/km\u00b2)', head_entity='output_of_query1')\"\nStep3: Find the entity named Kaiping\nQuery3: \"get_informatoin(relation='Name', tail_entity='Kaiping')\"\nStep4: Find the density of output_of_query3\nQuery4: \"get_information(relation='Density (/km\u00b2)', head_entity='output_of_query3')\"\nStep5: Compare the density of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which nations won at least 6 medals?": "None",
    "which title has no b-sides?": "None",
    "there is at least how many locations?": "## Target type: {number}\n## Query:\nStep1: Find all the locations\nQuery1: \"get_information(relation='Location')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was +3 laps, mario dom\u00ednguez or dan clarke?": "## Target type: {Driver}\n## Query:\nStep1: Find the entity named Mario Dom\u00ednguez\nQuery1: \"get_information(relation='Driver', tail_entity='Mario Dom\u00ednguez')\"\nStep2: Find the entity named Dan Clarke\nQuery2: \"get_information(relation='Driver', tail_entity='Dan Clarke')\"\nStep3: Get the relation of Laps for output_of_query1\nQuery3: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep4: Get the relation of Laps for output_of_query2\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query2')\"\nStep5: Compare the Laps of output_of_query1 and output_of_query2 and return the larger one\nQuery5: \"if(set1='output_of_query3', set2='output_of_query4', set1='output_of_query4', set2='output_of_query3')\"",
    "which artists scored at least 16 for composition?": "None",
    "how many games did the blue jays play in july?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of Date in the month of July\nQuery1: \"get_information(relation='Date', tail_entity contains='July')\"\nStep2: Calculate the count of games in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many subdivisions are there in camarines sur?": "None",
    "name the competitions in which ramon gonzales came in 1st position.": "None",
    "which was the first state to be formed?": "None",
    "where was the last venue before the opponent colombia?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Colombia\nQuery1: \"get_information(relation='Opponent', tail_entity='Colombia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "how many strikes had above 200,000 members affected?": "## Target type: {number of strikes}\n## Query:\nStep1: Find the entity that Number of Members Affected is above 200000\nQuery1: \"get_information(relation='Number of Members Affected', tail_entity>'200000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which car has a stock boost of over 7psi?": "## Target type: {car}\n## Query:\nStep1: Find the car that has a stock boost over 7psi\nQuery1: \"get_information(relation='Stock boost', tail_entity>'7psi')\"\nStep2: Get the car of output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"",
    "is morris s. arnold above or below maryanne trump barry in in the list?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Morris S. Arnold\nQuery1: \"get_information(relation='Judge', tail_entity='Morris S. Arnold')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Maryanne Trump Barry\nQuery3: \"get_information(relation='Judge', tail_entity='Maryanne Trump Barry')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check the position of row_number of output_of_query2 compared to row_number of output_of_query4\nQuery5: \"position(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the only day grass was the surface used?": "## Target type: {date}\n## Query:\nStep1: Find the entity whose surface is 'Grass'\nQuery1: \"get_information(relation='Surface', tail_entity='Grass')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "what was the next film shoko goto appeared in after fetish world in may 2005?": "None",
    "how many gold medals were awarded between all 7 nations?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Pakistan\nQuery1: \"get_information(relation='Nation', tail_entity='Pakistan')\"\nStep2: Find the Total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entities with the relation of Gold \nQuery3: \"get_information(relation='Gold')\"\nStep4: Calculate the sum of output_of_query3\nQuery4: \"sum(set='output_of_query3')\"",
    "was the last game a win or a loss?": "## Target type: {'Result'}\n## Query:\nStep1: Find the entity named row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"",
    "how many players in the 2009 world matchplay won at least 30 legs?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity in 2009 world matchplay\nQuery1: \"get_information(relation='row_number', tail_entity='2009 world matchplay')\"\nStep2: Find the players with at least 30 legs\nQuery2: \"get_information(relation='Legs Won', tail_entity>='30')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the only providence friars member of the 2010 american women's hockey olympic roster?": "None",
    "what is the total of named trains?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Named trains\nQuery1: \"get_information(relation='Named trains')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the difference in the number of votes between otero county and harding county?": "None",
    "who won the most?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity named Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Winner', tail_entity>='most')\"",
    "the tallest delegate": "None",
    "what is the total number of lesbian, gay, bisexual, or transgender-related films were there in the year 2000?": "None",
    "what is the year listed before 2001?": "None",
    "what country premiered after poland?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Poland\nQuery1: \"get_information(relation='Country', tail_entity='Poland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "how long did it take the pionersky radar station to go from partially operational to fully operational?": "None",
    "after you complete deganya road, what portion comes next?": "None",
    "name a game that was won by at least 3 goals.": "None",
    "were there any rugby union matches between new zealand and wales in which new zealand scored no points?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity that Victor is New Zealand\nQuery1: \"get_information(relation='Victor', tail_entity='New Zealand')\"\nStep2: Find the entity that Score is \"0\"\nQuery2: \"get_information(relation='Score', tail_entity='0')\"\nStep3: Calculate the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Check if output_of_query3 is empty or not\nQuery4: \"check_empty(set='output_of_query3')\"",
    "how long was the race in the all-africa games (distance)?": "None",
    "how many countries have ranks in the double digits?": "None",
    "how many kg at most were listed in the asian record category?": "## Target type: {weight in kg}\n## Query:\nStep1: Find the entity in Asian Record\nQuery1: \"get_information(relation='World Record', tail_entity='Asian Record')\"\nStep2: Find the maximum weight in output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many individuals were awarded the knight's cross of the iron cross before 1940?": "None",
    "how many australians were in the top 10?": "None",
    "how many singles were under position 1?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position being 1\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of times that they placed 1st?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Place is \"1st\"\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what province in afghanistanhas the greatest population?": "None",
    "what was the number of nominations in the 1990s?": "## Target type: {number}\n## Query:\nStep1: Find the nominations in the 1990s\nQuery1: \"get_information(relation='Year', tail_entity>='1990', tail_entity<='1999')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "before april 7, how many times had morris won?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity that has the relation Date with value \"Apr 7\"\nQuery1: \"get_information(relation='Date', tail_entity='Apr 7')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Get the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the number of wins before output_of_query3\nQuery5: \"get_information(relation='Win', tail_entity<'output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who did they have the largest win/loss differential against?": "None",
    "how many people live in kilifi?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity in County that is Kilifi\nQuery1: \"get_information(relation='County', tail_entity='Kilifi')\"\nStep2: Find the Population Census 2009 of output_of_query1\nQuery2: \"get_information(relation='Population Census 2009', head_entity='output_of_query1')\"",
    "which administrative area has the least square mileage and lowest population?": "## Target type: {administrative area}\n## Query:\nStep1: Find the entity with the relation of Area sq mi\nQuery1: \"get_information(relation='Area sq mi')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Area sq mi\nQuery3: \"get_information(relation='Area sq mi', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Population\nQuery4: \"get_information(relation='Population')\"\nStep5: Get the min output_of_query4\nQuery5: \"min(set='output_of_query4')\" \nStep6: Get the entity with the min Population\nQuery6: \"get_information(relation='Population', tail_entity='output_of_query5')\"\nStep7: Find the intersection of output_of_query3 and output_of_query6\nQuery7: \"set_intersection(set1='output_of_query3', set2='output_of_query6')\"",
    "what team has won twice but has been runner-up 5 times?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has won twice\nQuery1: \"get_information(relation='Winners', tail_entity='2')\"\nStep2: Find the entity that has been runner-up 5 times\nQuery2: \"get_information(relation='Runners-up', tail_entity='5')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "tell me the number of competitors from nigeria.": "## Target type: {number}\n## Query:\nStep1: Find the entity named Nigeria\nQuery1: \"get_information(relation='Nationality', tail_entity='Nigeria')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which song had the highest us country position?": "None",
    "who was their last opponent in the uefa cup in the 2007-2008 season?": "None",
    "based on the table of brazil's results at the fifa world cup between 1930 and 2010, in which year did teams score no match points at all during the final between brazil and italy?": "None",
    "how many years did heartbeat series run in total?": "None",
    "which state regent's term will last the longest?": "None",
    "how many total events did she take place in?": "None",
    "what is the number of countries they have played?": "None",
    "how many series awarded at least $500,000 in prize money?": "None",
    "how many nations have received at least 1 gold medal?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Gold\nQuery1: \"get_information(relation='Gold', tail_entity>='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name all the nations that won at least five silver medals.": "## Target type: {list of nations}\n## Query:\nStep1: Find the entities with relation Silver that is at least 5.\nQuery1: \"get_information(relation='Silver', tail_entity>='5')\"\nStep2: Find the nations of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many nations won more than 2 gold medals?": "None",
    "how many games were played at craven park?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Venue is Craven Park\nQuery1: \"get_information(relation='Venue', tail_entity='Craven Park')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the time difference between habtamu fayisa andpeter matheka mutuku?": "None",
    "thanjavur has a population in 2001 of only how many?": "## Target type: {population in 2001}\n## Query:\nStep1: Find the entity named Thanjavur\nQuery1: \"get_information(relation='City', tail_entity='Thanjavur')\"\nStep2: Find the population in 2001 of output_of_query1\nQuery2: \"get_information(relation='Population (2001)', head_entity='output_of_query1')\"",
    "number of games played against teams with animal mascots": "None",
    "how many total courthouses have there been in mississippi?": "None",
    "how many industrial neighborhoods exist in calgary?": "None",
    "how long was huang le's longest jump in 2002?": "None",
    "which military has the most shelters?": "None",
    "when was the first away game?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Home/Away is \"Away\"\nQuery1: \"get_information(relation='Home/Away', tail_entity='Away')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number of output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "where was the tournament before the 1982 tournament in philadelphia held?": "None",
    "what team was the first of win the world cup?": "## Target type: {National Team}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the National Team of output_of_query3\nQuery4: \"get_information(relation='National Team', head_entity='output_of_query3')\"",
    "when was the first game played.": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "how many chapters were founded in ohio?": "None",
    "what unrsgn is listed previous to the o?": "## Target type: {UNRSGN}\n## Query:\nStep1: Find the entity that UNRSGN is o\nQuery1: \"get_information(relation='UNRSGN', tail_entity='o')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the UNRSGN of output_of_query4\nQuery5: \"get_information(relation='UNRSGN', head_entity='output_of_query4')\"",
    "what are the least amount of points scored during the 1981 falcons season?": "None",
    "how many years did william r poage serve?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named William R. Poage\nQuery1: \"get_information(relation='Representative', tail_entity='William R. Poage')\"\nStep2: Find the served years of output_of_query1\nQuery2: \"get_information(relation='Served', head_entity='output_of_query1')\"\nStep3: Calculate the number of years served of output_of_query2\nQuery3: \"difference('output_of_query2')\"\n\nNote: The difference function should handle date calculations to give the number of years correctly.",
    "besides the 12th of march, what other time was the final score of 0-9 reached in 2005?": "None",
    "what was the average number of weeks that \"let your yeah be yeah\" spent on all of the different charting systems?": "## Target type: {average number of weeks}\n## Query:\nStep1: Find the entity with the relation of Single \"Let Your Yeah Be Yeah\"\nQuery1: \"get_information(relation='Single', tail_entity='Let Your Yeah Be Yeah')\"\nStep2: Find the US Hot 100 of output_of_query1\nQuery2: \"get_information(relation='US Hot 100', head_entity='output_of_query1')\"\nStep3: Find the US Cashbox of output_of_query1\nQuery3: \"get_information(relation='US Cashbox', head_entity='output_of_query1')\"\nStep4: Find the UK Singles of output_of_query1\nQuery4: \"get_information(relation='UK Singles', head_entity='output_of_query1')\"\nStep5: Calculate the average of the weeks spent on all the charting systems\nQuery5: \"average(set='output_of_query2', set='output_of_query3', set='output_of_query4')\"",
    "how many times did marty win the award for best actor?": "None",
    "how many total games did boston college win in the beanpot?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Boston College\nQuery1: \"get_information(relation='Champion', tail_entity='Boston College')\"\nStep2: Find the total games won by output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times has he been nominated in total?": "## Target type: {number of nominations}\n## Query:\nStep1: Find the entity with the relation of Result being Nominated\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years did this team not qualify for the open cup?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that did not qualify for the Open Cup\nQuery1: \"get_information(relation='Open Cup', tail_entity='Did not qualify')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "name the competition that occured directly after the european cup in 1985-86.": "None",
    "what is the years won for each team": "None",
    "how long has nico rosberg competed in the formula one series?": "None",
    "which single was released before \"tomber\"?": "## Target type: {'Single'}\n## Query:\nStep1: Find the entity named \"Tomber\"\nQuery1: \"get_information(relation='Single', tail_entity='Tomber')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Single of output_of_query4\nQuery5: \"get_information(relation='Single', head_entity='output_of_query4')\"",
    "which author had a poem on this list with the first line \"as it fell upon day\" and also a poem that starts with \"if music and sweet poetry agree\".": "## Target type: {author}\n## Query:\nStep1: Find the entity with the first line \"as it fell upon day\"\nQuery1: \"get_information(relation='First line', tail_entity='as it fell upon day')\"\nStep2: Find the author of output_of_query1\nQuery2: \"get_information(relation='Author', head_entity='output_of_query1')\"\nStep3: Find the entity with the first line \"if music and sweet poetry agree\"\nQuery3: \"get_information(relation='First line', tail_entity='if music and sweet poetry agree')\"\nStep4: Find the author of output_of_query3\nQuery4: \"get_information(relation='Author', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which monitoring department is listed the most?": "None",
    "other than 1999, what year did ken harnden win second place?": "None",
    "what is the only organization whose treaties morocco has signed?": "## Target type: {organization}\n## Query:\nStep1: Find the entity named Morocco\nQuery1: \"get_information(relation='Organization', tail_entity='Morocco')\"\nStep2: Find the organization that Morocco has signed treaties with\nQuery2: \"get_information(relation='Organization', head_entity='output_of_query1')\"",
    "what event comes after ufc 121?": "## Target type: {event}\n## Query:\nStep1: Find the entity named UFC 121\nQuery1: \"get_information(relation='Event', tail_entity='UFC 121')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Event of output_of_query4\nQuery5: \"get_information(relation='Event', head_entity='output_of_query4')\"",
    "which song came first: \"workin' it\" or \"catch a bad one\"?": "## Target type: {song}\n## Query:\nStep1: Find the entity named \"Workin' It\"\nQuery1: \"get_information(relation='Song', tail_entity='Workin' It')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Catch a Bad One\"\nQuery3: \"get_information(relation='Song', tail_entity='Catch a Bad One')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_numbers of output_of_query2 and output_of_query4\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4', operator='less')\"",
    "what's the difference in age between luis estrella martinez and edgardo rivera garcia?": "None",
    "only nation to earn more than 7 bronze medals": "## Target type: {nation}\n## Query:\nStep1: Find the entity that has more than 7 bronze medals\nQuery1: \"get_information(relation='Bronze', tail_entity>'7')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which artist name appears the most on this chart?": "## Target type: {'Artists'}\n## Query:\nStep1: Find the entity named Artists\nQuery1: \"get_information(relation='Artists')\"\nStep2: Split the Artists into a list of individual names\nQuery2: \"split(set='output_of_query1', delimiter=', ')\"\nStep3: Find the name that appears the most in output_of_query2\nQuery3: \"most_frequent(set='output_of_query2')\"",
    "which administration has the least amount of division?": "None",
    "how many countries have at least 2 bronze medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity that has at least 2 bronze medals\nQuery1: \"get_information(relation='Bronze', tail_entity>='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was steven smith pick number 5 or number 8?": "## Target type: {pick number}\n## Query:\nStep1: Find the entity named Steven Smith\nQuery1: \"get_information(relation='Player', tail_entity='Steven Smith')\"\nStep2: Find the pick number of output_of_query1\nQuery2: \"get_information(relation='Pick', head_entity='output_of_query1')\"",
    "what team is first on the list?": "## Target type: {'PBA team'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the PBA team of output_of_query3\nQuery4: \"get_information(relation='PBA team', head_entity='output_of_query3')\"",
    "count how many of these members were unionists.": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Unionist\nQuery1: \"get_information(relation='Elected Party', tail_entity='Unionist')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "teams where the number of games played was the same as number of games won.": "None",
    "what province is listed previous to ghor?": "## Target type: {province}\n## Query:\nStep1: Find the entity named Ghor\nQuery1: \"get_information(relation='Province', tail_entity='Ghor')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the province of output_of_query4\nQuery5: \"get_information(relation='Province', head_entity='output_of_query4')\"",
    "in what consecutive years did kevin grimes, unc serve as a defender?": "None",
    "who was the progressive conservative in the office of minister of transport?": "None",
    "for how many years was h.l. matthews active as coach?": "None",
    "which katyusha launcher has the best range?": "None",
    "the team that is last in terms of total": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many swat games were there before 2006?": "None",
    "in how many tournaments did the team play, at most, 9 games?": "None",
    "which minister resident had the shortest appointment?": "None",
    "which nations earned at least 5 silver medals?": "None",
    "who was the only nation with 5 gold medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold', tail_entity='5')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many movies has he been from 1941-1949.": "None",
    "how many countries started airing the series in september of 2011?": "None",
    "how many movies have less than 20 episodes?": "## Target type: {number of movies}\n## Query:\nStep1: Find the entity with the relation of Number of episodes\nQuery1: \"get_information(relation='Number of episodes')\"\nStep2: Find the movies with less than 20 episodes\nQuery2: \"get_information(relation='Number of episodes', tail_entity<'20')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long was thomas stouch coach?": "None",
    "what two nationalities have a tonnage of around 1900 and both sunk?": "None",
    "in what year did he first race?": "## Target type: {year}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "phil mickelson's score at the bob hope chrysler minus chris smith's score at the buick classic.": "None",
    "which artist is listed first in the table?": "None",
    "what is the first airbase listed on the chart?": "## Target type: {airbase}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what candidates, other than george h. scott, used his middle initial on the 1919 alderman ballot?": "None",
    "how many teams got at least 5 medals?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the teams with at least 5 medals\nQuery2: \"get_information(relation='Total', tail_entity>='5')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many titles have at least 2 acts or more?": "None",
    "which player had the most total points?": "None",
    "what year was natalia oriero's first tv role?": "None",
    "what was the name of the last television show between 2004 and february, 2013 in which mauli dave played herself?": "None",
    "which top-grossing film from 1987 starred tom selleck, ted danson, and steve guttenberg?": "None",
    "indian american entertainer mauli dave has appeared on television as a contestant in a number of programs; however, she only appeared in the slightly different capacity of a celebrity contestant one time between 2004 and 2012, during the 4th season of a popular show-- what was the name of that television show?": "None",
    "through the eighties, govinda appeared in at least how many films per year?": "None",
    "which movie did he act in after he was in lin zexu?": "## Target type: {'English Title'}\n## Query:\nStep1: Find the entity named Lin Zexu\nQuery1: \"get_information(relation='Role', tail_entity='Lin Zexu')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the English Title of output_of_query4\nQuery5: \"get_information(relation='English Title', head_entity='output_of_query4')\"",
    "which person reigned for 25 years and are from japan?": "None",
    "how long did alexander kim hold the office?": "None",
    "how many terms did a republican serve before watkins term?": "None",
    "how many mayors were in office for a total of 9 years?": "None",
    "how many reigned more than 50 years?": "None",
    "how many pitchers were chosen in the first round of the 1989 major league baseball draft?": "None",
    "who was the first player from norway who was drafted?": "None",
    "what is the top college/junior/club team from which the golden seals drafted in 1974?": "None",
    "how many high schools had a league leave to big nine conference?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of league left to\nQuery1: \"get_information(relation='league left to', tail_entity='Big Nine Conference')\"\nStep2: Get the unique High Schools in output_of_query1\nQuery2: \"get_information(relation='High School', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who placed first in round 8?": "## Target type: {'Winning Driver'}\n## Query:\nStep1: Find the entity with the relation of Rd. is 8\nQuery1: \"get_information(relation='Rd.', tail_entity='8')\"\nStep2: Get the Winning Driver of output_of_query1\nQuery2: \"get_information(relation='Winning Driver', head_entity='output_of_query1')\"",
    "in 1997/98 season was the place at least 15th?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named 1997/98 season\nQuery1: \"get_information(relation='Season', tail_entity='1997/98 season')\"\nStep2: Check if the place of output_of_query1 is at least 15th\nQuery2: \"check(set='output_of_query1', key='Place', value>='15th')\"",
    "what was the last year they came in 3rd place": "## Target type: {year}\n## Query:\nStep1: Find the entity that Regular Season is \"3rd\"\nQuery1: \"get_information(relation='Regular Season', tail_entity='3rd')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\" \nStep4: Find the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "in which election year were the least amount of party list votes casted?": "## Target type: {'Election year'}\n## Query:\nStep1: Find the entity with the relation of Number of party list votes\nQuery1: \"get_information(relation='Number of party list votes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min party list votes\nQuery3: \"get_information(relation='Number of party list votes', tail_entity='output_of_query2')\"\nStep4: Find the election year of output_of_query3\nQuery4: \"get_information(relation='Election year', head_entity='output_of_query3')\"",
    "the difference between the number of medals of italy and the number of medals of poland": "None",
    "who is the other person who is 24 years old besides reyna royo?": "## Target type: {contestant}\n## Query:\nStep1: Find the entity named Reyna Royo\nQuery1: \"get_information(relation='Contestant', tail_entity='Reyna Royo')\"\nStep2: Find the Age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the entity with Age 24\nQuery3: \"get_information(relation='Age', tail_entity='24')\"\nStep4: Get the difference between output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "which two silver medalists had 2 weightlifting silver medals each?": "None",
    "which was released earlier, mark 1 or distributor?": "None",
    "which horse finished first in the breeders cup in 1985?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity with the relation of Year is 1985\nQuery1: \"get_information(relation='Year', tail_entity='1985')\"\nStep2: Find the Winner of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "what is the difference in wins between sevilla fc and cd toledo?": "## Target type: {difference in wins}\n## Query:\nStep1: Find the entity named Sevilla FC\nQuery1: \"get_information(relation='Club', tail_entity='Sevilla FC')\"\nStep2: Find the wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Find the entity named CD Toledo\nQuery3: \"get_information(relation='Club', tail_entity='CD Toledo')\"\nStep4: Find the wins of output_of_query3\nQuery4: \"get_information(relation='Wins', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many games more than chamaco valaguez did sangre chicana win?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Chamaco Valaguez\nQuery1: \"get_information(relation='Loser', tail_entity='Chamaco Valaguez')\"\nStep2: Find the entity named Sangre Chicana\nQuery2: \"get_information(relation='Winner', tail_entity='Sangre Chicana')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query3\nQuery5: \"calculate_difference(number1='output_of_query4', number2='output_of_query3')\"",
    "how many partial failures of h-ii flights were there?": "None",
    "knockrammer park has the exact same capacity as which other stadium?": "None",
    "what is the total medal count for ukraine?": "## Target type: {total medal count}\n## Query:\nStep1: Find the entity named Ukraine\nQuery1: \"get_information(relation='Nation', tail_entity='Ukraine')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which country had the most leaders?": "None",
    "what is the number of the only locomotive to be withdrawn from service before the year 1945?": "None",
    "which year had the most releases?": "None",
    "which month had 15.6 inches in rainfall and also 9.5 inches in snowfall?": "None",
    "what is the total number of games lost during the month of april?": "## Target type: {number of games}\n## Query:\nStep1: Find the row_number of the games in the month of April\nQuery1: \"get_information(relation='Date', tail_entity='April')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the games lost in the month of April\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which month(s) aired at least four titles or more?": "None",
    "who ranked right after turkey?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Turkey\nQuery1: \"get_information(relation='Nation', tail_entity='Turkey')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what is the total number of times mckoy placed in the top 3?": "None",
    "what is the total current listing of names on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entities listed on the chart\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the definition of the last channel?": "## Target type: {'Definition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Definition of output_of_query3\nQuery4: \"get_information(relation='Definition', head_entity='output_of_query3')\"",
    "how many total titles are listed for the artist benassi bros.?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Benassi Bros.\nQuery1: \"get_information(relation='Artist', tail_entity='Benassi Bros.')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps did juan pablo montoya complete in the 2005 belgian grand prix?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Juan Pablo Montoya\nQuery1: \"get_information(relation='Driver', tail_entity='Juan Pablo Montoya')\"\nStep2: Find the entity named Belgian Grand Prix in the year 2005\nQuery2: \"get_information(relation='Year', tail_entity='2005')\"\nStep3: Find the entity named Belgian Grand Prix in output_of_query2\nQuery3: \"get_information(relation='Constructor', head_entity='output_of_query2')\"\nStep4: Find the number of laps completed by output_of_query1 in output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "which opponent has the same score as san marino?": "None",
    "who wins the most?": "## Target type: {'Opposition'}\n## Query:\nStep1: Find the entity with the relation of Won\nQuery1: \"get_information(relation='Won')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Won\nQuery3: \"get_information(relation='Won', tail_entity='output_of_query2')\"\nStep4: Find the Opposition of output_of_query3\nQuery4: \"get_information(relation='Opposition', head_entity='output_of_query3')\"",
    "who was the only delegate for miss dominican republic in 2002 who represented a region outside of the dominican republic?": "None",
    "what was the last recorded throw for valerie young?": "None",
    "did charles royer hold office longer than paul schell?": "None",
    "what location has the most maps?": "None",
    "what was the difference in votes (percentage) between savire hoxhaj and astrit sejdinaj in the fratar municipality?": "None",
    "who was the next record holder after emma george won held it in 1999?": "None",
    "which has a distance less than 3.0 kilometers?": "None",
    "how many years later was the sibir in service after the lenin?": "## Target type: {years}\n## Query:\nStep1: Find the entity named Lenin\nQuery1: \"get_information(relation='Ship Name', tail_entity='Lenin')\"\nStep2: Find the In Service year of output_of_query1\nQuery2: \"get_information(relation='In Service', head_entity='output_of_query1')\"\nStep3: Find the entity named Sibir\nQuery3: \"get_information(relation='Ship Name', tail_entity='Sibir')\"\nStep4: Find the In Service year of output_of_query3\nQuery4: \"get_information(relation='In Service', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(year1='output_of_query2', year2='output_of_query4')\"",
    "how many series lasted longer than 100 days?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Days is larger than 100\nQuery1: \"get_information(relation='Days', tail_entity>'100')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in the first 10 years of his reign, how many encyclicals did pope pius ix issue?": "None",
    "the most recent version to be released was in 1989, what was it called?": "## Target type: {'Model'}\n## Query:\nStep1: Find the entity that the Released is 1989\nQuery1: \"get_information(relation='Released', tail_entity='1989')\"\nStep2: Find the Model of output_of_query1\nQuery2: \"get_information(relation='Model', head_entity='output_of_query1')\"",
    "how many lasted less than 5 minutes?": "None",
    "did it take scott rudin more or less than 30 years to complete egot?": "## Target type: {comparison: more or less}\n## Query:\nStep1: Find the entity named Scott Rudin\nQuery1: \"get_information(relation='Name', tail_entity='Scott Rudin')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the EGOT completed year of output_of_query2\nQuery3: \"get_information(relation='EGOT completed', tail_entity='output_of_query2')\"\nStep4: Find the difference between the EGOT completed year and current year\nQuery4: \"calculate(formula='current_year - output_of_query3')\"\nStep5: Check if output_of_query4 is less than 30\nQuery5: \"if_less_than(set='output_of_query4', number=30)\"",
    "did scott wimmer place before or after carl edwards?": "## Target type: {'Pos.'}\n## Query:\nStep1: Find the entity named Scott Wimmer\nQuery1: \"get_information(relation='Driver', tail_entity='Scott Wimmer')\"\nStep2: Find the Pos. of output_of_query1\nQuery2: \"get_information(relation='Pos.', tail_entity='output_of_query1')\"\nStep3: Find the entity named Carl Edwards\nQuery3: \"get_information(relation='Driver', tail_entity='Carl Edwards')\"\nStep4: Find the Pos. of output_of_query3\nQuery4: \"get_information(relation='Pos.', tail_entity='output_of_query3')\"\nStep5: Compare the Pos. of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many models were made in the replublic of korea?": "## Target type: {number of models}\n## Query:\nStep1: Find the entity that Origin is Republic of Korea\nQuery1: \"get_information(relation='Origin', tail_entity='Republic of Korea')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations have at least 20 gold medals?": "None",
    "who was the first judge appointed from georgia?": "None",
    "what was the first year that grazer ak won a performance?": "None",
    "how many total managers has there been?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the date of the first game won by the smu mustangs?": "## Target type: {date}\n## Query:\nStep1: Find the entity that Result starts with \"W\"\nQuery1: \"get_information(relation='Result', tail_entity>='W')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the row with min row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what is the top ranked location?": "## Target type: {location}\n## Query:\nStep1: Find the entity that is the top ranked location.\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "how many models had the 8 mhz intel 8086 processor?": "## Target type: {number of models}\n## Query:\nStep1: Find the entity with the relation of Processor and value of 8 MHz Intel 8086\nQuery1: \"get_information(relation='Processor', tail_entity='8 MHz Intel 8086')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the rtp/avp audio and video payload types include an audio type called qcelp and its frame size is how many ms?": "## Target type: {frame size}\n## Query:\nStep1: Find the entity with Payload type (PT) as RTP/AVP and Type as audio\nQuery1: \"get_information(relation='Payload type (PT)', tail_entity='RTP/AVP', head_entity='Type', key='audio')\"\nStep2: Find the entity with Name as qcelp\nQuery2: \"get_information(relation='Name', tail_entity='qcelp')\"\nStep3: Find the frame size of output_of_query2\nQuery3: \"get_information(relation='Frame size (ms)', head_entity='output_of_query2')\"",
    "which model provides a larger hard drive: model 01 or model 02?": "None",
    "which had the higher top speed, the prium 1.5 a or the trumpf 1.5 av?": "None",
    "how many pump types have an entry listed for 85 \u00b0c (e.g. radiator and dhw)?": "## Target type: {number}\n## Query:\nStep1: Find the entries listed for 85 \u00b0C\nQuery1: \"get_information(relation='85 \u00b0C', tail_entity='entry')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in 2010, actors dan castellaneta and hank azaria both received primetime emmy awards for their outstanding vocie-over performances on the simpsons cartoon television show; in what previous year during the same decade did the same two actors both receive the same type of primetime emmy award for their work on that television show during the same year?": "None",
    "in what year did the fiba south america under-17 championship for women first begin?": "None",
    "how many seasons was anwil wloclawek runner-up before becoming champion?": "None",
    "how many years did the greek league have a finalist?": "None",
    "what was the next female tennis winner after lee duk-hee.": "## Target type: {'Gold'}\n## Query:\nStep1: Find the entity named Lee Duk-Hee\nQuery1: \"get_information(relation='Gold', tail_entity='Lee Duk-Hee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Gold of output_of_query4\nQuery5: \"get_information(relation='Gold', head_entity='output_of_query4')\"",
    "how many titles has jamaica won since trinidad and tobago's last title?": "None",
    "who won the election after s. sivaprakasam in the fifth pondicherry assembly?": "## Target type: {Name of M.L.A.}\n## Query:\nStep1: Find the entity named S. Sivaprakasam\nQuery1: \"get_information(relation='Name of M.L.A.', tail_entity='S. Sivaprakasam')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of M.L.A. of output_of_query4\nQuery5: \"get_information(relation='Name of M.L.A.', head_entity='output_of_query4')\"",
    "how many countries had at least a gdp (usd bin) of eight or greater in 2012?": "None",
    "how many people voted for the top 4 parties?": "## Target type: {number}\n## Query:\nStep1: Find the top 4 parties\nQuery1: \"get_information(relation='row_number', tail_entity<='4')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many images are listed?": "None",
    "what was the television show that gave natalia oriero her first award?": "None",
    "which driver finished first in the 1998 marlboro grand prix of miami?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Team as \"Marlboro Team Penske\"\nQuery1: \"get_information(relation='Team', tail_entity='Marlboro Team Penske')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number as \"1\"\nQuery3: \"get_information(relation='row_number', tail_entity='1')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what years was natalia oriero on the show lynch?": "None",
    "in what year did fabrice santoro make his last grand slam appearance?": "None",
    "how many tv shows did natalia oreiro between 1998 and 2002?": "None",
    "in what year did lorenzo take first place?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Position is \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many years was it between when agust\u00edn hermida castro received the poetry prize and when emma pedreira did?": "None",
    "after the game on 11/09/2012 what was the next game to have above 5,500 in attendance?": "None",
    "in the 2005/2006 and 2010/2011 season, this team was a part of which tier?": "None",
    "what is the number difference between the total amount of executions in persona vs. executions in effigie?": "None",
    "what is the least number of meters habte jifar has run?": "None",
    "how many years were the naturalisation numbers below 1500?": "## Target type: {number of years}\n## Query:\nStep1: Find the years with naturalisation numbers below 1500\nQuery1: \"get_information(relation='Numer of Jamaicans granted British citizenship', tail_entity<'1500')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which formula has a density, g/cm3 of at least 15?": "None",
    "what is the total number of copies to have been published by volumes 1 through 12 of the encyclopedias?": "None",
    "how many people have numbers above 50?": "None",
    "how many times has nigel mansell been the winning driver?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Nigel Mansell\nQuery1: \"get_information(relation='Winning Driver', tail_entity='Nigel Mansell')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which model of car won the most races in the 1992 season?": "## Target type: {car model}\n## Query:\nStep1: Find all the cars in the 1992 season\nQuery1: \"get_information(relation='Date', tail_entity='1992')\"\nStep2: Find the winners in output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"\nStep3: Find the car model of output_of_query2\nQuery3: \"get_information(relation='Car', head_entity='output_of_query2')\"\nStep4: Count the occurrences of each car model in output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Find the car model with the most wins\nQuery5: \"get_information(relation='Car', tail_entity>='most')\"",
    "who was the co-driver of the first place driver?": "## Target type: {co-driver}\n## Query:\nStep1: Find the entity with the relation of Pos. is 1\nQuery1: \"get_information(relation='Pos.', tail_entity='1')\"\nStep2: Find the co-driver of the output_of_query1\nQuery2: \"get_information(relation='Co-Driver', head_entity='output_of_query1')\"",
    "the gelo racing team and the ecurie du nord team both used what kind of chassis?": "## Target type: {chassis}\n## Query:\nStep1: Find the entity named Gelo Racing Team\nQuery1: \"get_information(relation='Team', tail_entity='Gelo Racing Team')\"\nStep2: Find the chassis of output_of_query1\nQuery2: \"get_information(relation='Chassis', head_entity='output_of_query1')\"\nStep3: Find the entity named Ecurie du Nord Team\nQuery3: \"get_information(relation='Team', tail_entity='Ecurie du Nord Team')\"\nStep4: Find the chassis of output_of_query3\nQuery4: \"get_information(relation='Chassis', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which driver and co-driver came in last place?": "None",
    "how many teams other than italy have qualifications?": "None",
    "how many times was 24 points or more achieved by an italian player before 2000?": "None",
    "how many times has dervi&#351; ero&#287;lu been in office?": "None",
    "which other author, besides lewis carroll, has won the kurt maschler award twice?": "None",
    "which person set at least 2 world records?": "None",
    "which artist has released at least 5 albums?": "None",
    "what is the most recent song on which they collaborated?": "## Target type: {song}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "what is the minimum of follow-up years do each author have?": "None",
    "what games featured the fewest participating nations?": "## Target type: {games}\n## Query:\nStep1: Find the entity with the relation of Nations\nQuery1: \"get_information(relation='Nations')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Nations\nQuery3: \"get_information(relation='Nations', tail_entity='output_of_query2')\"\nStep4: Find the games of output_of_query3\nQuery4: \"get_information(relation='Games', head_entity='output_of_query3')\"",
    "how many songs charted at least 50th or better on the uk singles chart?": "None",
    "how many singles were released in 2010?": "## Target type: {number of singles}\n## Query:\nStep1: Find the singles released in 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what year did they score the least amount of goals?": "None",
    "what year saw the highest output growth rate in japan between the years 1990 and 2004?": "None",
    "tell me the number of people first elected in 1817.": "## Target type: {number of people}\n## Query:\nStep1: Find the entity that First elected is 1817\nQuery1: \"get_information(relation='First elected', tail_entity='1817')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "counts and give the number of incumbents.": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Incumbent\nQuery1: \"get_information(relation='Incumbent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in 1996 the sc house of representatives had a republican majority. how many years had passed since the last time this happened?": "None",
    "what is the number of republicans elected in 2010?": "## Target type: {number of Republicans}\n## Query:\nStep1: Find the entity with the relation of Party as Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Find the entity with the relation of First elected as 2010\nQuery2: \"get_information(relation='First elected', tail_entity='2010')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "name the representative who took office for 7 years and is in the liberal party.": "None",
    "how many total times has liverpool won?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Liverpool\nQuery1: \"get_information(relation='Team', tail_entity='Liverpool')\"\nStep2: Find the total times Liverpool has won\nQuery2: \"get_information(relation='Winners', head_entity='output_of_query1')\"",
    "what are the total number of wins for tom boonen overall?": "None",
    "which surface was played on the least?": "None",
    "what were the number of competitions held in 2003?": "## Target type: {number}\n## Query:\nStep1: Find the entity named 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Find the competitions of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many have a weight over 120 grams?": "None",
    "are there at least 2 nationalities on the chart?": "## Target type: {yes / no}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count of output_of_query2 is at least 2\nQuery3: \"check_expression(expression='output_of_query2 >= 2')\"",
    "how many peaks h ave an elevation of at least 3,200 feet.": "None",
    "when was the first season that the team was in tier 6?": "## Target type: {season}\n## Query:\nStep1: Find the entity that is in Tier 6\nQuery1: \"get_information(relation='Level', tail_entity='Tier 6')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Get the min season of output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "which team won the most games in a match?": "None",
    "who had the most wins from the united states?": "None",
    "since 1983 what country has won the most (combined men & women)?": "None",
    "who served longer, helgi thordersen or geir vidalin?": "None",
    "the number of times alisher kholigov was the top scorer in the league?": "None",
    "which composer published first granville bantock or emil petrovics?": "## Target type: {composer}\n## Query:\nStep1: Find the entity named Granville Bantock\nQuery1: \"get_information(relation='Composer', tail_entity='Granville Bantock')\"\nStep2: Find the entity named Emil Petrovics\nQuery2: \"get_information(relation='Composer', tail_entity='Emil Petrovics')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2\nQuery5: \"compare(output_of_query3, output_of_query4)\"",
    "what was the only game published by electronic arts?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Publisher is Electronic Arts\nQuery1: \"get_information(relation='Publisher', tail_entity='Electronic Arts')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many more prisoners is erebuni designed to hold than goris?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Erebuni\nQuery1: \"get_information(relation='Name', tail_entity='Erebuni')\"\nStep2: Find the prisoners designed for output_of_query1\nQuery2: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query1')\"\nStep3: Find the entity named Goris\nQuery3: \"get_information(relation='Name', tail_entity='Goris')\"\nStep4: Find the prisoners designed for output_of_query3\nQuery4: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query3')\"\nStep5: Find the difference of output_of_query2 and output_of_query4\nQuery5: \"subtraction(value1='output_of_query2', value2='output_of_query4')\"",
    "the total number of medals won by australia was how many?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Australia\nQuery1: \"get_information(relation='NPC', tail_entity='Australia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the number of menteri besars that there have been during the pre-independence period?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Left office\nQuery1: \"get_information(relation='Left office')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the top winner in 2002 of the division 1 undergraduate?": "None",
    "which team, ranked first, also finished as winner in the 1985 acc women's basketball tournament?": "None",
    "what was the next cup this team went to after the governor's cup this season?": "None",
    "which country won the 1994 europeans men's handball championship's preliminary round?": "None",
    "how many people were killed in total in the attacks in 1973 and 1974?": "## Target type: {number of people}\n## Query:\nStep1: Find the attacks in 1973\nQuery1: \"get_information(relation='Date', tail_entity='1973')\"\nStep2: Find the attacks in 1974\nQuery2: \"get_information(relation='Date', tail_entity='1974')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Dead in output_of_query3\nQuery4: \"get_information(relation='Dead', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "how many deaths did the democratic party have in 1987?": "None",
    "in what year was their largest margin of victory?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the number of people hurt on april 2,1986?": "## Target type: {number of people}\n## Query:\nStep1: Find the row_number of April 2, 1986\nQuery1: \"get_information(relation='Date', tail_entity='April 2, 1986')\"\nStep2: Find the hurt number of output_of_query1\nQuery2: \"get_information(relation='Hurt', head_entity='output_of_query1')\"",
    "how long was lctes active?": "None",
    "how long was daubin in office?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Daubin\nQuery1: \"get_information(relation='Name', tail_entity='Daubin')\"\nStep2: Find the From of output_of_query1\nQuery2: \"get_information(relation='From', head_entity='output_of_query1')\"\nStep3: Find the To of output_of_query1\nQuery3: \"get_information(relation='To', head_entity='output_of_query1')\"\nStep4: Calculate the duration between output_of_query2 and output_of_query3\nQuery4: \"duration(start_date='output_of_query2', end_date='output_of_query3')\"",
    "what is the number of racers ethiopia had finish in the top 5?": "None",
    "what are the total number of laps phil hill drove?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Phil Hill\nQuery1: \"get_information(relation='Driver', tail_entity='Phil Hill')\"\nStep2: Find the total laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "what is the total number of drivers who did not finish the 8th glover trophy race?": "None",
    "how many racers from australia competed in the race?": "## Target type: {number of racers}\n## Query:\nStep1: Find the entity that Nationality is Australia\nQuery1: \"get_information(relation='Nationality', tail_entity='Australia')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the only winning driver to appear once from team target racing?": "None",
    "how many races had at least 5000 finishers?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Finishers\nQuery1: \"get_information(relation='Finishers')\"\nStep2: Find the output_of_query1 that is at least 5000\nQuery2: \"get_information(relation='Finishers', tail_entity>='5000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what were the total number of legs won by ronnie baxter?": "## Target type: {number of legs}\n## Query:\nStep1: Find the entity named Ronnie Baxter\nQuery1: \"get_information(relation='Player', tail_entity='Ronnie Baxter')\"\nStep2: Find the legs won by output_of_query1\nQuery2: \"get_information(relation='Legs Won', head_entity='output_of_query1')\"",
    "which conferences had 2 quarterfinal wins each?": "## Target type: {conference}\n## Query:\nStep1: Find the conferences that had 2 quarterfinal wins\nQuery1: \"get_information(relation='Quarterfinals', tail_entity='2')\"\nStep2: Get the conference of output_of_query1\nQuery2: \"get_information(relation='Conference', head_entity='output_of_query1')\"",
    "southampton played on may 8th, 1993, who was their opponent?": "None",
    "who was his first opponent in the 2006 fifa world cup qualification round?": "None",
    "which team is the next opponent following the first loss of the season?": "None",
    "how many more bubas bison were released than copris hispanus linnaeus?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Bubas Bison\nQuery1: \"get_information(relation='Species', tail_entity='Bubas Bison')\"\nStep2: Find the Total released of output_of_query1\nQuery2: \"get_information(relation='Total released', head_entity='output_of_query1')\"\nStep3: Find the entity named Copris Hispanus Linnaeus\nQuery3: \"get_information(relation='Species', tail_entity='Copris Hispanus Linnaeus')\"\nStep4: Find the Total released of output_of_query3\nQuery4: \"get_information(relation='Total released', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "whose name is listed before bonnie bruun's in the gold column?": "None",
    "how many representatives placed at both miss nepal and miss pokhara.": "None",
    "desideria ampon won the bronze medal the same year as who else?": "None",
    "how many girls were heavier at birth than chimaijem otto?": "None",
    "which date is above 6/18/83": "## Target type: {date}\n## Query:\nStep1: Find the entity that Launch Date is 6/18/83\nQuery1: \"get_information(relation='Launch Date', tail_entity='6/18/83')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Launch Date of output_of_query4\nQuery5: \"get_information(relation='Launch Date', head_entity='output_of_query4')\"",
    "which date is listed after 27 march 1977?": "## Target type: {date}\n## Query:\nStep1: Find the entity that is 27 March 1977\nQuery1: \"get_information(relation='Date', tail_entity='27 March 1977')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many sites are there?": "## Target type: {number}\n## Query:\nStep1: Find all the sites\nQuery1: \"get_information(relation='Site')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many cities have more than one courthouse listed?": "None",
    "other than the assassination of heydrich, what artwork was created for the ministry of information?": "None",
    "what is the total number of countries with names beginning with the letter 'b'?": "None",
    "what is the number of u.s. courthouse and post offices now used as free library according to the dates of use in the table?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Courthouse is U.S. Court House and Post Office\nQuery1: \"get_information(relation='Courthouse', tail_entity='U.S. Court House and Post Office')\"\nStep2: Find the entity where dates of use is \"1858-Present\\nStill in use as a post office.\"\nQuery2: \"get_information(relation='Dates of use', tail_entity='1858-Present\\nStill in use as a post office.')\"\nStep3: Find the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which name appears more often, kottern or bayreuth?": "## Target type: {name}\n## Query:\nStep1: Find the row with the relation of North\nQuery1: \"get_information(relation='North')\"\nStep2: Find the row with the relation of South\nQuery2: \"get_information(relation='South')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "what was the date of the game that had the least number of people in attendance?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what number is the only attendance listed?": "None",
    "what is the largest attendance on the chart": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what is the total number of games played on 22 november 1988?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of Date is 22 November 1988\nQuery1: \"get_information(relation='Date', tail_entity='22 November 1988')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the number of games that occurred on 14 february 1976?": "## Target type: {number of games}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the row_number occurred on 14 February 1976\nQuery2: \"get_information(relation='Date', tail_entity='14 February 1976')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference in pts between december 5th and november 11th?": "None",
    "how many of these games occurred before 17 february 1976?": "None",
    "how many more home victories did this team have in the 2004/2005 season than in the 2003 season?": "None",
    "which club had a total of only four wins?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Wins being four\nQuery1: \"get_information(relation='Wins', tail_entity='4')\"\nStep2: Find the club of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "what is nico rosberg's total number of wins throughout his career?": "None",
    "how many more points did jan hendrickx have than marco happich during the 2007 season?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Jan Hendrickx\nQuery1: \"get_information(relation='Driver / Passenger', tail_entity='Jan Hendrickx')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Marco Happich\nQuery3: \"get_information(relation='Driver / Passenger', tail_entity='Marco Happich')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"subtract(output_of_query2, output_of_query4)\"",
    "which locality has the least amount of area according to this chart?": "## Target type: {locality}\n## Query:\nStep1: Find the entity with the relation of Area (km\u00b2)\nQuery1: \"get_information(relation='Area (km\u00b2)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min area\nQuery3: \"get_information(relation='Area (km\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the locality of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "the least amount of points scored by phoenix during the season is...": "None",
    "what was the least number of points scored in a win?": "None",
    "what was the least amount of goals scored in a game?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity with the relation of Goal\nQuery1: \"get_information(relation='Goal')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Goal\nQuery3: \"get_information(relation='Goal', tail_entity='output_of_query2')\"",
    "which country has the smallest capacity stadium?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "which country has the highest 2017 gdp?": "None",
    "which artist has the least highest position?": "None",
    "which type has the lowest max speed?": "## Target type: {type}\n## Query:\nStep1: Find the entity with the relation of Max Speed (km/h)\nQuery1: \"get_information(relation='Max Speed (km/h)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Max Speed\nQuery3: \"get_information(relation='Max Speed (km/h)', tail_entity='output_of_query2')\"\nStep4: Find the Type of output_of_query3\nQuery4: \"get_information(relation='Type', head_entity='output_of_query3')\"",
    "what feature had the lowest number of chart positions, while still having at least one position?": "None",
    "what date did both teams score 16 points each?": "## Target type: {date}\n## Query:\nStep1: Find the entity where both teams scored 16 points each\nQuery1: \"get_information(relation='Result', tail_entity='16-16')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "how many games did the broncos win in 1998 by more than 10 points?": "None",
    "how many total international races did german silva place in the top 3 spots?": "None",
    "how many ships did germany launch in 1878?": "None",
    "tell me the number of french people on the list.": "None",
    "what letter is common to each place name?": "## Target type: {letter}\n## Query:\nStep1: Find all the Name of place\nQuery1: \"get_information(relation='Name of place')\"\nStep2: Find the common letter in output_of_query1\nQuery2: \"common_letter(set='output_of_query1')\"",
    "how many zip codes start with \"80\" or \"81\"?": "None",
    "was the sandia peak tramway innagurate before or after the 3s aerial tramway?": "## Target type: {'Year of inauguration'}\n## Query:\nStep1: Find the entity named Sandia Peak Tramway\nQuery1: \"get_information(relation='Tramway', tail_entity='Sandia Peak Tramway')\"\nStep2: Find the Year of inauguration of output_of_query1\nQuery2: \"get_information(relation='Year of inauguration', head_entity='output_of_query1')\"\nStep3: Find the entity named 3s aerial tramway\nQuery3: \"get_information(relation='Tramway', tail_entity='3s aerial tramway')\"\nStep4: Find the Year of inauguration of output_of_query3\nQuery4: \"get_information(relation='Year of inauguration', head_entity='output_of_query3')\"\nStep5: Compare the Year of inauguration of output_of_query2 and output_of_query4\nQuery5: \"compare(year1='output_of_query2', year2='output_of_query4')\"",
    "what song was this artist on after utabito?": "None",
    "what song is before \"phuk u\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"Phuk U\"\nQuery1: \"get_information(relation='Title', tail_entity='Phuk U')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "when did the first solar saros with a magnitude of greater than 1.00 occur?": "None",
    "when was chernobyl-1 first shut down?": "None",
    "in what year was the position of 3rd first achieved?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Position is 3rd\nQuery1: \"get_information(relation='Position', tail_entity='3rd')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number of output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "which event did anton lyuboslavskiy finish in first?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity named Anton Lyuboslavskiy\nQuery1: \"get_information(relation='Name', tail_entity='Anton Lyuboslavskiy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Position is \"1st\"\nQuery3: \"get_information(relation='Position', tail_entity='1st')\"\nStep4: Find the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "which peaks in the dolomites start with the letter c and are under 3,000 meters?": "None",
    "what is the first year on the chart?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how long in years from the 1st edition to the 18th edition?": "None",
    "what country is the first listed country?": "None",
    "habte jifar is a marathon runner representing his home country of ____?": "None",
    "vajiravhud went to college at christ church. who is the other monarch that went there?": "None",
    "which mayor of airan also held the position of first secretary for the minister of finance?": "None",
    "what was hari's last name?": "None",
    "how many years was jaafar mohamed in office?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Jaafar Mohamed\nQuery1: \"get_information(relation='Menteri Besar', tail_entity='Jaafar Mohamed')\"\nStep2: Find the Took office date of output_of_query1\nQuery2: \"get_information(relation='Took office', head_entity='output_of_query1')\"\nStep3: Find the Left office date of output_of_query1\nQuery3: \"get_information(relation='Left office', head_entity='output_of_query1')\"\nStep4: Calculate the number of years between output_of_query2 and output_of_query3\nQuery4: \"years_between(start_date='output_of_query2', end_date='output_of_query3')\"",
    "who is the next judge listed after frank x. altimari?": "## Target type: {'Judge'}\n## Query:\nStep1: Find the entity named Frank X. Altimari\nQuery1: \"get_information(relation='Judge', tail_entity='Frank X. Altimari')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Judge of output_of_query4\nQuery5: \"get_information(relation='Judge', head_entity='output_of_query4')\"",
    "who was the first commissioner of food and drug, appointed in january 1907?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity that Took Office is January 1907\nQuery1: \"get_information(relation='Took Office', tail_entity='January 1907')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what was the number of television shows that sharad kelkar co-stared with keerti gaekwad?": "## Target type: {number of television shows}\n## Query:\nStep1: Find the entity named Sharad Kelkar\nQuery1: \"get_information(relation='Co-Star', tail_entity='Sharad Kelkar')\"\nStep2: Find the television shows of output_of_query1\nQuery2: \"get_information(relation='Serial Name', head_entity='output_of_query1')\"\nStep3: Find the entity named Keerti Gaekwad\nQuery3: \"get_information(relation='Co-Star', tail_entity='Keerti Gaekwad')\"\nStep4: Find the television shows of output_of_query3\nQuery4: \"get_information(relation='Serial Name', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "in how many years was the value of agriculture, in billion rials, greater than 500 in iran?": "None",
    "in what season did visby if gute fk finish first in division 2 tier 3?": "None",
    "the only team founded in the nineteenth century that still played in the 2010 northern football league season, in division 1, was which team?": "None",
    "in what year only did they compete in division 5": "None",
    "what is the last year they played division 4?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "which countries have earned no more than one gold medal?": "## Target type: {list of countries}\n## Query:\nStep1: Find the entities with Gold medals less than or equal to one\nQuery1: \"get_information(relation='Gold', tail_entity<='1')\"\nStep2: Find the Nations of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many nations received more than 5 gold medals?": "None",
    "what country is the only country with at least 20 gold medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with at least 20 gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>='20')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "next to 2:13:09, what was his best time?": "None",
    "which had a longer barrel, the remington-beals army or navy model revolver in 1861?": "None",
    "what is the total kilometers that separates the mahanayim junction and the shipon junction?": "## Target type: {'Kilometers'}\n## Query:\nStep1: Find the entity named Mahanayim Junction\nQuery1: \"get_information(relation='Name', tail_entity='Mahanayim Junction')\"\nStep2: Find the kilometers of output_of_query1\nQuery2: \"get_information(relation='Kilometers', head_entity='output_of_query1')\"\nStep3: Find the entity named Shipon Junction\nQuery3: \"get_information(relation='Name', tail_entity='Shipon Junction')\"\nStep4: Find the kilometers of output_of_query3\nQuery4: \"get_information(relation='Kilometers', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query2 and output_of_query4\nQuery5: \"sum(set='output_of_query2', set='output_of_query4')\"",
    "which is a farther distance: 14 street nw, range road 14 or range road 293, 36 street ne?": "None",
    "which lahn that exceeds 300 m also has a length that exceeds 10 km?": "## Target type: {Name}\n## Query:\nStep1: Find the entity that exceeds 300 m in Mouth elevation\nQuery1: \"get_information(relation='Mouth elevation', tail_entity>'300')\"\nStep2: Find the entity that exceeds 10 km in Length\nQuery2: \"get_information(relation='Length', tail_entity>'10')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what municipality is on average 25 km away?": "## Target type: {municipality}\n## Query:\nStep1: Find the entity with the relation of km\nQuery1: \"get_information(relation='km')\"\nStep2: Find the entity with an average of 25 km away\nQuery2: \"get_information(relation='km', value='25')\"\nStep3: Find the municipality of output_of_query2\nQuery3: \"get_information(relation='Municipality', head_entity='output_of_query2')\"",
    "how many uk drivers are there?": "None",
    "what is the total number of participants between norway and france?": "None",
    "what country had the least number of drivers, germany or the uk?": "## Target type: {country}\n## Query:\nStep1: Find the entity from Germany\nQuery1: \"get_information(relation='Driver', tail_entity='Germany')\"\nStep2: Find the entity from the UK\nQuery2: \"get_information(relation='Driver', tail_entity='UK')\"\nStep3: Calculate the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Check which count is less, output_of_query3 or output_of_query4\nQuery5: \"calculation(operation='less_than', operand1='output_of_query3', operand2='output_of_query4')\"",
    "which three weapons have the highest caliber?": "None",
    "who was the only player picked above joe reekie?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Joe Reekie\nQuery1: \"get_information(relation='Player', tail_entity='Joe Reekie')\"\nStep2: Find the Pick # of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the entity with a lower Pick #\nQuery3: \"get_information(relation='Pick #', tail_entity<'output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who was the top ranked player in a single game?": "## Target type: {player}\n## Query:\nStep1: Find the entity that is the top ranked player\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is peter widen's top most position ever in world indoor championships?": "None",
    "in the 197172 national hurling league, how many players from cork county were ranked at least rank 15 or better?": "None",
    "what nationality picked the most players?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity in Nationality that appears the most.\nQuery1: \"get_information(relation='Nationality', tail_entity>='most')\"\nStep2: Find the Nationality of output_of_query1.\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "who was ranked number 20 in the women's 2007 women's six nations championship?": "None",
    "which national park has the least visitation?": "None",
    "the game on which date had the most attendance?": "None",
    "how many flags other than france (the first flag) are represented?": "None",
    "the greatest number of wins is how far above the greatest number of losses?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Won\nQuery1: \"get_information(relation='Won')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the relation of Lost\nQuery3: \"get_information(relation='Lost')\"\nStep4: Get the max output_of_query3\nQuery4: \"max(set='output_of_query3')\" \nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many teams have the same amount of losses (l)?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of L (Losses)\nQuery1: \"get_information(relation='L')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which event did he place in first?": "None",
    "what nation received 6 gold medals other than bulgaria": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Bulgaria\nQuery1: \"get_information(relation='Nation', tail_entity='Bulgaria')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity whose Gold medals is 6\nQuery3: \"get_information(relation='Gold', tail_entity='6')\"\nStep4: Find the set difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "before peter little, how long did the democratic republican party hold the office, in years?": "None",
    "how many years did shilpa bendi serve?": "None",
    "what is the number of time seyni kountche has been president?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Seyni Kountche\nQuery1: \"get_information(relation='President', tail_entity='Seyni Kountche')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which party or parties received less than five percent of the votes?": "None",
    "the nationals sa and independent party make up what percentage of votes?": "None",
    "how many losing candidates get at least 98,000 votes?": "None",
    "how many countries won at least 2 medals in sailing?": "None",
    "how many teams won more than 6 medals total?": "None",
    "how many medals did france get in total?": "## Target type: {total medals}\n## Query:\nStep1: Find the entity that is France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many gold medals did this country win during these olympics?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity that Medal is Gold\nQuery1: \"get_information(relation='Medal', tail_entity='Gold')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year was the number of wins the highest?": "None",
    "2008 and 2009 are the winning years of what team?": "## Target type: {team}\n## Query:\nStep1: Find the entity named 2008\nQuery1: \"get_information(relation='Winning Years', tail_entity='2008')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the entity named 2009\nQuery3: \"get_information(relation='Winning Years', tail_entity='2009')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many elections had more than 200,000 popular votes?": "## Target type: {number}\n## Query:\nStep1: Find the elections with more than 200,000 popular votes\nQuery1: \"get_information(relation='Number of popular votes', tail_entity>'200000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the changes happened before june of 1986?": "None",
    "which was the last album to sell over 100,000 records?": "None",
    "what is the only year that is n/a?": "None",
    "what was the top selling album in this year?": "None",
    "how many players selected in round nine were guards?": "None",
    "who earned the top amount of points?": "None",
    "which opera has the most acts, la fortezza al cimento or astarto?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named La Fortezza al Cimento\nQuery1: \"get_information(relation='Title', tail_entity='La Fortezza al Cimento')\"\nStep2: Find the entity named Astarto\nQuery2: \"get_information(relation='Title', tail_entity='Astarto')\"\nStep3: Find the number of acts for output_of_query1\nQuery3: \"get_information(relation='Sub\u00addivisions', head_entity='output_of_query1')\"\nStep4: Find the number of acts for output_of_query2\nQuery4: \"get_information(relation='Sub\u00addivisions', head_entity='output_of_query2')\"\nStep5: Compare the number of acts and return the Title with the most acts\nQuery5: \"if output_of_query3 > output_of_query4 then output_of_query1 else output_of_query2\"",
    "who came after borislav dimitrachkov and it's time for slalom": "None",
    "how many days was the longest season of grande fratello?": "None",
    "how many seasons did internacional de madrid cf play in the preferente division?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity named Internacional de Madrid CF\nQuery1: \"get_information(relation='Division', tail_entity='Internacional de Madrid CF')\"\nStep2: Find the seasons of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "next to merritt, who was the top scorer?": "None",
    "what publication scored the least?": "## Target type: {publication}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the Publication of output_of_query3\nQuery4: \"get_information(relation='Publication', head_entity='output_of_query3')\"",
    "which artist scored the most points?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "how many bridges were built in 1931?": "## Target type: {number}\n## Query:\nStep1: Find the bridges that were completed in 1931\nQuery1: \"get_information(relation='Year completed', tail_entity='1931')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many railroads became defunct in the 1880's, and how many became defunct in the 1980's?": "None",
    "which year saw the largest population of tower division during this time?": "None",
    "how many movies did 20th century fox create that were in the top 10 grossing films of 1965?": "None",
    "of the 26 top-grossing films of 1977, how many were released by 20th century fox?": "None",
    "what was the total amount of wins that the bridgeport barrage had in 2002?": "None",
    "in how many games were more than 15 points scored by either team?": "None",
    "how many games were only won by 20 points or less?": "None",
    "how many teams won 75 games or less?": "## Target type: {number of teams}\n## Query:\nStep1: Find the wins of less than or equal to 75\nQuery1: \"get_information(relation='Wins', tail_entity<='75')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams have won more than 1,500 games?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Find the team with wins more than 1,500\nQuery2: \"get_information(relation='Wins', tail_entity>'1500')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was the only draft pick from salem high school?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity whose School is Salem High School\nQuery1: \"get_information(relation='School', tail_entity='Salem High School')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what was their 1qr opponent in 2010-2011?": "None",
    "what is the only opponent in 1984?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Year is 1984\nQuery1: \"get_information(relation='Year', tail_entity='1984')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "how many more points did position 1 have than position 7?": "None",
    "which position had the least number of players in round nine?": "None",
    "how many had position s?": "None",
    "how many total players were selected in round nine?": "None",
    "how many centre position players are there?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with Position as \"Centre\"\nQuery1: \"get_information(relation='Position', tail_entity='Centre')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the position that most of the players had?": "## Target type: {'Position'}\n## Query:\nStep1: Find all the entities with the relation of Position\nQuery1: \"get_information(relation='Position')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Position', tail_entity>='most')\"",
    "after the 1994/95 season, how many first place finishes did the club have?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='1994/95')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Place\nQuery5: \"get_information(relation='Place', tail_entity='output_of_query4')\"\nStep6: Filter result whose Place is '1st'\nQuery6: \"filter(result='output_of_query5', key='Place', value='1st')\"\nStep7: Calculate the count of output_of_query6\nQuery7: \"count(set='output_of_query6')\"",
    "what was the only year she competed in kenya?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Kenya\nQuery1: \"get_information(relation='Country', tail_entity='Kenya')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Get the only unique value of output_of_query2\nQuery3: \"unique(set='output_of_query2')\"",
    "how many competitions were held in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many audio versions are less than five minutes long?": "## Target type: {number}\n## Query:\nStep1: Find the audio versions that have a length less than five minutes\nQuery1: \"get_information(relation='Length', tail_entity<'5:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "other than the first track, what track was less than 2 minutes in length?": "## Target type: {track}\n## Query:\nStep1: Find the track that is the first track\nQuery1: \"get_information(relation='No.', tail_entity='1')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length (m:ss)', head_entity='output_of_query1')\"\nStep3: Find the track that has length less than 2 minutes\nQuery3: \"get_information(relation='Length (m:ss)', tail_entity<'2:00')\"\nStep4: Find the track other than the first track that meets the condition in output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who took first place?": "## Target type: {'Artist'}\n## Query:\nStep1: Find the entity in Place with the value of '1'\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Find the Artist of output_of_query1\nQuery2: \"get_information(relation='Artist', head_entity='output_of_query1')\"",
    "other than 1984, what year did he place first?": "None",
    "the next design year after 1967 had what 3 serial formats?": "None",
    "which locomotive was built after 1915?": "## Target type: {locomotive}\n## Query:\nStep1: Find the entity that was built after 1915\nQuery1: \"get_information(relation='Date', tail_entity>'1915')\"\nStep2: Find the locomotive of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many of the locomotives were built before 1940?": "## Target type: {number}\n## Query:\nStep1: Find all the locomotives\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the locomotives built before 1940\nQuery2: \"get_information(relation='Year built', tail_entity<'1940')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many consecutive years did modris stelle drive beginning in 2001?": "None",
    "how many years apart were the two garratts on the southern fuegian railway produced?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that Railway is Southern Fuegian Railway\nQuery1: \"get_information(relation='Railway', tail_entity='Southern Fuegian Railway')\"\nStep2: Find the entity that Type is 4-8-2+2-8-4\nQuery2: \"get_information(relation='Type', tail_entity='4-8-2+2-8-4')\"\nStep3: Find the Years of output_of_query1\nQuery3: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep4: Calculate the difference between the max and min Years of output_of_query3\nQuery4: \"subtract(max(set='output_of_query3'), min(set='output_of_query3'))\"",
    "what district has the same population density as laborie despite having a smaller land area?": "## Target type: {district}\n## Query:\nStep1: Find the entity named Laborie\nQuery1: \"get_information(relation='District', tail_entity='Laborie')\"\nStep2: Find the population density of output_of_query1\nQuery2: \"get_information(relation='Density (persons/km\u00b2)', head_entity='output_of_query1')\"\nStep3: Find the land area of output_of_query1\nQuery3: \"get_information(relation='Land area (km\u00b2)', head_entity='output_of_query1')\"\nStep4: Find the entity with a smaller land area and the same population density as output_of_query2\nQuery4: \"get_information(relation='Density (persons/km\u00b2)', tail_entity='output_of_query2', key='Land area (km\u00b2)', value<'output_of_query3')\"\nStep5: Find the District of output_of_query4\nQuery5: \"get_information(relation='District', head_entity='output_of_query4')\"",
    "name a player who is the same number of years old as choi.": "None",
    "name someone on the list from the united states that was born at least 60 years ago.": "None",
    "what was the name of the player who accomplished this in 1999 but played for the boston red sox?": "None",
    "name an athlete from finland who received a gold medal and a silver medal in the 1924 summer olympics": "None",
    "what is the next train number that followed 56661?": "None",
    "which crossing carries the most routes (e.g., de 1)?": "None",
    "what is the next name after bayou pierre bridge?": "None",
    "what was the total penalty minutes that dave brown had on the 1993-1994 flyers?": "None",
    "what is the name of the rider that finished 6.914 seconds before marcellino lucchi?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Marcellino Lucchi\nQuery1: \"get_information(relation='Rider', tail_entity='Marcellino Lucchi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "what is the total amount of free throws by ralf woods?": "## Target type: {'Free Throws'}\n## Query:\nStep1: Find the entity named Ralf Woods\nQuery1: \"get_information(relation='Player', tail_entity='Ralf Woods')\"\nStep2: Find the Free Throws of output_of_query1\nQuery2: \"get_information(relation='Free Throws', head_entity='output_of_query1')\"",
    "how many records came out in 1999?": "None",
    "what is the year previous to 2005?": "None",
    "which rider completed all 21 laps of the 2008 malaysian motorcycle grand prixwith the longest time?": "None",
    "how many games did this player withdraw from due to injuries?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of \"Outcome\"\nQuery1: \"get_information(relation='Outcome')\"\nStep2: Find the games that the player withdrew from due to injuries in output_of_query1\nQuery2: \"get_information(relation='Outcome', tail_entity='output_of_query1', key='Withdrawn', value='due to injuries')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of properties on the list that have been demolished?": "None",
    "what is the average number of participants sent home every episode?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find all the Sent Home\nQuery3: \"get_information(relation='Sent Home')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the average of output_of_query4\nQuery5: \"average(set='output_of_query4')\"",
    "which model released in august 1012 had the least kpixels?": "None",
    "how many were scrapped at immingham rft before the year 2002?": "## Target type: {number}\n## Query:\nStep1: Find the entity that was scrapped at Immingham RFT\nQuery1: \"get_information(relation='Status', tail_entity='Immingham RFT')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities that were scrapped before the year 2002\nQuery3: \"get_information(relation='Withdrawn', tail_entity<'2002')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the number of the only diesel locomotive from edwards rail car company?": "## Target type: {'Number'}\n## Query:\nStep1: Find the entity where Builder is Edwards Rail Car Company\nQuery1: \"get_information(relation='Builder', tail_entity='Edwards Rail Car Company')\"\nStep2: Get the Number of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"",
    "list each of the builder's that had a locomotive scrapped.": "None",
    "how many v8 engines competed in the 1982 british formula one season?": "None",
    "which bainbridge class destroyer was launched before december 1900?": "None",
    "previous to the 1995/96 season, how many 9th place finishes were there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='1995/96')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Place and Tier as \"9th\" and \"4\"\nQuery5: \"get_information(relation='Place', tail_entity='9th', key='Tier', value='4')\"\nStep6: Get the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "after 1949, how many consecutive years did the number of overall seats increase?": "None",
    "how many consecutive times was the rank #2?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the rank of #2\nQuery1: \"get_information(relation='Rank#', tail_entity='#2')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many times did kansas beat kansas state before 1910?": "None",
    "what was the first year in which the result was 1st place?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Result is \"1st\"\nQuery1: \"get_information(relation='Result', tail_entity='1st')\"\nStep2: Get the min year of output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "what is the only year with the 1st position?": "None",
    "what is the next previous year prior to 2015 on the chart?": "None",
    "does 15 august 1987 or 18 august 1987 held the more attendance?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the Date of 15 August 1987\nQuery1: \"get_information(relation='Date', tail_entity='15 August 1987')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity with the Date of 18 August 1987\nQuery3: \"get_information(relation='Date', tail_entity='18 August 1987')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare the attendance of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many times did franz race with his simca 2.0l engine?": "None",
    "which works number had a larger gauge, 283 or 317?": "## Target type: {works number}\n## Query:\nStep1: Find the entity with the relation Works Number and tail_entity 283\nQuery1: \"get_information(relation='Works Number', tail_entity='283')\"\nStep2: Find the Gauge of output_of_query1\nQuery2: \"get_information(relation='Gauge', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation Works Number and tail_entity 317\nQuery3: \"get_information(relation='Works Number', tail_entity='317')\"\nStep4: Find the Gauge of output_of_query3\nQuery4: \"get_information(relation='Gauge', head_entity='output_of_query3')\"\nStep5: Compare the Gauge values of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the largest city/municipality by area?": "None",
    "how much larger (in number of beds) was the largest hospital in california than the 50th largest?": "## Target type: {number}\n## Query:\nStep1: Find the largest hospital in California\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Get the number of beds of output_of_query1\nQuery2: \"get_information(relation='# Beds', head_entity='output_of_query1')\"\nStep3: Find the hospital with rank 50\nQuery3: \"get_information(relation='Rank', tail_entity='50')\"\nStep4: Get the number of beds of output_of_query3\nQuery4: \"get_information(relation='# Beds', head_entity='output_of_query3')\"\nStep5: Calculate the difference between the number of beds in output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the number of times \"friendly\" appears as a competition?": "## Target type: {number}\n## Query:\nStep1: Find the number of times \"friendly\" appears as a competition\nQuery1: \"get_information(relation='Competition', tail_entity='friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was the madrid, spain venue used?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Venue\nQuery1: \"get_information(relation='Venue')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the only nation to win less than 10 medals total?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the entity that has less than 10 medals total\nQuery2: \"get_information(relation='Total', tail_entity<'10')\"\nStep3: Find the entity that has the relation of Nation from output_of_query2\nQuery3: \"get_information(relation='Nation', head_entity='output_of_query2')\"",
    "who is the only network owner listed in a consecutive order in the chart?": "None",
    "how much faster was olga tereshkova's time compared to mahjeet kaur?": "None",
    "which competitor was slower, hrafnhildur luthersdottir or jenna laukkanen?": "## Target type: {competitor}\n## Query:\nStep1: Find the entity named Hrafnhildur Luthersdottir\nQuery1: \"get_information(relation='Name', tail_entity='Hrafnhildur Luthersdottir')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Jenna Laukkanen\nQuery3: \"get_information(relation='Name', tail_entity='Jenna Laukkanen')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Get the entity with a slower time\nQuery5: \"if value_of_query2 > value_of_query4 then output_of_query1 else output_of_query3\"",
    "how many episodes are in series 7 (1983)?": "None",
    "total number of episodes released in region 2 in 2007": "None",
    "how many episodes were broadcast in april 2010 in japan?": "None",
    "what is the most number of goals scored by elvir rahimic in a single season?": "None",
    "which team scored more goals in the first leg, benfica or ajax?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Benfica\nQuery1: \"get_information(relation='Team 1', tail_entity='Benfica')\"\nStep2: Find the number of goals scored by output_of_query1 in the first leg\nQuery2: \"get_information(relation='1st leg', head_entity='output_of_query1')\"\nStep3: Find the entity named Ajax\nQuery3: \"get_information(relation='Team 1', tail_entity='Ajax')\"\nStep4: Find the number of goals scored by output_of_query3 in the first leg\nQuery4: \"get_information(relation='1st leg', head_entity='output_of_query3')\"\nStep5: Compare the number of goals scored by output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='greater')\"",
    "how long is the period between the first and last album in the table?": "None",
    "what is the difference between the number of times the position of third was achieved and the number of times the position of first was achieved?": "## Target type: {difference}\n## Query:\nStep1: Find the row_number of position third\nQuery1: \"get_information(relation='position', tail_entity='third')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\n\nStep3: Find the row_number of position first\nQuery3: \"get_information(relation='position', tail_entity='first')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\n\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 - output_of_query4\"",
    "list at least one show that she was on in 2012.": "## Target type: {show}\n## Query:\nStep1: Find the row_number of 2012\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Find the entity with the relation of Show and the year of output_of_query1\nQuery2: \"get_information(relation='Show', head_entity='output_of_query1')\"",
    "this song released by celine dion spent 17 weeks on the uk singles chart in 1994, which one was it?": "None",
    "how many were built in 1847?": "## Target type: {number of built}\n## Query:\nStep1: Find the entity named Date built\nQuery1: \"get_information(relation='Date built')\"\nStep2: Find the entity named 1847\nQuery2: \"get_information(relation='Date built', tail_entity='1847')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "is the number of \"confirmed victories\" in 1917 greater than or less than those in 1918?": "## Target type: {string}\n## Query:\nStep1: Find the entity with the relation of Date/time and \"1917\"\nQuery1: \"get_information(relation='Date/time', tail_entity='1917')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Date/time and \"1918\"\nQuery3: \"get_information(relation='Date/time', tail_entity='1918')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"Calculator.Compare(value1='output_of_query2', value2='output_of_query4')\"",
    "how many races did bend or complete in 1881?": "None",
    "which had more ger numbers, 1898 or 1893?": "## Target type: {year}\n## Query:\nStep1: Find the GER Nos. in 1898\nQuery1: \"get_information(relation='GER Nos.', head_entity='1898')\"\nStep2: Find the GER Nos. in 1893\nQuery2: \"get_information(relation='GER Nos.', head_entity='1893')\"\nStep3: Compare the quantity of output_of_query1 and output_of_query2\nQuery3: \"compare_quantity(quantity1='output_of_query1', quantity2='output_of_query2', operator='>')\"\nStep4: If output_of_query3 is True, return '1898', else return '1893'",
    "which athlete has the least number of metres?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Best mark\nQuery1: \"get_information(relation='Best mark')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Best mark\nQuery3: \"get_information(relation='Best mark', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "how many championships had at most 900 previous points.": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Prev. points that is at most 900.\nQuery1: \"get_information(relation='Prev. points', tail_entity<='900')\"\nStep2: Find the championships of output_of_query1\nQuery2: \"get_information(relation='Championship', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many winners were there from 1998 to 2012?": "None",
    "other than the 10th episode, which other episode has a 14% rating?": "None",
    "how many episode are not over 14%?": "None",
    "what episode number was the only episode to have over 16% of ratings?": "None",
    "how many total points were scored in the second round proper?": "None",
    "what was the first game which was won with a score over 70 points?": "None",
    "each of these teams both scored 4 goals": "None",
    "what is the average number of points a given player scored in league two?": "None",
    "szalai scored only one more international goal against all other countries put together than he did against what one country?": "## Target type: {country}\n## Query:\nStep1: Find the entity that is Szalai\nQuery1: \"get_information(relation='Player', tail_entity='Szalai')\"\nStep2: Find the count of goals of output_of_query1\nQuery2: \"get_information(relation='Goal', tail_entity='output_of_query1')\"\nStep3: Find the entity that is San Marino\nQuery3: \"get_information(relation='Opponent', tail_entity='San Marino')\"\nStep4: Find the count of goals of output_of_query3\nQuery4: \"get_information(relation='Goal', tail_entity='output_of_query3')\"\nStep5: Find the count of other countries' goals than output_of_query3\nQuery5: \"get_information(relation='Goal', tail_entity>'output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"\nStep7: Find the count of output_of_query2 minus output_of_query6\nQuery7: \"subtraction(set1='output_of_query2', set2='output_of_query6')\"\nStep8: Find the entity of output_of_query7\nQuery8: \"get_information(relation='Opp",
    "how many times did gene rhoda win this season?": "None",
    "how many total games were aired on espn?": "## Target type: {number}\n## Query:\nStep1: Find the games that were aired on ESPN\nQuery1: \"get_information(relation='TV', tail_entity='ESPN')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "total number of episodes written or co-written by bill dial": "None",
    "how many wins did stieb have in july?": "None",
    "before 2004, how many times has yelena koshcheyeva finished in the top 5?": "None",
    "how many consecutive ranks at number 11 did the titles get?": "## Target type: {number of consecutive ranks}\n## Query:\nStep1: Find the entity with the relation of Nightly Rank\nQuery1: \"get_information(relation='Nightly Rank')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the consecutive ranks at number 11 of output_of_query2\nQuery3: \"consecutive_ranks(set='output_of_query2', rank='11')\"",
    "besides brad bryant, who was the other runner-up in the 1982 miller high life qco?": "None",
    "after justin rose won in 2011 who won next?": "None",
    "which year end ranking was higher, 2004 or 2011?": "None",
    "which area under the satellite cities has the most in population?": "None",
    "how many goals did the flyers allow in the 1973-74 season, the least in the league?": "None",
    "were there more names ranked 11th or 6th?": "None",
    "how many teams played more than 16 games?": "## Target type: {number}\n## Query:\nStep1: Find the teams that played more than 16 games\nQuery1: \"get_information(relation='Played', tail_entity>'16')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams are there in this league?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Team\nQuery1: \"get_information(relation='Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years did he play in less than 16 games?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity in Games that is less than 16\nQuery1: \"get_information(relation='Games', tail_entity<'16')\"\nStep2: Find the unique years in output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the 27 march 1977 and the 20 june 1982 games each resulted in a score of what?": "None",
    "how many points did the washington mystics score against sacramento on june 11?": "None",
    "team that scored more than 40 points against the jets that is not the miami dolphins": "None",
    "how many total points did the bombers score against the bc lions?": "None",
    "were the results of the february 17, 1968 game the same as the results of the march 30, 1968 game?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that Date is February 17, 1968\nQuery1: \"get_information(relation='Date', tail_entity='February 17, 1968')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\n\nStep3: Find the entity that Date is March 30, 1968\nQuery3: \"get_information(relation='Date', tail_entity='March 30, 1968')\"\nStep4: Find the result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\n\nStep5: Check if output_of_query2 is equal to output_of_query4\nQuery5: \"(output_of_query2 == output_of_query4)\"",
    "in how many football games in 1993 did texas tech score at least 30 points?": "None",
    "what is the total number of times that hateley scored in the uefa champions league?": "None",
    "before 1986 how many korac cup last 16 were there in europe?": "None",
    "what play was wanamaker nominated for best actress in a revival in 1984?": "None",
    "in what year was the last season of cbs's play-by-play?": "None",
    "which year did he release his last operetta?": "## Target type: {Year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Premi\u00e8re date of output_of_query3\nQuery4: \"get_information(relation='Premi\u00e8re date', head_entity='output_of_query3')\"\nStep5: Extract the Year from output_of_query4\nQuery5: \"extract_year(date='output_of_query4')\"",
    "what was the last movie joya ahsan played in?": "None",
    "which year had the most matthew j. morrison films released?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Matthew J. Morrison\nQuery1: \"get_information(relation='Role', tail_entity='Matthew J. Morrison')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Year of output_of_query2\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Find the entity that appears the most in output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity>='most')\"",
    "what was henrick malberg's last film?": "None",
    "how many cyclists total had dnf withdrawals?": "## Target type: {number}\n## Query:\nStep1: Find the cyclists with Type DNF\nQuery1: \"get_information(relation='Type', tail_entity='DNF')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total players withdrew from the 2010 french open tennis competition?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Withdrew due to\nQuery1: \"get_information(relation='Withdrew due to')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many locations had at least 5,000 or more contestants?": "None",
    "how many times was henrik normann the worst dancer for a specific dance?": "None",
    "how many contestants were from thailand?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Thailand\nQuery1: \"get_information(relation='Nationality', tail_entity='Thailand')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what episode had the highest amount of u.s viewers?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity in U.S. viewers (millions) that has the highest value.\nQuery1: \"get_information(relation='U.S. viewers (millions)', tail_entity>='highest')\"\nStep2: Find the Title of output_of_query1.\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "against which team did holosko score the most goals?": "## Target type: {team}\n## Query:\nStep1: Find the entity that scored the most goals\nQuery1: \"get_information(relation='Score', tail_entity>='most goals')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "how many ties are listed total?": "None",
    "what are the total number of times soldier is listed as the position on this chart?": "## Target type: {total number}\n## Query:\nStep1: Find the entity named Soldier\nQuery1: \"get_information(relation='Position', tail_entity='Soldier')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "tell me the number of times they placed first.": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position equal to '1st'\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times does the united states appear under the men's team column?": "None",
    "what is the total number of categories on the chart?": "None",
    "how many times is harvard listed on the chart?": "None",
    "which team scored the highest number of ranking points in games that were won on penalties?": "None",
    "what is the only team to have scored 16 points?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Points is 16\nQuery1: \"get_information(relation='Points', tail_entity='16')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many times was the number under the money column more than 30,000?": "None",
    "how many times does \"friendly\" appear in the competition column?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Friendly\"\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of times that the team finished in 3rd position or higher?": "None",
    "how many times does the unites states appear in the nations column?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of entity 'United States'\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "his/her first name is the same name as a country.": "None",
    "combined, how many winning golfers does england and wales have in the masters?": "None",
    "which driver came after giancarlo fisichella?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Giancarlo Fisichella\nQuery1: \"get_information(relation='Driver', tail_entity='Giancarlo Fisichella')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "what team had the most consecutive years with a 1st place round result?": "None",
    "in what year did yelena slesarenko accumulate the most 'top 5' finishes?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity named Yelena Slesarenko\nQuery1: \"get_information(relation='Name', tail_entity='Yelena Slesarenko')\"\nStep2: Find the 'top 5' finishes of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the year with the most 'top 5' finishes\nQuery3: \"get_information(relation='Year', tail_entity>='most')\"\nStep4: Get the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many losses did they suffer throughout the entire schedule?": "None",
    "what is the difference between the number of wins and the number of losses?": "None",
    "how many games have a losing result (l)?": "None",
    "they finished 16th in 2008/09. how did they finish the previous year?": "## Target type: {'Place'}\n## Query:\nStep1: Find the entity with Place as 16th and Season as 2008/09\nQuery1: \"get_information(relation='Place', tail_entity='16th', key='Season', value='2008/09')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "what is the number of other guests in the 2002 show \"a trio delights\"?": "None",
    "how many consecutive trio shows did charmaine sheh do before being on another variety program?": "None",
    "how many episodes was charmaine sheh on in the variety show super trio 2: movie buff champions": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity named Charmaine Sheh\nQuery1: \"get_information(relation='Winner(s)', tail_entity='Charmaine Sheh')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Super Trio 2: Movie Buff Champions\nQuery3: \"get_information(relation='Name of show', tail_entity='Super Trio 2: Movie Buff Champions')\"\nStep4: Find the episodes of output_of_query3\nQuery4: \"get_information(relation='Episodes', head_entity='output_of_query3')\"",
    "how many tracks are there on the 2005 best of benassi bros. album?": "None",
    "tell me the number of artists who ended up in 6th place.": "None",
    "how many artists had sales above 900,000?": "## Target type: {number of artists}\n## Query:\nStep1: Find the artists with sales above 900,000\nQuery1: \"get_information(relation='Sales', tail_entity>'900000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of shows sophie colguhoun appeared in?": "None",
    "which author wrote \"two loves i have, of comfort and despair\", and \"on a day (alack the day)\"?": "## Target type: {author}\n## Query:\nStep1: Find the entity that wrote \"two loves i have, of comfort and despair\"\nQuery1: \"get_information(relation='First line', tail_entity='two loves i have, of comfort and despair')\"\nStep2: Find the author of output_of_query1\nQuery2: \"get_information(relation='Author', head_entity='output_of_query1')\"\nStep3: Find the entity that wrote \"on a day (alack the day)\"\nQuery3: \"get_information(relation='First line', tail_entity='on a day (alack the day)')\"\nStep4: Find the author of output_of_query3\nQuery4: \"get_information(relation='Author', head_entity='output_of_query3')\"",
    "who was second more, scott pfeifer or sean nedohin?": "## Target type: {'Second'}\n## Query:\nStep1: Find the entity named Scott Pfeifer\nQuery1: \"get_information(relation='Second', tail_entity='Scott Pfeifer')\"\nStep2: Find the entity named Sean Nedohin\nQuery2: \"get_information(relation='Second', tail_entity='Sean Nedohin')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"set.union(set1='output_of_query3', set2='output_of_query4')\"",
    "who appears more often, christiano citron or philip cloostermans?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Christiano Citron\nQuery1: \"get_information(relation='Winning driver', tail_entity='Christiano Citron')\"\nStep2: Find the number of times output_of_query1 appears\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity named Philip Cloostermans\nQuery3: \"get_information(relation='Winning driver', tail_entity='Philip Cloostermans')\"\nStep4: Find the number of times output_of_query3 appears\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "how many contestants were below 1.75 mts?": "None",
    "what is the total number of tournamnets on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in how many games did rowaihi's team score the same number of goals as the opposing team?": "None",
    "in how many games did notre dame win and the opponent scored zero points?": "None",
    "name a match where the difference in score is higher than 50.": "None",
    "which two teams had a score of at least 6": "None",
    "in the games against haiti, was the game won with more than 1 point or more than 3 points?": "## Target type: {result}\n## Query:\nStep1: Find the entity named Haiti\nQuery1: \"get_information(relation='Opponent', tail_entity='Haiti')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Check if the result of output_of_query2 is won with more than 1 point or more than 3 points\nQuery3: \"contains(value='output_of_query2', key='more than 1 point') or contains(value='output_of_query2', key='more than 3 points')\"",
    "which team earned more than 30 points besides c.d. fas?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team is C.D. FAS\nQuery1: \"get_information(relation='Team', tail_entity='C.D. FAS')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity with Points larger than 30\nQuery3: \"get_information(relation='Points', tail_entity>'30')\"\nStep4: Get the set_difference of output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who was the first coach to reach the ncaa tournament?": "None",
    "when was stephen hendry's first uk championship win?": "None",
    "what was the first tournament this year where rafael gomez won?": "## Target type: {Tournament}\n## Query:\nStep1: Find the entity named Rafael Gomez\nQuery1: \"get_information(relation='Winner', tail_entity='Rafael Gomez')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first_row of output_of_query2\nQuery3: \"first_row(set='output_of_query2')\"\nStep4: Find the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "what is the number of democratic representatives?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which constituencies have only one representative?": "None",
    "how many teams received a lower score in the pyramids category than the adamson pep squad?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Adamson Pep Squad\nQuery1: \"get_information(relation='Team', tail_entity='Adamson Pep Squad')\"\nStep2: Find the pyramids score of output_of_query1\nQuery2: \"get_information(relation='Pyramids', head_entity='output_of_query1')\"\nStep3: Find the entities with the relation of pyramids score that are lower than output_of_query2\nQuery3: \"get_information(relation='Pyramids', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many games played where the combined score of both teams is at least 3?": "None",
    "list the number of teams who have more than 20 points.": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams with more than 20 points.\nQuery1: \"get_information(relation='Points', tail_entity>'20')\"\nStep2: Calculate the count of output_of_query1.\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of americans in the top 5?": "None",
    "how many representatives are republican?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of cars listed?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games had an attendance of 50,000 or greater fans?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with Attendance greater than or equal to 50,000\nQuery1: \"get_information(relation='Attendance', tail_entity>='50000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who ran the least number of laps in the 1999 miller lite 225?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min number of Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "what is the total number of drivers who did not finish the race?": "None",
    "were more bubas bison or copris hispanus linnaeus released?": "## Target type: {species}\n## Query:\nStep1: Find the entity named Bubas Bison\nQuery1: \"get_information(relation='Species', tail_entity='Bubas Bison')\"\nStep2: Find the Total released of output_of_query1\nQuery2: \"get_information(relation='Total released', head_entity='output_of_query1')\"\nStep3: Find the entity named Copris Hispanus Linnaeus\nQuery3: \"get_information(relation='Species', tail_entity='Copris Hispanus Linnaeus')\"\nStep4: Find the Total released of output_of_query3\nQuery4: \"get_information(relation='Total released', head_entity='output_of_query3')\"\nStep5: Determine which one is larger between output_of_query2 and output_of_query4\nQuery5: \"if_else(condition='output_of_query2 > output_of_query4', true_value='Bubas Bison', false_value='Copris Hispanus Linnaeus')\"",
    "di belakangku is the eleventh track. what is the next one?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Di Belakangku\nQuery1: \"get_information(relation='Title', tail_entity='Di Belakangku')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many bells have weights above 2000 kg?": "## Target type: {number}\n## Query:\nStep1: Find the bells with weights above 2000 kg\nQuery1: \"get_information(relation='Weight (kg)', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wins did tom boonen made?": "None",
    "which team did this person face in their last game in the 2012 caribbean cup?": "None",
    "what is total number of birthday?": "None",
    "what is the number of japanese in the top 10?": "## Target type: {number}\n## Query:\nStep1: Find the entities in the top 10\nQuery1: \"get_information(relation='row_number', tail_entity<='10')\"\nStep2: Find the Nationalities of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entities whose Nationality is Japan\nQuery3: \"get_information(relation='Nationality', tail_entity='Japan')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many bib numbers were before hanna falk's?": "None",
    "was there more clay surfaces used than hard surfaces?": "## Target type: {boolean}\n## Query:\nStep1: Find all the surfaces\nQuery1: \"get_information(relation='Surface')\"\nStep2: Find the count of clay surfaces\nQuery2: \"count(set='output_of_query1', condition='output_of_query1 == Clay')\"\nStep3: Find the count of hard surfaces\nQuery3: \"count(set='output_of_query1', condition='output_of_query1 == Hard')\"\nStep4: Compare the count of clay surfaces and hard surfaces\nQuery4: \"output_of_query2 > output_of_query3\"",
    "which teams won a total of five dfl-supercups?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winners and has a value of 5\nQuery1: \"get_information(relation='Winners', tail_entity='5')\"\nStep2: Find the teams that won a total of five DFL-Supercups\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many madison sports teams have won at least 2 championships?": "None",
    "how many nations won more than one silver medal?": "None",
    "what is the total number of competitions held in 2013?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity in Year that is 2013\nQuery1: \"get_information(relation='Year', tail_entity='2013')\"\nStep2: Find the competitions in output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many ships did germany launch in 1929?": "None",
    "who had the most wins in the 1950's: kansas or kansas state?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Winning team and Year from 1950 to 1959\nQuery1: \"get_information(relation='Winning team', tail_entity>='1950', tail_entity<='1959')\"\nStep2: Find the count of wins for Kansas\nQuery2: \"count(set='output_of_query1', key='Kansas')\"\nStep3: Find the count of wins for Kansas State\nQuery3: \"count(set='output_of_query1', key='Kansas State')\"\nStep4: Compare the counts and get the team with the most wins\nQuery4: \"if_then_else(condition='output_of_query2 > output_of_query3', true_value='Kansas', false_value='Kansas State')\"",
    "which is the only one with 1074 km": "## Target type: {ecclesiastical jurisdiction}\n## Query:\nStep1: Find the entity with the relation of Area (km2)\nQuery1: \"get_information(relation='Area (km2)')\"\nStep2: Find the entity with 1074 km2\nQuery2: \"get_information(relation='Area (km2)', tail_entity='1074')\"\nStep3: Find the Ecclesiastical Jurisdiction of output_of_query2\nQuery3: \"get_information(relation='Ecclesiastical Jurisdictions', head_entity='output_of_query2')\"",
    "the only flight on november 27th": "## Target type: {'Flight'}\n## Query:\nStep1: Find the entity with the relation of Date as November 27th\nQuery1: \"get_information(relation='Date', tail_entity='November 27th')\"\nStep2: Find the Flight of output_of_query1\nQuery2: \"get_information(relation='Flight', head_entity='output_of_query1')\"",
    "how many games were played in september or november?": "None",
    "only one championship in which he participated was held outside europe. where was this?": "None",
    "what are the total number of times swecon was held in uppsala?": "None",
    "what is the total number of medals won by all countries combined?": "None",
    "how long did it take ryosuke irie to finish?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity named Ryosuke Irie\nQuery1: \"get_information(relation='Name', tail_entity='Ryosuke Irie')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what is the most populated district?": "## Target type: {district}\n## Query:\nStep1: Find the district with the highest population\nQuery1: \"get_information(relation='Population (2010 Census)', tail_entity>='highest')\"\nStep2: Get the district of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what was the number of races that daniel willemsen and reto grutter won?": "## Target type: {number of races}\n## Query:\nStep1: Find the entity \"Daniel Willemsen / Reto Gr\u00fctter\"\nQuery1: \"get_information(relation='Driver / Passenger', tail_entity='Daniel Willemsen / Reto Gr\u00fctter')\"\nStep2: Find the number of wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"",
    "do chipper adams and justin beyendeza have more than 3 wins?": "## Target type: {'Wins'}\n## Query:\nStep1: Find the entity named Chipper Adams\nQuery1: \"get_information(relation='Driver', tail_entity='Chipper Adams')\"\nStep2: Find the Wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"\nStep3: Find the entity named Justin Beyendeza\nQuery3: \"get_information(relation='Driver', tail_entity='Justin Beyendeza')\"\nStep4: Find the Wins of output_of_query3\nQuery4: \"get_information(relation='Wins', head_entity='output_of_query3')\"\nStep5: Find the entity with more than 3 Wins\nQuery5: \"get_information(relation='Wins', tail_entity>'3')\"\nStep6: Check if output_of_query2 is in output_of_query5\nQuery6: \"exists(set='output_of_query5', element='output_of_query2')\"\nStep7: Check if output_of_query4 is in output_of_query5\nQuery7: \"exists(set='output_of_query5', element='output_of_query4')\"",
    "how many players were ranked on top of darren clarke": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named Darren Clarke\nQuery1: \"get_information(relation='Player', tail_entity='Darren Clarke')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the players ranked on top of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "after declan lovett, who was ranked next in the 197172 national hurling league?": "None",
    "who's a top player in the rw position?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Position being 'RW'\nQuery1: \"get_information(relation='Position', tail_entity='RW')\"\nStep2: Find the top player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who was the first goalscorer for wigan athletic f.c in the 1978-79 season?": "None",
    "how many races occurred before alain prost won a pole position?": "None",
    "which was the only team with less than 20 wins?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Record (conference)\nQuery1: \"get_information(relation='Record (conference)')\"\nStep2: Find the schools with wins less than 20\nQuery2: \"get_information(relation='Record (conference)', tail_entity<'20')\"\nStep3: Find the entity in output_of_query2\nQuery3: \"get_information(relation='School', head_entity='output_of_query2')\"",
    "how many times is the us dollar exchange 0.29 kuwaiti dinars?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of US Dollar Exchange as 0.29 Kuwaiti Dinars\nQuery1: \"get_information(relation='US Dollar Exchange', tail_entity='0.29 Kuwaiti Dinars')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of times ayrton senna has held the pole position?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Pole Position is Ayrton Senna \nQuery1: \"get_information(relation='Pole Position', tail_entity='Ayrton Senna')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laetare medalists were philantrohpists?": "None",
    "how many more silver medals were handed out than gold?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Medal and the value of Gold\nQuery1: \"get_information(relation='Medal', tail_entity='Gold')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Medal and the value of Silver\nQuery3: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference of output_of_query4 and output_of_query2\nQuery5: \"calculate(a='output_of_query4', operator='-', b='output_of_query2')\"",
    "how many total points did the winning teams score in the round of 16?": "None",
    "how many towns or villages have a population of at least 5 but less than 10?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Find the entities with a population of at least 5\nQuery2: \"get_information(relation='Population', tail_entity>='5')\"\nStep3: Find the entities with a population less than 10\nQuery3: \"get_information(relation='Population', tail_entity<'10')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many times did sd ponferradina b compete in division 3a?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named SD Ponferradina B\nQuery1: \"get_information(relation='Place', tail_entity='SD Ponferradina B')\"\nStep2: Find the Division of output_of_query1\nQuery2: \"get_information(relation='Division', head_entity='output_of_query1')\"\nStep3: Find the entity named 3\u00aa\nQuery3: \"get_information(relation='Division', tail_entity='3\u00aa')\"\nStep4: Find the number of times output_of_query1 appears in output_of_query3\nQuery4: \"count(set='output_of_query3', element='output_of_query1')\"",
    "other than the 1996 world junior championships, name a competition held in australia.": "None",
    "how many total medals did switzerland and france win?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Switzerland\nQuery1: \"get_information(relation='Nation', tail_entity='Switzerland')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity that is France\nQuery3: \"get_information(relation='Nation', tail_entity='France')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Find the sum of output_of_query2 and output_of_query4\nQuery5: \"add(value1='output_of_query2', value2='output_of_query4')\"",
    "how many more silver medals did russian win than denmark?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity that is Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity that is Denmark\nQuery3: \"get_information(relation='Nation', tail_entity='Denmark')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtraction(x='output_of_query2', y='output_of_query4')\"",
    "what school is scheduled to play first?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the school of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "who scored first rank in the first heat?": "## Target type: {name}\n## Query:\nStep1: Find the entity in Rank that is equal to 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what was the total amount of points scored between topolniky and union landhaus in the 1st match?": "None",
    "did ito take 1st in the 10,000m before or after he took 28th in the 10,000m?": "## Target type: {before or after}\n## Query:\nStep1: Find the entity that took 1st in the 10,000m\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that took 28th in the 10,000m\nQuery3: \"get_information(relation='Position', tail_entity='28th')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if the row_number of output_of_query1 is before or after the row_number of output_of_query3\nQuery5: \"is_natural_order(output_of_query2, output_of_query4)\"",
    "what was dan pohl's first round score?": "None",
    "other than asian junior championships, what other time did they place 1st?": "None",
    "how many replays were there in the first round proper, november 1988?": "None",
    "what was the score of the first game on this chart?": "None",
    "which single was released sooner, \"the end of the rainbow\" or \"mack the black\"?": "None",
    "which artist had the draw immediately before the song \"count on me\"?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Song as \"Count On Me\"\nQuery1: \"get_information(relation='Song', tail_entity='Count On Me')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Artist of output_of_query4\nQuery5: \"get_information(relation='Artist', head_entity='output_of_query4')\"",
    "what has been the last song this artist has made an other appearance on?": "None",
    "which opponent is listed first in the table?": "None",
    "what were the total number of games played by the philadelphia flyers during the 1973-74 regular season?": "None",
    "who is first in number of winnings on this list?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with relation 'Winnings'\nQuery1: \"get_information(relation='Winnings')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max winnings\nQuery3: \"get_information(relation='Winnings', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "second highest forward/center (f/c) drafted": "None",
    "how many competitors were there in this race?": "None",
    "what is the difference in number between the total number of gold medals and the total number of bronze medals?": "None",
    "what was the top city for victims?": "None",
    "how many more general acute care hospitals are there in california than rehabilitation hospitals?": "## Target type: {number}\n## Query:\nStep1: Find the hospitals of type General Acute Care\nQuery1: \"get_information(relation='Type of Hospital', tail_entity='General Acute Care')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the hospitals of type Rehabilitation\nQuery3: \"get_information(relation='Type of Hospital', tail_entity='Rehabilitation')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the last year they were 5th?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is 5th\nQuery1: \"get_information(relation='row_number', tail_entity='5')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity='output_of_query3')\"",
    "who had a higher score in 3 balls, 2 ribbons, ukraine or bulgaria?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Ukraine\nQuery1: \"get_information(relation='Nation', tail_entity='Ukraine')\"\nStep2: Find the entity named Bulgaria\nQuery2: \"get_information(relation='Nation', tail_entity='Bulgaria')\"\nStep3: Find the score of 3 balls, 2 ribbons of output_of_query1\nQuery3: \"get_information(relation='3 Balls, 2 Ribbons', head_entity='output_of_query1')\"\nStep4: Find the score of 3 balls, 2 ribbons of output_of_query2\nQuery4: \"get_information(relation='3 Balls, 2 Ribbons', head_entity='output_of_query2')\"\nStep5: Compare the scores of output_of_query3 and output_of_query4\nQuery5: \"if(set1='output_of_query3>output_of_query4', set_true='output_of_query1', set_false='output_of_query2')\"",
    "which team has made the roll of honour more times in the east region south division: fauldhouse united or newtongrange star?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Fauldhouse United\nQuery1: \"get_information(relation='East Region South Division', tail_entity='Fauldhouse United')\"\nStep2: Find the number of times output_of_query1 appears in Roll of Honour\nQuery2: \"count(set='output_of_query1', key='Roll of Honour')\"\nStep3: Find the entity named Newtongrange Star\nQuery3: \"get_information(relation='East Region South Division', tail_entity='Newtongrange Star')\"\nStep4: Find the number of times output_of_query3 appears in Roll of Honour\nQuery4: \"count(set='output_of_query3', key='Roll of Honour')\"\nStep5: Compare the counts from output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "did the tigers win more or less than they lost during this season?": "None",
    "what year had the largest number of candidates elected?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Candidates elected\nQuery1: \"get_information(relation='Candidates elected')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Candidates elected\nQuery3: \"get_information(relation='Candidates elected', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year of election', head_entity='output_of_query3')\"",
    "what is the total of the first two core diameters?": "None",
    "except for the first first rank, how many alternates are there for each rank?": "None",
    "how long is the aspect?": "## Target type: {length}\n## Query:\nStep1: Find the entity named Aspect\nQuery1: \"get_information(relation='Model', tail_entity='Aspect')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"",
    "what is the first track to have two performers?": "None",
    "which nation is the most represented by the 20 scorers?": "None",
    "who did the bills play after the oakland raiders?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Oakland Raiders\nQuery1: \"get_information(relation='Opponent', tail_entity='Oakland Raiders')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "how many more years did d. v. graves serve compared to j. f. jenkins?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named D. V. Graves\nQuery1: \"get_information(relation='Coach', tail_entity='D. V. Graves')\"\nStep2: Find the years of service of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"\nStep3: Find the entity named J. F. Jenkins\nQuery3: \"get_information(relation='Coach', tail_entity='J. F. Jenkins')\"\nStep4: Find the years of service of output_of_query3\nQuery4: \"get_information(relation='Years', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(a='output_of_query2', b='output_of_query4')\"",
    "who was next to serve after nejat konuk?": "None",
    "who came in after valentino rossi in the 2008 malaysian motorcycle grand prix?": "## Target type: {'Rider'}\n## Query:\nStep1: Find the entity named Valentino Rossi\nQuery1: \"get_information(relation='Rider', tail_entity='Valentino Rossi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "what is the most consecutive wins in this 1996 season?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Get the max consecutive wins in output_of_query1\nQuery2: \"max_consecutive_wins(set='output_of_query1')\"",
    "name the interval with its size greater than 40 steps.": "## Target type: {interval name}\n## Query:\nStep1: Find the entity with the relation of size (steps) greater than 40\nQuery1: \"get_information(relation='size (steps)', tail_entity>'40')\"\nStep2: Find the interval name of output_of_query1\nQuery2: \"get_information(relation='interval name', head_entity='output_of_query1')\"",
    "name a cathedral that had almost the same diameter as leopardus.": "None",
    "how many riders were faster than massimo ottobre?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Massimo Ottobre\nQuery1: \"get_information(relation='Rider', tail_entity='Massimo Ottobre')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with row_numbers smaller than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who had a larger transfer fee? gavin rae or bajram fetai?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Gavin Rae\nQuery1: \"get_information(relation='Name', tail_entity='Gavin Rae')\"\nStep2: Find the transfer fee of output_of_query1\nQuery2: \"get_information(relation='Transfer fee', head_entity='output_of_query1')\"\nStep3: Find the entity named Bajram Fetai\nQuery3: \"get_information(relation='Name', tail_entity='Bajram Fetai')\"\nStep4: Find the transfer fee of output_of_query3\nQuery4: \"get_information(relation='Transfer fee', head_entity='output_of_query3')\"\nStep5: Compare the transfer fee of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "how many titles are listed in the table?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was she nominated?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Nominated\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of awards that he has won?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams came in 3rd?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that Position is 3rd\nQuery1: \"get_information(relation='Position', tail_entity='3rd')\"\nStep2: Find the number of unique Teams in output_of_query1\nQuery2: \"count_unique(set='output_of_query1', relation='Team')\"",
    "how many centers were drafted by the islander's in the 2006 nhl entry draft?": "## Target type: {number}\n## Query:\nStep1: Find the entity named New York Islanders\nQuery1: \"get_information(relation='Team', tail_entity='New York Islanders')\"\nStep2: Find the entity that represents the year 2006\nQuery2: \"get_information(relation='Year', tail_entity='2006')\"\nStep3: Find the entities with the relation of Position that appear as Center and associated with output_of_query1 and output_of_query2\nQuery3: \"get_information(relation='Position', tail_entity='Center', head_entity1='output_of_query1', head_entity2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many encyclicals were issued between august 15, 1854 and october 26, 1867?": "None",
    "other than burke, name an athlete from the us.": "None",
    "other than soko, tell me a player who is not from the us.": "None",
    "what is only season that zani(v6) won?": "## Target type: {'Season'}\n## Query:\nStep1: Find the entity named Zani\nQuery1: \"get_information(relation='Name', tail_entity='Zani')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Find the entity named Zani as the winner\nQuery3: \"get_information(relation='The Winner', tail_entity='Zani')\"\nStep4: Find the season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "how long is anton lyuboslavskiy's fartherst show in a competition?": "None",
    "zhao dan starred in 2 movies in the same year only 2 times, 1947 and what other year?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Zhao Dan\nQuery1: \"get_information(relation='Role', tail_entity='Zhao Dan')\"\nStep2: Find the entity with the relation of Year that appears twice\nQuery2: \"get_information(relation='Year', tail_entity>='twice')\"\nStep3: Find the relationship between output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many times did don january win by at leas 10 strokes?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Don January\nQuery1: \"get_information(relation='No.', tail_entity='January')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Margin of victory is at least 10 strokes\nQuery3: \"get_information(relation='Margin of victory', tail_entity>='10 strokes')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "when was the last year they placed 2nd?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Position is 2nd\nQuery1: \"get_information(relation='Position', tail_entity='2nd')\"\nStep2: Find the max year of output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how many of these attacks lasted at least 2 days?": "None",
    "how long has the zeta delta been active for?": "None",
    "what is the total number of teams in team 1 column?": "## Target type: {number}\n## Query:\nStep1: Find the entities in Team 1 column\nQuery1: \"get_information(relation='Team 1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams scored zero points in a game?": "None",
    "were more records set in 1978 or 1979?": "None",
    "how much greater is the population of argir than glyvrar?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Argir\nQuery1: \"get_information(relation='Town/Village', tail_entity='Argir')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the entity named Glyvrar\nQuery3: \"get_information(relation='Town/Village', tail_entity='Glyvrar')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "how many times has the team been in the preferente division since 1990?": "None",
    "how many current teams have been in existence for 25 years or greater?": "None",
    "whih world group, 1st round was a win, 1990 or 1993?": "None",
    "after the 1928-29 championship, how many times was the panellinios basket named champions of the panhellenic championship?": "None",
    "which team has the most titles at the great lakes invitational?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Titles\nQuery1: \"get_information(relation='Titles')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Titles\nQuery3: \"get_information(relation='Titles', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many tournaments had 5 total losses?": "None",
    "on which team was the cyclist who withdrew after injuring his shoulder in a crash during stage 6?": "## Target type: {Team}\n## Query:\nStep1: Find the entity that Stage is 6\nQuery1: \"get_information(relation='Stage', tail_entity='6')\"\nStep2: Find the entity that Reason contains \"injuring his shoulder in a crash\"\nQuery2: \"get_information(relation='Reason', value='injuring his shoulder in a crash')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who was the only participant to win first place?": "None",
    "who was the only person to win a bronze medal in new delhi in 1982 in singles?": "None",
    "who ran in the year 1920, but did not win?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity with the relation of Year as 1920\nQuery1: \"get_information(relation='Year', tail_entity='1920')\"\nStep2: Find the candidates who ran in output_of_query1\nQuery2: \"get_information(relation='Loser', head_entity='output_of_query1') or get_information(relation='Winner', head_entity='output_of_query1')\"\nStep3: Find the candidates who did not win\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\"",
    "how many different teams were represented at the 2007 steelback grand prix?": "None",
    "what is the total number of contestants that participated in 1972?": "## Target type: {number of contestants}\n## Query:\nStep1: Find the entity that Year is 1972\nQuery1: \"get_information(relation='Year', tail_entity='1972')\"\nStep2: Find the number of contestants of output_of_query1\nQuery2: \"get_information(relation='Number of contestants', head_entity='output_of_query1')\"",
    "the model 2 and the model 2e have what type of cpu?": "None",
    "what is the number of cylinders that a 5/9 ps has?": "None",
    "which team was the winner the most times?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the entity in Winner that appears the most.\nQuery1: \"get_information(relation='Winner', tail_entity>='most')\"\nStep2: Find the Winner of output_of_query1.\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "how many bulldog drummond books did gerard fairlie write?": "None",
    "in what year did roche win his first doubles title?": "None",
    "what tournament did anton lyuboslavskiy first place in?": "None",
    "country with the most bronze medals.": "None",
    "which nation has the most bronze medals?": "None",
    "their final points is equal to 15": "## Target type: {Rider}\n## Query:\nStep1: Find the entity with the relation of Final Points and value of 15\nQuery1: \"get_information(relation='Final Points', value='15')\"\nStep2: Find the Rider of output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "what are the number of times norra was listed as the section?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Norra\nQuery1: \"get_information(relation='Section', tail_entity='Norra')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who serves inder barack obama?": "None",
    "indian american entertainer mauli dave appeared on television as the host of rock n roll family during the spring of 2008; what was the name of the television show in which she appeared the previous year as a singing contestant?": "None",
    "how many years had passed from malberg's first film to the first danish film with sound?": "None",
    "what was the title of the last television appearance she had in 2010?": "None",
    "what was the number of wins for the 201213 austin peay state governors basketball team?": "None",
    "what destination is above subrahmanya road in the chart?": "## Target type: {destination}\n## Query:\nStep1: Find the entity named Subrahmanya Road\nQuery1: \"get_information(relation='Destination', tail_entity='Subrahmanya Road')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Destination of output_of_query4\nQuery5: \"get_information(relation='Destination', head_entity='output_of_query4')\"",
    "name a player whose \"to\" date is in march and \"from\" date is in january.": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Date to is in March\nQuery1: \"get_information(relation='Date to', tail_entity>=datetime_march)\"\nStep2: Find the entity with the relation of Date from is in January\nQuery2: \"get_information(relation='Date from', tail_entity>=datetime_january)\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who is the only person since 2000 to join the 20 metre club at an event outside finland?": "None",
    "how many major voice over performance awards in total did actor dan castellaneta recieve between 1992 and 2011 (inclusive) for his voice-over performances portraying characters on the simpsons cartoon televisions show?": "None",
    "name a country that had a men's winner in the 1990's but not the 2000's.": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Men's winner in the 1990's\nQuery1: \"get_information(relation='Men's winner', head_entity='1990's')\"\nStep2: Find the entity with the relation of Men's winner in the 2000's\nQuery2: \"get_information(relation='Men's winner', head_entity='2000's')\"\nStep3: Get the difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Choose one country from output_of_query3\nQuery4: \"choose_one(set='output_of_query3')\"",
    "how many names are there?": "## Target type: {number of names}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different names (variants not included) are there?": "## Target type: {number}\n## Query:\nStep1: Find all the Name entities in the schema\nQuery1: \"get_information(relation='Name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long, in km, was the event in helsinki,finland?": "## Target type: {distance in km}\n## Query:\nStep1: Find the entity with the relation of Venue being Helsinki, Finland\nQuery1: \"get_information(relation='Venue', tail_entity='Helsinki, Finland')\"\nStep2: Find the event distance of output_of_query1\nQuery2: \"get_information(relation='Event', head_entity='output_of_query1')\"",
    "which club president kept his position for the longest amount of time?": "None",
    "what team got 0 assists?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Assists is 0\nQuery1: \"get_information(relation='Assists', tail_entity='0')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many riders scored at least 9 points?": "None",
    "how many of the current state regents have a listed office title?": "None",
    "is the number of employees for the village of mundelein more than the mundelien elementary school district 75?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Village of Mundelein\nQuery1: \"get_information(relation='Employer', tail_entity='Village of Mundelein')\"\nStep2: Find the number of employees of output_of_query1\nQuery2: \"get_information(relation='# of Employees', head_entity='output_of_query1')\"\nStep3: Find the entity named Mundelein Elementary School District 75\nQuery3: \"get_information(relation='Employer', tail_entity='Mundelein Elementary School District 75')\"\nStep4: Find the number of employees of output_of_query3\nQuery4: \"get_information(relation='# of Employees', head_entity='output_of_query3')\"\nStep5: Compare the number of employees of output_of_query2 and output_of_query4 and determine if it is more\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='greater_than')\"",
    "the oldest year listed is what?": "None",
    "which author had all of his titles' first edition lengths above 300 pp?": "None",
    "what is the largest number of times the prose prize has been awarded to one person?": "None",
    "how many athletes had a time lower than 5:50.00?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the time 5:50.00\nQuery1: \"get_information(relation='Time', tail_entity='5:50.00')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with row_number less than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many loses did virgil zwicker have?": "None",
    "what is the total number of children born after 1675?": "## Target type: {number}\n## Query:\nStep1: Find all the Birth dates\nQuery1: \"get_information(relation='Birth date')\"\nStep2: Find the entities born after 1675\nQuery2: \"get_information(relation='Birth date', tail_entity>'1675')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of presidents who resigned?": "None",
    "which year saw the greatest percentage of asian individuals?": "None",
    "what rider finished next after jonas folger?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Jonas Folger\nQuery1: \"get_information(relation='Rider', tail_entity='Jonas Folger')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "how many shows did he play someone else?": "None",
    "what is the number of townships with a population larger than 2,000?": "## Target type: {number of townships}\n## Query:\nStep1: Find the townships with a population larger than 2,000\nQuery1: \"get_information(relation='Population', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of finalists?": "None",
    "how long was the song \"i see fire\" on the charts (in weeks)?": "None",
    "how many peaks are below 3200 feet?": "None",
    "how many lower yazoo phases are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Lower Yazoo Phases\nQuery1: \"get_information(relation='Lower Yazoo Phases')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only year where rowell won the soap opera digest award?": "None",
    "name a news and classical station whose frequency is not above 90.": "None",
    "who was the first canadian player to finish?": "## Target type: {Name}\n## Query:\nStep1: Find the player with nationality Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the player with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what was the first live album that was released in 2011?": "None",
    "what was the signing price on average of all the players?": "None",
    "name a country that had 4 consecutive runs under 1:19.": "None",
    "what is the time of each of the athletes who are in the number 10 position in the rankings?": "None",
    "how many changes incolved pattaya united?": "## Target type: {number of changes}\n## Query:\nStep1: Find the entity named Pattaya United\nQuery1: \"get_information(relation='Club', tail_entity='Pattaya United')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Check how many output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the number of games awarded in 2014?": "None",
    "who won the most total medals?": "None",
    "which pollutant has the least amount of petroleum coke fired?": "None",
    "did jeff london direct before night falls or and then came summer?": "None",
    "which athlete finished the first race but did not finish the second race?": "None",
    "how many athletes were from a country other than cyprus?": "None",
    "what is the longest title reign after champion joe calzaghe?": "None",
    "how many took at least 35:00 to finish?": "None",
    "what is the last republican listed?": "None",
    "how long after mlk was a graduate student did he receive a laureate?": "None",
    "in what year did stephen henrdy win his first title?": "None",
    "how many delegates are under the ways and means committee and represented washington county?": "## Target type: {number of delegates}\n## Query:\nStep1: Find the entity with the relation of Committee as \"Ways and Means\"\nQuery1: \"get_information(relation='Committee', tail_entity='Ways and Means')\"\nStep2: Find the delegates of output_of_query1\nQuery2: \"get_information(relation='Delegate', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Counties Represented as \"Washington\"\nQuery3: \"get_information(relation='Counties Represented', tail_entity='Washington')\"\nStep4: Find the delegates of output_of_query3\nQuery4: \"get_information(relation='Delegate', head_entity='output_of_query3')\"\nStep5: Find the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "last name is also a first name beginning with \"n\"": "None",
    "is the number of freshmen (fr.) greater than, equal to, or less than the number of juniors (jr.)?": "None",
    "how many consecutive games were released in 2006?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was its best starting position?": "None",
    "how many locations have no photograph?": "None",
    "was opera dom sebastien of opera la favorite published in 1844?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Opera Dom S\u00e9bastien\nQuery1: \"get_information(relation='Original work', tail_entity='Opera Dom S\u00e9bastien')\"\nStep2: Find the publication year of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep3: Check if the publication year of output_of_query1 is 1844\nQuery3: \"check(set='output_of_query2', key='publication year', value='1844')\"",
    "what is the name of the oldest map/catalog?": "None",
    "who was the only person elected in 1871?": "## Target type: {Name}\n## Query:\nStep1: Find the entity whose Elected is 'elected in 1871'\nQuery1: \"get_information(relation='Elected', tail_entity='elected in 1871')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "did marco simoncelli or alvaro bautista held rank 1?": "## Target type: {Rank}\n## Query:\nStep1: Find the entity named Marco Simoncelli\nQuery1: \"get_information(relation='Rider', tail_entity='Marco Simoncelli')\"\nStep2: Find the entity named Alvaro Bautista\nQuery2: \"get_information(relation='Rider', tail_entity='Alvaro Bautista')\"\nStep3: Find the rank of output_of_query1\nQuery3: \"get_information(relation='Pos', head_entity='output_of_query1')\"\nStep4: Find the rank of output_of_query2\nQuery4: \"get_information(relation='Pos', head_entity='output_of_query2')\"\nStep5: Check if either output_of_query3 or output_of_query4 is equal to 1\nQuery5: \"output_of_query3 == 1 or output_of_query4 == 1\"",
    "which record is older, ilyin's or akhmetov's?": "None",
    "what are the number of players from the united states with a score of 139?": "None",
    "is the are of saint helena more than that of nightingale island?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Saint Helena\nQuery1: \"get_information(relation='Administrative area', tail_entity='Saint Helena')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area km2', head_entity='output_of_query1')\"\nStep3: Find the entity named Nightingale Island\nQuery3: \"get_information(relation='Administrative area', tail_entity='Nightingale Island')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area km2', head_entity='output_of_query3')\"\nStep5: Compare the area of output_of_query2 and output_of_query4\nQuery5: \"compare(op='greater than', left='output_of_query2', right='output_of_query4')\"",
    "how many players received a score below 283?": "None",
    "how many times was the venue vasil levski national stadium used?": "None",
    "how many listings are in farmington?": "None",
    "what nation leads the medal count?": "None",
    "how many songs did they have the previous year of 1987?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity for the Year 1987\nQuery1: \"get_information(relation='Year', tail_entity='1987')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Count the number of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the last location on this chart?": "## Target type: {location}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what was the number of twilight movies that made this ranked list?": "None",
    "what venue is listed above wembley stadium, london?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Wembley Stadium, London\nQuery1: \"get_information(relation='Venue', tail_entity='Wembley Stadium, London')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Get the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "after requiem for strings, what was the next score takemitsu wrote for orchestra?": "None",
    "what's the number of silver medals did chile win?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Chile\nQuery1: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep2: Find the number of silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "which team had the highest score during one game?": "None",
    "which model was the tallest?": "None",
    "which opponent had the highest attendance after north carolina on june 21?": "None",
    "what is the name of the next club after real betis?": "## Target type: {club}\n## Query:\nStep1: Find the entity who is the club named Real Betis\nQuery1: \"get_information(relation='Club', tail_entity='Real Betis')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Club of output_of_query4\nQuery5: \"get_information(relation='Club', head_entity='output_of_query4')\"",
    "what was the average of the totals of nicky english and mark corrigan?": "None",
    "what is the total amount of goals from all people?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Calculate the sum of output_of_query1\nQuery2: \"sum(set='output_of_query1')\"",
    "what was the previous film produced before devakanya?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named Devakanya\nQuery1: \"get_information(relation='Title', tail_entity='Devakanya')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many networks do not air sports?": "None",
    "was v. vaithilingam a member of the indian national congress or the janata party?": "## Target type: {party affiliation}\n## Query:\nStep1: Find the entity named V. Vaithilingam\nQuery1: \"get_information(relation='Name of M.L.A.', tail_entity='V. Vaithilingam')\"\nStep2: Find the party affiliation of output_of_query1\nQuery2: \"get_information(relation='Party Affiliation', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is a member of the Indian National Congress\nQuery3: \"output_of_query2 in ['Indian National Congress']\"\nStep4: Check if output_of_query2 is a member of the Janata Party\nQuery4: \"output_of_query2 in ['Janata Party']\"",
    "how many bridges are not as long as the ellsworth street bridge?": "None",
    "what is the last discipline listed on this chart?": "None",
    "which countries won the more than five silver medals?": "None",
    "after passenger baseplates for vehicle registration in vermont were no longer issued with forest green as the color, what color was, and currently still is used?": "None",
    "which year did he play the roles of gary ellis and vincent boyd?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Gary Ellis\nQuery1: \"get_information(relation='Role', tail_entity='Gary Ellis')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named Vincent Boyd\nQuery3: \"get_information(relation='Role', tail_entity='Vincent Boyd')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the total number of stars given for the \"thunderball\" challenge?": "None",
    "total number of adherents in romania, cyprus, and greece": "None",
    "what was the name of the first competition according to this chart?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the entity with the relation of row_number as '1'\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "how many tours took place during january?": "## Target type: {number}\n## Query:\nStep1: Find the all the Dates in January\nQuery1: \"get_information(relation='Date', head_entity='January')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was her highest qualifying rank?": "None",
    "what chateau comes after \"chateau de bourmont\"?": "## Target type: {Chateau}\n## Query:\nStep1: Find the entity named Ch\u00e2teau de Bourmont\nQuery1: \"get_information(relation='Name', tail_entity='Ch\u00e2teau de Bourmont')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "did italy or spain receive a greater number of silver medals?": "## Target type: {Nation}\n## Query:\nStep1: Find the entity named Italy\nQuery1: \"get_information(relation='Nation', tail_entity='Italy')\"\nStep2: Find the entity named Spain\nQuery2: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep3: Find the Silver medals received by output_of_query1\nQuery3: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep4: Find the Silver medals received by output_of_query2\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query2')\"\nStep5: Compare the Silver medals of output_of_query3 and output_of_query4\nQuery5: \"set1 > set2 ? output_of_query1 : output_of_query2\"",
    "who was the only brazilian to transfer in april 2009?": "None",
    "the album whatever came before what album?": "None",
    "how many times did they finish 1st?": "## Target type: {number}\n## Query:\nStep1: Find the entity that finished 1st\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name one date with the only attendance over 32,000": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Find the attendance over 32,000 from output_of_query1\nQuery2: \"get_information(relation='Attendance', tail_entity>'32000')\"\nStep3: Find the date of output_of_query2\nQuery3: \"get_information(relation='Date', head_entity='output_of_query2')\"",
    "what films did mandy patinkin star in in 1998?": "None",
    "was roy williams picked before or after ryan sims": "None",
    "who had a better singles record, boo-kil or seung-bok?": "## Target types: {'Player'}\n## Query:\nStep1: Find the entity named Boo-Kil\nQuery1: \"get_information(relation='Player', tail_entity='Boo-Kil')\"\nStep2: Find the singles record of output_of_query1\nQuery2: \"get_information(relation='Singles W-L', head_entity='output_of_query1')\"\nStep3: Find the entity named Seung-Bok\nQuery3: \"get_information(relation='Player', tail_entity='Seung-Bok')\"\nStep4: Find the singles record of output_of_query3\nQuery4: \"get_information(relation='Singles W-L', head_entity='output_of_query3')\"\nStep5: Compare the singles records of output_of_query2 and output_of_query4\nQuery5: \"calculate(output_of_query2 > output_of_query4 ? 'output_of_query1' : 'output_of_query3')\"",
    "which driver won espy awards 11 years apart from each other?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with relation \"ESPY Awards\"\nQuery1: \"get_information(relation='ESPY Awards')\"\nStep2: Find the entity that appears 11 years apart from each other in output_of_query1\nQuery2: \"get_information(relation='ESPY Awards', tail_entity>='11 years')\"\nStep3: Find the driver of output_of_query2\nQuery3: \"get_information(relation='Driver', head_entity='output_of_query2')\"",
    "who has won this medal and the nobel prize as well?": "None",
    "what is the last tops design code on this chart?": "## Target type: {'TOPS design code'}\n## Query:\nStep1: Find all the TOPS design codes\nQuery1: \"get_information(relation='TOPS design code')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the TOPS design code with the max row_number\nQuery3: \"get_information(relation='TOPS design code', tail_entity='output_of_query2')\"",
    "does toronto's population grow more or less than hamilton's?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Toronto\nQuery1: \"get_information(relation='Area', tail_entity='Toronto')\"\nStep2: Find the Projected 2025 population of output_of_query1\nQuery2: \"get_information(relation='Projected\\n2025 population', head_entity='output_of_query1')\"\nStep3: Find the entity named Hamilton\nQuery3: \"get_information(relation='Area', tail_entity='Hamilton')\"\nStep4: Find the Projected 2025 population of output_of_query3\nQuery4: \"get_information(relation='Projected\\n2025 population', head_entity='output_of_query3')\"\nStep5: Compare the population of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "who was the next opponent after san francisco 49ers?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Opponent is San Francisco 49ers\nQuery1: \"get_information(relation='Opponent', tail_entity='San Francisco 49ers')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "when was the first time the race was finished in under 10 seconds?": "None",
    "which party is last on the chart": "None",
    "which parter did she have the most?": "## Target type: {partner}\n## Query:\nStep1: Find the entity that is the Tennis Player\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the partner of output_of_query1\nQuery2: \"get_information(relation='Partner', tail_entity='output_of_query1')\"\nStep3: Find the partner that appears the most\nQuery3: \"get_information(relation='Partner', tail_entity>='most')\"\nStep4: Find the partner of output_of_query3\nQuery4: \"get_information(relation='Partner', head_entity='output_of_query3')\"",
    "how many medals were won after august 3?": "None",
    "which film did she receive the academy award for best actress and golden globe award for best actress-motion picture drama?": "None",
    "the total number of players picked": "None",
    "what was the difference in position between 2011 and 2012 for daegu fc in the k league classic?": "## Target type: {position difference}\n## Query:\nStep1: Find the entity that Season is 2011\nQuery1: \"get_information(relation='Season', tail_entity='2011')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Pos.', head_entity='output_of_query1')\"\nStep3: Find the entity that Season is 2012\nQuery3: \"get_information(relation='Season', tail_entity='2012')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Pos.', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the number of managerial changes that ttm samut sakhon made in 2009?": "None",
    "which team won both the 1st and 2nd legs, panachaiki or aris?": "None",
    "what was the time difference between the rank 1 swimmer and the rank 3 swimmers?": "None",
    "what is the venue total for sri lanka?": "## Target type: {total}\n## Query:\nStep1: Find the entity named Sri Lanka\nQuery1: \"get_information(relation='Venue', tail_entity='Sri Lanka')\"\nStep2: Find the total of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what lift has the least passenger capacity per hour?": "## Target type: {'Lift Name'}\n## Query:\nStep1: Find the entity with the relation of Capacity (rides/hr)\nQuery1: \"get_information(relation='Capacity (rides/hr)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Capacity\nQuery3: \"get_information(relation='Capacity (rides/hr)', tail_entity='output_of_query2')\"\nStep4: Find the Lift Name of output_of_query3\nQuery4: \"get_information(relation='Lift Name', head_entity='output_of_query3')\"",
    "what is the total number of drivers listed?": "## Target type: {number}\n## Query:\nStep1: Find all the rows\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many swaras do not have dhaivata in their name?": "None",
    "the total number of helipads at hama military airport?": "None",
    "who came in after marco andretti?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Marco Andretti\nQuery1: \"get_information(relation='Driver', tail_entity='Marco Andretti')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\" \nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "what is the category/type listed after crown agent?": "None",
    "what administrative area comes before nightingale island?": "## Target type: {Administrative area}\n## Query:\nStep1: Find the entity named Nightingale Island\nQuery1: \"get_information(relation='Administrative area', tail_entity='Nightingale Island')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Administrative area of output_of_query4\nQuery5: \"get_information(relation='Administrative area', head_entity='output_of_query4')\"",
    "on the list, what is the previous team above team ks?": "## Target type: {team}\n## Query:\nStep1: Find the team named KS\nQuery1: \"get_information(relation='Team', tail_entity='KS')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many swimmers finished in less than 1:55?": "None",
    "who timed in after shelley cramer?": "## Target type: {person}\n## Query:\nStep1: Find the entity named Shelley Cramer\nQuery1: \"get_information(relation='Name', tail_entity='Shelley Cramer')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the row_number of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many games took place in ostrava?": "None",
    "what is the last date on the chart?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which township in pope county, arkansas has the least amount of water area?": "None",
    "which leader served more years, william leslie, or joyce shannon?": "None",
    "plusvent and ebastel both target which therapeutic area?": "None",
    "how many losses do the st. louis blues have?": "## Target type: {number of losses}\n## Query:\nStep1: Find the entity named St. Louis Blues\nQuery1: \"get_information(relation='Team', tail_entity='St. Louis Blues')\"\nStep2: Find the losses of output_of_query1\nQuery2: \"get_information(relation='Losses', head_entity='output_of_query1')\"",
    "which rider is on top in points": "None",
    "who had more losses, su agen or rc toulonnais?": "## Target type: {team}\n## Query:\nStep1: Find the entity named SU Agen\nQuery1: \"get_information(relation='Club', tail_entity='SU Agen')\"\nStep2: Find the entity named RC Toulonnais\nQuery2: \"get_information(relation='Club', tail_entity='RC Toulonnais')\"\nStep3: Find the Losses of output_of_query1\nQuery3: \"get_information(relation='Lost', head_entity='output_of_query1')\"\nStep4: Find the Losses of output_of_query2\nQuery4: \"get_information(relation='Lost', head_entity='output_of_query2')\"\nStep5: Find the team that has more losses\nQuery5: \"if(set1>'set2', 'output_of_query1', 'output_of_query2')\"",
    "what year did christos folias take office?": "None",
    "what is the number of children sarah churchill had?": "None",
    "how many nominations were received in all?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years was it between the empowering legislation of the new zealand film commission and the empowering legislation of radio new zealand limited?": "None",
    "list each of the players with a high checkout of 131.": "## Target type: {player}\n## Query:\nStep1: Find the entity with High Checkout of 131\nQuery1: \"get_information(relation='High Checkout', tail_entity='131')\"\nStep2: Get the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what was the only competition this competitor went to in 2008 that had a team event?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Year as 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the entity with the relation of Event as Team\nQuery2: \"get_information(relation='Event', tail_entity='Team')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "which tie number did not have any attendance?": "None",
    "what is the name of the only nation that did not earn any bronze medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity whose Bronze is 0\nQuery1: \"get_information(relation='Bronze', tail_entity='0')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many teams had at least five players?": "## Target type: {number of teams}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Names of output_of_query3\nQuery4: \"get_information(relation='Names', head_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "each of these years he played less or equal to 4 games": "## Target type: {year}\n## Query:\nStep1: Find the entity that Games is less or equal to 4\nQuery1: \"get_information(relation='Games', tail_entity<='4')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many teams won 6 matches?": "None",
    "how many drivers had constructors other than brabham-repco?": "None",
    "did the bell system strike last longer in 1971 or 1983?": "## Target type: {duration}\n## Query:\nStep1: Find the entity with the relation of Year is 1971\nQuery1: \"get_information(relation='Year', tail_entity='1971')\"\nStep2: Find the duration of output_of_query1\nQuery2: \"get_information(relation='Duration of Strike', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Year is 1983\nQuery3: \"get_information(relation='Year', tail_entity='1983')\"\nStep4: Find the duration of output_of_query3\nQuery4: \"get_information(relation='Duration of Strike', head_entity='output_of_query3')\"\nStep5: Calculate the comparison of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "which player had the most receptions but no touchdowns?": "None",
    "was the asian population in 2005 more or less than it was in 2000?": "## Target type: {population}\n## Query:\nStep1: Find the entity with the relation of By race is 2005 (Hispanic only) \nQuery1: \"get_information(relation='By race', tail_entity='2005 (Hispanic only)')\"\nStep2: Get the population of output_of_query1 under the relation of Asian\nQuery2: \"get_information(relation='Asian', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of By race is 2000 (Hispanic only)\nQuery3: \"get_information(relation='By race', tail_entity='2000 (Hispanic only)')\"\nStep4: Get the population of output_of_query3 under the relation of Asian\nQuery4: \"get_information(relation='Asian', head_entity='output_of_query3')\"\nStep5: Determine if output_of_query2 is more or less than output_of_query4\nQuery5: \"compare(value1='output_of_query2', operator='<', value2='output_of_query4')\"",
    "how many composers died before 1960?": "## Target type: {number}\n## Query:\nStep1: Find all the entities with the relation Died\nQuery1: \"get_information(relation='Died')\"\nStep2: Find the entities with the relation Died and whose value is less than 1960\nQuery2: \"get_information(relation='Died', value<'1960')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "only jurisdiction with more than 550 monasteries": "None",
    "how many games did the club play in september?": "None",
    "tell me a game that had a total score above 4.": "None",
    "how many lesbians were born after 1950?": "None",
    "which player competed in women's singles and won a silver medal?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Women's Singles\nQuery1: \"get_information(relation='Event', tail_entity='Women's Singles')\"\nStep2: Find the entity with the relation of Medal that is Silver\nQuery2: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many consecutive years has the acm multimedia workshops been held?": "None",
    "how many players won in 2006?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity that Year is 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which title has the longest name?": "None",
    "how many total different languages did the actress film movies in?": "None",
    "which parish is the only one to have closed?": "None",
    "how many sites were listed as historical before 1980?": "None",
    "how many years, at most, did hemavan, sweden have winderoe destinations?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Hemavan, Sweden\nQuery1: \"get_information(relation='City', tail_entity='Hemavan, Sweden')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(start='output_of_query2', end='output_of_query4', unit='years')\"",
    "how many athletes are from east germany?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that Country is East Germany\nQuery1: \"get_information(relation='Country', tail_entity='East Germany')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many records does australia hold for pole vaulting?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Australia\nQuery1: \"get_information(relation='Nation', tail_entity='Australia')\"\nStep2: Find the records of output_of_query1 for pole vaulting\nQuery2: \"get_information(relation='Record', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many times did he finish all 200 laps?": "None",
    "how many times is andrea jeremiah listed on this chart?": "None",
    "who had the lowest lap time?": "None",
    "what is the total number of senior advisors that there has been?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total elevation (in ft) of mount whitney?": "None",
    "how long after his first best actor academy award, did mr. borgnine receive his screen actors guild life acheivement award?": "None",
    "what is the total amount of nations with more than 5 bronze medals?": "None",
    "how many athletes are not ranked?": "None",
    "how many events occurred in minneapolis, mn?": "## Target type: {number of events}\n## Query:\nStep1: Find the entity with the relation of City is Minneapolis and State/Province is MN\nQuery1: \"get_information(relation='City', tail_entity='Minneapolis', key='State/Province', value='MN')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the place listed before deer park?": "## Target type: {name of place}\n## Query:\nStep1: Find the entity named Deer Park\nQuery1: \"get_information(relation='Name of place', tail_entity='Deer Park')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of place of output_of_query4\nQuery5: \"get_information(relation='Name of place', head_entity='output_of_query4')\"",
    "how many secretary of states were under prime minister macdonald?": "None",
    "other than natt i betlehem, name an album that featured sjur miljeteig.": "None",
    "how many networks does televisa own?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Televisa\nQuery1: \"get_information(relation='Owner', tail_entity='Televisa')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was her was her champoinship and olympice career?": "None",
    "how old was gideon brand van zyl when he took office as governor?": "None",
    "how many low zip codes are there in total?": "None",
    "which three countries have at least nine metals?": "None",
    "how many events of the 2013 bwf super series pay over $200,000?": "None",
    "what was the number of players on the roster in 1952-53?": "None",
    "how many times did mocho cota lose to chamaco valaguez?": "None",
    "what are the total number of fights he has been in?": "## Target type: {number of fights}\n## Query:\nStep1: Find the entity with the relation of Record\nQuery1: \"get_information(relation='Record')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams have the color red in their team colours?": "None",
    "which driver earned the least amount of points.": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "total amount of goals scored by chris tadrosse?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Chris Tadrosse\nQuery1: \"get_information(relation='Name', tail_entity='Chris Tadrosse')\"\nStep2: Find the goals scored by output_of_query1\nQuery2: \"get_information(relation='Goals scored', head_entity='output_of_query1')\"",
    "how many nations received silver medals?": "None",
    "what is the number of players with a weight over 200?": "## Target type: {number}\n## Query:\nStep1: Find all the weights greater than 200\nQuery1: \"get_information(relation='Weight', tail_entity>'200')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "list the first year more than 2000 jamaicans were granted british citizenship.": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Numer of Jamaicans granted British citizenship\nQuery1: \"get_information(relation='Numer of Jamaicans granted British citizenship')\"\nStep2: Find the years where the output_of_query1 is greater than 2000\nQuery2: \"get_information(relation='Year', tail_entity>'output_of_query1')\"\nStep3: Sort the output_of_query2 in ascending order\nQuery3: \"sort(set='output_of_query2', ascending=True)\"\nStep4: Find the first element of output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity='output_of_query3')\"",
    "how many times is fiji listed as the opposition?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Fiji\nQuery1: \"get_information(relation='Opposition', tail_entity='Fiji')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total of winners?": "## Target type: {total of winners}\n## Query:\nStep1: Find the entity with the relation of Outcome\nQuery1: \"get_information(relation='Outcome')\"\nStep2: Find the winners of output_of_query1\nQuery2: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep3: Count the total of winners\nQuery3: \"count(set='output_of_query2')\"",
    "what material has a high thermal condition?": "## Target type: {material}\n## Query:\nStep1: Find the material with a high thermal condition\nQuery1: \"get_information(relation='Thermal Cond.', tail_entity='high')\"\nStep2: Find the material of output_of_query1\nQuery2: \"get_information(relation='Material', head_entity='output_of_query1')\"",
    "what was the transfer fee to transfer kevin watson?": "## Target type: {'Fee'}\n## Query:\nStep1: Find the entity named Kevin Watson\nQuery1: \"get_information(relation='Name', tail_entity='Kevin Watson')\"\nStep2: Find the transfer fee of output_of_query1\nQuery2: \"get_information(relation='Fee', head_entity='output_of_query1')\"",
    "which country was awarded more than 5 silver medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the entities with more than 5 silver medals from output_of_query1\nQuery2: \"get_information(relation='Silver', tail_entity>'5')\"\nStep3: Find the countries of output_of_query2\nQuery3: \"get_information(relation='Nation', head_entity='output_of_query2')\"",
    "who has the most recent title win, campbell college or regent house grammar school?": "## Target type: {'School'}\n## Query:\nStep1: Find the entity named Campbell College\nQuery1: \"get_information(relation='School', tail_entity='Campbell College')\"\nStep2: Find the Last Title of output_of_query1\nQuery2: \"get_information(relation='Last Title', head_entity='output_of_query1')\"\nStep3: Find the entity named Regent House Grammar School\nQuery3: \"get_information(relation='School', tail_entity='Regent House Grammar School')\"\nStep4: Find the Last Title of output_of_query3\nQuery4: \"get_information(relation='Last Title', head_entity='output_of_query3')\"\nStep5: Compare the Last Title of output_of_query2 and output_of_query4\nQuery5: \"if(Last Title of output_of_query2 >= Last Title of output_of_query4, output_of_query2, output_of_query4)\"",
    "how long did it take tina maze to finish the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Tina Maze\nQuery1: \"get_information(relation='Name', tail_entity='Tina Maze')\"\nStep2: Find the total time of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what was the average chart position of their singles in the uk?": "None",
    "which constituency is listed on top?": "None",
    "whom is listed after juk faat wan?": "None",
    "who were the first champions?": "## Target type: {wrestlers}\n## Query:\nStep1: Find the entity that is the row_number 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the wrestlers of output_of_query1\nQuery2: \"get_information(relation='Wrestlers', head_entity='output_of_query1')\"",
    "what is the time of the last finisher from kazakhstan?": "## Target type: {time}\n## Query:\nStep1: Find the entity whose Country is Kazakhstan\nQuery1: \"get_information(relation='Country', tail_entity='Kazakhstan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the last row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity whose row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Time of output_of_query4\nQuery5: \"get_information(relation='Time', head_entity='output_of_query4')\"",
    "what event is listed right before team dressage?": "## Target type: {event}\n## Query:\nStep1: Find the entity that Event is Team Dressage\nQuery1: \"get_information(relation='Event', tail_entity='Team Dressage')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Event of output_of_query4\nQuery5: \"get_information(relation='Event', head_entity='output_of_query4')\"",
    "what tier was this team placed into next after their 2011-2012 season?": "## Target type: {tier}\n## Query:\nStep1: Find the entity that Season is 2011-2012\nQuery1: \"get_information(relation='Season', tail_entity='2011-2012')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tier of output_of_query4\nQuery5: \"get_information(relation='Tier', head_entity='output_of_query4')\"",
    "when was the recording of nabucco made in the metropolitan opera?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Nabucco\nQuery1: \"get_information(relation='Cast', tail_entity='Nabucco')\"\nStep2: Find the entity named Metropolitan Opera\nQuery2: \"get_information(relation='Opera House and Orchestra', tail_entity='Metropolitan Opera')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "which week saw attendance of at least 70,000?": "None",
    "what country is listed last on this list?": "## Target type: {country}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what was the first superhero movie to gross over 300,000,000?": "None",
    "how many people attended the new york giants game on october 25, 1981?": "## Target type: {number}\n## Query:\nStep1: Find the game on October 25, 1981\nQuery1: \"get_information(relation='Date', tail_entity='October 25, 1981')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "which player only scored 3 free throws?": "## Target type: {player}\n## Query:\nStep1: Find the player who scored 3 free throws\nQuery1: \"get_information(relation='Free Throws', tail_entity='3')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the total area of edinburg?": "None",
    "what is the last wager on the chart?": "## Target type: {wager}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Wager of output_of_query3\nQuery4: \"get_information(relation='Wager', head_entity='output_of_query3')\"",
    "how many laureates were in the field of physics?": "## Target type: {number}\n## Query:\nStep1: Find the laureates in the field of physics\nQuery1: \"get_information(relation='Category', tail_entity='Physics')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which driver has the least amount of points?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "j-money won on march 8, 2003. who won the next match?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity with the Date of March 8, 2003\nQuery1: \"get_information(relation='Date', tail_entity='March 8, 2003')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Wrestlers of output_of_query4\nQuery5: \"get_information(relation='Wrestlers', head_entity='output_of_query4')\"",
    "how many of these castles are currently in ruins?": "## Target type: {number}\n## Query:\nStep1: Find the castles with the relation of Condition being \"Ruins\"\nQuery1: \"get_information(relation='Condition', tail_entity='Ruins')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of names from nationalities from either korea?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose nationality is South Korea or North Korea\nQuery1: \"get_information(relation='Nationality', tail_entity='South Korea')\"\nQuery2: \"get_information(relation='Nationality', tail_entity='North Korea')\"\nStep2: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep3: Get the names of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"\nStep4: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what film did damon produce right after monster?": "None",
    "which lake has the most area and it locations": "None",
    "which author wrote the first award winner?": "None",
    "how many games did she play in 2002?": "None",
    "which song has the most in us r&b?": "None",
    "who was ranked next after venezuela?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "which team scored the most goals in 1946?": "None",
    "what is the total of deaths in internment camps and during the wartime flight?": "None",
    "how many replays were there?": "None",
    "which nation has won the most silver medals in the biathlon at the winter paralympics?": "None",
    "was the budget for young guns more or less than freejack's budget?": "## Target type: {'Budget'}\n## Query:\nStep1: Find the budget of Young Guns\nQuery1: \"get_information(relation='Budget', head_entity='Young Guns')\"\nStep2: Find the budget of Freejack\nQuery2: \"get_information(relation='Budget', head_entity='Freejack')\"\nStep3: Compare the budget of output_of_query1 and output_of_query2\nQuery3: \"compare(value1='output_of_query1', value2='output_of_query2')\"",
    "which stadium holds the most people?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"",
    "which ship in auckland had the fastest speed in knots?": "None",
    "which position is listed the least amount of times on this chart?": "None",
    "how many superhero movies have been television films?": "None",
    "how many opponents have the same number of draws as ks flamurtari?": "None",
    "which is the least successful film?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Gross\nQuery1: \"get_information(relation='Gross')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Gross\nQuery3: \"get_information(relation='Gross', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what country scored the top number of bronze medals in taekwondo at the 2013 bolivarian games?": "None",
    "after 'lejila' what was malberg's next film?": "None",
    "how many dollars on average did brazil receive per tourist in 2009?": "## Target type: {'Average receipt per visitor'}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Selected Latin American countries', tail_entity='Brazil')\"\nStep2: Find the Average receipt per visitor of output_of_query1\nQuery2: \"get_information(relation='Average receipt per visitor', head_entity='output_of_query1')\"",
    "riaa: gold is only one of the certifications, but what is the other?": "None",
    "how many games did the england women's rfu play against countries located in north america?": "## Target type: {number of games}\n## Query:\nStep1: Find the countries located in North America\nQuery1: \"get_information(relation='Opponent', tail_entity='North America')\"\nStep2: Find the games that England Women's RFU played against countries in output_of_query1\nQuery2: \"get_information(relation='Played', head_entity='output_of_query1')\"",
    "what team did not complete a single lap?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Find the entity with the value of 0\nQuery2: \"get_information(relation='Laps', tail_entity='0')\"\nStep3: Find the team of output_of_query2\nQuery3: \"get_information(relation='Team', head_entity='output_of_query2')\"",
    "what is the only title being released in dec 27 2013?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Release Date as \"Dec 27 2013\"\nQuery1: \"get_information(relation='Release Date', tail_entity='Dec 27 2013')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what species of tree was the tallest one used?": "None",
    "what year was the film polio water released?": "## Target type: {year}\n## Query:\nStep1: Find the film named Polio Water\nQuery1: \"get_information(relation='Title', tail_entity='Polio Water')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "is commodore associated with the u. k. or usa?": "None",
    "what label was she working with before universal music?": "None",
    "which player can call notre dame his alma matter?": "## Target type: {player}\n## Query:\nStep1: Find the entity that College is Notre Dame\nQuery1: \"get_information(relation='College', tail_entity='Notre Dame')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many games had a british person at the pole position?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity in Pole Position with relation of 'British person'\nQuery1: \"get_information(relation='Pole Position', tail_entity='British person')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did tie number 4 or tie number 6 have higher attendance?": "None",
    "in the irish national final for the eurovision song contest in 1990, which artist won more points than linda martin and friends?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Linda Martin and Friends\nQuery1: \"get_information(relation='Artist', tail_entity='Linda Martin and Friends')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity whose points is larger than output_of_query2\nQuery3: \"get_information(relation='Points', tail_entity>'output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "what km comes after 8.25, but before": "## Target type: {km}\n## Query:\nStep1: Find the entity with the relation of km\nQuery1: \"get_information(relation='km')\"\nStep2: Sort the output_of_query1 in ascending order\nQuery2: \"sort(set='output_of_query1', order='ascending')\"\nStep3: Find the next_row of 8.25\nQuery3: \"next_row(set='output_of_query2', value='8.25')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"",
    "who scored more points, hrabak or singson?": "## Target type: {'Top scorer'}\n## Query:\nStep1: Find the entity named Hrabak\nQuery1: \"get_information(relation='Top scorer', tail_entity='Hrabak')\"\nStep2: Find the entity named Singson\nQuery2: \"get_information(relation='Top scorer', tail_entity='Singson')\"\nStep3: Find the Total points of output_of_query1\nQuery3: \"get_information(relation='Top scorer', head_entity='output_of_query1')\"\nStep4: Find the Total points of output_of_query2\nQuery4: \"get_information(relation='Top scorer', head_entity='output_of_query2')\"\nStep5: Compare the Total points of output_of_query3 and output_of_query4\nQuery5: \"comparison(set1='output_of_query3', set2='output_of_query4', operator='>')\"\nQuery5 will return the scorer who scored more points.",
    "which position did habte jifar achieve in the all-africa games in 1999: 4th or 3rd?": "## Target type: {'Position'}\n## Query:\nStep1: Find the entity with the relation of Competition as All-Africa Games and Year as 1999\nQuery1: \"get_information(relation='Competition', tail_entity='All-Africa Games', key='Year', value='1999')\"\nStep2: Find the Position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"",
    "prema katha won more than how many awards compared to aaha?": "None",
    "how many votes did the independent party have?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity with the relation of Party is Independent\nQuery1: \"get_information(relation='Party', tail_entity='Independent')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"",
    "in what year was the only album on the fontana label?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Label as Fontana\nQuery1: \"get_information(relation='Label', tail_entity='Fontana')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what year saw the greatest size?": "None",
    "which painter has a higher mark for drawing jacopo bassano or otho venius?": "## Target type: {painter}\n## Query:\nStep1: Find the entity named Jacopo Bassano\nQuery1: \"get_information(relation='Painter', tail_entity='Jacopo Bassano')\"\nStep2: Find the drawing mark of output_of_query1\nQuery2: \"get_information(relation='Drawing', head_entity='output_of_query1')\"\nStep3: Find the entity named Otho Venius\nQuery3: \"get_information(relation='Painter', tail_entity='Otho Venius')\"\nStep4: Find the drawing mark of output_of_query3\nQuery4: \"get_information(relation='Drawing', head_entity='output_of_query3')\"\nStep5: Compare the marks of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2>output_of_query4\"",
    "tell me the only year vinall appears on the list.": "None",
    "lorraine moller's top time overall was": "None",
    "what country finished after great britain?": "## Target type: {Country}\n## Query:\nStep1: Find the entity that Country is Great Britain\nQuery1: \"get_information(relation='Country', tail_entity='Great Britain')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "what is the name of the winner of the next round?": "None",
    "the next year he only had 7 punt return attempts, which year was prior to that": "## Target type: {year}\n## Query:\nStep1: Find the entity with Punt Return Attempts of 7\nQuery1: \"get_information(relation='Punt Return Attempts', tail_entity='7')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', tail_entity='output_of_query3')\"",
    "each of these wrestlers came from a reign of 3": "## Target type: {Wrestler}\n## Query:\nStep1: Find the entity that has No. of reigns equal to 3\nQuery1: \"get_information(relation='No. of reigns', tail_entity='3')\"\nStep2: Find the wrestler of output_of_query1\nQuery2: \"get_information(relation='Wrestler', head_entity='output_of_query1')\"",
    "what is the first athlete in teh 100m event?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Event is 100 m\nQuery1: \"get_information(relation='Event', tail_entity='100 m')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the min row_number\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "what is the last position on the chart?": "## Target type: {position}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Positions of output_of_query3\nQuery4: \"get_information(relation='Position(s)', head_entity='output_of_query3')\"",
    "how many parties were represented in the third duma?": "None",
    "which district in saint lucia has a land area listed, but has no population?": "## Target type: {district}\n## Query:\nStep1: Find the district that has information about Land area\nQuery1: \"get_information(relation='District', tail_entity='Land area (km\u00b2)')\"\nStep2: Find the district that has information about Population\nQuery2: \"get_information(relation='District', tail_entity='Population')\"\nStep3: Find the set difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "which reactor is the only one that is operational until august 2026?": "None",
    "which ritu has the most seasonal festivals?": "None",
    "what car ranked #1 from 1962-1963?": "## Target type: {car}\n## Query:\nStep1: Find the entity whose Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the car of output_of_query4\nQuery5: \"get_information(relation='Car', head_entity='output_of_query4')\"",
    "what is the number of sailor moon episodes?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in the number of goals scored in the 1999 fifa world cup and the 2000 summer olympics?": "None",
    "what is the first asian country that appears on this table?": "## Target type: {country}\n## Query:\nStep1: Find the entity that contains the relation of \"Opponent\"\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Find the first Asian country in output_of_query1\nQuery2: \"get_information(relation='Opponent', tail_entity<='first')\"\nStep3: Find the country of output_of_query2\nQuery3: \"get_information(relation='Opponent', head_entity='output_of_query2')\"",
    "the total number of games played at war memorial stadium was how many?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named War Memorial Stadium\nQuery1: \"get_information(relation='Game site', tail_entity='War Memorial Stadium')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which player is in the last position?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the number of times that miracle man has held the belt?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Miracle Man\nQuery1: \"get_information(relation='Wrestlers', tail_entity='Miracle Man')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "a-sharp and pleasure king produced what title track?": "## Target type: {title track}\n## Query:\nStep1: Find the entity named A-Sharp\nQuery1: \"get_information(relation='Producer(s)', tail_entity='A-Sharp')\"\nStep2: Find the entity named Pleasure King\nQuery2: \"get_information(relation='Producer(s)', tail_entity='Pleasure King')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the title track of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how long was the jamaica time for rank 1?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "which album was the next one to end up on the us dance list after \"new jack city?\"": "None",
    "what 1919 brazilian football team had the most points?": "## Target type: {Team}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which province has the most population on the table?": "None",
    "what is the total of conservatives": "None",
    "what tribunal had the least number of autos da fe?": "## Target type: {tribunal}\n## Query:\nStep1: Find the entity that has the relation of Number of autos da fe\nQuery1: \"get_information(relation='Number of autos da fe')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min autos da fe\nQuery3: \"get_information(relation='Number of autos da fe', tail_entity='output_of_query2')\"\nStep4: Find the tribunal of output_of_query3\nQuery4: \"get_information(relation='Tribunal', head_entity='output_of_query3')\"",
    "name each of the first place players": "None",
    "which is the only country to not receive a gold medal?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with zero Gold medals\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Get the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the only tournament that pays over $550,000?": "None",
    "what was the next game of the year after trumpet?": "## Target type: {'Game of the Year'}\n## Query:\nStep1: Find the entity named Trumpet\nQuery1: \"get_information(relation='Game of the Year', tail_entity='Trumpet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Game of the Year of output_of_query4\nQuery5: \"get_information(relation='Game of the Year', head_entity='output_of_query4')\"",
    "what is the record number of goals scored in one game by tom keetley?": "None",
    "what was this players ranking after 2005?": "None",
    "how many brands are for depression?": "None",
    "how many candidates were part of the republican party?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Candidates\nQuery1: \"get_information(relation='Candidates')\"\nStep2: Find the candidates who are part of the Republican party\nQuery2: \"get_information(relation='Candidates', key='Party', value='Republican')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many turnovers are below 5.0 billion?": "None",
    "how many points did jonas folger score?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Jonas Folger\nQuery1: \"get_information(relation='Rider', tail_entity='Jonas Folger')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "what was the difference in rank between the u.s. and canada?": "## Target type: {rank difference}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Canada\nQuery3: \"get_information(relation='Nation', tail_entity='Canada')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtraction(value1='output_of_query2', value2='output_of_query4')\"",
    "dwight scheyer was the player drafter previous to who?": "None",
    "what category does the westland lynx 800 g-l ynx fall under?": "## Target type: {category}\n## Query:\nStep1: Find the entity named Westland Lynx 800 G-L YNX\nQuery1: \"get_information(relation='Vehicle', tail_entity='Westland Lynx 800 G-L YNX')\"\nStep2: Find the category of output_of_query1\nQuery2: \"get_information(relation='Category', head_entity='output_of_query1')\"",
    "what was the first game listed as having a winning result (w)?": "None",
    "in what two years did wu tao win consecutively in first position?": "None",
    "which album came after the album that was in 194th position for a us chart?": "## Target type: {album}\n## Query:\nStep1: Find the album that was in the 194th position for a US chart\nQuery1: \"get_information(relation='Peak chart positions', tail_entity='194')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the album of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what single/ep had more than one cd but did not have jive records as its label?": "## Target type: {single/ep}\n## Query:\nStep1: Find the entity with relation Format(s) contains \"2xCD\"\nQuery1: \"get_information(relation='Format(s)', tail_entity='2xCD')\"\nStep2: Find the entity with relation Label not contains \"Jive Records\"\nQuery2: \"get_information(relation='Label', tail_entity='Jive Records')\"\nStep3: Get the difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity with relation Single/EP from output_of_query3\nQuery4: \"get_information(relation='Single/EP', head_entity='output_of_query3')\"",
    "did raymond roche win more or less rounds than fabrizio pirovano?": "None",
    "how many combined performances have the top three longest running broadway shows had?": "## Target type: {number of performances}\n## Query:\nStep1: Find the row_number of the top three longest running Broadway shows\nQuery1: \"get_information(relation='row_number', tail_entity<='3')\"\nStep2: Find the performances of output_of_query1\nQuery2: \"get_information(relation='Performances', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "which year between 1893 and 1898 was there not an order?": "None",
    "what is the number of students in 2011 that received a 1?": "None",
    "whih year did they finish hiher, 1949 or 1961?": "None",
    "what orbit pair is listed below ef": "None",
    "which province in andalusia has the highest density?": "None",
    "other than ulm, what is the name of the other imperial city listed?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Ulm\nQuery1: \"get_information(relation='Name', tail_entity='Ulm')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the number of titles ken harden has one": "None",
    "how many players are listed as df?": "## Target type: {number}\n## Query:\nStep1: Find the entity listed as DF\nQuery1: \"get_information(relation='Pos.', tail_entity='DF')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in percentage of lead shot at 25 yards between cylinder and skeet 1 barrels?": "## Target type: {'Percentage of lead shot'}\n## Query:\nStep1: Find the entity that Choke is Cylinder\nQuery1: \"get_information(relation='Choke', tail_entity='Cylinder')\"\nStep2: Find the percentage of lead shot in output_of_query1\nQuery2: \"get_information(relation='Percentage of lead shot in 30-inch circle at 40 yards', head_entity='output_of_query1')\"\nStep3: Find the entity that Choke is Skeet 1\nQuery3: \"get_information(relation='Choke', tail_entity='Skeet 1')\"\nStep4: Find the percentage of lead shot in output_of_query3\nQuery4: \"get_information(relation='Percentage of lead shot in 30-inch circle at 40 yards', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many times has habte jifar placed in a 10000 m race?": "None",
    "what is the least populated municipality in camarines sur?": "None",
    "how many non-qualifying games did he score in?": "## Target type: {number}\n## Query:\nStep1: Find the games where the Result is not \"Qualifying\"\nQuery1: \"get_information(relation='Result', tail_entity!='Qualifying')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the first single of the toadies?": "None",
    "what game won game of the year in 2014, the last year there is data available for?": "## Target type: {'Game of the Year'}\n## Query:\nStep1: Find the entity with the relation Year as \"2014\"\nQuery1: \"get_information(relation='Year', tail_entity='2014')\"\nStep2: Find the Game of the Year of output_of_query1\nQuery2: \"get_information(relation='Game of the Year', head_entity='output_of_query1')\"",
    "what is the total amount of current state regents who are bankers?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Profession as Banker\nQuery1: \"get_information(relation='Profession', tail_entity='Banker')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the first vessel sunk in may 1940?": "None",
    "who joined the 20 metre club 1 day before bo grahn?": "None",
    "which film had a higher budget, ace ventura: when nature calls, or major league: back to the minors?": "## Target type: {film}\n## Query:\nStep1: Find the entity named Ace Ventura: When Nature Calls\nQuery1: \"get_information(relation='Title', tail_entity='Ace Ventura: When Nature Calls')\"\nStep2: Find the budget of output_of_query1\nQuery2: \"get_information(relation='Budget', head_entity='output_of_query1')\"\nStep3: Find the entity named Major League: Back to the Minors\nQuery3: \"get_information(relation='Title', tail_entity='Major League: Back to the Minors')\"\nStep4: Find the budget of output_of_query3\nQuery4: \"get_information(relation='Budget', head_entity='output_of_query3')\"\nStep5: Compare the budgets of output_of_query2 and output_of_query4\nQuery5: \"compare(first_value='output_of_query2', second_value='output_of_query4')\"",
    "number of states with less than 100 seats.": "## Target type: {number of states}\n## Query:\nStep1: Find the states with less than 100 seats\nQuery1: \"get_information(relation='Total no. of seats in Assembly', tail_entity<'100')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the first presenter on this chart?": "## Target type: {presenter}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Presenter of output_of_query3\nQuery4: \"get_information(relation='Presenter', head_entity='output_of_query3')\"",
    "how many champions were from norway?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Player is Norway\nQuery1: \"get_information(relation='Player', tail_entity='Norway')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were won in 1959?": "None",
    "what is the first name listed?": "## Target type: {first name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many days was the wikimania 2011?": "None",
    "szalai scored all but one of his international goals in either euro 2012 qualifying or what other level of play?": "None",
    "name all athletes were slower than horacio nava.": "None",
    "in 1979 \"lead me on\" did not chart where?": "None",
    "in what year did bend or win his first race?": "None",
    "which nation was the only one with two top 3 finishers?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank being '1' or '2' or '3'\nQuery1: \"get_information(relation='Rank', tail_entity<='3')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the unique output_of_query2 which has a count greater than 1\nQuery3: \"find_unique(set='output_of_query2', count>1)\"",
    "how many of his tracks does nitti have a guest on?": "None",
    "how many players have a 3 dart average of more than 97?": "## Target type: {number of players}\n## Query:\nStep1: Find the players with a 3 dart average of more than 97\nQuery1: \"get_information(relation='3-dart Average', tail_entity>'97')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players have above 40 international caps?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation International caps greater than 40\nQuery1: \"get_information(relation='International caps', tail_entity>'40')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was a higher round pick for rhp, the pick from the seattle mariners, baltimore orioles, los angeles dodgers, or the houston astros?": "None",
    "what is the total of new points that have been given?": "None",
    "which two contestants have the same heights as each other?": "None",
    "how many consecutive numbers did baldwin build?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Builder, whose value is \"Baldwin\"\nQuery1: \"get_information(relation='Builder', tail_entity='Baldwin')\"\nStep2: Find the consecutive numbers of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the only award that scrubs won for outstanding supporting actor in a comedy series?": "None",
    "total number of times kyal and kara were the winning couple": "None",
    "what year had three consecutive shooting collection games?": "None",
    "how many gold medals did japan win?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity that is Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many grand prix had mclaren honda as constructor?": "## Target type: {number of Grand Prix}\n## Query:\nStep1: Find the entity named McLaren-Honda\nQuery1: \"get_information(relation='Constructor', tail_entity='McLaren-Honda')\"\nStep2: Find the Grand Prix of output_of_query1\nQuery2: \"get_information(relation='Grand Prix', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the most time it too for itoh to complete an event?": "None",
    "how many of these buildings were built after 1975": "None",
    "after young guns, what was the next movie with the exact same budget?": "None",
    "other than bobby hamilton racing, name a team that uses a dodge ram.": "None",
    "how many employers have at least 300 employees?": "## Target type: {number of employers}\n## Query:\nStep1: Find the employers with the relation of # of Employees\nQuery1: \"get_information(relation='# of Employees')\"\nStep2: Find the employers with at least 300 employees\nQuery2: \"get_information(relation='# of Employees', tail_entity>='300')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who ruled longer, ali saibou or mamadou tandja?": "## Target type: {ruler}\n## Query:\nStep1: Find the entity named Ali Saibou\nQuery1: \"get_information(relation='President', tail_entity='Ali Saibou')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named Mamadou Tandja\nQuery3: \"get_information(relation='President', tail_entity='Mamadou Tandja')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Find the difference between years of output_of_query2 and output_of_query4\nQuery5: \"difference(year1='output_of_query2', year2='output_of_query4')\"",
    "how many ships sunk?": "None",
    "how many times has rowell been nominated for a daytime emmy?": "None",
    "which company had the highest 2009 arms sales?": "None",
    "which original work from gaetano donizetti did liszt adapt after adapting opera lucrezia borgia?": "None",
    "what is the only model of these aircraft to originate in canada?": "## Target type: {model}\n## Query:\nStep1: Find the entity that Origin is Canada\nQuery1: \"get_information(relation='Origin', tail_entity='Canada')\"\nStep2: Find the model of output_of_query1\nQuery2: \"get_information(relation='Model', head_entity='output_of_query1')\"\nStep3: Find the models of all the entities\nQuery3: \"get_information(relation='Model')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"",
    "what is the total number of tournaments in the year 2006?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films in 2004 and 2005 featured the name shoko goto in the title?": "None",
    "what team did the badgers play after ohio state?": "None",
    "which circuit has the least amount of screens?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Screens\nQuery1: \"get_information(relation='Screens')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Screens\nQuery3: \"get_information(relation='Screens', tail_entity='output_of_query2')\"\nStep4: Find the circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "which canadian city had the most passengers traveling from manzanillo international airport in 2013?": "None",
    "which solid base single peaked highest on the finnish singles chart?": "None",
    "tell me the date of the last event held in greensboro, north carolina.": "## Target type: {date}\n## Query:\nStep1: Find the entity that Location is Greensboro, North Carolina\nQuery1: \"get_information(relation='Location', tail_entity='Greensboro, North Carolina')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many of the streams and drains listed are on the right bank of aliso creek?": "None",
    "how many members identified with the liberal party?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Party is Liberal\nQuery1: \"get_information(relation='Party', tail_entity='Liberal')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the next representative to be elected after carl albert?": "## Target type: {Representative}\n## Query:\nStep1: Find the entity named Carl Albert\nQuery1: \"get_information(relation='Name', tail_entity='Carl Albert')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query1\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Representative of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many total wins did the team have in 1949?": "None",
    "which is the only forces in the chart": "## Target type: {'Forces'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: If output_of_query2 is equal to 1, proceed to step4; otherwise, return no result.\nStep4: Find the entity with the relation of Forces\nQuery4: \"get_information(relation='Forces')\"\n",
    "does grand junction or montrose have more stations?": "## Target type: {'city'}\n## Query:\nStep1: Find the entity named Grand Junction\nQuery1: \"get_information(relation='City of License', tail_entity='Grand Junction')\"\nStep2: Find the stations in output_of_query1\nQuery2: \"get_information(relation='Call Sign', head_entity='output_of_query1')\"\nStep3: Find the entity named Montrose\nQuery3: \"get_information(relation='City of License', tail_entity='Montrose')\"\nStep4: Find the stations in output_of_query3\nQuery4: \"get_information(relation='Call Sign', head_entity='output_of_query3')\"\nStep5: Compare the count of output_of_query2 with output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many riders scored at least 10 final points?": "None",
    "how many gold medals did the ivory coast and namibia win combined?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Ivory Coast\nQuery1: \"get_information(relation='Nation', tail_entity='Ivory Coast')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Namibia\nQuery3: \"get_information(relation='Nation', tail_entity='Namibia')\"\nStep4: Find the gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query2 and output_of_query4\nQuery5: \"sum(set='output_of_query2', set='output_of_query4')\"",
    "are there more contestants from california or new york on cha$e?": "## Target type: {'From'}\n## Query:\nStep1: Find the contestants from California\nQuery1: \"get_information(relation='From', tail_entity='California')\"\nStep2: Find the contestants from New York\nQuery2: \"get_information(relation='From', tail_entity='New York')\"\nStep3: Compare the count of output_of_query1 and output_of_query2\nQuery3: \"if count(set='output_of_query1') > count(set='output_of_query2') then 'California' else 'New York'\"",
    "what is the difference between the number of cyclists who have won sportsman of the year and the number of billiards players who have won?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Sport as Cyclist\nQuery1: \"get_information(relation='Sport', tail_entity='Cyclist')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Sport as Billiards player\nQuery3: \"get_information(relation='Sport', tail_entity='Billiards player')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculation(operation='difference', operand1='output_of_query2', operand2='output_of_query4')\"",
    "name a bridge whose length is above 1000 feet.": "None",
    "what is the number of games that started after 7:00 p.m.?": "None",
    "what is the number rank of belgium?": "## Target type: {'Rank'}\n## Query:\nStep1: Find the entity named Belgium\nQuery1: \"get_information(relation='Team', tail_entity='Belgium')\"\nStep2: Find the Rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"",
    "how many fourth place finishes did they have?": "None",
    "how many times was the competition friendly?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Competition of friendly\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many metres is the mississippi aerial river transit from bottom to top?": "## Target type: {height}\n## Query:\nStep1: Find the entity named Mississippi Aerial River Transit\nQuery1: \"get_information(relation='Name', tail_entity='Mississippi Aerial River Transit')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"",
    "who is the only wrestler with 5 number of reigns?": "## Target type: {'Wrestler'}\n## Query:\nStep1: Find the entity with the relation of Number of reigns as 5\nQuery1: \"get_information(relation='No. of reigns', tail_entity='5')\"\nStep2: Find the Wrestler of output_of_query1\nQuery2: \"get_information(relation='Wrestler', head_entity='output_of_query1')\"",
    "number of teams above 9 medals": "## Target type: {number}\n## Query:\nStep1: Find the entity whose total medals is larger than 9\nQuery1: \"get_information(relation='Total', tail_entity>'9')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which bank officer came after michel deuzet?": "## Target type: {bank officer}\n## Query:\nStep1: Find the entity named Michel Deuzet\nQuery1: \"get_information(relation='Name', tail_entity='Michel Deuzet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who had more silvers? colmbia or the bahamas": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Colombia\nQuery1: \"get_information(relation='Nation', tail_entity='Colombia')\"\nStep2: Find the silvers of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named The Bahamas\nQuery3: \"get_information(relation='Nation', tail_entity='The Bahamas')\"\nStep4: Find the silvers of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Compare silvers of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"\nStep6: If output_of_query5 is 'set1', return output_of_query1; Otherwise, return output_of_query3.",
    "how much time difference was there between france and the united states": "None",
    "who was head coach of the team after archie stalcup?": "None",
    "how many associate justices are there currently?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Rank as Associate Justice\nQuery1: \"get_information(relation='Rank', tail_entity='Associate Justice')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had more drivers, team avanti or motaworld racing?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Team Avanti\nQuery1: \"get_information(relation='Team', tail_entity='Avanti')\"\nStep2: Find the drivers of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"\nStep3: Find the entity named Motaworld Racing\nQuery3: \"get_information(relation='Team', tail_entity='Motaworld Racing')\"\nStep4: Find the drivers of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"\nStep5: Find the count of output_of_query2\nQuery5: \"count(set='output_of_query2')\"\nStep6: Find the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Check if output_of_query5 is larger than output_of_query6\nQuery7: \"output_of_query5 > output_of_query6\"",
    "what was the last year of harald v of norway's reign?": "None",
    "what is the total number of class c (championship) teams?": "None",
    "did the cd single come out before the digital ep?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity with the relation of Format is \"CD single\"\nQuery1: \"get_information(relation='Format', tail_entity='CD single')\"\nStep2: Find the entity with the relation of Format is \"Digital EP\"\nQuery2: \"get_information(relation='Format', tail_entity='Digital EP')\"\nStep3: Check if output_of_query1 is before output_of_query2\nQuery3: \"compare_positions(position1='output_of_query1', position2='output_of_query2')\"",
    "who had her best score in cycling?": "None",
    "who had more semifinalists, brazil or poland?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Country/Territory', tail_entity='Brazil')\"\nStep2: Find the entity named Poland\nQuery2: \"get_information(relation='Country/Territory', tail_entity='Poland')\"\nStep3: Find the Semifinalists of output_of_query1\nQuery3: \"get_information(relation='Semifinalists', head_entity='output_of_query1')\"\nStep4: Find the Semifinalists of output_of_query2\nQuery4: \"get_information(relation='Semifinalists', head_entity='output_of_query2')\"\nStep5: Find the Total of output_of_query3\nQuery5: \"get_information(relation='Total', tail_entity='output_of_query3')\"\nStep6: Find the Total of output_of_query4\nQuery6: \"get_information(relation='Total', tail_entity='output_of_query4')\"\nStep7: Compare output_of_query5 and output_of_query6\nQuery7: \"compare(output_of_query5, output_of_query6)\"",
    "what's the number of people who attended the chelsea game in 29 august 1987?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of Date as \"29 August 1987\"\nQuery1: \"get_information(relation='Date', tail_entity='29 August 1987')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what was the last single kitty wells released?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which surname is listed above the duke of albuquerque?": "## Target type: {surname}\n## Query:\nStep1: Find the entity named Duke of Albuquerque\nQuery1: \"get_information(relation='Title', tail_entity='Duke of Albuquerque')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Surname of output_of_query4\nQuery5: \"get_information(relation='Surname', head_entity='output_of_query4')\"",
    "who was the only player from kansas state?": "## Target type: {player}\n## Query:\nStep1: Find the entity that College is Kansas State\nQuery1: \"get_information(relation='College', tail_entity='Kansas State')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which season(s) earned first place?": "## Target type: {season}\n## Query:\nStep1: Find the entity in Place that is \"1st\"\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "what is the works number of the only item built in 1882?": "## Target type: {works number}\n## Query:\nStep1: Find the entity that was built in 1882\nQuery1: \"get_information(relation='Year Built', tail_entity='1882')\"\nStep2: Find the works number of output_of_query1\nQuery2: \"get_information(relation='Works Number', head_entity='output_of_query1')\"",
    "name the consecutive women's winners of the budapest half marathon.": "None",
    "does any race have no score listed?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Check if output_of_query1 is empty or not\nQuery2: \"empty(set='output_of_query1')\"",
    "what was the first album released?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "which game is the only one where it went into overtime?": "None",
    "which nation ranked in first with the most amount of total medals?": "None",
    "which model had the highest starting price": "## Target type: {'Model'}\n## Query:\nStep1: Find the entity with the relation of Starting Price\nQuery1: \"get_information(relation='Starting Price')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Starting Price\nQuery3: \"get_information(relation='Starting Price', tail_entity='output_of_query2')\"\nStep4: Find the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "how many teams had less than five qualifying positions?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entities with the relation Qual. Pos. less than 5\nQuery1: \"get_information(relation='Qual. Pos.', tail_entity<'5')\"\nStep2: Get the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what are the number of athletes?": "## Target type: {number}\n## Query:\nStep1: Find all the Athletes\nQuery1: \"get_information(relation='Athlete')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had the earliest reign?": "None",
    "which team was the first to have five winners?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has five winners\nQuery1: \"get_information(relation='Winners', tail_entity='5')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "who is the only person to have more than 4 assists?": "## Target type: {person}\n## Query:\nStep1: Find the entity that has more than 4 assists\nQuery1: \"get_information(relation='Total', tail_entity>'4')\"\nStep2: Find the person of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "did blox win in 2009 or 2010?": "None",
    "which toadies' song ranked highest in the us main chart in 1995?": "None",
    "is solon borland a representative?": "## Target type: {'Yes' or 'No'}\n## Query:\nStep1: Find the entity named Solon Borland\nQuery1: \"get_information(relation='Representative', tail_entity='Solon Borland')\"\nStep2: Check if output_of_query1 exists\nQuery2: \"exists(output_of_query1)\"",
    "how many times was jim mcmanus jim osborne's partner?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Jim McManus\nQuery1: \"get_information(relation='Partner', tail_entity='Jim McManus')\"\nStep2: Find the entity named Jim Osborne\nQuery2: \"get_information(relation='Partner', tail_entity='Jim Osborne')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which stadium had their highest attendance?": "None",
    "how long has she been making films?": "None",
    "how many stations broadcast with a power of 5kw?": "## Target type: {number}\n## Query:\nStep1: Find the stations with the power of 5kW\nQuery1: \"get_information(relation='Power (kW)', tail_entity='5 kW')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what race came after the slick 50 200?": "## Target type: {'Race Name'}\n## Query:\nStep1: Find the entity named Slick 50 200\nQuery1: \"get_information(relation='Race Name', tail_entity='Slick 50 200')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Race Name of output_of_query4\nQuery5: \"get_information(relation='Race Name', head_entity='output_of_query4')\"",
    "how many players are from cork?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Cork\nQuery1: \"get_information(relation='County', tail_entity='Cork')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many medals did venezuela win in this competition?": "## Target type: {total number of medals}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many rounds were there?": "None",
    "at most 26 apps, how many goals were scored in 2004-2005": "## Target type: {number}\n## Query:\nStep1: Find the season that is 2004-2005\nQuery1: \"get_information(relation='Season', tail_entity='2004-2005')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"",
    "what is the name of the only brand which targets the osteomuscular therapeutic area?": "None",
    "how many movies did madhurima take part in total?": "None",
    "how many points have the away teams scored all together?": "None",
    "what is the previous subject after on the effects of the jubilee?": "## Target type: {subject}\n## Query:\nStep1: Find the entity with the relation of Subject \"On the effects of the jubilee\"\nQuery1: \"get_information(relation='Subject', tail_entity='On the effects of the jubilee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Subject of output_of_query4\nQuery5: \"get_information(relation='Subject', head_entity='output_of_query4')\"",
    "what was the number of loses while fred jordan was coaching?": "## Target type: {number of losses}\n## Query:\nStep1: Find the entity named Fred Jordan\nQuery1: \"get_information(relation='Coach', tail_entity='Fred Jordan')\"\nStep2: Find the number of losses of output_of_query1\nQuery2: \"get_information(relation='Losses', head_entity='output_of_query1')\"",
    "which diver is listed before ninel krutova?": "## Target type: {'Diver'}\n## Query:\nStep1: Find the entity named Ninel Krutova\nQuery1: \"get_information(relation='Diver', tail_entity='Ninel Krutova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Diver of output_of_query4\nQuery5: \"get_information(relation='Diver', head_entity='output_of_query4')\"",
    "what is the total number of years that the courthouse at 140 lameuse street in biloxi was used?": "None",
    "where did they play after the april 5, 2005 game in reading?": "None",
    "which quarry was the last to open?": "None",
    "which programming is played the most?": "## Target type: {programming}\n## Query:\nStep1: Find the entity with the relation of Programming\nQuery1: \"get_information(relation='Programming')\"\nStep2: Find the programming that appears the most\nQuery2: \"get_information(relation='Programming', tail_entity>='most')\"\nStep3: Get the programming of output_of_query2\nQuery3: \"get_information(relation='Programming', head_entity='output_of_query2')\"",
    "jimmy johnson won how many consecutive espy awards?": "None",
    "which results were listed the most under the playoffs column?": "## Target type: {result}\n## Query:\nStep1: Find the entity in the playoffs column that appears the most\nQuery1: \"get_information(relation='Playoffs', tail_entity>='most')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Playoffs', head_entity='output_of_query1')\"",
    "which polling firm was the only poll done in 2008?": "## Target type: {polling firm}\n## Query:\nStep1: Find the entity that Month is 2008\nQuery1: \"get_information(relation='Month', tail_entity='2008')\"\nStep2: Find the polling firm of output_of_query1\nQuery2: \"get_information(relation='Polling Firm', head_entity='output_of_query1')\"",
    "what is the total of years on this chart": "None",
    "how many establishments are restored for tourism?": "None",
    "which group was the only group to get 101 &111?": "None",
    "which abbey is cistercian order, bath abbey or basingwerk abbey?": "## Target type: {abbey}\n## Query:\nStep1: Find the abbey named Bath Abbey\nQuery1: \"get_information(relation='Name', tail_entity='Bath Abbey')\"\nStep2: Find the Order of output_of_query1\nQuery2: \"get_information(relation='Order', head_entity='output_of_query1')\"\nStep3: Find the abbey named Basingwerk Abbey\nQuery3: \"get_information(relation='Name', tail_entity='Basingwerk Abbey')\"\nStep4: Find the Order of output_of_query3\nQuery4: \"get_information(relation='Order', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 and output_of_query4 both have the value 'Cistercian Order'\nQuery5: \"if(output_of_query2 == 'Cistercian Order' and output_of_query4 == 'Cistercian Order', 'Yes', 'No')\"",
    "did matt win more stars overall than myleene?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Matt\nQuery1: \"get_information(relation='Celebrity/ies Taking Part', tail_entity='Matt')\"\nStep2: Find the Winner/Number of Stars of output_of_query1\nQuery2: \"get_information(relation='Winner/Number of Stars', tail_entity='output_of_query1')\"\nStep3: Find the entity named Myleene\nQuery3: \"get_information(relation='Celebrity/ies Taking Part', tail_entity='Myleene')\"\nStep4: Find the Winner/Number of Stars of output_of_query3\nQuery4: \"get_information(relation='Winner/Number of Stars', tail_entity='output_of_query3')\"\nStep5: Calculate if the number of stars of output_of_query2 is greater than output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "how many #1 hits did kitty well have?": "None",
    "what was the last year chasetown won?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Chasetown\nQuery1: \"get_information(relation='Winners', tail_entity='Chasetown')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "what is the total height of trees from california?": "None",
    "which of these bridges was the first one built?": "None",
    "how many teams from the sec did charleston southern play from 2002-2013?": "None",
    "what artist has more music appear in the show, daft punk or franz ferdinand?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Daft Punk\nQuery1: \"get_information(relation='Artist', tail_entity='Daft Punk')\"\nStep2: Count the number of appearances of output_of_query1 in the show\nQuery2: \"count(set='output_of_query1', relation='Episode(s)')\"\nStep3: Find the entity named Franz Ferdinand\nQuery3: \"get_information(relation='Artist', tail_entity='Franz Ferdinand')\"\nStep4: Count the number of appearances of output_of_query3 in the show\nQuery4: \"count(set='output_of_query3', relation='Episode(s)')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4 then output_of_query1 else output_of_query3\"",
    "bentley vs the blue train is below \"blank\" in the diagram?": "None",
    "which is the only team that had more than 21 losses?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Losses more than 21\nQuery1: \"get_information(relation='Losses', tail_entity>'21')\"\nStep2: Find the only team in output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "which province in the dominican republic has the smallest area (in square kilometers)?": "## Target type: {province}\n## Query:\nStep1: Find the entity with the relation of Area (km\u00b2)\nQuery1: \"get_information(relation='Area (km\u00b2)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Area\nQuery3: \"get_information(relation='Area (km\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the province of output_of_query3\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "what team did he play for the least amount of years?": "None",
    "what was the total number of gold awards won between spain and egypt?": "## Target type: {total number of gold awards}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep2: Find the entity named Egypt\nQuery2: \"get_information(relation='Nation', tail_entity='Egypt')\"\nStep3: Find the total gold awards of output_of_query1\nQuery3: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep4: Find the total gold awards of output_of_query2\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query2')\"\nStep5: Find the union of output_of_query3 and output_of_query4\nQuery5: \"set_union(set1='output_of_query3', set2='output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"",
    "how many bishops does greece have?": "## Target type: {number of bishops}\n## Query:\nStep1: Find the entity named Greece\nQuery1: \"get_information(relation='Jurisdiction', tail_entity='Greece')\"\nStep2: Find the number of bishops of output_of_query1\nQuery2: \"get_information(relation='Bishops', head_entity='output_of_query1')\"",
    "how long was the longest time between alec su being in a film?": "None",
    "what was the last award ceremony on the film/show sarabhai vs sarabhi?": "None",
    "what country has more aircraft listed than any other?": "None",
    "what is the total in attendance for september 17th?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Date is September 17, 2005\nQuery1: \"get_information(relation='Date', tail_entity='September 17, 2005')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "which communes have a population above 30,000?": "## Target type: {communes}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Find the entity with population above 30,000\nQuery2: \"get_information(relation='Population', tail_entity>'30000')\"\nStep3: Find the commune of output_of_query2\nQuery3: \"get_information(relation='City', head_entity='output_of_query2')\"",
    "how many club presidents held their position in the 19th century?": "None",
    "karolina sprem beat laurence andretto in 2002 but what other french player did she beat in 2003?": "## Target type: {French player}\n## Query:\nStep1: Find the entity named Karolina Sprem\nQuery1: \"get_information(relation='Opponent in the final', tail_entity='Karolina Sprem')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Laurence Andretto\nQuery3: \"get_information(relation='Opponent in the final', tail_entity='Laurence Andretto')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the next_row of output_of_query4\nQuery5: \"next_row(set='output_of_query4')\"\nStep6: Find the entity with the row_number of output_of_query5\nQuery6: \"get_information(relation='row_number', tail_entity='output_of_query5')\"\nStep7: Find the Opponent in the final of output_of_query6\nQuery7: \"get_information(relation='Opponent in the final', head_entity='output_of_query6')\"",
    "which country had the least amount of tourism income in 2003?": "None",
    "only one work of public art in ward 6 contains acrylic urethane. which is it?": "## Target type: {work of public art}\n## Query:\nStep1: Find the entity that contains the Material of \"acrylic urethane\"\nQuery1: \"get_information(relation='Material', tail_entity='acrylic urethane')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number that matches output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Work of public art of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many different names are there?": "None",
    "what year had the least thermal grid capacity?": "None",
    "only nation to earn exactly five total medals": "## Target type: {nation}\n## Query:\nStep1: Find the entity with Total medals equal to 5\nQuery1: \"get_information(relation='Total', tail_entity='5')\"\nStep2: Find the entity with the relation of Nation\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the height difference between contestant reyna royo and michelle krisko sugasti?": "## Target type: {height difference}\n## Query:\nStep1: Find the entity named Reyna Royo\nQuery1: \"get_information(relation='Contestant', tail_entity='Reyna Royo')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the entity named Michelle Krisko Sugasti\nQuery3: \"get_information(relation='Contestant', tail_entity='Michelle Krisko Sugasti')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtract(value1='output_of_query2', value2='output_of_query4'))\"",
    "which chapter was founded first, zeta eta or zeta omega?": "None",
    "what is the total number of stations with frequencies above 100 mhz?": "## Target type: {number}\n## Query:\nStep1: Find the entities with frequency above 100 MHz\nQuery1: \"get_information(relation='Frequency', tail_entity>'100 MHz')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many more seasons was prokom trefl sopot either champion or runner-up than zepter slask wroclaw?": "None",
    "name the countries that had at least 5 gold medals": "None",
    "which site was listed earlier, the state public school or the edwin r. clarke library?": "## Target type: {site}\n## Query:\nStep1: Find the entity named State Public School\nQuery1: \"get_information(relation='Name', tail_entity='State Public School')\"\nStep2: Find the listing date of output_of_query1\nQuery2: \"get_information(relation='Listing date', head_entity='output_of_query1')\"\nStep3: Find the entity named Edwin R. Clarke Library\nQuery3: \"get_information(relation='Name', tail_entity='Edwin R. Clarke Library')\"\nStep4: Find the listing date of output_of_query3\nQuery4: \"get_information(relation='Listing date', head_entity='output_of_query3')\"\nStep5: Compare the listing dates to determine which one was listed earlier\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4')\"",
    "where was the last game of the season held?": "## Target type: {venue}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "how many teams are named after birds?": "None",
    "how long between the operations first commenced and the last airline to commence operations?": "None",
    "the 1984 paralympics had a total ranking of 5th, in what other year did the ranking fall above 6th?": "None",
    "how any proteins have podospora anserina as a natural host?": "## Target type: {number of proteins}\n## Query:\nStep1: Find the entity with the relation of Natural Host being \"Podospora anserina\"\nQuery1: \"get_information(relation='Natural Host', tail_entity='Podospora anserina')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many cyclists finished in under 44 seconds?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result less than 44 seconds\nQuery1: \"get_information(relation='Result', tail_entity<'44')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who spend the most amount of time in office?": "None",
    "what is the lowest position earned during this team's history?": "None",
    "when was gran chochisse first match that had a full date on record?": "None",
    "braga had the same aggregated score as what other team in the round of 16?": "None",
    "is gye listed above or below biryu?": "None",
    "what is the total number of awards that nujoma won?": "None",
    "what was the only competition kazakhstan had a position of 1st?": "## Target type: {Competition}\n## Query:\nStep1: Find the entity that has a Position of 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the Competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "how many teams for the 2010 chinese super league had an average of over 15,000 audience members attend?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that is Chinese Super League 2010\nQuery1: \"get_information(relation='Chinese Super League', tail_entity='2010')\"\nStep2: Find the teams of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"\nStep3: Get the attendance of output_of_query2\nQuery3: \"get_information(relation='Average attendance', head_entity='output_of_query2')\"\nStep4: Find the entity whose attendance is larger than 15,000\nQuery4: \"get_information(relation='Average attendance', tail_entity>'15000')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the greatest amount of consecutive years that the lions did not qualify for playoffs?": "None",
    "which locomotive had the least amount of power?": "## Target type: {locomotive}\n## Query:\nStep1: Find all the power of locomotives\nQuery1: \"get_information(relation='power')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the locomotive with the min power\nQuery3: \"get_information(relation='power', tail_entity='output_of_query2')\"\nStep4: Find the locomotive name of output_of_query3\nQuery4: \"get_information(relation='name', head_entity='output_of_query3')\"",
    "who was the fastest swimmer?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many different codes were used from 1953 to 1958?": "None",
    "what is the average opening weekend gross between iron man 3 and the dark knight?": "## Target type: {average opening weekend gross}\n## Query:\nStep1: Find the film named Iron Man 3\nQuery1: \"get_information(relation='Film', tail_entity='Iron Man 3')\"\nStep2: Find the opening weekend gross of output_of_query1\nQuery2: \"get_information(relation='Opening Weekend (three day)', head_entity='output_of_query1')\"\nStep3: Find the film named The Dark Knight\nQuery3: \"get_information(relation='Film', tail_entity='The Dark Knight')\"\nStep4: Find the opening weekend gross of output_of_query3\nQuery4: \"get_information(relation='Opening Weekend (three day)', head_entity='output_of_query3')\"\nStep5: Calculate the average opening weekend gross of output_of_query2 and output_of_query4\nQuery5: \"average(set1='output_of_query2', set2='output_of_query4')\"",
    "which show ran the longest?": "None",
    "in how many years were there no liberal councillors?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Liberal councillors equal to 0\nQuery1: \"get_information(relation='Liberal councillors', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the visitor with the least score": "None",
    "which athlete had a race time above 1:00?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity that has a race time above 1:00\nQuery1: \"get_information(relation='Race 1', tail_entity>'1:00') or get_information(relation='Race 2', tail_entity>'1:00')\"\nStep2: Find the athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "venezuela did not place before what year?": "None",
    "who was the first republican representative?": "None",
    "how many months in the year had their average high f(c) degrees in the range of 80s?": "None",
    "which candidate of the citizens committee has the most votes?": "None",
    "which devanagaria means the same as this iast letter: o?": "## Target type: {Devanagari}\n## Query:\nStep1: Find the entity that IAST is 'o'\nQuery1: \"get_information(relation='IAST', tail_entity='o')\"\nStep2: Find the Devanagari of output_of_query1\nQuery2: \"get_information(relation='Devanagari', head_entity='output_of_query1')\"",
    "who was the first member to be elected?": "## Target type: {member}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the member of output_of_query3\nQuery4: \"get_information(relation='Member', head_entity='output_of_query3')\"",
    "what was the total medal count?": "None",
    "which canton falls under the date of law of 24 february 1843 and has a population of 3,966?": "## Target type: {canton}\n## Query:\nStep1: Find the entity with the relation of Date of law on 24 February 1843\nQuery1: \"get_information(relation='Date of law', tail_entity='24 February 1843')\"\nStep2: Find the entity with the relation of Population of 3966\nQuery2: \"get_information(relation='Population (As of 2005)', tail_entity='3,966')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the canton of output_of_query3\nQuery4: \"get_information(relation='Canton', head_entity='output_of_query3')\"",
    "did 1979 or 1985 have the larger finish place?": "## Target type: {\"Year\"}\n## Query:\nStep1: Find the entity with the relation of \"Year\" that is 1979\nQuery1: \"get_information(relation='Year', tail_entity='1979')\"\nStep2: Find the finish place of output_of_query1\nQuery2: \"get_information(relation='Finish', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of \"Year\" that is 1985\nQuery3: \"get_information(relation='Year', tail_entity='1985')\"\nStep4: Find the finish place of output_of_query3\nQuery4: \"get_information(relation='Finish', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to get the larger finish place\nQuery5: \"if_output_of_query2 > output_of_query4: output_of_query2 else: output_of_query4\"",
    "what is the name of the first club listed on this chart?": "## Target type: {'Club'}\n## Query:\nStep1: Find the row_number of 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the entity with the relation of Club and head_entity of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "what was the last year that animefest had a known figure of attendance?": "None",
    "what is the total number of suture materials that have a mono-filament structure?": "None",
    "how many commissioners have there been?": "None",
    "what was the last \"free choice\" song babou performed on x factor?": "None",
    "how many times did she appear on bbc one?": "## Target type: {number of appearances}\n## Query:\nStep1: Find the entity in Channel that is BBC One\nQuery1: \"get_information(relation='Channel', tail_entity='BBC One')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity in Row number that matches output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which township has the same land area as center?": "None",
    "which elected successor took office the earliest?": "None",
    "in the 2002 pan pacific swimming championships women's 100 metre backstroke, which nation placed the most swimmers in the top eight?": "None",
    "including each municipality how many km total are there?": "## Target type: {number of km}\n## Query:\nStep1: Find all the km values\nQuery1: \"get_information(relation='km')\"\nStep2: Calculate the sum of output_of_query1\nQuery2: \"sum(set='output_of_query1')\"",
    "what rank was boise state after november 10th?": "None",
    "each of the species average 65 feet": "None",
    "which is the tallest building?": "## Target type: {building}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the building of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what two models are only from the philippines?": "## Target type: {model}\n## Query:\nStep1: Find the entity where Origin is Philippines\nQuery1: \"get_information(relation='Origin', tail_entity='Philippines')\"\nStep2: Get the models of output_of_query1\nQuery2: \"get_information(relation='Model', head_entity='output_of_query1')\"\nStep3: Find the entity where Origin is not Philippines\nQuery3: \"get_information(relation='Origin', head_entity='output_of_query1')\"\nStep4: Get the models of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"\nStep5: Get the set difference of output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "how long was the match in which kaz was eliminated by robert roode?": "None",
    "how many shows won drama desk awards?": "None",
    "how many months did operation maritime monitor last?": "## Target type: {number of months}\n## Query:\nStep1: Find the operation named Operation Maritime Monitor\nQuery1: \"get_information(relation='Operation', tail_entity='Operation Maritime Monitor')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep3: Calculate the number of months for output_of_query2\nQuery3: \"months(set='output_of_query2')\"",
    "did porter grant coach more years than danny doyle?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Porter Grant\nQuery1: \"get_information(relation='Coach', tail_entity='Porter Grant')\"\nStep2: Find the Years of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"\nStep3: Find the entity named Danny Doyle\nQuery3: \"get_information(relation='Coach', tail_entity='Danny Doyle')\"\nStep4: Find the Years of output_of_query3\nQuery4: \"get_information(relation='Years', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 > output_of_query4\nQuery5: \"set_greater_than(set1='output_of_query2', set2='output_of_query4')\"",
    "how many races were won by mark skaife?": "None",
    "eiffel 65 had a top 100 hit of the 1990s, \"blue (da ba dee)\", as well as one other 1990s top 100 hit single. what was that other hit single?": "None",
    "which is the only stadium on the list that is in kazakhstan?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity where the Country is Kazakhstan\nQuery1: \"get_information(relation='Country', tail_entity='Kazakhstan')\"\nStep2: Find the stadium of output_of_query1\nQuery2: \"get_information(relation='Stadium', head_entity='output_of_query1')\"",
    "kaillie humphries was listed for an event on february 23, 2010, what was her time?": "None",
    "list each of the schools that came in 2nd for cws best finish.": "None",
    "how many swimmers were from the us?": "## Target type: {number of swimmers}\n## Query:\nStep1: Find the entity named US\nQuery1: \"get_information(relation='Nationality', tail_entity='US')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total riders rode a yamaha bike?": "## Target type: {number}\n## Query:\nStep1: Find all the Manufacturer whose value is 'Yamaha'\nQuery1: \"get_information(relation='Manufacturer', value='Yamaha')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "other than sadie what models start with an s?": "None",
    "which boston red sox player got the most career home runs?": "None",
    "how long was daniel pfister behind first place/": "## Target type: {time}\n## Query:\nStep1: Find the entity named Daniel Pfister\nQuery1: \"get_information(relation='Athlete', tail_entity='Daniel Pfister')\"\nStep2: Find the Behind of output_of_query1\nQuery2: \"get_information(relation='Behind', head_entity='output_of_query1')\"",
    "which player with the most saves": "None",
    "how long has the highlander been lying in heswall boat yard according to the table?": "None",
    "the round after round 3": "## Target type: {round}\n## Query:\nStep1: Find the entity that Round is 3\nQuery1: \"get_information(relation='Round', tail_entity='3')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the round of output_of_query3\nQuery4: \"get_information(relation='Round', tail_entity='output_of_query3')\"",
    "how many voronezh radars were built before 2010?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Type as Voronezh-VP\nQuery1: \"get_information(relation='Type', tail_entity='Voronezh-VP')\"\nStep2: Find the built year of output_of_query1\nQuery2: \"get_information(relation='Built', head_entity='output_of_query1')\"\nStep3: Find the entities with the built year before 2010\nQuery3: \"get_information(relation='Built', tail_entity<'2010')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many single-only releases did the triffids release?": "None",
    "who is the operator of the first terminal listed on this chart?": "## Target type: {'Operator'}\n## Query:\nStep1: Find the entity with the relation of Terminal\nQuery1: \"get_information(relation='Terminal')\"\nStep2: Find the first output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity='1')\"\nStep3: Find the Operator of output_of_query2\nQuery3: \"get_information(relation='Operator', head_entity='output_of_query2')\"",
    "how many games went to overtime?": "None",
    "what is the only film for which seth was director and screenwriter?": "None",
    "how long has it been since chermaine sheh first appeared on a variety show?": "None",
    "which manufacturer has the most games on the list?": "None",
    "how many times was charlie lubega a driver?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Charlie Lubega\nQuery1: \"get_information(relation='Driver', tail_entity='Charlie Lubega')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive wins did ucla have starting in 2005?": "None",
    "what is the total number of locations in the city of algonac?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Algonac\nQuery1: \"get_information(relation='City', tail_entity='Algonac')\"\nStep2: Find the locations in output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many stages were round robins?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the total count of row_number\nQuery2: \"count(set='output_of_query1')\" \nStep3: Find the entity with the relation of Stage is \"Round Robin\"\nQuery3: \"get_information(relation='Stage', tail_entity='Round Robin')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which team did this team face against next after beating minnesota on january 29 of this season?": "None",
    "how many nationalities are there after rank 5?": "None",
    "if you lined the contestants up by height with shortest first and tallest last, which contestant would be next after carolina ayala cromen?": "None",
    "the know-nothing party had a total number of how many people in office?": "None",
    "how many players come from alabama?": "None",
    "which rider earned first position with 25 points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity whose Points is 25\nQuery1: \"get_information(relation='Points', tail_entity='25')\"\nStep2: Find the rider with the Points output_of_query1\nQuery2: \"get_information(relation='Rider', head_entity='output_of_query1')\"",
    "number of mocho cota matches held in mexico city in 1983 or 1984": "None",
    "what was the position number of gail devers?": "## Target type: {position number}\n## Query:\nStep1: Find the entity named Gail Devers\nQuery1: \"get_information(relation='Athlete', tail_entity='Gail Devers')\"\nStep2: Find the position number of output_of_query1\nQuery2: \"get_information(relation='Pos.', head_entity='output_of_query1')\"",
    "how many games did the wildcats play in daytona beach, fl?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Site is \"Moore Gymnasium \u2022 Daytona Beach, FL\"\nQuery1: \"get_information(relation='Site', tail_entity='Moore Gymnasium \u2022 Daytona Beach, FL')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many matches ended in an aggregate tie record?": "None",
    "all of firehouse's singles made it onto the uk singles list, except for?": "None",
    "how many games were not played at madison square garden?": "None",
    "who was the top pick of the 1989 major league baseball draft?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity in Pick that is '1'\nQuery1: \"get_information(relation='Pick', tail_entity='1')\"\nStep2: Find the Player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "how many movies was she in after the film \"rent-a-cop\"?": "None",
    "what is the total number of points earned in the years 2009?": "None",
    "how many singles from \"dosage\" appeared on the modern rock tracks charts?": "None",
    "how many times did missouri win after 2000?": "None",
    "which hispanic population had the greatest growth from 2000 to 2005?": "None",
    "in what year did the bulldogs make their 19th appearance?": "None",
    "in what year did dibley not win a double final?": "None",
    "at least what number of people have the title minister": "None",
    "how many seeds above villanova is marquette?": "None",
    "how many times did brazil score during the game on november 6th?": "None",
    "how many provinces have pashto as one of their languages": "None",
    "how many titles are listed for august?": "None",
    "what was the first single to earn a chart position?": "None",
    "which morgan creek film grossed the most money prior to 1994?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Gross (worldwide)\nQuery1: \"get_information(relation='Gross (worldwide)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gross (worldwide)\nQuery3: \"get_information(relation='Gross (worldwide)', tail_entity='output_of_query2')\"\nStep4: Find the entity that has the relation of Year and value is less than 1994\nQuery4: \"get_information(relation='Year', tail_entity<'1994')\"\nStep5: Find the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"",
    "what is the first score listed?": "None",
    "which locomotive did not have any info after it entered into service?": "None",
    "what is the number of sts number in total?": "None",
    "which collection made the top of the list?": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "besides vardashen, what other correctional facility was designed for less than 200 prisoners?": "## Target type: {correctional facility}\n## Query:\nStep1: Find the entity named Vardashen\nQuery1: \"get_information(relation='Name', tail_entity='Vardashen')\"\nStep2: Find the # of prisoners designed for output_of_query1\nQuery2: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query1')\"\nStep3: Find the entities with # of prisoners designed for less than 200\nQuery3: \"get_information(relation='# of prisoners designed for', tail_entity<'200')\"\nStep4: Get the set difference of output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"\nStep5: Get the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the difference years won for crettyard and greystones": "## Target type: {difference in years}\n## Query:\nStep1: Find the entity named Crettyard\nQuery1: \"get_information(relation='Team', tail_entity='Crettyard')\"\nStep2: Find the years won of output_of_query1\nQuery2: \"get_information(relation='Years won', head_entity='output_of_query1')\"\nStep3: Find the entity named Greystones\nQuery3: \"get_information(relation='Team', tail_entity='Greystones')\"\nStep4: Find the years won of output_of_query3\nQuery4: \"get_information(relation='Years won', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many times was ed sheeran listed as the performer?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ed Sheeran\nQuery1: \"get_information(relation='Performer', tail_entity='Ed Sheeran')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "between the uup party and the dup party, which had more votes in the 1996 forum?": "## Target type: {party}\n## Query:\nStep1: Find the entity that Party is UUP\nQuery1: \"get_information(relation='Party', tail_entity='UUP')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity that Party is DUP\nQuery3: \"get_information(relation='Party', tail_entity='DUP')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Find the party with more votes\nQuery5: \"if(set1='output_of_query2', set2='output_of_query4')\"",
    "how many radio stations are there in grand junction?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Grand Junction\"\nQuery1: \"get_information(relation='City of License', tail_entity='Grand Junction')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference between the highest average high temperature and the lowest average low temperature in burbank, california?": "None",
    "how many points did the top 3 finishers of the 1999 miller lite 225 earn?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity for the 1999 Miller Lite 225\nQuery1: \"get_information(relation='row_number', tail_entity='1999 Miller Lite 225')\"\nStep2: Find the top 3 finishers of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity<='3')\"\nStep3: Find the points earned by output_of_query2\nQuery3: \"get_information(relation='Points', head_entity='output_of_query2')\"\nStep4: Calculate the sum of output_of_query3\nQuery4: \"sum(set='output_of_query3')\"",
    "how many dances at most scored at least 35?": "## Target type: {number}\n## Query:\nStep1: Find the dances that scored at least 35\nQuery1: \"get_information(relation='Best score', tail_entity>='35')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is dev's longest streak of consecutive wins without a loss?": "None",
    "how many representatives share a seniority date in 1977?": "## Target type: {number}\n## Query:\nStep1: Find the representatives with the seniority date in 1977\nQuery1: \"get_information(relation='Seniority date', tail_entity='1977')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the 1995/96 season ranked the same place as which other season?": "None",
    "how many players are fws?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity that is in Position 'FW'\nQuery1: \"get_information(relation='Position', tail_entity='FW')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the total km for this xhart": "## Target type: {total km}\n## Query:\nStep1: Find the entity with the relation of km\nQuery1: \"get_information(relation='km')\"\nStep2: Calculate the sum of output_of_query1\nQuery2: \"sum(set='output_of_query1')\"",
    "how many years were between the dates the train phoenix was withdrawn and when it was scrapped?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Phoenix\nQuery1: \"get_information(relation='Name(s)', tail_entity='Phoenix')\"\nStep2: Find the withdrawn date of output_of_query1\nQuery2: \"get_information(relation='Withdrawn', head_entity='output_of_query1')\"\nStep3: Find the scrapped date of output_of_query1\nQuery3: \"get_information(relation='Status', head_entity='output_of_query1')\"\nStep4: Calculate the difference in years between output_of_query2 and output_of_query3\nQuery4: \"year_difference(date1='output_of_query2', date2='output_of_query3')\"",
    "what is the name of the last competition?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "who was in office longer, venizelos or sioufas?": "None",
    "how many groups of wrestlers are listed?": "## Target type: {number of groups of wrestlers}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "gerald geis represents how many counties in total?": "None",
    "how many medals did senegal win?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Senegal\nQuery1: \"get_information(relation='Nation', tail_entity='Senegal')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "bradley smith lost the 2010 catalan motorcycle grand prix 125cc by more/less than 4 seconds?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity named Bradley Smith\nQuery1: \"get_information(relation='Rider', tail_entity='Bradley Smith')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named 2010 Catalan Motorcycle Grand Prix 125cc\nQuery3: \"get_information(relation='Race', tail_entity='2010 Catalan Motorcycle Grand Prix 125cc')\"\nStep4: Find the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"subtract(value1='output_of_query4', value2='output_of_query2')\"\nStep6: Check if the value of output_of_query5 is more or less than 4 seconds\nQuery6: \"compare(value1='output_of_query5', operator='>', value2='4')\"",
    "how many 800m events?": "## Target type: {number}\n## Query:\nStep1: Find the events of 800m\nQuery1: \"get_information(relation='Event', tail_entity='800m')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "vasilis goumas or antonis christeas participated in more championships?": "None",
    "who served as head next after cardinal giulio de' medici?": "None",
    "what was the only year that a competition was held in china?": "## Target type: {year}\n## Query:\nStep1: Find the entity that China is mentioned in Venue\nQuery1: \"get_information(relation='Venue', tail_entity='China')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many times was ucla national champion?": "None",
    "what is the first single listed?": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which is the best area to find a pinus ponderosa with the longest needles?": "None",
    "who resigned the same day as roman hruska?": "None",
    "who were the only two runners to complete the race in over 54 seconds?": "None",
    "what album had the singles \"i want you to know\" and \"again\" on them?": "## Target type: {album}\n## Query:\nStep1: Find the entity for the single \"I Want You To Know\"\nQuery1: \"get_information(relation='Title', tail_entity='I Want You To Know')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"\nStep3: Find the entity for the single \"Again\"\nQuery3: \"get_information(relation='Title', tail_entity='Again')\"\nStep4: Find the album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "total number of attendees at the two games against the new england patriots during the season": "None",
    "how many sliver medal does bermuda has": "## Target type: {number}\n## Query:\nStep1: Find the entity named Bermuda\nQuery1: \"get_information(relation='Nation', tail_entity='Bermuda')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how long did it take fernando alonso to finish the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Fernando Alonso\nQuery1: \"get_information(relation='Driver', tail_entity='Fernando Alonso')\"\nStep2: Find the Time/Retired of output_of_query1\nQuery2: \"get_information(relation='Time/Retired', head_entity='output_of_query1')\"",
    "how many more people can sit in the alajuela's stadium than puntarenas?": "None",
    "in what year did the track, \"wide open road\" come out?": "## Target type: {year}\n## Query:\nStep1: Find the entity named \"Wide Open Road\"\nQuery1: \"get_information(relation='Title', tail_entity='Wide Open Road')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many assists did the top three have in total?": "None",
    "how many voronezh radars are in kaliningrad or in krasnodar?": "None",
    "which king ruled the longest?": "None",
    "what is the name of the top horse's trainer?": "## Target type: {trainer}\n## Query:\nStep1: Find the row_number of the top horse\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the trainer of output_of_query1\nQuery2: \"get_information(relation='Trainer', head_entity='output_of_query1')\"",
    "the gokuraku-ji temple is in the same city as what other temple?": "## Target type: {temple}\n## Query:\nStep1: Find the entity named Gokuraku-ji temple\nQuery1: \"get_information(relation='Temple', tail_entity='Gokuraku-ji temple')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City/Town/Village', head_entity='output_of_query1')\"\nStep3: Find the temples in the same city as output_of_query2\nQuery3: \"get_information(relation='City/Town/Village', tail_entity='output_of_query2')\"\nStep4: Exclude output_of_query1 from output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "what is the average number of affiliates that a given network will have?": "None",
    "how many friendly competitions occurred before september?": "## Target type: {number}\n## Query:\nStep1: Find all the competitions\nQuery1: \"get_information(relation='Competition')\"\nStep2: Find the entities with the relation of Competition is 'Friendly'\nQuery2: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep3: Find the entities with the relation of Date that occurred before September\nQuery3: \"get_information(relation='Date', tail_entity<'September')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how long did anne churchill/spencer live?": "None",
    "how mans years have ger nos below 900?": "None",
    "the number of flush wins at one credit to equal one flush win at 5 credits.": "None",
    "what is the name of the swara that holds the first position?": "## Target type: {swara}\n## Query:\nStep1: Find the entity in Position that is the first position\nQuery1: \"get_information(relation='Position', tail_entity='1')\"\nStep2: Find the swara of output_of_query1\nQuery2: \"get_information(relation='Swara', head_entity='output_of_query1')\"",
    "name the number of teams in the 6th heat.": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that the heat is 6\nQuery1: \"get_information(relation='Heat', tail_entity='6')\"\nStep2: Get the number of teams in output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query1')\"",
    "in what year was the parish established for the only cathedral?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Cathedral of Christ the King\nQuery1: \"get_information(relation='Church', tail_entity='Cathedral of Christ the King')\"\nStep2: Find the parish_established of output_of_query1\nQuery2: \"get_information(relation='Parish Est', head_entity='output_of_query1')\"",
    "which team was the only team that was undefeated?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has Lost is 0\nQuery1: \"get_information(relation='Lost', tail_entity='0')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what is the number of times swecon has been held in stockholm?": "None",
    "how long is the longest dong on prophets vs. profits?": "None",
    "how many times did a game result in a loss?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Result as Loss\nQuery1: \"get_information(relation='Result', tail_entity='Loss')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "does kindersley average more snowfall in the month before or after february?": "None",
    "how many gold and silver medals did germany win?": "None",
    "how many lawyers have won the award between 1883 and 2014?": "None",
    "how many players play either mf or df?": "## Target type: {number}\n## Query:\nStep1: Find the players who play mf (midfielder)\nQuery1: \"get_information(relation='Position', tail_entity='mf')\"\nStep2: Find the players who play df (defender)\nQuery2: \"get_information(relation='Position', tail_entity='df')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was whitney's best year for her album whitney in which she won the most rewards?": "None",
    "how many tournaments has jane o'donoghue competed in?": "None",
    "which country had the most plants start after 1990?": "None",
    "which prime minister spent the shortest total time in office?": "## Target type: {'Prime Minister'}\n## Query:\nStep1: Find all the Prime Ministers\nQuery1: \"get_information(relation='Prime Minister')\"\nStep2: Find the entity with the relation of Total time in office\nQuery2: \"get_information(relation='Total time in\\noffice')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min Total time in office\nQuery4: \"get_information(relation='Total time in\\noffice', tail_entity='output_of_query3')\"\nStep5: Find the Prime Minister of output_of_query4\nQuery5: \"get_information(relation='Prime Minister', head_entity='output_of_query4')\"",
    "how many painters received a color mark below 10?": "## Target type: {number}\n## Query:\nStep1: Find the painters who received a color mark below 10\nQuery1: \"get_information(relation='Color', tail_entity<'10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last noted ruler?": "None",
    "in the 2009 movie \"the message\" he is also known as what?": "None",
    "number of picks the st. louis hawks made in the draft": "None",
    "how many credits do you have to spend to get at least 2000 in payout if you had four aces?": "None",
    "how many novelists are listed?": "None",
    "what is the number of games won by brazil during the month of march 1982?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result is 'W' and the Date is in the month of March 1982\nQuery1: \"get_information(relation='Result', tail_entity='W', key='Date', value='March 1982')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the first year the event was held at the pick-congress hotel in chicago?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Pick-Congress Hotel\nQuery1: \"get_information(relation='Location', tail_entity='Pick-Congress Hotel')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Dates of output_of_query4\nQuery5: \"get_information(relation='Dates', head_entity='output_of_query4')\"\nStep6: Extract the year from output_of_query5\nQuery6: \"extract_year(date='output_of_query5')\"",
    "mathematically speaking, what is the difference between 2015 and 1912?": "None",
    "after \"never say goodbye,\" what was the title of the next movie she was in chronologically?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is \"Never Say Goodbye\"\nQuery1: \"get_information(relation='Title', tail_entity='Never Say Goodbye')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what is the difference between percentages of votes between allkaji and cela?": "None",
    "which date was the wager not hair?": "None",
    "what event comes before luke 1:26-38?": "## Target type: {event}\n## Query:\nStep1: Find the entity Luke 1:26-38\nQuery1: \"get_information(relation='Luke', tail_entity='Luke 1:26-38')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Event of output_of_query4\nQuery5: \"get_information(relation='Event', head_entity='output_of_query4')\"",
    "how many countries earned no gold medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Find the countries with Gold is 0\nQuery2: \"get_information(relation='Gold', tail_entity='0')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who held the title before the public enemy regained it on april 8th, 1995?": "None",
    "how many total votes did the independent party have?": "None",
    "which 2 stations both have faith ministries radio?": "## Target type: {call-sign}\n## Query:\nStep1: Find the entity that has the Programming Faith Ministries Radio\nQuery1: \"get_information(relation='Programming', tail_entity='Faith Ministries Radio')\"\nStep2: Find the call-sign of output_of_query1\nQuery2: \"get_information(relation='Call-sign', head_entity='output_of_query1')\"\nStep3: Get the intersection of output_of_query2 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query2', set2='output_of_query2')\"",
    "who performed better, goddard or francis?": "None",
    "in the 1974-75 golden seals hockey season, how many draft picks were chosen after the third round?": "## Target type: {number of draft picks}\n## Query:\nStep1: Find the entity that is the 1974-75 golden seals hockey season\nQuery1: \"get_information(relation='Season', tail_entity='1974-75 golden seals hockey season')\"\nStep2: Find the entity that is the third round\nQuery2: \"get_information(relation='Round', tail_entity='3')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the row_number larger than output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity>'output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the crown entity listed before the takeovers panel?": "None",
    "what is the last track listed on the record?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many states had a democratic gain due to retirement?": "## Target type: {number of states}\n## Query:\nStep1: Find the states with the relation Result as \"Democratic gain\" due to retirement\nQuery1: \"get_information(relation='Result', tail_entity='Democratic gain due to retirement')\"\nStep2: Get the unique states from output_of_query1\nQuery2: \"get_unique_values(set='output_of_query1', relation='State')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the first year in which daegu fc finished in the top 10 of the k league classic?": "## Target type: {'Season'}\n## Query:\nStep1: Find the entity that finished in the top 10 of the K League Classic\nQuery1: \"get_information(relation='Pos.', tail_entity<='10')\"\nStep2: Find the Season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Get the min Season of output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "what was the number of games available on playstation portable?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of Platform as Playstation Portable\nQuery1: \"get_information(relation='Platform', tail_entity='Playstation Portable')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which model has the largest bandwidth": "## Target type: {'Model'}\n## Query:\nStep1: Find all the models\nQuery1: \"get_information(relation='Model')\"\nStep2: Find the entity with the maximum bandwidth\nQuery2: \"max(set='output_of_query1', key='Fillrate')\" \nStep3: Find the model with the maximum bandwidth\nQuery3: \"get_information(relation='Model', tail_entity='output_of_query2')\"",
    "what is the most fee charged?": "None",
    "which cities have at least three call signs?": "None",
    "tommy taylor had the same number of goals as which other player(s)?": "None",
    "number of great lakes population centers that are wholly or partially located in canada": "None",
    "what is the difference in points between the finalists and average in iowa?": "None",
    "the download at the top of the chart": "## Target type: {Download}\n## Query:\nStep1: Find the download at the top of the chart\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Download of output_of_query1\nQuery2: \"get_information(relation='Download', head_entity='output_of_query1')\"",
    "are there any counties that have a larger amount of voters over alameda county?": "## Target type: {'yes' or 'no'}\n## Query:\nStep1: Find the entity named Alameda County\nQuery1: \"get_information(relation='County', tail_entity='Alameda')\"\nStep2: Find the Votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity with Votes larger than output_of_query2\nQuery3: \"get_information(relation='Votes', tail_entity>'output_of_query2')\"\nStep4: Check if output_of_query3 is empty\nQuery4: \"is_empty(set='output_of_query3')\"",
    "how many players transferred from sweden?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named Sweden\nQuery1: \"get_information(relation='From', tail_entity='Sweden')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference of the number of won games between stade toulousain and ca brive?": "None",
    "how many cities in camarines sur have at least 50,000 people?": "None",
    "what is the number of votes that megan leslie received?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity named Megan Leslie\nQuery1: \"get_information(relation='Candidate', tail_entity='Megan Leslie')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"",
    "the choke with at least 0.005 inches of constriction": "## Target type: {choke}\n## Query:\nStep1: Find the entity with the relation of Constriction that is at least 0.005 inches\nQuery1: \"get_information(relation='Constriction', tail_entity>='0.005')\"\nStep2: Find the choke of output_of_query1\nQuery2: \"get_information(relation='Choke', head_entity='output_of_query1')\"",
    "which venue hosted the standard result immediately after berlin in the 1990s?": "None",
    "does any airbase have the same location served as tha'lah military airbase?": "None",
    "what is the total of all of the tiers added together?": "None",
    "what is the total area of east lothian, angus, and dundee city?": "None",
    "what country did the last person on the list come from?": "## Target type: {country}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "what is the total percentage of people who identified as religious in 2011?": "None",
    "how many times did wu tao came in first position?": "None",
    "number of 3 points attempted": "None",
    "what is the name of the first property?": "## Target type: {'Property'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Property of output_of_query3\nQuery4: \"get_information(relation='Property', head_entity='output_of_query3')\"",
    "which ethnicity is above german": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity named German\nQuery1: \"get_information(relation='Ethnicity', tail_entity='German')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ethnicity of output_of_query4\nQuery5: \"get_information(relation='Ethnicity', head_entity='output_of_query4')\"",
    "how many airco dh.4's did the uk use in their period of service?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is UK\nQuery1: \"get_information(relation='Place of manufacture', tail_entity='UK')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity named Airco DH.4\nQuery5: \"get_information(relation='Name', tail_entity='Airco DH.4')\"\nStep6: Find the #used of output_of_query5\nQuery6: \"get_information(relation='# used', head_entity='output_of_query5')\"",
    "what is the only modest mouse single released under the hit or miss label?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Label (Catalog) contains \"hit or miss\"\nQuery1: \"get_information(relation='Label (Catalog)', value='hit or miss')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how long was the film schooled out before beginning blue?": "None",
    "what is the number of champion for ronald l. briones": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ronald L. Briones\nQuery1: \"get_information(relation='Champion', tail_entity='Ronald L. Briones')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what name is above may 1944": "## Target type: {name}\n## Query:\nStep1: Find the date May 1944\nQuery1: \"get_information(relation='First operational', tail_entity='May 1944')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which representative is listed next after hank coe?": "## Target type: {representative}\n## Query:\nStep1: Find the entity named Hank Coe\nQuery1: \"get_information(relation='Representative', tail_entity='Hank Coe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Representative of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "which pinyin is listed below shi lin?": "None",
    "who was the last person appointed on this table?": "## Target type: {representative}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Representative of output_of_query3\nQuery4: \"get_information(relation='Representative', head_entity='output_of_query3')\"",
    "which mayor seattle, washington resigned after only three weeks in office in 1896?": "## Target type: {Name}\n## Query:\nStep1: Find the entity whose Term ended is 1896\nQuery1: \"get_information(relation='Term ended', tail_entity='1896')\"\nStep2: Find the entity whose Term began is 1896\nQuery2: \"get_information(relation='Term began', tail_entity='1896')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "how many times was bremen the venue for the idsf world championships for the latin result?": "None",
    "how many total pillow pals were both reintroduced and retired in 1999?": "None",
    "what food has the highest amount of magnesium?": "None",
    "name the country that had the same number of bronze medals as russia.": "None",
    "what was the most the university of florida won by?": "None",
    "who was thompson's secretary of state?": "## Target type: {Secretary of State}\n## Query:\nStep1: Find the entity named Thompson\nQuery1: \"get_information(relation='Prime Minister', tail_entity='Thompson')\"\nStep2: Find the Secretary of State of output_of_query1\nQuery2: \"get_information(relation='Secretary of State', head_entity='output_of_query1')\"",
    "when did armando armani's term end?": "## Target type: {'Term end'}\n## Query:\nStep1: Find the entity named Armando Armani\nQuery1: \"get_information(relation='Name', tail_entity='Armando Armani')\"\nStep2: Find the Term end of output_of_query1\nQuery2: \"get_information(relation='Term end', head_entity='output_of_query1')\"",
    "top paid year?": "None",
    "how long after the third prion characterization would it take for another to be characterized?": "None",
    "what is the total number of nations that did not win gold?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations that did not win gold\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what's the number of sample size do they use at the chicago sun-times?": "None",
    "total number of wins": "## Target type: {number}\n## Query:\nStep1: Find all the rows that have the relation of Result as Win\nQuery1: \"get_information(relation='Res.', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what city proper has the smallest area in km2?": "None",
    "how many times did boston college score more than 7 points in a game?": "None",
    "who performed with o.c.?": "None",
    "how many times was south korea the consecutive opponent?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named South Korea\nQuery1: \"get_information(relation='Opponent', tail_entity='South Korea')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "who where the total wins for week 7?": "None",
    "how many times has garden city won in class a?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Class A that is Garden City\nQuery1: \"get_information(relation='Class A', tail_entity='Garden City')\"\nStep2: Find the number of times output_of_query1 has won\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which wrestler had his first reign on june 16, 2007?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity that Date is June 16, 2007\nQuery1: \"get_information(relation='Date', tail_entity='June 16, 2007')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the wrestler of output_of_query3\nQuery4: \"get_information(relation='Wrestlers', head_entity='output_of_query3')\"",
    "how many uci europe tour competitions are recorded in the chart?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity with the relation of Competition as UCI Europe Tour\nQuery1: \"get_information(relation='Competition', tail_entity='UCI Europe Tour')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the number of visitors in 2009 at hiidenportti?": "## Target type: {number of visitors}\n## Query:\nStep1: Find the entity named Hiidenportti\nQuery1: \"get_information(relation='National park', tail_entity='Hiidenportti')\"\nStep2: Find the number of visitors in 2009 of output_of_query1\nQuery2: \"get_information(relation='Visitation (2009)', head_entity='output_of_query1')\"",
    "how long did the at&t strike of 2012 last?": "None",
    "how many points did portugal score in the 1994 europeans men's handball championship preliminary round?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Portugal\nQuery1: \"get_information(relation='Team', tail_entity='Portugal')\"\nStep2: Find the Points of output_of_query1\nQuery2: \"get_information(relation='Pts.', head_entity='output_of_query1')\"",
    "the single \"birds vs.worms\" or \"broke\" was released first?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"birds vs. worms\"\nQuery1: \"get_information(relation='Title', tail_entity='birds vs. worms')\"\nStep2: Find the entity named \"broke\"\nQuery2: \"get_information(relation='Title', tail_entity='broke')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2\nQuery5: \"compare(set1='output_of_query3', set2='output_of_query4')\"",
    "what are the number of years maine has participated?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that Team is Maine\nQuery1: \"get_information(relation='Team', tail_entity='Maine')\"\nStep2: Find the Years participated of output_of_query1\nQuery2: \"get_information(relation='Years participated', head_entity='output_of_query1')\"",
    "name a team that finished in at least 1:10.": "None",
    "what was the date of the last tournament?": "## Target type: {'Date'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which department has the most total deputies?": "None",
    "which was better selling, hunningolla or vain elamaa?": "None",
    "jeff daniels has appeared in several television shows. for which show has he appeared in the most number of episodes?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "based on the table of brazil's results at the fifa world cup between 1930 and 2010, in which listed year did brazil play on average only a single match in round 1?": "None",
    "how many members of the canadian house of commons served in the militia?": "None",
    "does cats or chicago have the most comments?": "## Target type: {musical}\n## Query:\nStep1: Find the entity named Cats\nQuery1: \"get_information(relation='Title', tail_entity='Cats')\"\nStep2: Find the comments count of output_of_query1\nQuery2: \"get_information(relation='Comment', head_entity='output_of_query1')\"\nStep3: Find the entity named Chicago\nQuery3: \"get_information(relation='Title', tail_entity='Chicago')\"\nStep4: Find the comments count of output_of_query3\nQuery4: \"get_information(relation='Comment', head_entity='output_of_query3')\"\nStep5: Compare the comments count of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "name a game where the score was the same as march 4, 2013.": "None",
    "what is the number of chiefs that are listed as foreign service officers?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Status is Foreign Service officer\nQuery1: \"get_information(relation='Status', tail_entity='Foreign Service officer')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "total number of middle-earth video games published by melbourne house": "None",
    "who has had the the most title reigns?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity with the relation of No. of reigns\nQuery1: \"get_information(relation='No. of reigns')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max reigns\nQuery3: \"get_information(relation='No. of reigns', tail_entity='output_of_query2')\"\nStep4: Find the wrestler of output_of_query3\nQuery4: \"get_information(relation='Wrestler', head_entity='output_of_query3')\"",
    "which game had only the driving genre?": "## Target type: {game title}\n## Query:\nStep1: Find the entity with the relation of Genre(s) and value of 'driving'\nQuery1: \"get_information(relation='Genre(s)', value='driving')\"\nStep2: Find the game title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what is the total number of international goals that holosko has scored?": "None",
    "which population is listed before 5,357,422?": "## Target type: {population}\n## Query:\nStep1: Find the entity that Official population is 5,357,422\nQuery1: \"get_information(relation='Official population', tail_entity='5,357,422')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the population of output_of_query4\nQuery5: \"get_information(relation='Official population', head_entity='output_of_query4')\"",
    "which candidate finished on top in eddy county?": "None",
    "what was the difference in placing between the 1988/89 season and the last season before it?": "None",
    "what nation did the competitor represent?": "None",
    "whose weight is the heaviest among the following: fabiana de oliveira, helia souza, or sheilla castro?": "None",
    "what is the total number of polls published by the company gis xxi?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Gis XXI\nQuery1: \"get_information(relation='Poll company', tail_entity='Gis XXI')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the institutions are located in london?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Location that is London\nQuery1: \"get_information(relation='Location', tail_entity='London')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total time by france?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the total time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many players have the ncaa listed as their league?": "None",
    "how many consecutive times is the progressive party listed?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party name as \"Progressive Party\"\nQuery1: \"get_information(relation='Party name', tail_entity='Progressive Party')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the consecutive times that the Progressive Party is listed\nQuery3: \"count(set='output_of_query2')\"",
    "what is the average number of times johan museeuw starred?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Johan Museeuw\nQuery1: \"get_information(relation='Best Professional Cyclist', tail_entity='Johan Museeuw')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many districts are tampere but have only one cup?": "## Target type: {number}\n## Query:\nStep1: Find the districts that are Tampere\nQuery1: \"get_information(relation='Settlement', tail_entity='Tampere')\"\nStep2: Find the districts with only one cup\nQuery2: \"get_information(relation='Cup', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "troy ruttman was entered by the same person as which other driver?": "None",
    "what team came in second to last place?": "None",
    "how many christian contemporary stations are there?": "## Target type: {number}\n## Query:\nStep1: Find the stations with the Format of Christian Contemporary\nQuery1: \"get_information(relation='Format', tail_entity='Christian Contemporary')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was picked after patrick murphy?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Patrick Murphy\nQuery1: \"get_information(relation='Player', tail_entity='Patrick Murphy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "who hosted more often, europe or asia?": "## Target type: {'Continent'}\n## Query:\nStep1: Find the number of times Europe hosted\nQuery1: \"get_information(relation='Continent', tail_entity='Europe')\"\nStep2: Find the number of times Asia hosted\nQuery2: \"get_information(relation='Continent', tail_entity='Asia')\"\nStep3: Compare the counts of output_of_query1 and output_of_query2\nQuery3: \"set_comparison(set1='output_of_query1', set2='output_of_query2')\"",
    "which team has their high as 1,198?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of High\nQuery1: \"get_information(relation='High', tail_entity='1,198')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "according to the table, which destination was the last to become available?": "None",
    "what is the number of saves for the marlins": "None",
    "how many tracks in word...life have only lord finesse as a producer?": "## Target type: {number of tracks}\n## Query:\nStep1: Find the entity in Producer(s) that is Lord Finesse\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Lord Finesse')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that has the same row_number with output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the number of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the pylon with the least height listed here?": "None",
    "was the foe an enemy aircraft or enemy fighter on 4 may 1918 @ 1025 hours?": "## Target type: {'Foe'}\n## Query:\nStep1: Find the entity that has the relation of Date/time as \"4 May 1918 @ 1025 hours\"\nQuery1: \"get_information(relation='Date/time', tail_entity='4 May 1918 @ 1025 hours')\"\nStep2: Find the Foe of output_of_query1\nQuery2: \"get_information(relation='Foe', head_entity='output_of_query1')\"",
    "karl farmer played the same position as jay chesley. what position was it?": "None",
    "what number of games did oxford united f.c. play in august 1998?": "None",
    "what was the release date of the first single?": "## Target type: {'Release date'}\n## Query:\nStep1: Find the entity with the relation of \"row_number\"\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Release date of output_of_query3\nQuery4: \"get_information(relation='Release date', head_entity='output_of_query3')\"",
    "what team placed after canada?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Team is Canada\nQuery1: \"get_information(relation='Team', tail_entity='Canada')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many times has anthony browne won an kurt maschler award for illustration?": "None",
    "what town's population density is roughly the same as pheonix township?": "None",
    "does ghor or farah have more districts?": "## Target type: {district count}\n## Query:\nStep1: Find the entity named Ghor\nQuery1: \"get_information(relation='Province', tail_entity='Ghor')\"\nStep2: Find the entity named Farah\nQuery2: \"get_information(relation='Province', tail_entity='Farah')\"\nStep3: Find the districts of output_of_query1\nQuery3: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep4: Find the districts of output_of_query2\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query2')\"\nStep5: Calculate the count of output_of_query3\nQuery5: \"count(set='output_of_query3')\"\nStep6: Calculate the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the count of output_of_query5 and output_of_query6\nQuery7: \"compare(set1='output_of_query5', set2='output_of_query6')\"",
    "did the black population grow more or less than the white population (as a percent of total population)?": "None",
    "what is the venue right below jna stadium, belgrade (a)?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named JNA Stadium, Belgrade (A)\nQuery1: \"get_information(relation='Venue', tail_entity='JNA Stadium, Belgrade (A)')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "in which year did bekele record his fastest 10,000 meter time from 2003-2012?": "None",
    "add up the total number of points scored in the last wins for boise state.": "None",
    "how many consecutive years were there 20 or more assisted tackles?": "None",
    "how many historic sites are listed in coldwater?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Coldwater\nQuery1: \"get_information(relation='City', tail_entity='Coldwater')\"\nStep2: Find the historic sites listed in output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many nations withdrew from 1990 to 2012?": "None",
    "how many points did robbie mcewen and cristian moreni score together?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Robbie McEwen\nQuery1: \"get_information(relation='Rider', tail_entity='Robbie McEwen')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Cristian Moreni\nQuery3: \"get_information(relation='Rider', tail_entity='Cristian Moreni')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Add output_of_query2 and output_of_query4\nQuery5: \"add(set1='output_of_query2', set2='output_of_query4')\"",
    "who did the mercury beat in their only 2ot game?": "None",
    "how many hungarians have been the men's winner of the budapest half marathon?": "None",
    "how many saves did cordero have on july 3?": "None",
    "what is the number of varsity sports at maryland": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Maryland\nQuery1: \"get_information(relation='Institution', tail_entity='Maryland')\"\nStep2: Find the varsity sports of output_of_query1\nQuery2: \"get_information(relation='Varsity Sports', head_entity='output_of_query1')\"",
    "how many networks show soap operas?": "None",
    "what was the number of arrays of the riverhead county center project location?": "## Target type: {number of arrays}\n## Query:\nStep1: Find the entity with the relation of Location\nQuery1: \"get_information(relation='Location', tail_entity='Riverhead County Center Project')\"\nStep2: Find the number of arrays of output_of_query1\nQuery2: \"get_information(relation='Number of arrays', head_entity='output_of_query1')\"",
    "who were the \"color commentators\" for play-by-play in 1968?": "None",
    "what country has won no silver medals?": "## Target type: {country}\n## Query:\nStep1: Find the entity that has won no silver medals\nQuery1: \"get_information(relation='Silver', tail_entity='0')\"\nStep2: Get the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "was any movie nominated more than fugitive pieces?": "None",
    "who finished before samuel edney?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Samuel Edney\nQuery1: \"get_information(relation='Athlete', tail_entity='Samuel Edney')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "geno hayes and nick roach both played which position?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Geno Hayes\nQuery1: \"get_information(relation='Player', tail_entity='Geno Hayes')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named Nick Roach\nQuery3: \"get_information(relation='Player', tail_entity='Nick Roach')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "in what year was szalai's first international goal?": "None",
    "what is the number or grand prix games released by psikyo games from 2003 to 2005?": "None",
    "did the titans or the daredevils winners?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Titans\nQuery1: \"get_information(relation='Team', tail_entity='Titans')\"\nStep2: Find the entity named Daredevils\nQuery2: \"get_information(relation='Team', tail_entity='Daredevils')\"\nStep3: Find the row_number of Titans\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of Daredevils\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_numbers of output_of_query3 and output_of_query4 to determine the winner\nQuery5: \"if output_of_query3 < output_of_query4: 'Titans' else if output_of_query4 < output_of_query3: 'Daredevils' else: 'Neither'\"",
    "the club placed 19th before placing what place?": "None",
    "how many goals does zolt\u00e1n kiss have?": "None",
    "what are the number of times the location was in madrid?": "## Target type: {'number of times'}\n## Query:\nStep1: Find the entity named Madrid\nQuery1: \"get_information(relation='Location', tail_entity='Madrid')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "are there more films in 2008 or 2005?": "## Target type: {year}\n## Query:\nStep1: Find the films in the year 2008\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nStep2: Find the films in the year 2005\nQuery2: \"get_information(relation='Year', tail_entity='2005')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "what is the total of groups that have a populism ideology?": "## Target type: {number of groups}\n## Query:\nStep1: Find the entity that has the ideology of Populism\nQuery1: \"get_information(relation='Ideology', tail_entity='Populism')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total population in 1801?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity in Year that is 1801.\nQuery1: \"get_information(relation='Year', tail_entity='1801')\"\nStep2: Find the Total population of output_of_query1.\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what match did she win before the match in ribeirao preto, brazil?": "None",
    "how many parks are listed?": "## Target type: {number of parks}\n## Query:\nStep1: Find the parks in the schema\nQuery1: \"get_information(relation='National park')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how did they place the year after they were 4th in the regular season?": "None",
    "in how many international competitions did kazlou throw a length of above 80 meters?": "None",
    "what is the total number of ships the united states launched in 1929?": "None",
    "titles not on tvb": "None",
    "what is the number of interferometers that use wavebands r?": "None",
    "how many states have no qualification?": "None",
    "what number of times did lillestr\u00f8m win gold?": "None",
    "which method is listed the least?": "## Target type: {method}\n## Query:\nStep1: Find the entity in Method that appears the least.\nQuery1: \"get_information(relation='Method', tail_entity<='least')\"\nStep2: Find the Method of output_of_query1.\nQuery2: \"get_information(relation='Method', head_entity='output_of_query1')\"",
    "how many times was there a score of w 9-1?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Score is W 9-1\nQuery1: \"get_information(relation='Score', tail_entity='W 9-1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what building is the tallest?": "None",
    "how many directors served more than 3 years?": "None",
    "how many jstations have an rf of at least 29?": "## Target type: {number}\n## Query:\nStep1: Find the entities with an rf of at least 29\nQuery1: \"get_information(relation='RF', tail_entity>='29')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total count of stars for european countries?": "None",
    "how many games were played in september 1978?": "None",
    "who was the first winner in 2013?": "None",
    "how many christopher williams' songs made it into at least 2 of the 3 charts?": "None",
    "which township in pope county, arkansas has the smallest population?": "None",
    "who had the largest percentact in 1971?": "None",
    "which religious group has the highest population %?": "## Target type: {religious group}\n## Query:\nStep1: Find the entity with the relation of Population %\nQuery1: \"get_information(relation='Population %')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population %\nQuery3: \"get_information(relation='Population %', tail_entity='output_of_query2')\"\nStep4: Find the Religious group of output_of_query3\nQuery4: \"get_information(relation='Religious group', head_entity='output_of_query3')\"",
    "which is the only defendant who was tried and found not guilty?": "## Target type: {defendant}\n## Query:\nStep1: Find the entity with the relation of Result as \"not guilty\"\nQuery1: \"get_information(relation='Result', tail_entity='not guilty')\"\nStep2: Find the defendant of output_of_query1\nQuery2: \"get_information(relation='Defendant', head_entity='output_of_query1')\"",
    "how many films is she currently filming?": "## Target type: {number of films}\n## Query:\nStep1: Find the entity that is currently filming\nQuery1: \"get_information(relation='Notes', tail_entity='Filming')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many coaches served less seasons than bill manlove?": "None",
    "which is the next bbca with the number 26 and its transmitter": "None",
    "what title came directly after this morning?": "None",
    "how many delegates are not in their 20's": "None",
    "which 2 mayors were fisherman?": "None",
    "in which year did the team have its worst season?": "None",
    "how many submarines have a tonnage above 4,000?": "## Target type: {number}\n## Query:\nStep1: Find the entity that have a tonnage above 4,000\nQuery1: \"get_information(relation='Tonnage (GRT)', tail_entity>'4000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which was released earlier, artamene or merope?": "## Target type: {'Premi\u00e8re date'}\n## Query:\nStep1: Find the entity named Artamene\nQuery1: \"get_information(relation='Title', tail_entity='Artamene')\"\nStep2: Find the Premi\u00e8re date of output_of_query1\nQuery2: \"get_information(relation='Premi\u00e8re date', head_entity='output_of_query1')\"\nStep3: Find the entity named Merope\nQuery3: \"get_information(relation='Title', tail_entity='Merope')\"\nStep4: Find the Premi\u00e8re date of output_of_query3\nQuery4: \"get_information(relation='Premi\u00e8re date', head_entity='output_of_query3')\"\nStep5: Compare the Premi\u00e8re dates of output_of_query2 and output_of_query4\nQuery5: \"earlier_date(date1='output_of_query2', date2='output_of_query4')\"",
    "how many touchdowns did anthony hines and boo williams have altogether?": "None",
    "which is the first team from the chart": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the minimum row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what was the largest distance traveled for the marlboro tour?": "None",
    "what was the least number of points a game was won by?": "## Target type: {number of points}\n## Query:\nStep1: Find all the Result of games\nQuery1: \"get_information(relation='Result')\"\nStep2: Extract the number of points from output_of_query1\nQuery2: \"calculator(expression='extract_number(output_of_query1)')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "which roman catholic diocese in angola was established after kvitobiensis on september 4, 1940?": "None",
    "which locomotive weighs the least?": "## Target type: {locomotive name}\n## Query:\nStep1: Find the entity with the relation of weight\nQuery1: \"get_information(relation='weight')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min weight\nQuery3: \"get_information(relation='weight', tail_entity='output_of_query2')\"\nStep4: Find the locomotive name of output_of_query3\nQuery4: \"get_information(relation='name', head_entity='output_of_query3')\"",
    "how many teams have retired a number worn by charles barkley?": "None",
    "who is the most used distributor?": "None",
    "name the tallest building.": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Years as tallest\nQuery1: \"get_information(relation='Years as tallest')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Years as tallest\nQuery3: \"get_information(relation='Years as tallest', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who was on the same team as john degenkolb?": "None",
    "what is the difference in percentage between korean buddists and german buddists?": "## Target type: {percentage difference}\n## Query:\nStep1: Find the entity named Korean Buddhists\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Korean')\"\nStep2: Find the Buddhism percentage of output_of_query1\nQuery2: \"get_information(relation='Buddhism', head_entity='output_of_query1')\"\nStep3: Find the entity named German Buddhists\nQuery3: \"get_information(relation='Ethnicity', tail_entity='German')\"\nStep4: Find the Buddhism percentage of output_of_query3\nQuery4: \"get_information(relation='Buddhism', head_entity='output_of_query3')\"\nStep5: Calculate the percentage difference: output_of_query4 - output_of_query2\nQuery5: \"calculate_percentage_difference(value1='output_of_query4', value2='output_of_query2')\"",
    "which building is only for the university's admissions office?": "None",
    "what is the average number of previou council?": "None",
    "which species has the most years since divergence from human?": "## Target type: {species}\n## Query:\nStep1: Find the entity with the relation of Years Since Divergence from Human (mya)\nQuery1: \"get_information(relation='Years Since Divergence from Human (mya)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Years Since Divergence from Human\nQuery3: \"get_information(relation='Years Since Divergence from Human (mya)', tail_entity='output_of_query2')\"\nStep4: Find the species of output_of_query3\nQuery4: \"get_information(relation='Species', head_entity='output_of_query3')\"",
    "previous third place finisher before jt marvelous": "## Target type: {third place}\n## Query:\nStep1: Find the entity named JT Marvelous\nQuery1: \"get_information(relation='Third place', tail_entity='JT Marvelous')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the third place of output_of_query4\nQuery5: \"get_information(relation='Third place', head_entity='output_of_query4')\"",
    "what is the number of times has anton lyuboslavskiy competed in the olympic games?": "None",
    "what year did the kuwaiti dinar have the highest us dollar exchange?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of US Dollar Exchange\nQuery1: \"get_information(relation='US Dollar Exchange')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max US Dollar Exchange\nQuery3: \"get_information(relation='US Dollar Exchange', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many years after the george gordon meade memorial was built was the victims of communism memorial built?": "None",
    "how many counties have elected at least 10 democrats?": "## Target type: {number of counties}\n## Query:\nStep1: Find the entity with the relation of Party is Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the District of output_of_query2\nQuery3: \"get_information(relation='District', head_entity='output_of_query2')\"\nStep4: Find the Senator of output_of_query3\nQuery4: \"get_information(relation='Senator', head_entity='output_of_query3')\"\nStep5: Find the Counties Represented of output_of_query4\nQuery5: \"get_information(relation='Counties Represented', head_entity='output_of_query4')\"\nStep6: Find the count of Counties Represented in output_of_query5\nQuery6: \"count(set='output_of_query5', attribute='Counties Represented')\"",
    "what is the total number of drivers on the list?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Driver\nQuery1: \"get_information(relation='Driver')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the only person to appear in episode 2": "None",
    "besides julia stowers who is the other american listed?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Julia Stowers\nQuery1: \"get_information(relation='Name', tail_entity='Julia Stowers')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity with the same nationality as output_of_query2\nQuery3: \"get_information(relation='Nationality', tail_entity='output_of_query2')\"\nStep4: Calculate the difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "where was the location after philadelphia?": "None",
    "which city was champion in 1957, monterrey or el campo?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Monterrey\nQuery1: \"get_information(relation='City', tail_entity='Monterrey')\"\nStep2: Find the entity named El Campo\nQuery2: \"get_information(relation='City', tail_entity='El Campo')\"\nStep3: Find the entity that was champion in 1957\nQuery3: \"get_information(relation='Year', tail_entity='1957')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "how many athletes have been flag bearers for samoa at the olympic games?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that Flag bearer is Uati Maposua\nQuery1: \"get_information(relation='Flag bearer', tail_entity='Uati Maposua')\"\nStep2: Find the Season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Find the entity that is Summer\nQuery3: \"get_information(relation='Season', tail_entity='Summer')\"\nStep4: Find the Event Year of output_of_query3\nQuery4: \"get_information(relation='Event Year', head_entity='output_of_query3')\"\nStep5: Find the entities whose Season is output_of_query3 and Event Year is output_of_query4\nQuery5: \"get_information(relation='Flag bearer', head_entity1='output_of_query3', head_entity2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many people finished in less than 1:55?": "None",
    "in 2001 were they above or below the place they received in 2000?": "## Target type: {'Place'}\n## Query:\nStep1: Find the entity with the relation of Season is 2000/01\nQuery1: \"get_information(relation='Season', tail_entity='2000/01')\"\nStep2: Get the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Season is 2001/02\nQuery3: \"get_information(relation='Season', tail_entity='2001/02')\"\nStep4: Get the Place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to determine if it is above or below\nQuery5: \"if output_of_query2 > output_of_query4: 'above' else: 'below'\"",
    "what song was in the first week?": "## Target type: {'Song choice'}\n## Query:\nStep1: Find the entity with the relation of Week (Stage) as 'Week 1'\nQuery1: \"get_information(relation='Week (Stage)', tail_entity='Week 1')\"\nStep2: Find the Song choice of output_of_query1\nQuery2: \"get_information(relation='Song choice', head_entity='output_of_query1')\"",
    "which opponent has stephen hendry competed against most often?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Stephen Hendry\nQuery1: \"get_information(relation='No.', tail_entity='Stephen Hendry')\"\nStep2: Find the opponents of output_of_query1\nQuery2: \"get_information(relation='Opponent in the final', head_entity='output_of_query1')\"\nStep3: Find the opponent that appears the most\nQuery3: \"get_information(relation='Opponent in the final', tail_entity>='most')\"",
    "did the anaheim storm win more home or away games?": "## Target type: {'home'/'away'}\n## Query:\nStep1: Find all the home games of the Anaheim Storm\nQuery1: \"get_information(relation='Location', tail_entity='HSBC Arena')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find all the away games of the Anaheim Storm\nQuery3: \"get_information(relation='Opponent', tail_entity='Anaheim Storm')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4 then 'home' else 'away' end\"",
    "what number of games did new zealand win in 2010?": "None",
    "which state had an execution done by the method of lethal injection and occurred in december of 2005?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Method is lethal injection\nQuery1: \"get_information(relation='Method', tail_entity='lethal injection')\"\nStep2: Find the entity with the relation of Last execution date is in December 2005\nQuery2: \"get_information(relation='Last execution date', tail_entity='December 2005')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the state of output_of_query3\nQuery4: \"get_information(relation='State', head_entity='output_of_query3')\"",
    "how many members were inducted for announcing?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Inducted for Announcing\nQuery1: \"get_information(relation='Inducted for', tail_entity='Announcing')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which party was elected the least?": "## Target type: {party}\n## Query:\nStep1: Find all the parties\nQuery1: \"get_information(relation='Party')\"\nStep2: Find the entity that appeared the least in output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the party that appeared the least\nQuery3: \"get_information(relation='Party', tail_entity='output_of_query2')\"",
    "who is the next president listed after hamani diori in the year 1974?": "None",
    "which judge began active service first, wayne edward alley or james henry alesia?": "## Target type: {judge}\n## Query:\nStep1: Find the entity named Wayne Edward Alley\nQuery1: \"get_information(relation='Judge', tail_entity='Wayne Edward Alley')\"\nStep2: Find the active service date of output_of_query1\nQuery2: \"get_information(relation='Began active service', head_entity='output_of_query1')\"\nStep3: Find the entity named James Henry Alesia\nQuery3: \"get_information(relation='Judge', tail_entity='James Henry Alesia')\"\nStep4: Find the active service date of output_of_query3\nQuery4: \"get_information(relation='Began active service', head_entity='output_of_query3')\"\nStep5: Compare the active service dates of output_of_query2 and output_of_query4\nQuery5: \"compare_date(date1='output_of_query2', date2='output_of_query4', option='earliest')\"\nStep6: If output_of_query5 is \"output_of_query2\", then the answer is Wayne Edward Alley. Otherwise, the answer is James Henry Alesia.",
    "what is the number of liningrad locations?": "None",
    "how many marathons were held in beijing?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Beijing\nQuery1: \"get_information(relation='Venue', tail_entity='Beijing')\"\nStep2: Find the count of marathons in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the difference in the 5 hoops between bulgaria and belarus?": "None",
    "who produced the last track of the album?": "## Target type: {'Producer(s)'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Producer(s) of output_of_query3\nQuery4: \"get_information(relation='Producer(s)', head_entity='output_of_query3')\"",
    "what is the largest penalty?": "None",
    "what comes before donny hathaway": "None",
    "what is the number of games played at olympic stadium this season?": "## Target type: {number}\n## Query:\nStep1: Find the Games played at Olympic Stadium this season\nQuery1: \"get_information(relation='Game site', tail_entity='Olympic Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams have the same amount of runners-up as maccabi tel aviv?": "None",
    "which school left before bendle?": "## Target type: {school}\n## Query:\nStep1: Find the entity named Bendle\nQuery1: \"get_information(relation='High School', tail_entity='Bendle')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the High School of output_of_query4\nQuery5: \"get_information(relation='High School', head_entity='output_of_query4')\"",
    "list each representative from conservative party": "## Target type: {representative}\n## Query:\nStep1: Find the entity named Conservative Party\nQuery1: \"get_information(relation='Party', tail_entity='Conservative Party')\"\nStep2: Find the representative with the party of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many games were produced in 1984?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that Year is 1984\nQuery1: \"get_information(relation='Year', tail_entity='1984')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many athletes only took 3:02 minutes to complete the heat?": "None",
    "how many communities have a population of zero?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has a population of zero\nQuery1: \"get_information(relation='Population', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "has eightysix been credited for a song with no other writers?": "## Target type: {song credit}\n## Query:\nStep1: Find the entity of Eightysix\nQuery1: \"get_information(relation='Artist(s)', tail_entity='Eightysix')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Writer(s) of output_of_query2\nQuery3: \"get_information(relation='Writer(s)', head_entity='output_of_query2')\"\nStep4: Find the count of writers in output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Check if the count of output_of_query4 is 1 and there are no other writers\nQuery5: \"if(count='output_of_query4', value1=1, value2=0)\"",
    "who is next to tony fisher in ascending order?": "## Target type: {Player}\n## Query:\nStep1: Find the entity named Tony Fisher\nQuery1: \"get_information(relation='Player', tail_entity='Tony Fisher')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what year comes after 1995?": "None",
    "which owner has the most networks?": "## Target type: {owner}\n## Query:\nStep1: Find all owners' information\nQuery1: \"get_information(relation='Owner')\"\nStep2: Find the owner with the most networks\nQuery2: \"max(set='output_of_query1')\"",
    "which circuit is ranked last?": "## Target type: {circuit}\n## Query:\nStep1: Find the row_number that is the last one\nQuery1: \"get_information(relation='row_number', tail_entity>='last')\"\nStep2: Find the circuit of output_of_query1\nQuery2: \"get_information(relation='Circuit', head_entity='output_of_query1')\"",
    "how many ships are named after a state?": "None",
    "how many swimmers were there from the united states in the top five in the semifinals?": "None",
    "episodes have been dubbed?": "None",
    "how many different films has domingo appeared in?": "None",
    "what is the difference in the year published between iso/iec 15288 and iso/ice 20000-1?": "None",
    "which competitor finished immediately after karl hahnel?": "## Target type: {competitor}\n## Query:\nStep1: Find the entity named Karl H\u00e4hnel\nQuery1: \"get_information(relation='Name', tail_entity='Karl H\u00e4hnel')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the competitor of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "name a reservoir that has an altitude of more than 100 but less than 500.": "None",
    "according to the table, what is the last title that spicy horse produced?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which weights more a ut507 salvage tug or a ut515 salvage tug?": "## Target type: {Type}\n## Query:\nStep1: Find the entity named UT507 Salvage Tug\nQuery1: \"get_information(relation='Type', tail_entity='UT507 Salvage Tug')\"\nStep2: Find the entity named UT515 Salvage Tug\nQuery2: \"get_information(relation='Type', tail_entity='UT515 Salvage Tug')\"\nStep3: Find the weight of output_of_query1\nQuery3: \"get_information(relation='Displacement', head_entity='output_of_query1')\"\nStep4: Find the weight of output_of_query2\nQuery4: \"get_information(relation='Displacement', head_entity='output_of_query2')\"\nStep5: Compare the weights of output_of_query3 and output_of_query4\nQuery5: \"compare(output_of_query3, output_of_query4)\"",
    "which year has the most singles?": "None",
    "which democrat had the top percentage?": "None",
    "did they play at lionel roberts park or andre kamperveen stadion more?": "## Target type: {venue}\n## Query:\nStep1: Find the entity that venue is Lionel Roberts Park\nQuery1: \"get_information(relation='Venue', tail_entity='Lionel Roberts Park')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity that venue is Andre Kamperveen Stadion\nQuery3: \"get_information(relation='Venue', tail_entity='Andre Kamperveen Stadion')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"greater_than(set1='output_of_query2', set2='output_of_query4')\"",
    "who came after south korea with the most gold medals won?": "None",
    "what is the difference between the start and end of onjo's reign?": "None",
    "what was the only team to not have a deficit?": "None",
    "in what program was daniels in after planet sheen?": "## Target type: {program}\n## Query:\nStep1: Find the entity named Planet Sheen\nQuery1: \"get_information(relation='Title', tail_entity='Planet Sheen')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "did belgium or malta lose by the most points?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Belgium\nQuery1: \"get_information(relation='Opponent', tail_entity='Belgium')\"\nStep2: Find the entity named Malta\nQuery2: \"get_information(relation='Opponent', tail_entity='Malta')\"\nStep3: Find the Result of output_of_query1\nQuery3: \"get_information(relation='Result', tail_entity='output_of_query1')\"\nStep4: Find the Result of output_of_query2\nQuery4: \"get_information(relation='Result', tail_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query3', set2='output_of_query4')\" \nStep6: Get the country with max difference\nQuery6: \"argmax(set='output_of_query5')\"",
    "how hard is a diamond?": "## Target type: {'Hardness (Mohs' scale)'}\n## Query:\nStep1: Find the entity that is a diamond\nQuery1: \"get_information(relation='Material', tail_entity='diamond')\"\nStep2: Find the hardness of output_of_query1\nQuery2: \"get_information(relation='Hardness (Mohs' scale)', head_entity='output_of_query1')\"",
    "is brandon pettigrew above 250 pounds": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Brandon Pettigrew\nQuery1: \"get_information(relation='Player', tail_entity='Brandon Pettigrew')\"\nStep2: Find the weight of output_of_query1\nQuery2: \"get_information(relation='Weight', head_entity='output_of_query1')\"\nStep3: Check if the weight is above 250 pounds\nQuery3: \"if output_of_query2 > 250 then 'yes' else 'no'\"",
    "what was the number of players transferred who were colombian nationals?": "None",
    "what was the result of the next game after the date of january 15, 1954?": "None",
    "what is the difference between the number of successful defenses by joe calzaghe and robert stieglitz?": "None",
    "what week was their last loss?": "None",
    "which kitty wells album had the most singles released?": "None",
    "which dates had below 80,000 in attendance?": "## Target type: {dates}\n## Query:\nStep1: Find the entity that has the relation of Attendance below 80,000\nQuery1: \"get_information(relation='Attendance', tail_entity<'80000')\"\nStep2: Get the dates of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "which state was the birthplace for the most american 2010 olympic women's hockey roster?": "None",
    "how many aerial tramways are located in france?": "## Target type: {number of aerial tramways}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Country', tail_entity='France')\"\nStep2: Find the aerial tramways located in output_of_query1\nQuery2: \"get_information(relation='Tramway', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which township has the least land area?": "None",
    "what is the number of teams that used a ford engine?": "None",
    "what was the last version of this song to be created in 2005?": "None",
    "how many competitors were from the soviet union?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Soviet Union\nQuery1: \"get_information(relation='Country', tail_entity='Soviet Union')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which season places first in their division?": "## Target type: {season}\n## Query:\nStep1: Find the entity that places first in their division\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "how many rankings are there?": "None",
    "what was the name of the first race?": "## Target type: {race title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the race title of output_of_query3\nQuery4: \"get_information(relation='Race Title', head_entity='output_of_query3')\"",
    "what is the difference between the number of awards won in 1988 and the number of awards won in 1995?": "None",
    "what community has the largest area in acres?": "## Target type: {community}\n## Query:\nStep1: Find the entity with the relation of Area\nQuery1: \"get_information(relation='Area')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Area\nQuery3: \"get_information(relation='Area', tail_entity='output_of_query2')\"\nStep4: Find the community of output_of_query3\nQuery4: \"get_information(relation='Community', head_entity='output_of_query3')\"",
    "what is the last location on the chart": "## Target type: {location}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "if violet owned a texas memory systems ramsan 630, what kind of interface would it have?": "## Target type: {interface}\n## Query:\nStep1: Find the entity named Texas Memory Systems RamSan-630\nQuery1: \"get_information(relation='Device', tail_entity='Texas Memory Systems RamSan-630')\"\nStep2: Find the interface of output_of_query1\nQuery2: \"get_information(relation='Interface', head_entity='output_of_query1')\"",
    "which division has the least entries?": "None",
    "what was the total number of winners before the tour was canceled?": "None",
    "which club member has the farthest shot put?": "None",
    "how many different ranks exist for karate belts?": "## Target type: {number}\n## Query:\nStep1: Find all the ranks of Karate belts\nQuery1: \"get_information(relation='Rank')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the team that last played on may 17th ,2009": "None",
    "what was the title of terence cuneo's first work?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "was their total record positive or negative?": "## Target type: {'Record'}\n## Query:\nStep1: Find the the record of the team\nQuery1: \"get_information(relation='Record')\"\nStep2: Get the output_of_query1\nQuery2: \"output_of_query1\"",
    "there are no landline prefixes for what 4 companies?": "None",
    "what is the number of away games ?": "None",
    "what is the difference in senate opposed between john quincy adams and james garfield?": "None",
    "what was the difference in runs between the two teams on september 15?": "## Target type: {difference in runs}\n## Query:\nStep1: Find the game on September 15\nQuery1: \"get_information(relation='Date', tail_entity='September 15')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Split the Score into two parts\nQuery3: \"split(string='output_of_query2', delimiter=' - ')\"\nStep4: Find the difference between the two parts of output_of_query3\nQuery4: \"subtract(set1='output_of_query3[0]', set2='output_of_query3[1]')\"",
    "how many times did luis fortuno appoint someone on the list?": "None",
    "number of gangster games released by developer rockstar north": "None",
    "what is the largest amount of seats listed?": "## Target type: {seats}\n## Query:\nStep1: Find the entity with the relation of Seats\nQuery1: \"get_information(relation='Seats')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "what year did monaco ratify more international human rights treaties than they did in 1979?": "None",
    "what was the most marathons that pavel loskutov ran in any year?": "None",
    "did tianjin teda or qingdao jonoon have a higher average attendance?": "## Target type: {club}\n## Query:\nStep1: Find the entity that the Club is Tianjin Teda\nQuery1: \"get_information(relation='Club', tail_entity='Tianjin Teda')\"\nStep2: Find the average attendance of output_of_query1\nQuery2: \"get_information(relation='Average attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that the Club is Qingdao Jonoon\nQuery3: \"get_information(relation='Club', tail_entity='Qingdao Jonoon')\"\nStep4: Find the average attendance of output_of_query3\nQuery4: \"get_information(relation='Average attendance', head_entity='output_of_query3')\"\nStep5: Compare the average attendance of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the total number of people driving dodge rams?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Truck(s) as Dodge Ram\nQuery1: \"get_information(relation='Truck(s)', tail_entity='Dodge Ram')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who finished before nate boyle for the united states?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Nate Boyle\nQuery1: \"get_information(relation='Name', tail_entity='Nate Boyle')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which two countries has the most number of participants?": "None",
    "name a lake that is no larger than 100 sq km.": "None",
    "what year did the rush allow the most goals?": "None",
    "how many chiefs are from new york?": "## Target type: {number}\n## Query:\nStep1: Find all the entities whose State is New York\nQuery1: \"get_information(relation='State', tail_entity='New York')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\n\nNote: In this case, \"chiefs\" is not defined in the given schema. If \"chiefs\" refers to the entities with the Title \"Chief\", you can add an additional condition in Step1 to filter entities with the Title \"Chief\".",
    "who is the only player to have a negative yard average?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Avg. that has a negative value\nQuery1: \"get_information(relation='Avg.', value<0)\"\nStep2: Get the entity of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which song did babou sing the week before he sang \"can't buy me love\"?": "## Target type: {song}\n## Query:\nStep1: Find the entity that song choice is \"Can't Buy Me Love\"\nQuery1: \"get_information(relation='Song choice', tail_entity='Can't Buy Me Love')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the song choice of output_of_query4\nQuery5: \"get_information(relation='Song choice', head_entity='output_of_query4')\"",
    "which president who was an independent also had the longest reign for an independent?": "## Target type: {president}\n## Query:\nStep1: Find the entity with the relation of Party as 'Independent'\nQuery1: \"get_information(relation='Party', tail_entity='Independent')\"\nStep2: Find the reigns of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max reign of output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max reign\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which child was the first to die?": "None",
    "have at least 5 democrats from brooklyn been elected?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Brooklyn\nQuery1: \"get_information(relation='Counties Represented', tail_entity='Brooklyn')\"\nStep2: Find the entities with the relation of Party as Democrat\nQuery2: \"get_information(relation='Party', tail_entity='Democrat')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Check if the count of output_of_query1 is greater than or equal to 5\nQuery4: \"check(count='output_of_query3', operator='greater_than_or_equal', value=5)\"",
    "who is featured in his song \"believe me\"?": "None",
    "who was the first canadian to place third?": "None",
    "which year had the most credits?": "None",
    "what are the total number of nato naval blockades?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Type as 'NATO naval blockade'\nQuery1: \"get_information(relation='Type', tail_entity='NATO naval blockade')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the make of both jeff gordon's and jimmie johnson's race car?": "## Target type: {make}\n## Query:\nStep1: Find the entity named Jeff Gordon\nQuery1: \"get_information(relation='Driver', tail_entity='Jeff Gordon')\"\nStep2: Find the make of output_of_query1\nQuery2: \"get_information(relation='Make', head_entity='output_of_query1')\"\nStep3: Find the entity named Jimmie Johnson\nQuery3: \"get_information(relation='Driver', tail_entity='Jimmie Johnson')\"\nStep4: Find the make of output_of_query3\nQuery4: \"get_information(relation='Make', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the difference in medal count between slovakia and mexico?": "None",
    "what is the difference in years between constiuency 1 and 2?": "None",
    "how many cities have 1926 as their incorporation date?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Incorporation date is 1926\nQuery1: \"get_information(relation='Incorporation date', tail_entity='1926')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was benjamin contee a part of the anti-administration or the pro-administration?": "None",
    "how many shows were modern dramas?": "## Target type: {number}\n## Query:\nStep1: Find the shows with the genre of Modern drama\nQuery1: \"get_information(relation='Genre', tail_entity='Modern drama')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the last code listed?": "## Target type: {code}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Code of output_of_query3\nQuery4: \"get_information(relation='Code', head_entity='output_of_query3')\"",
    "which willy deville album was released after savoir faire": "None",
    "which region in the danish part has the highest population?": "None",
    "how many nations ranked in last with 0 total medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations with 0 total medals\nQuery1: \"get_information(relation='Total', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the first person to withdraw from the race?": "None",
    "what is the last title on the chart?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which region is above the west": "None",
    "how many players won at least $400?": "## Target type: {number}\n## Query:\nStep1: Find the players who won at least $400\nQuery1: \"get_information(relation='Money ($)', tail_entity>='400')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the united states launched the first ship, but what type was it?": "None",
    "who is the first away team on the list?": "## Target type: {away team}\n## Query:\nStep1: Find the row_number that is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the away team of output_of_query1\nQuery2: \"get_information(relation='Away Team', head_entity='output_of_query1')\"",
    "what is the total number of liatongus militaris castelanu released?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Liatongus militaris castelanu\nQuery1: \"get_information(relation='Species', tail_entity='Liatongus militaris castelanu')\"\nStep2: Find the Total released of output_of_query1\nQuery2: \"get_information(relation='Total released', head_entity='output_of_query1')\"",
    "what movies did greenstreet act for in 1946?": "## Target type: {movies}\n## Query:\nStep1: Find the entity named Greenstreet\nQuery1: \"get_information(relation='Role', tail_entity='Greenstreet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity at Year 1946\nQuery3: \"get_information(relation='Year', tail_entity='1946')\"\nStep4: Find the movies of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is. the last feature on the chart": "## Target type: {'Features'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Features of output_of_query3\nQuery4: \"get_information(relation='Features', head_entity='output_of_query3')\"",
    "which race was shown on a top tv network?": "## Target type: {Race Title}\n## Query:\nStep1: Find the entity that TV is a top TV network\nQuery1: \"get_information(relation='TV', tail_entity='top TV network')\"\nStep2: Find the Race Title of output_of_query1\nQuery2: \"get_information(relation='Race Title', head_entity='output_of_query1')\"",
    "which paralymics year had the largest number of medals overall?": "## Target type: {Paralympics year}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the Paralympics year of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "which has the most land area in miles?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Land area (mi\u00b2)\nQuery1: \"get_information(relation='Land area (mi\u00b2)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Land area (mi\u00b2)\nQuery3: \"get_information(relation='Land area (mi\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the Township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "which other athlete from the us ahs the same amount of gold medals as seth wescott?": "None",
    "what is the total number of losses for the wisconsin badgers women's ice hockey team?": "None",
    "what was the next film chu did after hero of swallow?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Hero of Swallow\nQuery1: \"get_information(relation='Title', tail_entity='Hero of Swallow')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "who won the most marlboro tours?": "None",
    "how many times did they participate in the olympic games?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Olympic Games\nQuery1: \"get_information(relation='Competition', tail_entity='Olympic Games')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the last district created?": "None",
    "what date was the first ship launched?": "None",
    "how many skaters had points greater than 2600?": "None",
    "which locations had no women casualties?": "## Target type: {locations}\n## Query:\nStep1: Find the locations where Women casualties are '-'\nQuery1: \"get_information(relation='Women', tail_entity='-')\"\nStep2: Get the locations of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"",
    "what is the total number of times qormi won a game?": "None",
    "what version is the only one to appear in a movie scene?": "## Target type: {version}\n## Query:\nStep1: Find the row_number that matches the movie scene condition\nQuery1: \"get_information(relation='Comment', tail_entity='movie scene')\"\nStep2: Find the version of output_of_query1\nQuery2: \"get_information(relation='Version', head_entity='output_of_query1')\"",
    "what was the total attendance in january 2009?": "None",
    "were there any games that were played before 6 pm?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the games that have Time before 6 pm\nQuery1: \"get_information(relation='Time', tail_entity<'6 pm')\"\nStep2: Check if output_of_query1 is empty or not\nQuery2: \"is_not_empty(set='output_of_query1')\"",
    "what was the first number one song of 2014?": "## Target type: {'Song title'}\n## Query:\nStep1: Find the entity in row_number that is '1'\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Song title of output_of_query1\nQuery2: \"get_information(relation='Song title', head_entity='output_of_query1')\"",
    "how many are symphonic poems?": "## Target type: {number}\n## Query:\nStep1: Find the row_number with the relation of Genre and value of symphonic poem\nQuery1: \"get_information(relation='Genre', tail_entity='symphonic poem')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which single rated highest on the us mainstream rock chart?": "None",
    "which episode aired in the same month as \"antarctica\"?": "None",
    "what was the last year they did not qualify?": "None",
    "what was the score of the first game blackpool played in?": "None",
    "maria paris came in sixth place. what is her nationality?": "None",
    "who had the most victories?": "None",
    "indicate how many of the buildings in oakland which stand at least 200 ft tall have more than 20 floors.": "## Target type: {number}\n## Query:\nStep1: Find the buildings in Oakland\nQuery1: \"get_information(relation='Coordinates', tail_entity='Oakland')\"\nStep2: Find the buildings with height at least 200 ft\nQuery2: \"get_information(relation='Height (ft)', tail_entity>='200')\"\nStep3: Find the buildings with more than 20 floors in output_of_query2\nQuery3: \"get_information(relation='Floors', tail_entity>'20')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of locomotives given to southern pacific?": "None",
    "what was the only show that ran on the channel star one?": "## Target type: {Serial Name}\n## Query:\nStep1: Find the entity named Star One\nQuery1: \"get_information(relation='Channel', tail_entity='Star One')\"\nStep2: Find the Serial Name of output_of_query1\nQuery2: \"get_information(relation='Serial Name', head_entity='output_of_query1')\"",
    "what is the last model?": "## Target type: {'Model'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "how many times has charmaine sheh won on a variety show?": "None",
    "which month held the most winchester 400 races?": "## Target type: {month}\n## Query:\nStep1: Find all the Year with the relation of Winner\nQuery1: \"get_information(relation='Year')\"\nStep2: Find all the Date of output_of_query1\nQuery2: \"get_information(relation='Date', tail_entity='output_of_query1')\"\nStep3: Get the month of output_of_query2\nQuery3: \"substring(set='output_of_query2', start_index='0', end_index='2')\"\nStep4: Find the month that appears the most\nQuery4: \"mode(set='output_of_query3')\"",
    "how many more casualties occurred on may 6 compared to may 4?": "None",
    "this starting pitcher opened for the astros against the giants and the dodgers in the early 70s.": "None",
    "what is the only network owned by national polytechnic institute?": "## Target type: {network name}\n## Query:\nStep1: Find the entity that Owner is National Polytechnic Institute\nQuery1: \"get_information(relation='Owner', tail_entity='National Polytechnic Institute')\"\nStep2: Find the network name of output_of_query1\nQuery2: \"get_information(relation='Network name', head_entity='output_of_query1')\"",
    "who is the last name to qualify?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which country has the least amount of total goals?": "None",
    "how many new points did nikolay davydenko have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Nikolay Davydenko\nQuery1: \"get_information(relation='Player', tail_entity='Nikolay Davydenko')\"\nStep2: Find the new points of output_of_query1\nQuery2: \"get_information(relation='New points', head_entity='output_of_query1')\"",
    "what was the first work completed?": "None",
    "what is the difference in election year between the first and second members on the list?": "None",
    "what is the title, in english, of the last song on this album?": "## Target type: {'English Translation of Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the English Translation of Title of output_of_query3\nQuery4: \"get_information(relation='English Translation', head_entity='output_of_query3')\"",
    "how many competitions were something other than a friendly match?": "None",
    "what is the total number of pollutants that are measured with an lb/mmbtu unit?": "## Target type: {number}\n## Query:\nStep1: Find the pollutants with the relation of Units as \"lb/mmbtu\"\nQuery1: \"get_information(relation='Units', tail_entity='lb/mmbtu')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the first assistant secretary of the navy?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many consecutive titles did bridgestone win?": "None",
    "what is the difference of silver medals between south africa and kenya?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named South Africa\nQuery1: \"get_information(relation='Nation', tail_entity='South Africa')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the entity named Kenya\nQuery3: \"get_information(relation='Nation', tail_entity='Kenya')\"\nStep4: Find the Silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "name the male and female winners for 2013.": "None",
    "what is the next code name after sst1?": "## Target type: {code name}\n## Query:\nStep1: Find the entity named SST1\nQuery1: \"get_information(relation='Code name', tail_entity='SST1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Code name of output_of_query4\nQuery5: \"get_information(relation='Code name', head_entity='output_of_query4')\"",
    "how many consecutive times was south africa the host country?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named South Africa\nQuery1: \"get_information(relation='Host country', tail_entity='South Africa')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who produced \"listen!!!\" but not \"hip hop hooray\"?": "## Target type: {producer}\n## Query:\nStep1: Find the entity named \"Listen!!!\"\nQuery1: \"get_information(relation='Title', tail_entity='Listen!!!')\"\nStep2: Find the producers of output_of_query1\nQuery2: \"get_information(relation='Producer(s)', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Hip Hop Hooray\"\nQuery3: \"get_information(relation='Title', tail_entity='Hip Hop Hooray')\"\nStep4: Find the producers of output_of_query3\nQuery4: \"get_information(relation='Producer(s)', head_entity='output_of_query3')\"\nStep5: Get the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "how many jurisdictions are listed in the chart?": "None",
    "how many games did this team play against spain?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Opponent', tail_entity='Spain')\"\nStep2: Find the number of games against output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the first discipline listed on this chart?": "## Target type: {discipline}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Discipline of output_of_query3\nQuery4: \"get_information(relation='Discipline', head_entity='output_of_query3')\"",
    "what does each airport have in common?": "None",
    "how many countries have more than 5 medals in total?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity that is Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose total medals is larger than 5\nQuery3: \"get_information(relation='Total', tail_entity>'5')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which nationality had the most notable poets?": "None",
    "what is the total of tournament on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "on what date did they play the broncos but end up losing the game?": "None",
    "what name comes next fairfield?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Fairfield\nQuery1: \"get_information(relation='Name', tail_entity='Fairfield')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many different series are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the Series listed\nQuery1: \"get_information(relation='Series')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long has it been since the madison college wolfpack was established?": "None",
    "how many plants had more than 2000 employees laid off?": "None",
    "how many roles start with the letter v?": "None",
    "what number of airlines use the first letter of their name in their icao?": "None",
    "which roster letter winner weighed the least?": "None",
    "which years did they have at least 1 home win?": "None",
    "how many more goals did archie thompson score than billy celeski?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Archie Thompson\nQuery1: \"get_information(relation='Name', tail_entity='Archie Thompson')\"\nStep2: Find the goals scored by output_of_query1\nQuery2: \"get_information(relation='Goals scored', head_entity='output_of_query1')\"\nStep3: Find the entity named Billy Celeski\nQuery3: \"get_information(relation='Name', tail_entity='Billy Celeski')\"\nStep4: Find the goals scored by output_of_query3\nQuery4: \"get_information(relation='Goals scored', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "which municipality was the first to be established?": "## Target type: {municipality}\n## Query:\nStep1: Find the entity with the relation of Established that has the lowest value.\nQuery1: \"get_information(relation='Established', tail_entity>='lowest')\"\nStep2: Get the municipality of output_of_query1\nQuery2: \"get_information(relation='Municipality', head_entity='output_of_query1')\"",
    "what is the last listed pennant?": "## Target type: {'Pennant'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Pennant of output_of_query3\nQuery4: \"get_information(relation='Pennant', head_entity='output_of_query3')\"",
    "how many drivers earned 5 bonus each in the race?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the drivers that earned 5 bonus each\nQuery1: \"get_information(relation='Bonus', tail_entity='5')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many locomotives make the list of the largest locomotives?": "## Target type: {number of locomotives}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the tramways were built before the 1970s?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year built\nQuery1: \"get_information(relation='Year built')\"\nStep2: Find the entities with year built before the 1970s\nQuery2: \"get_information(relation='Year built', tail_entity<='1970')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the top placed country?": "## Target type: {country}\n## Query:\nStep1: Find the entity in Place that appears first\nQuery1: \"get_information(relation='Place', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "which nba team has more retired jerseys than any other nba team?": "None",
    "what is the total of nhl entry draft picks did the islanders' do in 2006?": "None",
    "which title has the most length?": "## Target type: {title}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the difference between the number of times the record has been set by the czech republic and the number of times the record has been set by china?": "None",
    "which frequency has the most stations?": "## Target type: {frequency}\n## Query:\nStep1: Find the entity with the relation of Frequency\nQuery1: \"get_information(relation='Frequency')\"\nStep2: Find the frequency that has the most stations\nQuery2: \"get_information(relation='Frequency', tail_entity>='most')\"",
    "which driver has his grid at 2?": "## Target type: {driver}\n## Query:\nStep1: Find the entity whose Grid is 2\nQuery1: \"get_information(relation='Grid', tail_entity='2')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "which was the first chinese star map known to have been created?": "## Target type: {'Map or catalog'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Map or catalog of output_of_query3\nQuery4: \"get_information(relation='Map or catalog', head_entity='output_of_query3')\"",
    "alphabetically what is the largest consecutive amount of states that use lethal injection?": "None",
    "who was the first person of the race to break the nine minute mark?": "None",
    "tell me the number of winning seasons they had on the list.": "None",
    "what is the number of cities in new jersey on the top ten list?": "None",
    "which genre appears the most on this chart?": "None",
    "how many times is the frequency greater than 95?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Frequency\nQuery1: \"get_information(relation='Frequency')\"\nStep2: Find the entities with frequency greater than 95\nQuery2: \"get_information(relation='Frequency', tail_entity>'95')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long did it take richard rodgers to complete egot?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity named Richard Rodgers\nQuery1: \"get_information(relation='Name', tail_entity='Richard Rodgers')\"\nStep2: Find the EGOT completed year of output_of_query1\nQuery2: \"get_information(relation='EGOT completed', head_entity='output_of_query1')\"\nStep3: Find the year of EGOT completed of output_of_query2\nQuery3: \"get_information(relation='EGOT completed', tail_entity='output_of_query2')\"\nStep4: Calculate the time duration between EGOT completed year and original year\nQuery4: \"calculate_time_difference(start_year='output_of_query2', end_year='output_of_query3')\"",
    "previous to being on the bmw motorsport team, which team was he on?": "None",
    "which model has the largest screen size?": "None",
    "in what year did ken harnden participate in more than one competition?": "None",
    "what is the difference between the number of onthophagus obliquus species released and the number of sisyphus rubrus paschalidis released?": "None",
    "which team went finished later in the tournament, st. john's or north carolina a&t?": "None",
    "who was the last woman to win the title of miss northern ireland to achieve a top 30 placement at miss world?": "## Target type: {Miss Northern Ireland}\n## Query:\nStep1: Find the entity with the title of Miss Northern Ireland\nQuery1: \"get_information(relation='Miss Northern Ireland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the row with max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the entity with the title of Miss Northern Ireland of output_of_query4\nQuery5: \"get_information(relation='Miss Northern Ireland', head_entity='output_of_query4')\"\nStep6: Find the placement at Miss World of output_of_query5\nQuery6: \"get_information(relation='Placement at Miss World', head_entity='output_of_query5')\"\nStep7: Find the top 30 placement at Miss World\nQuery7: \"get_information(relation='Placement at Miss World', tail_entity<='Top 30')\"\nStep8: Find the intersection of output_of_query6 and output_of_query7\nQuery8:",
    "what was the largest consecutive wins did the brisbane broncos have in their 2007 season?": "None",
    "what is the number of world indoor championships appearances gordeeva has made?": "## Target type: {number of appearances}\n## Query:\nStep1: Find the entity named Gordeeva\nQuery1: \"get_information(relation='Name', tail_entity='Gordeeva')\"\nStep2: Find the entity that has the relation of Competition and appears as World Indoor Championships\nQuery2: \"get_information(relation='Competition', tail_entity='World Indoor Championships')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the first spec ops mission not counting any none spaces?": "None",
    "what year was the worst time given?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "who is at the top of the list?": "None",
    "which park has the least land area?": "None",
    "how many canadian players are there in the 1974 nhl amateur draft?": "None",
    "who won after arazi?": "None",
    "what race is previous of race of hungary?": "None",
    "name the only team whose percentage change was positive.": "None",
    "how many games did the university of florida win by at least 10 points?": "None",
    "does the s01 model have vibration reduction or does the s30 model?": "None",
    "which driver has the same number as his/her position?": "## Target type: {driver}\n## Query:\nStep1: Find the entity whose Position is the same as its Number\nQuery1: \"get_information(relation='Pos', tail_entity='No')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "what is the total number of free fees?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Fee\nQuery1: \"get_information(relation='Fee')\"\nStep2: Find the free fees in output_of_query1\nQuery2: \"get_information(relation='Fee', tail_entity='Free')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total prize money for the contestants from california?": "None",
    "distance in first competition": "None",
    "what is the largest negative goal difference?": "## Target type: {goal difference}\n## Query:\nStep1: Find the entity with the relation of Goal Difference\nQuery1: \"get_information(relation='Goal Difference')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Goal Difference\nQuery3: \"get_information(relation='Goal Difference', tail_entity='output_of_query2')\"",
    "what is the only part to be first released in 2008?": "None",
    "at most, how many of these teams have never scored a goal?": "None",
    "what is the difference between the qualfying time in 1967 and 1965?": "## Target type: {time difference}\n## Query:\nStep1: Find the entity in Qual that corresponds to the year 1967\nQuery1: \"get_information(relation='Year', tail_entity='1967')\"\nStep2: Get the Qual of output_of_query1\nQuery2: \"get_information(relation='Qual', head_entity='output_of_query1')\"\nStep3: Find the entity in Qual that corresponds to the year 1965\nQuery3: \"get_information(relation='Year', tail_entity='1965')\"\nStep4: Get the Qual of output_of_query3\nQuery4: \"get_information(relation='Qual', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 - output_of_query4\"",
    "how many stadiums hold ore than 2000 people?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Capacity that is larger than 2000\nQuery1: \"get_information(relation='Capacity', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team had the same amount of total points as c.d. altetico balboa?": "None",
    "when was his last competition?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity with the relation of Competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Competition\nQuery3: \"get_information(relation='Competition', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many got, at most, 8.5 in the interview?": "None",
    "which is the last versions on the chart": "## Target type: {versions}\n## Query:\nStep1: Find the row with the maximum row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number from output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the versions from output_of_query3\nQuery4: \"get_information(relation='Versions', head_entity='output_of_query3')\"",
    "who was born before henrietta churchhill?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Henrietta Churchhill\nQuery1: \"get_information(relation='Name', tail_entity='Henrietta Churchhill')\"\nStep2: Find the birth date of output_of_query1\nQuery2: \"get_information(relation='Birth date', head_entity='output_of_query1')\"\nStep3: Find the entities with birth date before output_of_query2\nQuery3: \"get_information(relation='Birth date', tail_entity<'output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the difference in the number of combined days between kevin steen and davey richards?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Kevin Steen\nQuery1: \"get_information(relation='Wrestler', tail_entity='Kevin Steen')\"\nStep2: Find the combined days of output_of_query1\nQuery2: \"get_information(relation='Combined days', head_entity='output_of_query1')\"\nStep3: Find the entity named Davey Richards\nQuery3: \"get_information(relation='Wrestler', tail_entity='Davey Richards')\"\nStep4: Find the combined days of output_of_query3\nQuery4: \"get_information(relation='Combined days', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who was the last deputy judge with finland nationality?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with Nationality as Finland\nQuery1: \"get_information(relation='Nationality', tail_entity='Finland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which nation placed first but did not have a football league trophy?": "None",
    "what is the only community in south asia?": "## Target type: {community}\n## Query:\nStep1: Find the community in South Asia\nQuery1: \"get_information(relation='Region', tail_entity='South Asia')\"\nStep2: Get the only community in output_of_query1\nQuery2: \"get_information(relation='Community', head_entity='output_of_query1')\"",
    "what year(s) had the lowest number of breeders cup juvenile starters?": "None",
    "who had the most number of total assists?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Total Assists\nQuery1: \"get_information(relation='Total Assists')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Total Assists\nQuery3: \"get_information(relation='Total Assists', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which municipality has the most registered items?": "None",
    "who was picked after roy lester?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Roy Lester\nQuery1: \"get_information(relation='Player', tail_entity='Roy Lester')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "according to the list of alpine peaks by prominence, is pizzo di coca more/less than 2000 m?": "## Target type: {'more/less'}\n## Query:\nStep1: Find the entity named Pizzo di Coca\nQuery1: \"get_information(relation='Peak', tail_entity='Pizzo di Coca')\"\nStep2: Find the Prominence of output_of_query1\nQuery2: \"get_information(relation='Prominence (m)', head_entity='output_of_query1')\"\nStep3: Check if output_of_query2 is more or less than 2000 m\nQuery3: \"if(set='output_of_query2', condition='output_of_query2 > 2000', true='more', false='less')\"",
    "what is the number of lakes that have an area less than 100 km squared?": "None",
    "how many pylons are at least 80 meters tall?": "None",
    "city in which doris lessing made her \"guest of honor\" appearance": "None",
    "which had a separation of more than ce, ef or ai?": "None",
    "which opponent has the most wins": "None",
    "what time is the only game in august?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity that Date is August\nQuery1: \"get_information(relation='Date', tail_entity='August')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many times was guam an opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Guam\nQuery1: \"get_information(relation='Opponents', tail_entity='Guam')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many orbit pairs total are listed?": "None",
    "what city comes next after denver, colorado": "## Target type: {city}\n## Query:\nStep1: Find the entity named Denver, Colorado\nQuery1: \"get_information(relation='City', tail_entity='Denver, Colorado')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the City of output_of_query4\nQuery5: \"get_information(relation='City', head_entity='output_of_query4')\"",
    "each baseplate is from which american state?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes')\"\nStep2: Get the substring of output_of_query1 after \"Serials issued:\"\nQuery2: \"substring(string='output_of_query1', start='Serials issued:')\"\nStep3: Get the substring of output_of_query2 between \"AAA1000\" and \"ADJ99993\"\nQuery3: \"substring(string='output_of_query2', start='AAA1000', end='ADJ99993')\"\nStep4: Split output_of_query3 by \",\"\nQuery4: \"split(string='output_of_query3', delimiter=',')\"\nStep5: Get the set of distinct elements in output_of_query4\nQuery5: \"distinct(set='output_of_query4')\"",
    "which county has the most area?": "None",
    "what is the subject listed after appealing for peace?": "None",
    "how many movies have links to other wikipedia pages about them?": "None",
    "how many townships are there in pope county?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Township\nQuery1: \"get_information(relation='Township')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many sites were designated for both biological and geological interest?": "None",
    "which was the last team played?": "None",
    "what is the name of the last player on this chart?": "## Target type: {'Player'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what event happened previous to the birth of john the baptist?": "None",
    "how many arcade games were released before 1979?": "None",
    "how many of the listed compositions included at least 2 acts?": "None",
    "how many parties had zero councils?": "## Target type: {number of parties}\n## Query:\nStep1: Find the entity with the relation of New council is 0\nQuery1: \"get_information(relation='New council', tail_entity='0')\"\nStep2: Find the Parties of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many tracks in word...life were produced by buckwild?": "None",
    "what are the total number of distinct countries?": "## Target type: {number}\n## Query:\nStep1: Find all the countries\nQuery1: \"get_information(relation='Country')\"\nStep2: Calculate the count of distinct countries\nQuery2: \"count(set='output_of_query1')\"",
    "did peru win more or less gold medals than chile?": "## Target type: {'Gold medals'}\n## Query:\nStep1: Find the entity named Peru\nQuery1: \"get_information(relation='Nation', tail_entity='Peru')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Chile\nQuery3: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep4: Find the Gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Compare the Gold medals of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "how many institutions were founded before 1950?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entities with the relation of Founded that are before 1950\nQuery2: \"get_information(relation='Founded', tail_entity<'1950')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the previous film to air before collateral damage?": "## Target type: {film}\n## Query:\nStep1: Find the entity named Collateral Damage\nQuery1: \"get_information(relation='Film', tail_entity='Collateral Damage')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what is the total about of movies venus pictures produced for film director c.v. sridhar?": "None",
    "cornfish snow and cornfish spring are both what size?": "## Target type: {size}\n## Query:\nStep1: Find the entity named Cornish Snow\nQuery1: \"get_information(relation='Name', tail_entity='Cornish Snow')\"\nStep2: Find the size of output_of_query1\nQuery2: \"get_information(relation='Size', head_entity='output_of_query1')\"\nStep3: Find the entity named Cornish Spring\nQuery3: \"get_information(relation='Name', tail_entity='Cornish Spring')\"\nStep4: Find the size of output_of_query3\nQuery4: \"get_information(relation='Size', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "the only rural community on the list": "None",
    "what is the number of drivers that finished the 2008 canadian grand prix before jarno trulli?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity named Jarno Trulli\nQuery1: \"get_information(relation='Driver', tail_entity='Jarno Trulli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the drivers that finished before output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many events were at least 50 km?": "None",
    "what is the number of floors of the oldest building?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the oldest Year\nQuery1: \"get_information(relation='Year', tail_entity>='oldest')\"\nStep2: Get the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the row with the oldest Year\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"\nStep4: Get the number of floors of output_of_query3\nQuery4: \"get_information(relation='Floors', head_entity='output_of_query3')\"",
    "what was the first destroyer to be completed?": "## Target type: {'Name'}\n## Query:\nStep1: Find the row_number of completed\nQuery1: \"get_information(relation='Completed')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min completed\nQuery3: \"get_information(relation='Completed', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what was the last award that nujoma won?": "None",
    "which other team besides the new york giants drafted an end in round nine?": "None",
    "which team did the most laps according to this chart?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what was the last awared scrubs was nominated for?": "None",
    "which team had the most fourth place finishes?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Fourth place\nQuery1: \"get_information(relation='Fourth place')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Fourth place\nQuery3: \"get_information(relation='Fourth place', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many films did the actress appear in 1941/": "None",
    "what is the difference in qualifying for sharon bowes and silvia sperber?": "None",
    "who was the home team in the game on the top of the table?": "None",
    "how many are on the cbs network?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Network as CBS\nQuery1: \"get_information(relation='Network', tail_entity='CBS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which employer has the largest number of employees?": "## Target type: {employer}\n## Query:\nStep1: Find the entity that has the relation of # of Employees\nQuery1: \"get_information(relation='# of Employees')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max # of Employees\nQuery3: \"get_information(relation='# of Employees', tail_entity='output_of_query2')\"\nStep4: Find the employer of output_of_query3\nQuery4: \"get_information(relation='Employer', head_entity='output_of_query3')\"",
    "how many tracks are on smile! ?": "None",
    "what is the song title of the first track on the album smile! ?": "## Target type: {'English title'}\n## Query:\nStep1: Find the entity named \"smile!\"\nQuery1: \"get_information(relation='album', tail_entity='smile!')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the track number of output_of_query2\nQuery3: \"get_information(relation='Track number', head_entity='output_of_query2')\"\nStep4: Find the entity named \"1\"\nQuery4: \"get_information(relation='Track number', tail_entity='1')\"\nStep5: Find the English title of output_of_query4\nQuery5: \"get_information(relation='English title', head_entity='output_of_query4')\"",
    "what format did france use?": "## Target type: {format}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Region', tail_entity='France')\"\nStep2: Find the format of output_of_query1\nQuery2: \"get_information(relation='Format', head_entity='output_of_query1')\"",
    "which team came in second to last place?": "None",
    "how many models had a screen size less than 3 inches?": "None",
    "are there more than 5 library buildings?": "## Target type: {yes/no}\n## Query:\nStep1: Find the buildings with the relation of \"Current Use\" as \"Library\"\nQuery1: \"get_information(relation='Current Use', tail_entity='Library')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count of output_of_query2 is greater than 5\nQuery3: \"greater_than(set='output_of_query2', value='5')\"",
    "what is the number of winners from kenya?": "None",
    "which employer has the most employees?": "## Target type: {Employer}\n## Query:\nStep1: Find the entity with the relation of # of Employees\nQuery1: \"get_information(relation='# of Employees')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max # of Employees\nQuery3: \"get_information(relation='# of Employees', tail_entity='output_of_query2')\"\nStep4: Find the Employer of output_of_query3\nQuery4: \"get_information(relation='Employer', head_entity='output_of_query3')\"",
    "which player won the most money?": "None",
    "how many games were played at the ben hill griffin stadium during the 2010-2011 season?": "None",
    "how many counties had a negative natural change?": "None",
    "name the only library on the list.": "None",
    "are there at least five tracks featuring sandy on the 2005 best of benassi bros. album?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Title\nQuery1: \"get_information(relation='Title')\"\nStep2: Find the entity that Title contains \"2005 best of benassi bros.\"\nQuery2: \"get_information(relation='Title', tail_entity='2005 best of benassi bros.')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the row_number less than or equal to output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity<='output_of_query3')\"\nStep5: Find the entities that Featuring Sandy\nQuery5: \"get_information(relation='Featuring', tail_entity='Sandy')\"\nStep6: Get the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"\nStep7: Check if output_of_query6 is greater than or equal to 5\nQuery7: \"greater_than_or_equal_to(output_of_query6, 5)\"",
    "name a country with which spain has played more than 10 games.": "None",
    "how may releases were after the year 2009?": "None",
    "does allegiant air fly to dallas or las vegas?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Allegiant Air\nQuery1: \"get_information(relation='Airline', tail_entity='Allegiant Air')\"\nStep2: Find the Destination(s) of output_of_query1\nQuery2: \"get_information(relation='Destination(s)', tail_entity='output_of_query1')\"\nStep3: Check if the Destination(s) contains \"Dallas\" or \"Las Vegas\"\nQuery3: \"check_contains(set='output_of_query2', value='Dallas') or check_contains(set='output_of_query2', value='Las Vegas')\"",
    "how many schools have a larger intake than sacred heart?": "None",
    "in 1979 how many places did the cosworth engine decrease from start to finish?": "## Target type: {number of places}\n## Query:\nStep1: Find the entity in Year 1979\nQuery1: \"get_information(relation='Year', tail_entity='1979')\"\nStep2: Find the start place of output_of_query1\nQuery2: \"get_information(relation='Start', head_entity='output_of_query1')\"\nStep3: Find the finish place of output_of_query1\nQuery3: \"get_information(relation='Finish', head_entity='output_of_query1')\"\nStep4: Calculate the decrease in places from start to finish\nQuery4: \"subtract(value1='output_of_query2', value2='output_of_query3')\"",
    "what diocese has the least area?": "None",
    "what was the first mercedez to win world green car?": "None",
    "how many american players were there": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Country as United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who took longer to finish, ashley delaney or charles francis?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Ashley Delaney\nQuery1: \"get_information(relation='Name', tail_entity='Ashley Delaney')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Charles Francis\nQuery3: \"get_information(relation='Name', tail_entity='Charles Francis')\"\nStep4: Find the Time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Check the comparison between output_of_query2 and output_of_query4\nQuery5: \"comparison(x='output_of_query2', y='output_of_query4')\"",
    "what publication scored less than a 7.5 out of 10?": "## Target type: {publication}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Get the output_of_query1 that is less than 7.5\nQuery2: \"get_information(relation='Score', tail_entity<'7.5')\"\nStep3: Get the publication of output_of_query2\nQuery3: \"get_information(relation='Publication', head_entity='output_of_query2')\"",
    "who was the silver medalist?": "None",
    "how many cities have a land area of 92 km^2?": "None",
    "what's the total combined years for thomas stouch and schwartz?": "None",
    "which was the first diocese to be formed?": "## Target type: {'Diocese'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Diocese of output_of_query3\nQuery4: \"get_information(relation='Diocese', head_entity='output_of_query3')\"",
    "what is the last track on the album?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many women in total were executed since 1976?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is 1976\nQuery1: \"get_information(relation='Date', tail_entity='1976')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that is executed since 1976\nQuery3: \"get_information(relation='row_number', tail_entity>='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the total attendance at the wright state and loyola games?": "## Target type: {total attendance}\n## Query:\nStep1: Find the games against Wright State\nQuery1: \"get_information(relation='Opponent', tail_entity='Wright State')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the games against Loyola\nQuery3: \"get_information(relation='Opponent', tail_entity='Loyola')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"",
    "\"at least two goals were scored by the losing team in january 14 2013. who was this team?\"": "None",
    "what is the total number of people killed at the battle of san jacinto?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Battle is Battle of San Jacinto\nQuery1: \"get_information(relation='Battle', tail_entity='Battle of San Jacinto')\"\nStep2: Find the engagement remarks of output_of_query1\nQuery2: \"get_information(relation='Engagement remarks', head_entity='output_of_query1')\"\nStep3: Extract the number of Mexicans killed from output_of_query2\nQuery3: \"extract_number(text='output_of_query2', pattern='(\\d+) Mexicans killed')\"\nStep4: Extract the number of Texans killed from output_of_query2\nQuery4: \"extract_number(text='output_of_query2', pattern='(\\d+) Texans killed')\"\nStep5: Calculate the total number of people killed at the battle\nQuery5: \"calculate(expression='output_of_query3 + output_of_query4')\"",
    "which country is the only country to have 0.6% in gdp growth?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of GDP Growth and value of 0.6%\nQuery1: \"get_information(relation='GDP Growth', value='0.6%')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"",
    "what number of floors does the leveque tower have?": "## Target type: {number of floors}\n## Query:\nStep1: Find the entity named Leveque Tower\nQuery1: \"get_information(relation='Name', tail_entity='Leveque Tower')\"\nStep2: Find the number of floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "which district has the earliest date that a successor was seated?": "## Target type: {district}\n## Query:\nStep1: Find the entity with the relation of Date successor seated\nQuery1: \"get_information(relation='Date successor seated')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Date successor seated\nQuery3: \"get_information(relation='Date successor seated', tail_entity='output_of_query2')\"\nStep4: Find the district of output_of_query3\nQuery4: \"get_information(relation='District', head_entity='output_of_query3')\"",
    "which is the last city for population in the year 2001?": "## Target type: {city}\n## Query:\nStep1: Find the entity in the year 2001\nQuery1: \"get_information(relation='Population (2001)', tail_entity>='last')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='City', head_entity='output_of_query1')\"",
    "which artist released the last album in 2011?": "## Target type: {artist}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "on what date was the only game lost with attendance above 40,000?": "None",
    "how many consecutive competitions did david oliver place first in running the 100m hurdles?": "None",
    "did sweden place at least in the top 10?": "None",
    "can you find the top entered service?": "## Target type: {entered service}\n## Query:\nStep1: Find the entity with the relation of Entered service\nQuery1: \"get_information(relation='Entered service')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Entered service\nQuery3: \"get_information(relation='Entered service', tail_entity='output_of_query2')\"",
    "who was the first female flag bearer for georgia in the olympics?": "## Target type: {Flag bearer}\n## Query:\nStep1: Find the entity that is Georgia\nQuery1: \"get_information(relation='Flag bearer', tail_entity='Georgia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Flag bearer of output_of_query4\nQuery5: \"get_information(relation='Flag bearer', head_entity='output_of_query4')\"",
    "what is the difference between the number of plants in algeria and the number of plants in indonesia?": "None",
    "how many locomotives are not standard gauge?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Gauge as \"Standard\"\nQuery1: \"get_information(relation='Gauge', tail_entity='Standard')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the first country to get the radio ad?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Region of output_of_query3\nQuery4: \"get_information(relation='Region', head_entity='output_of_query3')\"",
    "what was the first competition where this runner placed 1st?": "None",
    "what number of television appearances did kerry ellis make in 2010?": "## Target type: {number of television appearances}\n## Query:\nStep1: Find the entity named Kerry Ellis\nQuery1: \"get_information(relation='Role', tail_entity='Kerry Ellis')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Year of output_of_query2\nQuery3: \"get_information(relation='Year', head_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Year and the value of 2010\nQuery4: \"get_information(relation='Year', tail_entity='2010')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the name of the first circuit?": "## Target type: {'Circuit'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "what was the earliest time this game played during the season?": "## Target type: {time}\n## Query:\nStep1: Find all the Time values\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the earliest time from output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "who has the largest amount of teams, men's, women, or mixed?": "## Target type: {team category}\n## Query:\nStep1: Find the Men's Team count\nQuery1: \"get_information(relation='Men's Team')\"\nStep2: Find the Women's Team count\nQuery2: \"get_information(relation='Women's Team')\"\nStep3: Find the Mixed Team count\nQuery3: \"get_information(relation='Mixed Team')\"\nStep4: Find the max of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"max(set='output_of_query1', set='output_of_query2', set='output_of_query3')\"",
    "which country is above turkey": "## Target type: {country}\n## Query:\nStep1: Find the entity that is Turkey\nQuery1: \"get_information(relation='Country/Territory', tail_entity='Turkey')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country/Territory of output_of_query4\nQuery5: \"get_information(relation='Country/Territory', head_entity='output_of_query4')\"",
    "tell me the number of seats from nsw?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity named NSW\nQuery1: \"get_information(relation='State', tail_entity='NSW')\"\nStep2: Get the number of seats of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the only single from 2009?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year', tail_entity='2009')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "has this actor been in above or below 15 films?": "## Target type: {'Yes'/'No'}\n## Query:\nStep1: Find the entity with the relation of Role\nQuery1: \"get_information(relation='Role')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if output_of_query2 is above or below 15\nQuery3: \"if(output_of_query2 > 15, 'Yes', 'No')\"",
    "what was the longest number of consecutive first place wins for soviet song in 2004?": "None",
    "which american country placed first?": "None",
    "how has won the first championship after gdynia won 3 in a row?": "None",
    "what was the total number of matches played by the san jose earthquakes in the 1979 season?": "None",
    "how many times did wright score after 1978?": "None",
    "how many games were played in la?": "None",
    "how many swimmers did not swim?": "None",
    "name 3 that scored more points than steve martin.": "None",
    "which film came first, halaal ki kamai or dariya dil?": "## Target type: {film}\n## Query:\nStep1: Find the row_number of Halaal Ki Kamai\nQuery1: \"get_information(relation='Film', tail_entity='Halaal Ki Kamai')\"\nStep2: Find the row_number of Dariya Dil\nQuery2: \"get_information(relation='Film', tail_entity='Dariya Dil')\"\nStep3: Check which film has a smaller row_number\nQuery3: \"if(output_of_query1 < output_of_query2, 'Halaal Ki Kamai', 'Dariya Dil')\"",
    "what is the difference between the year seitz died and the year aizele died?": "None",
    "how many never took office?": "None",
    "how many action games were released in north america?": "## Target type: {number of action games}\n## Query:\nStep1: Find the entity whose genre is Action\nQuery1: \"get_information(relation='Genre', tail_entity='Action')\"\nStep2: Find the entity whose regions is North America\nQuery2: \"get_information(relation='Regions', tail_entity='North America')\"\nStep3: Take the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which is larger(acres) carver's rocks or cawdo quarry": "## Target type: {area}\n## Query:\nStep1: Find the entity named Carver's Rocks\nQuery1: \"get_information(relation='Site name', tail_entity='Carver\\'s Rocks')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area', head_entity='output_of_query1')\"\nStep3: Find the entity named Cawdo Quarry\nQuery3: \"get_information(relation='Site name', tail_entity='Cawdo Quarry')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area', head_entity='output_of_query3')\"\nStep5: Compare the area of output_of_query2 and output_of_query4\nQuery5: \"compare(area1='output_of_query2', area2='output_of_query4', comparison='larger')\"",
    "did john howard serve as prime minister for more or less time than julia gillard?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity named John Howard\nQuery1: \"get_information(relation='Prime Minister', tail_entity='John Howard')\"\nStep2: Find the Total time in office of output_of_query1\nQuery2: \"get_information(relation='Total time in office', head_entity='output_of_query1')\"\nStep3: Find the entity named Julia Gillard\nQuery3: \"get_information(relation='Prime Minister', tail_entity='Julia Gillard')\"\nStep4: Find the Total time in office of output_of_query3\nQuery4: \"get_information(relation='Total time in office', head_entity='output_of_query3')\"\nStep5: Compare the Total time in office of output_of_query2 and output_of_query4\nQuery5: \"compare(time1='output_of_query2', time2='output_of_query4')\"",
    "what was the number of goals that elvir balji&#263; scored against lithuania in 1998?": "None",
    "routh or lake george is a lower yazoo phase?": "## Target type: {Yes or No}\n## Query:\nStep1: Find the entity named Lower Yazoo Phases\nQuery1: \"get_information(relation='Lower Yazoo Phases')\"\nStep2: Find the Lower Yazoo Phase named \"Routh\"\nQuery2: \"get_information(relation='Lower Yazoo Phases', tail_entity='Routh')\"\nStep3: Find the Lower Yazoo Phase named \"Lake George\"\nQuery3: \"get_information(relation='Lower Yazoo Phases', tail_entity='Lake George')\"\nStep4: Check if output_of_query2 or output_of_query3 is in the set output_of_query1\nQuery4: \"is_in(set='output_of_query1', entities=['output_of_query2', 'output_of_query3'])\"",
    "which terminal had more quay cranes than terminal 6?": "## Target type: {terminal}\n## Query:\nStep1: Find the entity named Terminal 6\nQuery1: \"get_information(relation='Terminal', tail_entity='Terminal 6')\"\nStep2: Find the quay cranes of output_of_query1\nQuery2: \"get_information(relation='Quay cranes', head_entity='output_of_query1')\"\nStep3: Find the entity named Terminal with more quay cranes than output_of_query2\nQuery3: \"get_information(relation='Quay cranes', tail_entity>'output_of_query2')\"\nStep4: Get the entity of output_of_query3\nQuery4: \"get_information(relation='Terminal', head_entity='output_of_query3')\"",
    "how many feet above sea level is k2?": "## Target type: {number of feet}\n## Query:\nStep1: Find the entity named K2/Qogir/Godwin Austen\nQuery1: \"get_information(relation='Mountain', tail_entity='K2/Qogir/Godwin Austen')\"\nStep2: Find the Height (ft) of output_of_query1\nQuery2: \"get_information(relation='Height (ft)', head_entity='output_of_query1')\"",
    "a candidate with the name of flash gordon approaching of what satirical political party came in last place in the 2001 general election in ochil?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Flash Gordon\nQuery1: \"get_information(relation='Candidate', tail_entity='Flash Gordon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "how long was it between the release of the furrowed field and songs?": "None",
    "who scored at least 3 goals in 2010": "None",
    "what are the total number of athletes representing bulgaria?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Bulgaria\nQuery1: \"get_information(relation='Country', tail_entity='Bulgaria')\"\nStep2: Find the total number of athletes representing output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wrestlers do not have any notes?": "None",
    "what is the name of the movie where mischa barton plays the role of ms. monica?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity where Role is \"Ms. Monica\"\nQuery1: \"get_information(relation='Role', tail_entity='Ms. Monica')\"\nStep2: Get the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "which two counties have the larger populations when combined - park and missoula or judith basin and madison?": "None",
    "which team conceded the least goals?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Goals Conceded\nQuery1: \"get_information(relation='Goals Conceded')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Goals Conceded\nQuery3: \"get_information(relation='Goals Conceded', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "is january or february first?": "## Target type: {month}\n## Query:\nStep1: Find the row_number of January\nQuery1: \"get_information(relation='row_number', tail_entity='January')\"\nStep2: Find the row_number of February\nQuery2: \"get_information(relation='row_number', tail_entity='February')\"\nStep3: Compare the output_of_query1 and output_of_query2\nQuery3: \"compare(output1='output_of_query1', output2='output_of_query2')\"",
    "what opponent is listed last on the table?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "total number of models created.": "## Target type: {number}\n## Query:\nStep1: Find the models created\nQuery1: \"get_information(relation='Model name')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was awarded an oscar for best sound for two films in the same year - king kong and rocky?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Film equals \"King Kong\"\nQuery1: \"get_information(relation='Film', tail_entity='King Kong')\"\nStep2: Find the entity with the relation of Film equals \"Rocky\"\nQuery2: \"get_information(relation='Film', tail_entity='Rocky')\"\nStep3: Find the entity that won an Oscar for Best Sound for output_of_query1 and output_of_query2 films in the same year.\nQuery3: \"get_information(relation='Academy Award', tail_entity='Best Sound', head_entity1='output_of_query1', head_entity2='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the last product represented in the chart?": "## Target type: {'Product'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Product of output_of_query3\nQuery4: \"get_information(relation='Product', head_entity='output_of_query3')\"",
    "what are the number of times 4g is listed as the generation?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"4G\"\nQuery1: \"get_information(relation='Generation', tail_entity='4G')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the only landmark that is also a u.s. state high point?": "None",
    "how many matches were in 2011?": "None",
    "how many times did imamura place at least 5th?": "None",
    "which was the only tribunal to have more than 40 executions in effigie?": "None",
    "who earned the most points at the 250cc valencian community motorcycle grand prix?": "None",
    "which club is ranked in last?": "## Target type: {club}\n## Query:\nStep1: Find the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "name the first and last states to secede.": "None",
    "who did play-by-play before ray scott?": "## Target type: {'Play-by-play'}\n## Query:\nStep1: Find the entity named Ray Scott\nQuery1: \"get_information(relation='Play-by-play', tail_entity='Ray Scott')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Play-by-play of output_of_query4\nQuery5: \"get_information(relation='Play-by-play', head_entity='output_of_query4')\"",
    "how many 110 m hurdles did china compete in?": "None",
    "what is the first name on the chart": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min of output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how long was denver bronco player eddie royal's longest punt return in 2008, a year when he made a total of 140 yards in punt returns?": "None",
    "who has more medals but is lower in rank, sweden or russia in european baseball championships?": "## Target type: {nation}\n## Query:\nStep1: Find the entity whose Nation is Sweden\nQuery1: \"get_information(relation='Nation', tail_entity='Sweden')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity whose Nation is Russia\nQuery3: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is greater than output_of_query4\nQuery5: \"compare(set1='output_of_query2', operator='>', set2='output_of_query4')\"\nStep6: If output_of_query5 is True, return \"Sweden\". Otherwise, return \"Russia\".",
    "who had the nickname robbie?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the nickname 'Robbie'\nQuery1: \"get_information(relation='Nickname', tail_entity='Robbie')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "in what year was the last design of passenger baseplates for vehicle registration issued in vermont?": "None",
    "what team won after santa clara?": "None",
    "who owned the last locomotive to be built?": "## Target type: {'Original Owner'}\n## Query:\nStep1: Find the entity with the relation of 'row_number'\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the 'Original Owner' of output_of_query3\nQuery4: \"get_information(relation='Original Owner', head_entity='output_of_query3')\"",
    "which version is the shortest?": "## Target type: {'Version'}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the version of output_of_query3\nQuery4: \"get_information(relation='Version', head_entity='output_of_query3')\"",
    "which country had the largest number of towed guns delivered?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Quantity delivered\nQuery1: \"get_information(relation='Quantity delivered')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Quantity delivered\nQuery3: \"get_information(relation='Quantity delivered', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "how many years was gordon larsen convicted to?": "None",
    "who came in after petra chocova?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Petra Chocova\nQuery1: \"get_information(relation='Name', tail_entity='Petra Chocova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "name a film that came out before february.": "None",
    "what is the total land area of saint lucia (in square kilometers)?": "## Target type: {total land area}\n## Query:\nStep1: Find the entity named Saint Lucia\nQuery1: \"get_information(relation='District', tail_entity='Saint Lucia')\"\nStep2: Find the land area of output_of_query1\nQuery2: \"get_information(relation='Land area (km\u00b2)', head_entity='output_of_query1')\"",
    "which state is/was home to the most looff carousels?": "None",
    "what is the only indoor championship?": "## Target type: {'Championship'}\n## Query:\nStep1: Find the entity where Surface is 'Indoor'\nQuery1: \"get_information(relation='Surface', tail_entity='Indoor')\"\nStep2: Find the Championship of output_of_query1\nQuery2: \"get_information(relation='Championship', head_entity='output_of_query1')\"",
    "how many floors does the bsnl tower have?": "## Target type: {number of floors}\n## Query:\nStep1: Find the entity named BSNL Tower\nQuery1: \"get_information(relation='Name', tail_entity='BSNL Tower')\"\nStep2: Find the floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "only player to serve as captain from 1998-2007": "## Target type: {player}\n## Query:\nStep1: Find the entity that spans from 1998-2007\nQuery1: \"get_information(relation='Span', tail_entity='1998-2007')\"\nStep2: Find the entity that is a captain during output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"\nStep3: Find the only output_of_query2\nQuery3: \"only(set='output_of_query2')\"",
    "how many mills were built or first mentioned after 1800?": "None",
    "what are the number of staying councillors that the labour party had?": "None",
    "how many goals did the malm\u00f6 ff player(s) score?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity that Club is Malm\u00f6 FF\nQuery1: \"get_information(relation='club', tail_entity='Malm\u00f6 FF')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='goals', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "which monarch is listed first?": "None",
    "vladimir bukiyevskiy had how many appearances?": "## Target type: {number of appearances}\n## Query:\nStep1: Find the entity named Vladimir Bukiyevskiy\nQuery1: \"get_information(relation='Name', tail_entity='Vladimir Bukiyevskiy')\"\nStep2: Find the appearances of output_of_query1\nQuery2: \"get_information(relation='Appearances', head_entity='output_of_query1')\"",
    "what was the total number of points scored in this player's first two games of this season?": "None",
    "how many days apart were the launches of the rio de janeiro and the bayern?": "None",
    "what are the number of times yamaha is the constructor?": "None",
    "compare the chart positions between the us and the uk for the science of selling yourself short, where did it do better?": "## Target type: {chart position}\n## Query:\nStep1: Find the entity named \"The Science of Selling Yourself Short\"\nQuery1: \"get_information(relation='Single', tail_entity='The Science of Selling Yourself Short')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Peak chart positions of output_of_query2\nQuery3_us: \"get_information(relation='Peak chart positions', head_entity='output_of_query2', key='us')\"\nQuery3_uk: \"get_information(relation='Peak chart positions', head_entity='output_of_query2', key='uk')\"\nStep4: Compare the chart positions of output_of_query3_us and output_of_query3_uk\nQuery4: \"compare(output1='output_of_query3_us', output2='output_of_query3_uk')\"",
    "what is the only season he has fewer than three sacks?": "## Target type: {season}\n## Query:\nStep1: Find the entity that has fewer than three sacks\nQuery1: \"get_information(relation='Sacks', tail_entity<'3')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many drivers did not finish 56 laps?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity in Laps that is equal to 56\nQuery1: \"get_information(relation='Laps', tail_entity='56')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who was a bigger portion of the population in 2005: aian or nhpi?": "## Target type: {'group' that represents a portion of the population}\n## Query:\nStep1: Find the entity that represents the population in 2005\nQuery1: \"get_information(relation='By race', tail_entity='2005 (total population)')\"\nStep2: Find the portion of AIAN in output_of_query1\nQuery2: \"get_information(relation='AIAN*', head_entity='output_of_query1')\"\nStep3: Find the portion of NHPI in output_of_query1\nQuery3: \"get_information(relation='NHPI*', head_entity='output_of_query1')\"\nStep4: Compare the portions of AIAN and NHPI to determine which is bigger\nQuery4: \"if(set1='output_of_query2', set2='output_of_query3', operator='>', value='') then 'AIAN' else 'NHPI'\"",
    "which name is listed after imagicon?": "None",
    "which sensor has the largest area?": "None",
    "what era came after jiahe?": "None",
    "how many positions below valentino rossi did john hopkins place in the 2008 malaysian motorcycle grand prix?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Valentino Rossi\nQuery1: \"get_information(relation='Rider', tail_entity='Valentino Rossi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named John Hopkins\nQuery3: \"get_information(relation='Rider', tail_entity='John Hopkins')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(num1='output_of_query4', num2='output_of_query2')\"",
    "what event is at the top of the chart?": "None",
    "how many seasons had combined tackles of 70 or more?": "None",
    "what year is the first appearance of the platform ps1?": "None",
    "how many reigns has joey ryan had?": "## Target type: {number of reigns}\n## Query:\nStep1: Find the entity named Joey Ryan\nQuery1: \"get_information(relation='Wrestler', tail_entity='Joey Ryan')\"\nStep2: Find the No. of reigns of output_of_query1\nQuery2: \"get_information(relation='No. of reigns', head_entity='output_of_query1')\"",
    "what was the latest championship to be played in the grand slam category?": "None",
    "which institutions have more than 2,000 enrollment?": "## Target type: {institution}\n## Query:\nStep1: Find the entity with the relation of Enrollment\nQuery1: \"get_information(relation='Enrollment')\"\nStep2: Find the entity with enrollment larger than 2000\nQuery2: \"get_information(relation='Enrollment', tail_entity>'2000')\"\nStep3: Find the institution of output_of_query2\nQuery3: \"get_information(relation='Institution', head_entity='output_of_query2')\"",
    "which year did dickerson earn the most rushing yards?": "None",
    "how many games did the 1993 texas tech football team play in either september or october?": "None",
    "who finished before elia viviani?": "None",
    "does each competition have an opponent listed?": "None",
    "how may years did coil release titles ?": "None",
    "the ido-ji and joraku-ji temples are a part of what prefecture?": "## Target type: {prefecture}\n## Query:\nStep1: Find the entity named Ido-ji\nQuery1: \"get_information(relation='Temple', tail_entity='Ido-ji')\"\nStep2: Find the prefecture of output_of_query1\nQuery2: \"get_information(relation='Prefecture', head_entity='output_of_query1')\"\nStep3: Find the entity named Joraku-ji\nQuery3: \"get_information(relation='Temple', tail_entity='Joraku-ji')\"\nStep4: Find the prefecture of output_of_query3\nQuery4: \"get_information(relation='Prefecture', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "karl behting and giovanni cenni each had final scores of what?": "## Target type: {'Final'}\n## Query:\nStep1: Find the entity named Karl Behting\nQuery1: \"get_information(relation='Player', tail_entity='Karl Behting')\"\nStep2: Find the final score of output_of_query1\nQuery2: \"get_information(relation='Final', head_entity='output_of_query1')\"\nStep3: Find the entity named Giovanni Cenni\nQuery3: \"get_information(relation='Player', tail_entity='Giovanni Cenni')\"\nStep4: Find the final score of output_of_query3\nQuery4: \"get_information(relation='Final', head_entity='output_of_query3')\"",
    "who was the opponent for the boston red sox on july 27, 1946?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Boston Red Sox\nQuery1: \"get_information(relation='Team', tail_entity='Boston Red Sox')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named July 27, 1946\nQuery3: \"get_information(relation='Date', tail_entity='July 27, 1946')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "what city was ranked first in 2003?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Rank is first\nQuery1: \"get_information(relation='Rank', tail_entity='first')\"\nStep2: Find the city of output_of_query1\nQuery2: \"get_information(relation='Metropolitan area', head_entity='output_of_query1')\"",
    "what was first place's difference to par?": "None",
    "how many consecutive players were released on july 9?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Find the entities whose Date is July 9\nQuery2: \"get_information(relation='Date', tail_entity='July 9')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_numbers of output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many acres do aversley wood and brampton wood have when added together?": "None",
    "how many missions have returned samples?": "None",
    "what is the total number of assemblers supporting medium genomes type technologies?": "## Target type: {number}\n## Query:\nStep1: Find the assemblers supporting medium genomes type technologies\nQuery1: \"get_information(relation='Type', tail_entity='medium genomes type')\"\nStep2: Find the Technnologies of output_of_query1\nQuery2: \"get_information(relation='Technologies', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many are europlug compatible (yes)?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Europlug Compatible\nQuery1: \"get_information(relation='Europlug Compatible', tail_entity='Yes')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games took place in july before the fourth of july?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity that is the fourth of July\nQuery1: \"get_information(relation='Date', tail_entity='July 4')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the games that took place before output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many total locomotives are at the museum?": "## Target type: {number of locomotives}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which president had the shortest term without being deposed?": "None",
    "what is the number of buildings taller than 200 feet?": "None",
    "what is the winning party the year that shri durga prasad was the vidhan sabha?": "None",
    "how many buildings in kanpur, india are at least 15 stories tall?": "None",
    "how many medals were awarded to japan in total?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what game was published in europe as 1945 but had a different name elsewhere?": "None",
    "what is the time difference in seconds between rachel king and sriyani kulawansa?": "## Target type: {time difference (in seconds)}\n## Query:\nStep1: Find the entity named Rachel King\nQuery1: \"get_information(relation='Name', tail_entity='Rachel King')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Sriyani Kulawansa\nQuery3: \"get_information(relation='Name', tail_entity='Sriyani Kulawansa')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Calculate the time difference in seconds between output_of_query2 and output_of_query4\nQuery5: \"time_difference_in_seconds(time1='output_of_query2', time2='output_of_query4')\"",
    "who is the last horse on the list that was \"pulled up\"?": "## Target type: {name}\n## Query:\nStep1: Find the entity that was \"pulled up\"\nQuery1: \"get_information(relation='Fate', tail_entity='pulled up')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max row_number\nQuery3: \"max(set='output_of_query2')\" \nStep4: Find the entity with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "name the earliest competition to have a sub.": "None",
    "did the calgary or the toronto leg take place on august 11?": "## Target type: {leg}\n## Query:\nStep1: Find the entity with the relation of Date as August 11, 1993\nQuery1: \"get_information(relation='Date', tail_entity='August 11, 1993')\"\nStep2: Find the entity with the relation of Location as Calgary\nQuery2: \"get_information(relation='Location', tail_entity='Calgary')\"\nStep3: Find the entity with the relation of Location as Toronto\nQuery3: \"get_information(relation='Location', tail_entity='Toronto')\"\nStep4: Check if output_of_query1 is in the union of output_of_query2 and output_of_query3\nQuery4: \"if_in(set='output_of_query1', set='set_union(output_of_query2, output_of_query3)')\"",
    "how many silver medals did satheesha rai win according to the table?": "None",
    "what is the difference in population between daping and shaoshan?": "None",
    "is the peak of mount keith above or below the peak of north palisade?": "## Target type: {'above' or 'below'}\n## Query:\nStep1: Find the peak of Mount Keith\nQuery1: \"get_information(relation='Mountain Peak', tail_entity='Mount Keith')\"\nStep2: Find the elevation of output_of_query1\nQuery2: \"get_information(relation='Elevation', head_entity='output_of_query1')\"\nStep3: Find the peak of North Palisade\nQuery3: \"get_information(relation='Mountain Peak', tail_entity='North Palisade')\"\nStep4: Find the elevation of output_of_query3\nQuery4: \"get_information(relation='Elevation', head_entity='output_of_query3')\"\nStep5: Compare the elevation of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the last year of manufacture for these revolvers?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Years Mfg'd\nQuery1: \"get_information(relation='Years Mfg'd')\"\nStep2: Split the output_of_query1 by \"-\"\nQuery2: \"split_string(string='output_of_query1', delimiter='-')\"\nStep3: Get the second part (upper limit) of output_of_query2\nQuery3: \"get_information(relation='set_element', tail_entity='output_of_query2', key='1')\"\nStep4: Remove the whitespaces from output_of_query3\nQuery4: \"remove_whitespace(string='output_of_query3')\"",
    "which year did the actress star in the most movies?": "None",
    "after brazil which country produced the most niobium?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Country', tail_entity='Brazil')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "in what years did the social democratic party win at least 14,000 constituency votes?": "None",
    "what was the total attendance at the august 30 game against alabama?": "## Target type: {Attendance}\n## Query:\nStep1: Find the game against Alabama\nQuery1: \"get_information(relation='Opponent', tail_entity='Alabama')\"\nStep2: Find the game on August 30\nQuery2: \"get_information(relation='Date', tail_entity='August 30')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "how many elections did william mckinley win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named William McKinley\nQuery1: \"get_information(relation='President', tail_entity='William McKinley')\"\nStep2: Find the elections won by output_of_query1\nQuery2: \"get_information(relation='Elections won', head_entity='output_of_query1')\"",
    "which mayor was in office the least amount of years?": "None",
    "what is the only number in the score column?": "## Target type: {number}\n## Query:\nStep1: Find the row_number with relation '#' equals to 4\nQuery1: \"get_information(relation='#', tail_entity='4')\"\nStep2: Find the number in the Scored column of output_of_query1\nQuery2: \"get_information(relation='Scored', head_entity='output_of_query1')\"",
    "who won two years after the uk?": "None",
    "how long did it take jim chapin to finish?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Jim Chapin\nQuery1: \"get_information(relation='Athlete', tail_entity='Jim Chapin')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many tds did dickerson score in 1988?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year equal to 1988\nQuery1: \"get_information(relation='Year', tail_entity='1988')\"\nStep2: Find the TDs of output_of_query1\nQuery2: \"get_information(relation='TDs', head_entity='output_of_query1')\"",
    "how long was woof the dog sold before it was retired?": "None",
    "who has three wins? malavan or homa?": "## Target type: {Club}\n## Query:\nStep1: Find the entity with three wins\nQuery1: \"get_information(relation='Winner', tail_entity='3')\"\nStep2: Find the entity with relation of Club and output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "which site is the top on the chart": "None",
    "what is the name of the episode previous to computer school blues?": "None",
    "what year was the last year in which the zx plaform was used in a business simulation video game?": "None",
    "which new council is above labour": "None",
    "who has the lowest total, barry county or benton county?": "None",
    "what is the largest tower": "None",
    "which denomination held the largest percentage in 1880?": "## Target type: {denomination}\n## Query:\nStep1: Find the entity with the relation of 1880\nQuery1: \"get_information(relation='1880')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max percentage in 1880\nQuery3: \"get_information(relation='1880', tail_entity='output_of_query2')\"\nStep4: Find the denomination of output_of_query3\nQuery4: \"get_information(relation='Denomination', head_entity='output_of_query3')\"",
    "in 1926 brazilian football,what was the total number of points scored?": "None",
    "was alec su in more films in 2009 or 2011?": "## Target Type: {'Year'}\n## Query:\nStep1: Find the films that Alec Su appeared in 2009\nQuery1: \"get_information(relation='Year', tail_entity='2009')\"\nStep2: Find the films that Alec Su appeared in 2011\nQuery2: \"get_information(relation='Year', tail_entity='2011')\"\nStep3: Calculate the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4 to find the larger one\nQuery5: \"if_set1_greater_than_set2(set1='output_of_query3', set2='output_of_query4', value_if_true='2009', value_if_false='2011')\"",
    "which country is represented for both men and women at the top of the list?": "None",
    "which performance was last on this album?": "None",
    "how many consecutive years did rathnure win?": "None",
    "number of polls (out of seven) in which more than 12% of those polled were undecided": "## Target type: {number of polls}\n## Query:\nStep1: Find the entity whose Undecided is more than 12%\nQuery1: \"get_information(relation='Undecided', tail_entity>12)\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which company has the least number of employees?": "## Target type: {company}\n## Query:\nStep1: Find the entity with the relation of Employees\nQuery1: \"get_information(relation='Employees')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Employees\nQuery3: \"get_information(relation='Employees', tail_entity='output_of_query2')\"\nStep4: Find the company of output_of_query3\nQuery4: \"get_information(relation='Company', head_entity='output_of_query3')\"",
    "in what mine could you find bismuth?": "None",
    "which stadium has the smallest capacity?": "None",
    "what is the total number of points scored in the three rounds in kansas?": "None",
    "what is the total number of times pancho carter finished the indy 500 in the top 10>?": "None",
    "which duke has the same date of creation as the duke of coimbra?": "None",
    "what was the team's best season?": "None",
    "who began their term in 1890?": "## Target type: {name}\n## Query:\nStep1: Find the entity that began their term in 1890\nQuery1: \"get_information(relation='Term began', tail_entity='1890')\"\nStep2: Find the name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many utility vehicles used by the philippine marines have their origin in the united states?": "None",
    "how many governors did the union of south africa go through during the reign of george v?": "None",
    "tell me what album had the most sold.": "None",
    "how many microcontrollers have 128 eeprom?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of EEPROM\nQuery1: \"get_information(relation='EEPROM', tail_entity='128')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "kert toobal is the oldest who is the next oldest player listed?": "None",
    "how many countries have at least one gold medal?": "## Target type: {number}\n## Query:\nStep1: Find the entities with at least one Gold medal\nQuery1: \"get_information(relation='Gold', tail_entity>='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many states have never used capital punishment?": "None",
    "which nation won gold but did not win silver?": "None",
    "which country had the same number of athletes in the top 10 as the united states?": "None",
    "what was the top team?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Pos as '1'\nQuery1: \"get_information(relation='Pos', tail_entity='1')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "which team won previous to crettyard?": "None",
    "what is number of parts that received their latest amendment before 2010?": "None",
    "what is the name of the pillow pal listed after clover?": "None",
    "who scored more points, cardiff or denmark?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Cardiff\nQuery1: \"get_information(relation='Venue', tail_entity='Cardiff')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Goal', head_entity='output_of_query1')\"\nStep3: Find the entity named Denmark\nQuery3: \"get_information(relation='Opponent', tail_entity='Denmark')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Goal', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the average percentile at the chicago tribune who are voting for rahm emanuel?": "## Target type: {percentile}\n## Query:\nStep1: Find the entity that is Chicago Tribune\nQuery1: \"get_information(relation='Poll source', tail_entity='Chicago Tribune')\"\nStep2: Find the percentile of voting for Rahm Emanuel of output_of_query1\nQuery2: \"get_information(relation='Rahm Emanuel', head_entity='output_of_query1')\"\nStep3: Calculate the average of output_of_query2\nQuery3: \"average(set='output_of_query2')\"",
    "how many times was jan steytler the party leader?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Party Leader(s) is Jan Steytler\nQuery1: \"get_information(relation='Party Leader(s)', tail_entity='Jan Steytler')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which rural settlement has the most males in their population?": "None",
    "how many people entered office in 1970?": "None",
    "how long was the longest ot session?": "None",
    "shelley jensen directed how many more episodes than madeline cripe?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Shelley Jensen\nQuery1: \"get_information(relation='Directed by', tail_entity='Shelley Jensen')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity named Madeline Cripe\nQuery3: \"get_information(relation='Directed by', tail_entity='Madeline Cripe')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "how many games were not played at araneta coliseum?": "## Target type: {number of games}\n## Query:\nStep1: Find the games played at Araneta Coliseum\nQuery1: \"get_information(relation='Venue (Location)', tail_entity='Araneta Coliseum')\"\nStep2: Find all the games\nQuery2: \"get_information(relation='row_number')\"\nStep3: Get the negation of output_of_query1\nQuery3: \"set_negation(set='output_of_query1')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which is above cayman island": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Cayman Island\nQuery1: \"get_information(relation='Nation', tail_entity='Cayman Island')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity with the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', tail_entity='output_of_query3')\"\nStep5: Find the nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what is the number of points scored by finland?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Country', tail_entity='Finland')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "at most, what's the biggest depth?": "None",
    "the most films henrick malberg appeared in in one year.": "None",
    "which plant is the oldest?": "## Target type: {'Plant Name'}\n## Query:\nStep1: Find the entity with the relation of Startup Date\nQuery1: \"get_information(relation='Startup Date')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min Startup Date\nQuery3: \"get_information(relation='Startup Date', tail_entity='output_of_query2')\"\nStep4: Find the Plant Name of output_of_query3\nQuery4: \"get_information(relation='Plant Name', head_entity='output_of_query3')\"",
    "the 1865 majority is how much greater than in 1966?": "## Target type: {difference in majority}\n## Query:\nStep1: Find the row whose Year is 1865\nQuery1: \"get_information(relation='Year', tail_entity='1865')\"\nStep2: Find the majority of output_of_query1\nQuery2: \"get_information(relation='Majority', head_entity='output_of_query1')\"\nStep3: Find the row whose Year is 1966\nQuery3: \"get_information(relation='Year', tail_entity='1966')\"\nStep4: Find the majority of output_of_query3\nQuery4: \"get_information(relation='Majority', head_entity='output_of_query3')\"\nStep5: Find the absolute value of the difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtract(output_of_query2, output_of_query4))\"",
    "how many publications have the same score as 1up.com?": "None",
    "tell me the number of left fielders on the list.": "None",
    "what is the total number of games in the swat series?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity in Title that contains \"SWAT\"\nQuery1: \"get_information(relation='Title', tail_entity>'SWAT')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "were there more conservative councillors in 1965 or 1966?": "## Target type: {'Conservative councillors'}\n## Query:\nStep1: Find the entity that Year is 1965\nQuery1: \"get_information(relation='Year', tail_entity='1965')\"\nStep2: Find the Conservative councillors of output_of_query1\nQuery2: \"get_information(relation='Conservative councillors', head_entity='output_of_query1')\"\nStep3: Find the entity that Year is 1966\nQuery3: \"get_information(relation='Year', tail_entity='1966')\"\nStep4: Find the Conservative councillors of output_of_query3\nQuery4: \"get_information(relation='Conservative councillors', head_entity='output_of_query3')\"\nStep5: Find the count of output_of_query2\nQuery5: \"count(set='output_of_query2')\"\nStep6: Find the count of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Compare the counts of output_of_query5 and output_of_query6\nQuery7: \"set_comparison(set1='output_of_query5', set2='output_of_query6', operation='greater')\"",
    "what is the difference in 2012 gdp between albania and algeria?": "## Target type: {difference in GDP (USD bln)}\n## Query:\nStep1: Find the entity named Albania\nQuery1: \"get_information(relation='Country', tail_entity='Albania')\"\nStep2: Find the GDP (USD bln) of output_of_query1 in 2012\nQuery2: \"get_information(relation='GDP (USD bln, 2012)', head_entity='output_of_query1')\"\nStep3: Find the entity named Algeria\nQuery3: \"get_information(relation='Country', tail_entity='Algeria')\"\nStep4: Find the GDP (USD bln) of output_of_query3 in 2012\nQuery4: \"get_information(relation='GDP (USD bln, 2012)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what was the first city to be incorporated into wisconsin?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Incorporation date\nQuery1: \"get_information(relation='Incorporation date')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Incorporation date\nQuery3: \"get_information(relation='Incorporation date', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "in how many games did sri lanka score at least 2 goals?": "None",
    "what is the total number of sheriffs that were in office in suffolk county between 1903 and 1957?": "None",
    "which competition is represented the most in this chart?": "## Target type: {competition}\n## Query:\nStep1: Find the entity that represents the most competition\nQuery1: \"get_information(relation='Competition', tail_entity>='most')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "how many winners are after clonkill?": "None",
    "the last runner crossed the finish line in 2:03.01. what was the previous time for the 7th runner?": "## Target type: {time}\n## Query:\nStep1: Find the entity that Time is 2:03.01\nQuery1: \"get_information(relation='Time', tail_entity='2:03.01')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Time of output_of_query4\nQuery5: \"get_information(relation='Time', head_entity='output_of_query4')\"",
    "is bangladesh in zone 3.2 with india or in zone 3.5 with china?": "None",
    "what sport did louis challiot win the same medal as paul chocque in?": "## Target type: {sport}\n## Query:\nStep1: Find the entity named Louis Challiot\nQuery1: \"get_information(relation='Name', tail_entity='Louis Challiot')\"\nStep2: Find the medal of output_of_query1\nQuery2: \"get_information(relation='Medal', head_entity='output_of_query1')\"\nStep3: Find the entity named Paul Chocque\nQuery3: \"get_information(relation='Name', tail_entity='Paul Chocque')\"\nStep4: Find the medal of output_of_query3\nQuery4: \"get_information(relation='Medal', head_entity='output_of_query3')\"\nStep5: Find the sport of output_of_query1\nQuery5: \"get_information(relation='Sport', head_entity='output_of_query1')\"",
    "which was built at the same time as the lou higgens center?": "None",
    "what was the top (most frequent) fate reported for losses?": "## Target type: {fate}\n## Query:\nStep1: Find all the fates reported for losses\nQuery1: \"get_information(relation='Fate')\"\nStep2: Find the most frequent fate from output_of_query1\nQuery2: \"most_frequent(set='output_of_query1')\"",
    "how many points did stelle get in the 2001 season?": "## Target type: {points}\n## Query:\nStep1: Find the entity with the relation of Season 2001\nQuery1: \"get_information(relation='Season', tail_entity='2001')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how long did it take maryam yusuf jamal to finish the 3000 meter at the bislett games oslo?": "None",
    "is the rf for wivm-ld 39 or 29?": "## Target type: {rf}\n## Query:\nStep1: Find the entity named WIVM-LD\nQuery1: \"get_information(relation='Call-sign', tail_entity='WIVM-LD')\"\nStep2: Find the rf of output_of_query1\nQuery2: \"get_information(relation='RF', head_entity='output_of_query1')\"",
    "before the jackson state loss, when was their last loss?": "None",
    "in how many games did cardiff city f.c. not score a goal?": "None",
    "of mcgill, western, and toronto, who won the least final matches between 2003-13?": "None",
    "what stadium can hold no more than 2500 people?": "## Target type: {stadium}\n## Query:\nStep1: Find the stadium that has a Capacity of no more than 2500\nQuery1: \"get_information(relation='Capacity', tail_entity<='2500')\"\nStep2: Get the stadium of output_of_query1\nQuery2: \"get_information(relation='Stadium', head_entity='output_of_query1')\"",
    "who is the only swimmer with a time under 2:30?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with a time under 2:30\nQuery1: \"get_information(relation='Time', tail_entity<'2:30')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "who is the top nation?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which party had the most candidates, republican or democratic?": "## Target type: {party}\n## Query:\nStep1: Find the number of candidates for the Democratic party\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the number of candidates for the Republican party\nQuery3: \"get_information(relation='Party', tail_entity='Republican')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"calculate_comparison(set1='output_of_query2', set2='output_of_query4', comparison='max')\"",
    "how many records were set in beijing?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Beijing\nQuery1: \"get_information(relation='Place', tail_entity='Beijing')\"\nStep2: Find the row_numbers of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of row_numbers in output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "largest run differential": "None",
    "how many networks does tv azteca own?": "## Target type: {number of networks}\n## Query:\nStep1: Find the entity with the relation of Owner as TV Azteca\nQuery1: \"get_information(relation='Owner', tail_entity='TV Azteca')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the last player listed?": "## Target type: {name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the name of output_of_query3\nQuery4: \"get_information(relation='name', head_entity='output_of_query3')\"",
    "how long until there was an appearance on the cts network?": "None",
    "is 08-0av heavier than 08-0lx?": "## Target type: {True or False}\n## Query:\nStep1: Find the entity with TOPS design code 08-0AV\nQuery1: \"get_information(relation='TOPS design code', tail_entity='08-0AV')\"\nStep2: Find the Weight of output_of_query1\nQuery2: \"get_information(relation='Weight', head_entity='output_of_query1')\"\nStep3: Find the entity with TOPS design code 08-0LX\nQuery3: \"get_information(relation='TOPS design code', tail_entity='08-0LX')\"\nStep4: Find the Weight of output_of_query3\nQuery4: \"get_information(relation='Weight', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is greater than output_of_query4\nQuery5: \"is_greater(set1='output_of_query2', set2='output_of_query4')\"",
    "company of the other officer on the board of directors besides steve maestas": "None",
    "name a year whose second venue was the same as 2011.": "## Target type: {year}\n## Query:\nStep1: Find the entity named 2011\nQuery1: \"get_information(relation='Year', tail_entity='2011')\"\nStep2: Find the second venue of output_of_query1\nQuery2: \"get_information(relation='2nd Venue', head_entity='output_of_query1')\"\nStep3: Find the year with the same second venue as output_of_query2\nQuery3: \"get_information(relation='2nd Venue', tail_entity='output_of_query2')\"\nStep4: Get the distinct years from output_of_query3\nQuery4: \"distinct(set='output_of_query3')\"",
    "who is the top (most wins overall) winning school in class aaaa?": "None",
    "what is the number of games that this person won in their career?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity with the relation of Outcome that is \"Winner\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which building in canada was the first to be taller than 200m?": "## Target type: {building}\n## Query:\nStep1: Find the entity that Height (CTBUH) is taller than 200m\nQuery1: \"get_information(relation='Height (CTBUH)', tail_entity>'200m')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Building of output_of_query4\nQuery5: \"get_information(relation='Building', head_entity='output_of_query4')\"",
    "which 2 super middleweight champions both had the same about of successful defenses?": "None",
    "which player had the least amount of runs?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Runs\nQuery1: \"get_information(relation='Runs')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Runs\nQuery3: \"get_information(relation='Runs', tail_entity='output_of_query2')\"\nStep4: Find the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many fights lasted at least 2 rounds?": "## Target type: {number of fights}\n## Query:\nStep1: Find the fights with the relation of Round and at least 2 rounds\nQuery1: \"get_information(relation='Round', tail_entity>='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which conference school was founded earlier: bryan college or montreat college?": "## Target type: {institution}\n## Query:\nStep1: Find the entity named Bryan College\nQuery1: \"get_information(relation='Institution', tail_entity='Bryan College')\"\nStep2: Find the founded year of output_of_query1\nQuery2: \"get_information(relation='Founded', head_entity='output_of_query1')\"\nStep3: Find the entity named Montreat College\nQuery3: \"get_information(relation='Institution', tail_entity='Montreat College')\"\nStep4: Find the founded year of output_of_query3\nQuery4: \"get_information(relation='Founded', head_entity='output_of_query3')\"\nStep5: Compare the founded years of output_of_query2 and output_of_query4 to find the earlier one\nQuery5: \"compare(output1='output_of_query2', output2='output_of_query4', operator='earlier')\"",
    "what is the only week with more than 80,000 attendance": "None",
    "what is the total number of french lesbians?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has Nationality as French and Notes as L\nQuery1: \"get_information(relation='Nationality', tail_entity='French')\"\nQuery2: \"get_information(relation='Notes', tail_entity='L')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which game is credited with a creative director and warner bros. interactive entertainment as their creative director?": "None",
    "how long did sydney greenstreet's acting career last?": "None",
    "her first loss was against this opponent": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Res. equal to 'Loss'\nQuery1: \"get_information(relation='Res.', tail_entity='Loss')\"\nStep2: Get the first output_of_query1\nQuery2: \"first(set='output_of_query1')\"\nStep3: Get the opponent of output_of_query2\nQuery3: \"get_information(relation='Opponent', head_entity='output_of_query2')\"",
    "in 2012 who was expected to light the tree?": "None",
    "name a nation which did not get a gold medal.": "None",
    "what it the total number of countries in the first stage of the 2008 afc asian cup?": "None",
    "which is the top county in terms of area?": "None",
    "how long from when australia's site opened until it closed?": "None",
    "bernadette's \"soms\" and which other song earned the same number of points?": "None",
    "name the species that has the longest years since divergence from human.": "## Target type: {species}\n## Query:\nStep1: Find the entity with the relation of Years Since Divergence from Human (mya)\nQuery1: \"get_information(relation='Years Since Divergence from Human (mya)')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Years Since Divergence from Human\nQuery3: \"get_information(relation='Years Since Divergence from Human (mya)', tail_entity='output_of_query2')\"\nStep4: Find the species of output_of_query3\nQuery4: \"get_information(relation='Species', head_entity='output_of_query3')\"",
    "how many parts were published in 2002?": "## Target type: {number}\n## Query:\nStep1: Find the parts of public release date in 2002\nQuery1: \"get_information(relation='Latest public release date (edition)', tail_entity='2002')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "give the total number of riders listed.": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which hand is the top hand in the card game super aces?": "None",
    "did jose have more wins in 1978 or 1979?": "None",
    "what grand slam is after the australian open?": "## Target type: {grand slam}\n## Query:\nStep1: Find the entity named Australian Open\nQuery1: \"get_information(relation='Name', tail_entity='Australian Open')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the grand slam of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which country has the least gdp growth where gdp nominal is more than 5 and gdp per capita is less than 5000": "None",
    "what is the name of the entry previous to no. 16?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of No. as '16'\nQuery1: \"get_information(relation='No.', tail_entity='16')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number as output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what dates did the 1984 summer olympics take place?": "None",
    "what is the average population density in mainland cities?": "None",
    "what's the thermal power amount in the year 2011?": "None",
    "liz larin won outstanding rock/pop songwriter in 2006. when was her first win for this category?": "None",
    "how many total people can fit in windsor park?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Windsor Park\nQuery1: \"get_information(relation='Stadium', tail_entity='Windsor Park')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"",
    "how many world championships did imamura participate in?": "None",
    "how many representatives were from conservative party?": "## Target type: {number of representatives}\n## Query:\nStep1: Find the entities with the relation of Party equals Conservative\nQuery1: \"get_information(relation='Party', tail_entity='Conservative')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which religion has the highest percentage represented in india?": "## Target type: {religious group}\n## Query:\nStep1: Find the entity with the relation of Population %\nQuery1: \"get_information(relation='Population %')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Population %\nQuery3: \"get_information(relation='Population %', tail_entity='output_of_query2')\"\nStep4: Find the religious group of output_of_query3\nQuery4: \"get_information(relation='Religious group', head_entity='output_of_query3')\"",
    "when was the building at 10 court street built?": "None",
    "which home team scored the most points?": "## Target type: {home team}\n## Query:\nStep1: Find the entity with the relation of Score as not equals to \"-\"\nQuery1: \"get_information(relation='Score', tail_entity!='-')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the home team of output_of_query3\nQuery4: \"get_information(relation='Home Team', head_entity='output_of_query3')\"",
    "how many institutions are non-denominational or non-sectarian?": "None",
    "who was the first laureate in physiology or medicine?": "## Target type: {'Laureate'}\n## Query:\nStep1: Find the entity with the relation of Category is \"Physiology or Medicine\"\nQuery1: \"get_information(relation='Category', tail_entity='Physiology or Medicine')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with the min row_number\nQuery3: \"min(set='output_of_query2')\"\nStep4: Get the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Laureate of output_of_query4\nQuery5: \"get_information(relation='Laureate', head_entity='output_of_query4')\"",
    "which plant was the first to open?": "## Target type: {plant name}\n## Query:\nStep1: Find the entity with the relation of Startup Date\nQuery1: \"get_information(relation='Startup Date')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Startup Date\nQuery3: \"get_information(relation='Startup Date', tail_entity='output_of_query2')\"\nStep4: Find the Plant Name of output_of_query3\nQuery4: \"get_information(relation='Plant Name', head_entity='output_of_query3')\"",
    "how many tournaments were held in april?": "None",
    "which tie number has the same score as tie number 5?": "None",
    "what boat builder created the hie after the hirondelle?": "## Target type: {boat builder}\n## Query:\nStep1: Find the entity named Hirondelle\nQuery1: \"get_information(relation='Name', tail_entity='Hirondelle')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Get the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the boat builder of output_of_query4\nQuery5: \"get_information(relation='Boat Builder', head_entity='output_of_query4')\"",
    "what is the first track featuring lil' duval?": "None",
    "what is the diameter of the smallest bell?": "## Target type: {diameter}\n## Query:\nStep1: Find the entity with the relation of Diameter\nQuery1: \"get_information(relation='Diameter')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Diameter\nQuery3: \"get_information(relation='Diameter', tail_entity='output_of_query2')\"",
    "which locomotive was the first to enter into service?": "None",
    "which player is the shortest at only 5 ft 7 in?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Find the entity with the height of 5 ft 7 in\nQuery2: \"get_information(relation='Height', tail_entity='5 ft 7 in')\"\nStep3: Find the player of output_of_query2\nQuery3: \"get_information(relation='Name', head_entity='output_of_query2')\"",
    "did the uk or the us manufacture the most canadian air forces planes?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Place of manufacture\nQuery1: \"get_information(relation='Place of manufacture')\"\nStep2: Get the count of output_of_query1 that equals 'UK'\nQuery2: \"count(set='output_of_query1', value='UK')\"\nStep3: Get the count of output_of_query1 that equals 'US'\nQuery3: \"count(set='output_of_query1', value='US')\"\nStep4: Compare the count of output_of_query2 and output_of_query3\nQuery4: \"compare(count1='output_of_query2', count2='output_of_query3')\"",
    "at which competition did the competitor throw the javelin the farthest?": "None",
    "who had the most amount of time out of all the runners?": "None",
    "which driver drove the same car as luis serrado?": "None",
    "tell me a competition that they placed no higher than 5th.": "None",
    "which one is previous from eesu": "None",
    "which of the languages mentioned was used in the most films?": "## Target type: {'LANGUAGE'}\n## Query:\nStep1: Find all the languages mentioned\nQuery1: \"get_information(relation='LANGUAGE')\"\nStep2: Find the language that appears the most\nQuery2: \"mode(set='output_of_query1')\"",
    "what is the most consecutive tournaments won by andrea koch benvenuto?": "None",
    "how many parties follow the ideology of social democracy?": "None",
    "how many years are there in a season?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season')\"\nStep2: Find the distinct years in output_of_query1\nQuery2: \"distinct(set='output_of_query1')\" \nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how did houston pick next after david carr?": "None",
    "how many stations have frequencies between 88 and 92?": "None",
    "what title comes after \"keep ya head up\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Title is \"Keep Ya Head Up\"\nQuery1: \"get_information(relation='Title', tail_entity='Keep Ya Head Up')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which party had the most previous council?": "None",
    "how many more previous points does the australian open have than the qatar total open?": "None",
    "what was the only song to have 6 in us rap?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity in US Rap that contains '6'\nQuery1: \"get_information(relation='US Rap', tail_entity='6')\"\nStep2: Get the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "which country ranked after austria?": "None",
    "who bore the flag for samoa at consecutive summer olympic games?": "## Target type: {flag bearer}\n## Query:\nStep1: Find the entity named Samoa\nQuery1: \"get_information(relation='Flag bearer', tail_entity='Samoa')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Flag bearer of output_of_query4\nQuery5: \"get_information(relation='Flag bearer', head_entity='output_of_query4')\"",
    "what is the total number of delegates?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Contestant\nQuery1: \"get_information(relation='Contestant')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which drop(s) had the most spec ops mission(s)?": "None",
    "how many weeks did season 15 of comedy central presents span?": "None",
    "what is the next model listed after disk'o?": "## Target type: {'Model name'}\n## Query:\nStep1: Find the entity with the relation of Model name as Disk'O\nQuery1: \"get_information(relation='Model name', tail_entity='Disk\\'O')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the relation of row_number as output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model name of output_of_query4\nQuery5: \"get_information(relation='Model name', head_entity='output_of_query4')\"",
    "what is the last chassis listed?": "## Target type: {'Chassis'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Chassis of output_of_query3\nQuery4: \"get_information(relation='Chassis', head_entity='output_of_query3')\"",
    "what site at most is taken place?": "None",
    "which building took two consecutive years to build?": "None",
    "which country is listed the least?": "None",
    "what is the name of the first president?": "## Target type: {president}\n## Query:\nStep1: Find the entity with the relation of row_number as 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the President of output_of_query1\nQuery2: \"get_information(relation='President', head_entity='output_of_query1')\"",
    "in what year was korzeniowski's last competition?": "None",
    "what album title came next after get lost?": "## Target type: {album title}\n## Query:\nStep1: Find the entity named \"Get Lost\"\nQuery1: \"get_information(relation='Album Title', tail_entity='Get Lost')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album Title of output_of_query4\nQuery5: \"get_information(relation='Album Title', head_entity='output_of_query4')\"",
    "which animal type has the most pillow pals?": "None",
    "did the song \"gitara\" or \"yesh\" earn more points?": "## Target type: {song}\n## Query:\nStep1: Find the entity named \"Gitara\"\nQuery1: \"get_information(relation='Song', tail_entity='Gitara')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Yesh\"\nQuery3: \"get_information(relation='Song', tail_entity='Yesh')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Compare the points between output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "where was the last match played?": "## Target type: {location}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "does december or january have more snow days?": "## Target type: {month}\n## Query:\nStep1: Find the number of snow days in December\nQuery1: \"get_information(relation='Dec')\"\nStep2: Find the number of snow days in January\nQuery2: \"get_information(relation='Jan')\"\nStep3: Compare the snow days in December and January\nQuery3: \"if(set1='output_of_query1' > set2='output_of_query2', 'December', 'January')\"",
    "which player earned the most between 2007 and 2013 in the western open?": "None",
    "how many consecutive games did dejan damjanovic score a goal in during the 2013 season?": "None",
    "which building is the oldest on the bw campus.": "None",
    "what is the difference in runners-up from coleraine academical institution and royal school dungannon?": "None",
    "name two events in which mayer competed before he won the bangkok universiade.": "None",
    "what title received the most favorable position on the aus chart?": "None",
    "how many total medals were won by the u.s. and russia?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity that is U.S.\nQuery1: \"get_information(relation='Nation', tail_entity='U.S.')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity that is Russia\nQuery3: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the sum of output_of_query5\nQuery6: \"sum(set='output_of_query5')\"",
    "how many roman catholic dioceses were established in angola before 1990?": "None",
    "how many matches have been won by wales?": "## Target type: {number of matches}\n## Query:\nStep1: Find the entity named Wales\nQuery1: \"get_information(relation='Victor', tail_entity='Wales')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which event had higher attendance, january 24, 1994, or december 23, 1993?": "None",
    "what is the date for the first game played in the meadowlands?": "## Target type: {'Date'}\n## Query:\nStep1: Find the game played at The Meadowlands\nQuery1: \"get_information(relation='Game site', tail_entity='The Meadowlands')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the first row_number\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the row with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what is the formula for the compound that has a density of only 3.74 g/cm^3?": "## Target type: {formula}\n## Query:\nStep1: Find the entity with the relation of density, g/cm3\nQuery1: \"get_information(relation='density, g/cm3', tail_entity='3.74')\"\nStep2: Get the formula of output_of_query1\nQuery2: \"get_information(relation='Formula', head_entity='output_of_query1')\"",
    "how long did the program air for in days?": "None",
    "how many people does the holon city arena in holon seat?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity that is Holon City Arena\nQuery1: \"get_information(relation='Stadium', tail_entity='Holon City Arena')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"",
    "how many games played by sunderland are listed here?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Sunderland\nQuery1: \"get_information(relation='Home team', tail_entity='Sunderland')\"\nStep2: Find the games played by output_of_query1\nQuery2: \"get_information(relation='Home team', head_entity='output_of_query1')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "did austria win more games in 1992 or 1996?": "## Target type: {'Year'}\n## Query:\nStep1: Find the games won by Austria in 1992\nQuery1: \"get_information(relation='Year', tail_entity='1992')\"\nStep2: Find the games won by Austria in 1996\nQuery2: \"get_information(relation='Year', tail_entity='1996')\"\nStep3: Count the number of games won by Austria in output_of_query1 and output_of_query2\nQuery3: \"count(set='output_of_query1')\", \"count(set='output_of_query2')\"\nStep4: Compare the count of output_of_query3 and output_of_query4 to determine which year Austria won more games\nQuery4: \"compare(output_of_query3, output_of_query4)\"",
    "what are the number of titles that premiered in the month of september?": "None",
    "which age range had the largest percentage for other religion?": "## Target type: {age range}\n## Query:\nStep1: Find the entity with the relation of Other Religion\nQuery1: \"get_information(relation='Other Religion')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Other Religion\nQuery3: \"get_information(relation='Other Religion', tail_entity='output_of_query2')\"\nStep4: Find the age range of output_of_query3\nQuery4: \"get_information(relation='Ages attained (years)', head_entity='output_of_query3')\"",
    "how many players are an ol?": "## Target type: {number of players}\n## Query:\nStep1: Find the entities whose Position is \"OL\"\nQuery1: \"get_information(relation='Position', tail_entity='OL')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in points between chris amon and jim clark?": "## Target type: {'Points'}\n## Query:\n\nStep1: Find the entity named Chris Amon\nQuery1: \"get_information(relation='Driver', tail_entity='Chris Amon')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Jim Clark\nQuery3: \"get_information(relation='Driver', tail_entity='Jim Clark')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "how many times was poland the opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Poland\nQuery1: \"get_information(relation='Opponents', tail_entity='Poland')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wrestlers entered the battle royal?": "## Target type: {number}\n## Query:\nStep1: Find the wrestler with the relation of Entered\nQuery1: \"get_information(relation='Wrestler')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did the bulldogs win?": "None",
    "who is listed next after rank number 218?": "## Target type: {representative}\n## Query:\nStep1: Find the entity with the relation of Rank and value of 218\nQuery1: \"get_information(relation='Rank', value='218')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Representative of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "what was ernie els total score?": "None",
    "how many consecutive times is the poll company gis xxi listed?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Poll company\nQuery1: \"get_information(relation='Poll company', tail_entity='GIS XXI')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of consecutive times\nQuery5: \"count(set='output_of_query4')\"",
    "what is the most consecutive wins the barrage have had this season?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Result as 'W'\nQuery1: \"get_information(relation='Result', tail_entity='W')\"\nStep2: Find the consecutive wins of output_of_query1\nQuery2: \"consecutive_wins(set='output_of_query1', tail_entity='this season')\"\nStep3: Get the max consecutive wins of output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "who is the only deputy judge at the permanent court of international justice from asia?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Nationality as \"Asia\"\nQuery1: \"get_information(relation='Nationality', tail_entity='Asia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "before the distributor was which one?": "None",
    "who was on the roster from 1969- 1976? and how do you spell their name?": "## Target type: {player names}\n## Query:\nStep1: Find the entity named 1969-1976\nQuery1: \"get_information(relation='Season', tail_entity='1969-1976')\"\nStep2: Find the roster of output_of_query1\nQuery2: \"get_information(relation='Roster', head_entity='output_of_query1')\"\nStep3: Split the roster into individual player names\nQuery3: \"split_string(string='output_of_query2', delimiter=', ')\"",
    "which country had the most roller coasters over 80 feet in height in 2008?": "None",
    "which year was the first site on this list, completed?": "None",
    "which player was not a free agent?": "None",
    "how many steam locomotives are currently located at the bala lake railway?": "None",
    "how many nations received more medals than canada?": "None",
    "name a collection that has at least two works of art on the list in it.": "## Target type: {collection}\n## Query:\nStep1: Find all the collections\nQuery1: \"get_information(relation='Collection')\"\nStep2: Find the count of each collection\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the collections with at least two works of art\nQuery3: \"get_information(relation='Collection', head_entity='output_of_query2>=2')\"\nStep4: Choose a random output_of_query3\nQuery4: \"random(set='output_of_query3')\"",
    "how many of his operettas were 3 acts?": "None",
    "which year is the last qual on the chart": "None",
    "how many midwest teams played southwestern louisiana as their final opponent?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity named Southwestern Louisiana\nQuery1: \"get_information(relation='Final Opponent', tail_entity='Southwestern Louisiana')\"\nStep2: Find the teams in Midwest region\nQuery2: \"get_information(relation='Region', tail_entity='Midwest')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many cbs were drafted in 2013?": "None",
    "how many more people attended the november 18, 1993 games than the november 9th game?": "None",
    "how many \"compilation\" albums did yg entertainment release in 2011?": "## Target type: {number}\n## Query:\nStep1: Find the entity named YG Entertainment\nQuery1: \"get_information(relation='Artist', tail_entity='YG Entertainment')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Compilation\nQuery3: \"get_information(relation='Format', tail_entity='Compilation')\"\nStep4: Find the released year of output_of_query3\nQuery4: \"get_information(relation='Released', head_entity='output_of_query3')\"\nStep5: Find the output_of_query4 is 2011\nQuery5: \"get_information(relation='Released', tail_entity='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which was a better season, 2006/07 or 2007/08?": "## Target type: {season}\n## Query:\nStep1: Find the entity named 2006/07\nQuery1: \"get_information(relation='Season', tail_entity='2006/07')\"\nStep2: Find the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity named 2007/08\nQuery3: \"get_information(relation='Season', tail_entity='2007/08')\"\nStep4: Find the Place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Compare the Place of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "in what year did the team achieve the same place as 2010/11?": "None",
    "which country performed better during the 1951 world ice hockey championships, switzerland or great britain?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Switzerland\nQuery1: \"get_information(relation='Team', tail_entity='Switzerland')\"\nStep2: Find the entity named Great Britain\nQuery2: \"get_information(relation='Team', tail_entity='Great Britain')\"\nStep3: Find the Points of output_of_query1\nQuery3: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep4: Find the Points of output_of_query2\nQuery4: \"get_information(relation='Points', head_entity='output_of_query2')\"\nStep5: Check if output_of_query3 is greater than output_of_query4\nQuery5: \"output_of_query3 > output_of_query4\"",
    "other than chimaltenango's contestant, which region also had a 19-year-old contestant?": "## Target type: {region}\n## Query:\nStep1: Find the contestant from Chimaltenango\nQuery1: \"get_information(relation='Represent', tail_entity='Chimaltenango')\"\nStep2: Find the region of output_of_query1\nQuery2: \"get_information(relation='Represent', head_entity='output_of_query1')\"\nStep3: Find the contestant who is 19 years old\nQuery3: \"get_information(relation='Age', tail_entity='19')\"\nStep4: Find the region of output_of_query3\nQuery4: \"get_information(relation='Represent', head_entity='output_of_query3')\"\nStep5: Find the set difference between output_of_query4 and output_of_query2\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query2')\"",
    "which contestant is older, karol guevara or patricia de leon?": "## Target type: {contestant}\n## Query:\nStep1: Find the entity named Karol Guevara\nQuery1: \"get_information(relation='Contestant', tail_entity='Karol Guevara')\"\nStep2: Find the age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the entity named Patricia de Leon\nQuery3: \"get_information(relation='Contestant', tail_entity='Patricia de Leon')\"\nStep4: Find the age of output_of_query3\nQuery4: \"get_information(relation='Age', head_entity='output_of_query3')\"\nStep5: Compare the ages of output_of_query2 and output_of_query4\nQuery5: \"if (output_of_query2 > output_of_query4): 'Karol Guevara' else: 'Patricia de Leon'\"",
    "allan fraser was elected how many years before frank crean?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Allan Fraser\nQuery1: \"get_information(relation='Member', tail_entity='Allan Fraser')\"\nStep2: Find the first elected year of output_of_query1\nQuery2: \"get_information(relation='First elected', head_entity='output_of_query1')\"\nStep3: Find the entity named Frank Crean\nQuery3: \"get_information(relation='Member', tail_entity='Frank Crean')\"\nStep4: Find the first elected year of output_of_query3\nQuery4: \"get_information(relation='First elected', head_entity='output_of_query3')\"\nStep5: Calculate the difference of the years between output_of_query2 and output_of_query4\nQuery5: \"Calculator('output_of_query4 - output_of_query2')\"",
    "who was the lead before pat mccallum?": "## Target type: {lead}\n## Query:\nStep1: Find the entity named Pat McCallum\nQuery1: \"get_information(relation='Lead', tail_entity='Pat McCallum')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Lead of output_of_query4\nQuery5: \"get_information(relation='Lead', head_entity='output_of_query4')\"",
    "what is the difference between 2008 and 2009 score?": "None",
    "what is the difference between the team ranking of the 1998-99 season and the 2003-04 season?": "## Target type: {difference between rankings}\n## Query:\nStep1: Find the row_number of the 1998-99 season\nQuery1: \"get_information(relation='Season', tail_entity='1998-99')\"\nStep2: Find the team ranking of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the row_number of the 2003-04 season\nQuery3: \"get_information(relation='Season', tail_entity='2003-04')\"\nStep4: Find the team ranking of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "compared to 1998, what is the difference in seats won in the 2001 election cycle?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Election \"1998\"\nQuery1: \"get_information(relation='Election', tail_entity='1998')\"\nStep2: Find the entity named Election \"2001\"\nQuery2: \"get_information(relation='Election', tail_entity='2001')\"\nStep3: Find the seats won in output_of_query1\nQuery3: \"get_information(relation='Seats in the parliament', head_entity='output_of_query1')\"\nStep4: Find the seats won in output_of_query2\nQuery4: \"get_information(relation='Seats in the parliament', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query3\nQuery5: \"subtraction(a='output_of_query4', b='output_of_query3')\"",
    "what is the difference between the richmond futures kickers rank in 2003 and 2006?": "None",
    "what is the difference of medals from 1976 and 2010?": "## Target type: {difference}\n## Query:\nStep1: Find the entity with the relation of Event is 1976 Winter Paralympics\nQuery1: \"get_information(relation='Event', tail_entity='1976 Winter Paralympics')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Event is 2010 Winter Paralympics\nQuery3: \"get_information(relation='Event', tail_entity='2010 Winter Paralympics')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(num1='output_of_query2', num2='output_of_query4')\"",
    "what is the difference between notes in 1990 and 1989?": "None",
    "what was the score of each match in october?": "None",
    "what was the goal difference in the game on february 18th?": "None",
    "what was the score difference for the september 15th game?": "None",
    "what was the total number of games played?": "None",
    "how many games were played against grand canyon?": "None",
    "what is the total number of games played?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Series\nQuery1: \"get_information(relation='Series')\"\nStep2: Get the total count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "simona armstrong is how much older than leanne dobinson?": "None",
    "who is the tallest member of estonia's men's national volleyball team?": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity with the relation of Current Club as TT\u00dc VK\nQuery1: \"get_information(relation='Current Club', tail_entity='TT\u00dc VK')\"\nStep2: Find the entity with the relation of Height as maximum value in output_of_query1\nQuery2: \"get_information(relation='Height', tail_entity='max(output_of_query1)')\"\nStep3: Find the Player of output_of_query2\nQuery3: \"get_information(relation='Player', head_entity='output_of_query2')\"",
    "what is the last nationality listed in the table?": "## Target type: {nationality}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Nationality of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"",
    "which ethnicity is first on the chart": "None",
    "what is the first name on the list?": "## Target type: {first name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the first name of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the first country listed on this chart?": "None",
    "what is the first english translation listed on the table?": "## Target type: {'Title (English translation)'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title (English translation) of output_of_query3\nQuery4: \"get_information(relation='Title (English translation)', head_entity='output_of_query3')\"",
    "what is the total number of games played in february 2000?": "None",
    "after 15 august, 2011, where does the tournament take place next?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity that is \"15 August, 2011\"\nQuery1: \"get_information(relation='Date', tail_entity='15 August, 2011')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tournament of output_of_query4\nQuery5: \"get_information(relation='Tournament', head_entity='output_of_query4')\"",
    "what is the name of the venue listed before olympic stadium on 1950-08-27?": "None",
    "1996 indianapolis colts what is the name of there home field?": "## Target type: {home field}\n## Query:\nStep1: Find the entity named Indianapolis Colts\nQuery1: \"get_information(relation='Opponent', tail_entity='Indianapolis Colts')\"\nStep2: Find the home field of output_of_query1\nQuery2: \"get_information(relation='Game Site', head_entity='output_of_query1')\"",
    "which location is listed previous to march 22?": "## Target type: {location}\n## Query:\nStep1: Find the entity named March 22\nQuery1: \"get_information(relation='Date', tail_entity='March 22')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "what is the name of the next venue after ullevaal stadion, oslo, norway?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Ullevaal Stadion, Oslo, Norway\nQuery1: \"get_information(relation='Venue', tail_entity='Ullevaal Stadion, Oslo, Norway')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "which town in ireland is home to the most amount of miss northern ireland winners since 2000?": "## Target type: {town in Ireland}\n## Query:\nStep1: Find the Miss Northern Ireland winners since 2000\nQuery1: \"get_information(relation='Year', tail_entity>='2000')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the town in Ireland for each winner of output_of_query1\nQuery3: \"get_information(relation='Hometown', head_entity='output_of_query1')\"\nStep4: Calculate the mode (most frequent) of output_of_query3\nQuery4: \"mode(set='output_of_query3')\"",
    "whos was the next person that won after amandine in womens?": "## Target type: {'Women's Individual'}\n## Query:\nStep1: Find the entity named Amandine Bouillot\nQuery1: \"get_information(relation='Women's Individual', tail_entity='Amandine Bouillot')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Women's Individual of output_of_query4\nQuery5: \"get_information(relation='Women's Individual', head_entity='output_of_query4')\"",
    "in the irish national final for the eurovision song contest in 1990, the artist singing which song received third place?": "None",
    "name the only stage that sean kelly won.": "## Target type: {Stage}\n## Query:\nStep1: Find the entity named Sean Kelly\nQuery1: \"get_information(relation='Winner', tail_entity='Sean Kelly')\"\nStep2: Find the stage of output_of_query1\nQuery2: \"get_information(relation='Stage', head_entity='output_of_query1')\"",
    "how many years has the best crying scene award been given?": "None",
    "how many awards were handed out in 2004?": "None",
    "name all the winners whose awarding age was more than 28 years.": "None",
    "how long is his longest gap between awards nominations?": "None",
    "last award won": "## Target type: {award description}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the award description of output_of_query3\nQuery4: \"get_information(relation='Award Description(s)', head_entity='output_of_query3')\"",
    "the date september 10th is next to which venue?": "None",
    "what date was the first game at war memorial stadium?": "## Target type: {date}\n## Query:\nStep1: Find the entity named War Memorial Stadium\nQuery1: \"get_information(relation='Game site', tail_entity='War Memorial Stadium')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the earliest row_number of output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the row with the earliest row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "what was the total attendance for the september 19th, 1984 game?": "## Target type: {Attendance}\n## Query:\nStep1: Find the entity with the relation of Date as September 19th, 1984\nQuery1: \"get_information(relation='Date', tail_entity='September 19th, 1984')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "which game was attended by more people, august 7 or september 22?": "None",
    "which game had a higher attendance: 11/09/2013 or 12/20/2013?": "## Target type: {Date}\n## Query:\nStep1: Find the entity with the relation of Date equal to 11/09/2013\nQuery1: \"get_information(relation='Date', tail_entity='11/09/2013')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\n\nStep3: Find the entity with the relation of Date equal to 12/20/2013\nQuery3: \"get_information(relation='Date', tail_entity='12/20/2013')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\n\nStep5: Compare the attendance of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4 then output_of_query2 else output_of_query4\"",
    "who finished directly after the driver who finished in 1:28.745?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that finished in 1:28.745\nQuery1: \"get_information(relation='Time/Retired', tail_entity='1:28.745')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "how many times did he finish in under 2:20?": "## Target type: {number}\n## Query:\nStep1: Find the entity that finished in under 2:20\nQuery1: \"get_information(relation='Notes', tail_entity<'2:20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had the next best time after dusmetova.": "## Target type: {name}\n## Query:\nStep1: Find the entity named Dusmetova\nQuery1: \"get_information(relation='Name', tail_entity='Dusmetova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who finished directly after papulova?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Papulova\nQuery1: \"get_information(relation='Name', tail_entity='Papulova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "tell me the number of laps completed by jj lehto.": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named JJ Lehto\nQuery1: \"get_information(relation='Driver', tail_entity='JJ Lehto')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many times is usa listed as the country?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Country is USA\nQuery1: \"get_information(relation='Country', tail_entity='USA')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players are from the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nationality as \"United States\"\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "after bedford jezzard, who was the next player to score 6 goals?": "None",
    "who scored more, grant or benyon?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Grant\nQuery1: \"get_information(relation='Name', tail_entity='Grant')\"\nStep2: Find the total goals scored by output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Benyon\nQuery3: \"get_information(relation='Name', tail_entity='Benyon')\"\nStep4: Find the total goals scored by output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the total goals scored by output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "what is the difference in pick numbers between greg schaum and ed bauer?": "## Target type: {difference in pick numbers}\n## Query:\nStep1: Find the entity named Greg Schaum\nQuery1: \"get_information(relation='Player', tail_entity='Greg Schaum')\"\nStep2: Find the pick numbers of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the entity named Ed Bauer\nQuery3: \"get_information(relation='Player', tail_entity='Ed Bauer')\"\nStep4: Find the pick numbers of output_of_query3\nQuery4: \"get_information(relation='Pick #', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(output_of_query2, output_of_query4)\"",
    "what country had the most top 10 finishers in the men's 15 kilometre classical?": "None",
    "the country with the most riders was": "## Target type: {country}\n## Query:\nStep1: Find all the riders\nQuery1: \"get_information(relation='Rider')\"\nStep2: Find the countries of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Find the country appeared the most in output_of_query2\nQuery3: \"mode(set='output_of_query2')\"",
    "what country had more winning riders than italy?": "None",
    "the top 3 runners were from what country?": "## Target type: {country}\n## Query:\nStep1: Find the row_number of the top 3 runners\nQuery1: \"get_information(relation='row_number', tail_entity<='3')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "which country's riders won more races: germany or australia?": "None",
    "who is ranked before delhi?": "## Target type: {'City'}\n## Query:\nStep1: Find the entity named Delhi\nQuery1: \"get_information(relation='City', tail_entity='Delhi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the City of output_of_query4\nQuery5: \"get_information(relation='City', head_entity='output_of_query4')\"",
    "did the eagles play against virginia tech or alabama on september 8?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity with the relation of Date as 'September 8'\nQuery1: \"get_information(relation='Date', tail_entity='September 8')\"\nStep2: Find the entity with the relation of Opponent# and output_of_query1 as head_entity\nQuery2: \"get_information(relation='Opponent#', head_entity='output_of_query1')\"\nStep3: Check if the output_of_query2 contains 'Virginia Tech' or 'Alabama'\nQuery3: \"contains(set='output_of_query2', element='Virginia Tech') OR contains(set='output_of_query2', element='Alabama')\"",
    "what is the total number of away wins?": "## Target type: {number}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity whose competition is UEFA Cup\nQuery2: \"get_information(relation='Competition', tail_entity='UEFA Cup')\"\nStep3: Find the away wins of output_of_query2\nQuery3: \"get_information(relation='Away', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "was the top game home or away?": "## Target type: {Home/Away}\n## Query:\nStep1: Find the game on top of the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Home/Away of output_of_query1\nQuery2: \"get_information(relation='Home/Away', head_entity='output_of_query1')\"",
    "how many seasons at the stadio ennio tardini had 11,000 or more season tickets?": "None",
    "what is the total number of seasons?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the seasons listed\nQuery1: \"get_information(relation='Season')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons are there?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons are shown in this chart?": "## Target type: {number of seasons}\n## Query:\nStep1: Find all the seasons in the chart\nQuery1: \"get_information(relation='Season')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of seasons listed on the chat?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total amount of 5 tier season after 2005/06?": "None",
    "what venue was the latest match played at?": "## Target type: {venue}\n## Query:\nStep1: Find the row_number of the latest match\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the match with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "we will rock you and we are the champions where played at which venue?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named \"We Will Rock You\"\nQuery1: \"get_information(relation='Performance', tail_entity='We Will Rock You')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"\nStep3: Find the entity named \"We Are the Champions\"\nQuery3: \"get_information(relation='Performance', tail_entity='We Are the Champions')\"\nStep4: Find the venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the number of albums released with the artist rimi natsukawa?": "None",
    "how many consecutive albums were released by the blokshok records label?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Label is 'Blokshok Records'\nQuery1: \"get_information(relation='Label', tail_entity='Blokshok Records')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many total albums did this group have under capitol records?": "## Target type: {number of albums}\n## Query:\nStep1: Find the entity named Capitol Records\nQuery1: \"get_information(relation='Label', tail_entity='Capitol Records')\"\nStep2: Find all the albums under output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many albums did french montana release under bad boy?": "## Target type: {number of albums}\n## Query:\nStep1: Find the entity named French Montana\nQuery1: \"get_information(relation='Act', tail_entity='French Montana')\"\nStep2: Find the albums released under Bad Boy of output_of_query1\nQuery2: \"get_information(relation='# Albums released under Bad Boy', head_entity='output_of_query1')\"",
    "how many songs did this producer work with taio cruz on?": "None",
    "in which major competitions did yoichiro kakitani have at least 3 starts?": "None",
    "how many olympics has sofia akhmeteli represented georgia in the olympics?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Sofia Akhmeteli\nQuery1: \"get_information(relation='Flag bearer', tail_entity='Sofia Akhmeteli')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons did sd ponferradina b come in first place total?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity named SD Ponferradina B\nQuery1: \"get_information(relation='Place', tail_entity='SD Ponferradina B')\"\nStep2: Find the seasons of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Place as \"1st\"\nQuery3: \"get_information(relation='Place', tail_entity='1st')\"\nStep4: Find the seasons of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the number of different nationalities represented by the top 5 athletes?": "## Target type: {number of nationalities}\n## Query:\nStep1: Find the top 5 athletes\nQuery1: \"get_information(relation='row_number', tail_entity<='5')\"\nStep2: Get the Nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Calculate the count of unique Nationalities in output_of_query2\nQuery3: \"count(set='output_of_query2', unique=True)\"",
    "how many countries have at least one athlete who ranks in the top 25?": "## Target type: {number}\n## Query:\nStep1: Find the entity that ranks in the top 25\nQuery1: \"get_information(relation='Pos.', tail_entity<='25')\"\nStep2: Find the countries of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Calculate the count of distinct countries from output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many nations won no silver medals at all?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations with no silver medals\nQuery1: \"get_information(relation='Silver', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many countries did not earn silver medals?": "## Target type: {number of countries}\n## Query:\nStep1: Find the countries that earned silver medals\nQuery1: \"get_information(relation='Silver', tail_entity>='1')\"\nStep2: Find the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many nations earned no bronze medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the nations that earned bronze medals\nQuery1: \"get_information(relation='Bronze', tail_entity>'0')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many different locations are there?": "## Target type: {number of locations}\n## Query:\nStep1: Find all the locations\nQuery1: \"get_information(relation='Location')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the last pick in round four?": "## Target type: {player}\n## Query:\nStep1: Find the entities with the relation of Pick #\nQuery1: \"get_information(relation='Pick #')\"\nStep2: Find the max row_number of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number\nQuery3: \"get_information(relation='Pick #', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which cfl team has the most picks in round four?": "## Target type: {'CFL Team'}\n## Query:\nStep1: Find the entity that Pick is '#4'\nQuery1: \"get_information(relation='Pick #', tail_entity='#4')\"\nStep2: Find the CFL Team with the most output_of_query1\nQuery2: \"get_information(relation='CFL Team', tail_entity>='most')\"",
    "who was the only player to be picked in round nine?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Round that equals 9\nQuery1: \"get_information(relation='Round', tail_entity='9')\"\nStep2: Get the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "what is the last constellation featured on this table?": "## Target type: {'Constellation'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Constellation of output_of_query3\nQuery4: \"get_information(relation='Constellation', head_entity='output_of_query3')\"",
    "what is the last club listed?": "## Target type: {club}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "what is the name of the place listed last on this chart?": "## Target type: {'Name of place'}\n## Query:\nStep1: Get all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of place of output_of_query3\nQuery4: \"get_information(relation='Name of place', head_entity='output_of_query3')\"",
    "which location is listed last in the table?": "## Target type: {location}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what is the name of the last building on this chart?": "None",
    "how many competitors scored above 5,000 points?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity with the relation Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Find the entities whose Total is larger than 5000\nQuery2: \"get_information(relation='Total', tail_entity>'5000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many competitors had less than 13.00 points?": "None",
    "what is the difference between marcellino lucchi's points and max biaggi's points?": "None",
    "what is the difference between the points juan martin del potro won defending and his new points?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Juan Martin del Potro\nQuery1: \"get_information(relation='Player', tail_entity='Juan Martin del Potro')\"\nStep2: Find the Points Defending of output_of_query1\nQuery2: \"get_information(relation='Points defending', head_entity='output_of_query1')\"\nStep3: Find the New Points of output_of_query1\nQuery3: \"get_information(relation='New points', head_entity='output_of_query1')\"\nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(value1='output_of_query2', value2='output_of_query3')\"",
    "what is the difference between the points earned by cordoba and the points earned by cd villarrobledo?": "## Target type: {difference between points}\n## Query:\nStep1: Find the club named Cordoba\nQuery1: \"get_information(relation='Club', tail_entity='Cordoba')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the club named CD Villarrobledo\nQuery3: \"get_information(relation='Club', tail_entity='CD Villarrobledo')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the difference in uci points between nikolas maes and john degenkolb?": "## Target type: {difference in UCI World Tour Points}\n## Query:\nStep1: Find the entity named Nikolas Maes\nQuery1: \"get_information(relation='Cyclist', tail_entity='Nikolas Maes')\"\nStep2: Find the UCI World Tour Points of output_of_query1\nQuery2: \"get_information(relation='UCI World Tour Points', head_entity='output_of_query1')\"\nStep3: Find the entity named John Degenkolb\nQuery3: \"get_information(relation='Cyclist', tail_entity='John Degenkolb')\"\nStep4: Find the UCI World Tour Points of output_of_query3\nQuery4: \"get_information(relation='UCI World Tour Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "does max biaggi or ralf waldmann have more points?": "## Target type: {Rider}\n## Query:\nStep1: Find the entity named Max Biaggi\nQuery1: \"get_information(relation='Rider', tail_entity='Max Biaggi')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Ralf Waldmann\nQuery3: \"get_information(relation='Rider', tail_entity='Ralf Waldmann')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to find which one is larger\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which team has best percentage of titles to runner up finishes?": "None",
    "how many looked at more than 500 patients?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation No. of patients greater than 500\nQuery1: \"get_information(relation='No. of patients', tail_entity>'500')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the first model on the list?": "## Target type: {model}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "what is the next model number listed after 8525-l01?": "## Target type: {model number}\n## Query:\nStep1: Find the entity named 8525-L01\nQuery1: \"get_information(relation='IBM Model Number', tail_entity='8525-L01')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Model Number of output_of_query4\nQuery5: \"get_information(relation='IBM Model Number', head_entity='output_of_query4')\"",
    "who was the youngest delegate for miss dominican republic in 2002?": "None",
    "what contestant was the only titleholder to place in the top 15 at miss world?": "## Target type: {contestant}\n## Query:\nStep1: Find the entity that Placement at Miss World is 'Top 15'\nQuery1: \"get_information(relation='Placement at Miss World', tail_entity='Top 15')\"\nStep2: Find the contestant of output_of_query1\nQuery2: \"get_information(relation='Miss Northern Ireland', head_entity='output_of_query1')\"",
    "who was the only representative who won a special award at miss nepal but did not place at miss nepal?": "None",
    "who won at least 3 times in the mens?": "None",
    "how many players had a 8 points?": "## Target type: {number}\n## Query:\nStep1: Find the entity that \u03a3 Points is 8\nQuery1: \"get_information(relation='\u03a3 Points', tail_entity='8')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of gold medals won by japan?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Find the number of gold medals won by output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "which nation had the same total number of gold medals as japan?": "None",
    "how many countries won more silver medals than japan?": "None",
    "how many silver medals did contestants from japan win?": "None",
    "how long did it take the german team to finish the race?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity that has the Nation 'Germany'\nQuery1: \"get_information(relation='Nation', tail_entity='Germany')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how long did robert kubica take to complete the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Robert Kubica\nQuery1: \"get_information(relation='Driver', tail_entity='Robert Kubica')\"\nStep2: Find the time/retired of output_of_query1\nQuery2: \"get_information(relation='Time/Retired', head_entity='output_of_query1')\"",
    "how long did it take meck mothuli to finish the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Meck Mothuli\nQuery1: \"get_information(relation='Athlete', tail_entity='Meck Mothuli')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how long did it take elin backman to finish the race?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Elin Backman\nQuery1: \"get_information(relation='Name', tail_entity='Elin Backman')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what is the number of wins?": "## Target type: {number}\n## Query:\nStep1: Find the entity where the Result is \"Won\"\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games went into ot or overtime?": "None",
    "how many neutral site games resulted in overtime (ot)?": "None",
    "what is the total amount of times they played against opponent @min?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Opponent and value of @min\nQuery1: \"get_information(relation='Opponent', value='@min')\"\nStep2: Count the occurrences of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many consecutive games did the bears win against the lions during the 1980s?": "None",
    "how many times have the lions played in the playoffs?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the Lions\nQuery1: \"get_information(relation='row_number', tail_entity='Lions')\"\nStep2: Find the Playoffs of output_of_query1\nQuery2: \"get_information(relation='Playoffs', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the top ranked nation for total medals won": "## Target type: {Nation}\n## Query:\nStep1: Find the entity that Rank is 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what was the total number of medals received by the nations ranked #11?": "None",
    "what is the total number of medals for all the countries ranked fourth?": "None",
    "what was the only nation with 24 total medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total', tail_entity='24')\"\nStep2: Get the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what was galina chistyakova's last competition?": "None",
    "how many times did piotr place 1st in the 4x400m relay?": "None",
    "what was the first year where tamarine tanasugarn won a silver medal in singles?": "None",
    "did pastor maldonado compete in more races in 2009 or in 2006?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Pastor Maldonado\nQuery1: \"get_information(relation='Team', tail_entity='Pastor Maldonado')\"\nStep2: Find the races of output_of_query1 in 2009\nQuery2: \"get_information(relation='Races', tail_entity='output_of_query1', key='Season', value='2009')\"\nStep3: Find the races of output_of_query1 in 2006\nQuery3: \"get_information(relation='Races', tail_entity='output_of_query1', key='Season', value='2006')\"\nStep4: Compare the count of output_of_query2 and output_of_query3\nQuery4: \"compare(count(set='output_of_query2'), count(set='output_of_query3'))\"",
    "how many drivers finished with a time less than 4:00:00?": "None",
    "how many swimmers clocked less than 1:53 mins to complete the race?": "None",
    "how many athletes finished the race under 1:56?": "None",
    "what is the difference between the highest scoring player's points and the lowest scoring player's points?": "None",
    "which game had the greatest score difference?": "None",
    "what was the score of the top game?": "None",
    "the game with the shortest delta and highest score:": "None",
    "how many times has a british driver competed?": "None",
    "name a year he placed at least 2nd in two competitions.": "None",
    "how many competitions was great britain at?": "None",
    "how many times did imma clopes compete?": "None",
    "how many places are in greene county?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Principal county is Greene County\nQuery1: \"get_information(relation='Principal county', tail_entity='Greene County')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many townships in pope county, arkansas have populations of more than 1000?": "None",
    "how many total places are in greene county?": "## Target type: {number of places}\n## Query:\nStep1: Find the entity whose Principal county is Greene County\nQuery1: \"get_information(relation='Principal county', tail_entity='Greene County')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what townships have the same water area as lake township?": "None",
    "what is the next county listed after grant county?": "## Target type: {county}\n## Query:\nStep1: Find the entity named Grant County\nQuery1: \"get_information(relation='County', tail_entity='Grant County')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the County of output_of_query4\nQuery5: \"get_information(relation='County', head_entity='output_of_query4')\"",
    "alphabetically, what is the last township in ellsworth county, kansas?": "## Target type: {township}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "how many townships have populations over 2,000?": "## Target type: {number}\n## Query:\nStep1: Find the townships with population over 2,000\nQuery1: \"get_information(relation='Population', tail_entity>'2000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different albums does the song \"i see fire\" appear on?": "None",
    "what team is the only team with 2 wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Ch.Wins equals to '2'\nQuery1: \"get_information(relation='Ch.Wins', tail_entity='2')\"\nStep2: Get the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many buildings have at least ten floors?": "None",
    "how many residence is there?": "None",
    "the city's total number of dwellings as of 2012.": "None",
    "how many buildings have less than 20 floors?": "## Target type: {number}\n## Query:\nStep1: Find the buildings with the relation of Floors less than 20\nQuery1: \"get_information(relation='Floors', tail_entity<'20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many groups have more than 32 total seats?": "None",
    "tony fisher and ryan brewer each played what position?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Tony Fisher\nQuery1: \"get_information(relation='Player', tail_entity='Tony Fisher')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named Ryan Brewer\nQuery3: \"get_information(relation='Player', tail_entity='Ryan Brewer')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"",
    "who has same position as frank gillespie?": "None",
    "which players played the same position as derek combs?": "## Target type: {players}\n## Query:\nStep1: Find the entity named Derek Combs\nQuery1: \"get_information(relation='Player', tail_entity='Derek Combs')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the players with the same position as output_of_query2\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"\nStep4: Exclude output_of_query1 from output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "bruce bowen and mark madsen both played what position?": "## Target type: {position}\n## Query:\nStep1: Find the entity named Bruce Bowen\nQuery1: \"get_information(relation='Name', tail_entity='Bruce Bowen')\"\nStep2: Find the position of output_of_query1\nQuery2: \"get_information(relation='Position', head_entity='output_of_query1')\"\nStep3: Find the entity named Mark Madsen\nQuery3: \"get_information(relation='Name', tail_entity='Mark Madsen')\"\nStep4: Find the position of output_of_query3\nQuery4: \"get_information(relation='Position', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "who was the last representative picked?": "## Target type: {'Representative'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Representative of output_of_query3\nQuery4: \"get_information(relation='Representative', head_entity='output_of_query3')\"",
    "what are the total number of successors that are listed as being a democrat(d)?": "None",
    "what are the total number of locations with shut down listed as its status?": "None",
    "what is the total number of cbs stations?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Network is CBS\nQuery1: \"get_information(relation='Network', tail_entity='CBS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many countries have at most 5 medals?": "None",
    "what is the total number of gold medals awarded between these 11 countries?": "None",
    "how many medals total did ranks 10-15 earn?": "None",
    "south korea has how many more medals that north korea?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named South Korea\nQuery1: \"get_information(relation='Nation', tail_entity='South Korea')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named North Korea\nQuery3: \"get_information(relation='Nation', tail_entity='North Korea')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculation(set1='output_of_query2', set2='output_of_query4', operator='-')\"",
    "how many bronze medals did south korea and india receive, combined?": "None",
    "did china or north korea obtain 5 silver medals?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Nation', tail_entity='China')\"\nStep2: Find the entity named North Korea\nQuery2: \"get_information(relation='Nation', tail_entity='North Korea')\"\nStep3: Find the Silver medals of output_of_query1\nQuery3: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep4: Find the Silver medals of output_of_query2\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query2')\"\nStep5: Check if output_of_query3 or output_of_query4 equals to 5\nQuery5: \"output_of_query3 == 5 or output_of_query4 == 5\"",
    "true or false, south korea has the least amount of gold medals.": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named South Korea\nQuery1: \"get_information(relation='Nation', tail_entity='South Korea')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity with the lowest rank\nQuery3: \"get_information(relation='Rank', tail_entity<='output_of_query2')\"\nStep4: Find the entity with the lowest total medals\nQuery4: \"get_information(relation='Total', tail_entity<='output_of_query2')\"\nStep5: Find the entity with the lowest gold medals\nQuery5: \"get_information(relation='Gold', tail_entity<='output_of_query2')\"\nStep6: Check if South Korea is the output_of_query5\nQuery6: \"output_of_query5 == 'South Korea'\"",
    "which team out of su agen and castres olympique had the most scored points?": "None",
    "city in which worldcon was held the year after it was held in yokohama": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of City and Worldcon in Yokohama\nQuery1: \"get_information(relation='City', tail_entity='Yokohama')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the city of output_of_query4\nQuery5: \"get_information(relation='City', head_entity='output_of_query4')\"",
    "other than townsville, how many other communities are listed?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Townsville\nQuery1: \"get_information(relation='Community', tail_entity='Townsville')\"\nStep2: Get the set negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many total times has village roadshow queensland new filmmakers awards won?": "None",
    "how many airports are there in the townsville community?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Townsville\nQuery1: \"get_information(relation='Community', tail_entity='Townsville')\"\nStep2: Find the airports in output_of_query1\nQuery2: \"get_information(relation='Airport name', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "where was the previous acm multimedia workshop held at in 2012?": "None",
    "which was the last tournament australia played in sharjah?": "None",
    "what was the total attendance in the month of february?": "## Target type: {attendance}\n## Query:\nStep1: Find all the row_number in February\nQuery1: \"get_information(relation='Date', tail_entity='February')\"\nStep2: Get the set of Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "what was the total attendance of the 11/09/2013 game?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity with the relation of Date and value of 11/09/2013\nQuery1: \"get_information(relation='Date', value='11/09/2013')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what is the last competition?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what is the last competition on the chart?": "## Target type: {'Competition'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "in which single category did rosi mittemaier get the most awards?": "None",
    "what are the number of kurt maschler awards helen oxenbury has won?": "None",
    "this actress won a story award and a viva 2000 israel award for her role in which tv show?": "None",
    "what was the number of times that mieke hombergen won?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mieke Hombergen\nQuery1: \"get_information(relation='Women's winner', tail_entity='Mieke Hombergen')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who else won this award the same year as nick cheung?": "None",
    "did nujoma win the o.b.f.f.s. award in romania or ghana?": "## Target type: {yes or no}\n## Query:\nStep1: Find the entity named Nujoma\nQuery1: \"get_information(relation='Name', tail_entity='Nujoma')\"\nStep2: Find the Awarding Body of output_of_query1\nQuery2: \"get_information(relation='Awarding Body', head_entity='output_of_query1')\"\nStep3: Find the Honour/Award Title of output_of_query1\nQuery3: \"get_information(relation='Honour/Award Title', head_entity='output_of_query1')\"\nStep4: Find the entity named O.B.F.F.S.\nQuery4: \"get_information(relation='Honour/Award Title', tail_entity='O.B.F.F.S.')\"\nStep5: Find if the output_of_query4 is in the Awarding Body of output_of_query2\nQuery5: \"set_contains(set='output_of_query2', element='output_of_query4')\"",
    "what is the total number of points scored?": "None",
    "how many people that are not diego dominguez have scored at least 24 points in a match for italy?": "## Target type: {number}\n## Query:\nStep1: Find the points scored by Diego Dom\u00ednguez\nQuery1: \"get_information(relation='Pts', head_entity='Diego Dom\u00ednguez')\"\nStep2: Find the players who have scored at least 24 points\nQuery2: \"get_information(relation='Pts', tail_entity>='24')\"\nStep3: Get the set difference between output_of_query2 and output_of_query1\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which artist(s) scored a total of 32 points?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Find the entity with a total of 32 points\nQuery2: \"get_information(relation='Points', tail_entity='32')\"\nStep3: Get the artist of output_of_query2\nQuery3: \"get_information(relation='Artist', head_entity='output_of_query2')\"",
    "how many had at least 285 points?": "None",
    "how many riders scored at least 20 points?": "None",
    "what is the fewest number of conversions scored by an italian player achieving at least 24 points?": "## Target type: {number of conversions}\n## Query:\nStep1: Find Italian players who achieved at least 24 points\nQuery1: \"get_information(relation='Pts', tail_entity>='24', head_entity='Italian')\"\nStep2: Find the player with the fewest conversions in output_of_query1\nQuery2: \"get_information(relation='Conv', tail_entity='output_of_query1')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"",
    "what club scored the only a total of 79 points?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Points and value of 79\nQuery1: \"get_information(relation='Points', value='79')\"\nStep2: Find the club of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "what competition was the only one where this competitor achieved 1st place?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Position being '1st'\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "what was the only competition where this competitor achieved 1st place?": "## Target type: {competition}\n## Query:\nStep1: Find the entity with the relation of Position as \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "did kaseorg compete in the decathlon or the heptathlon in his first race?": "## Target type: {'Event'}\n## Query:\nStep1: Find the entity with the relation of Event that is Decathlon\nQuery1: \"get_information(relation='Event', tail_entity='Decathlon')\"\nStep2: Find the entity with the relation of Event that is Heptathlon\nQuery2: \"get_information(relation='Event', tail_entity='Heptathlon')\"\nStep3: Find the first race of Kaseorg\nQuery3: \"get_information(relation='row_number', tail_entity='1')\"\nStep4: Find the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"\nStep5: Check if the output_of_query4 is in the set of output_of_query1\nQuery5: \"is_member(set='output_of_query1', element='output_of_query4')\"\nStep6: Check if the output_of_query4 is in the set of output_of_query2\nQuery6: \"is_member(set='output_of_query2', element='output_of_query4')\"",
    "what year was number 445 and 446 entered into service?": "None",
    "in 1906, how many total rolling stock vehicles were in service?": "None",
    "how many buildings are from the year 1863?": "## Target type: {number}\n## Query:\nStep1: Find the buildings from the year 1863\nQuery1: \"get_information(relation='Year', tail_entity='1863')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was the frst .36 calliber revolver manufactured?": "None",
    "which locomotive was withdrawn from service in the same year as 445?": "None",
    "what country was the only other one represented in the top 5?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank equals to 5\nQuery1: \"get_information(relation='Rank', tail_entity='5')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Country', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Rank less than or equal to 5\nQuery3: \"get_information(relation='Rank', tail_entity<='5')\"\nStep4: Get the difference between output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "after australia, what nation has the highest number of players for melbourne?": "None",
    "which nationality has the least players?": "## Target type: {nationality}\n## Query:\nStep1: Find the set of all nationalities\nQuery1: \"get_information(relation='Nationality')\"\nStep2: For each nationality in output_of_query1, find the number of players\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the nationality with the min number of players\nQuery3: \"min(set='output_of_query2')\"",
    "how many atp tour titles did thierry tulasne win?": "None",
    "how many singles finals did thierry tulasne win against swedish opponents?": "None",
    "in which other tournament was his winnings score also -9?": "None",
    "how many championships did roche win with newcombe?": "None",
    "what is the name of the first title on this chart?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the first place listed in this chart?": "## Target type: {place}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "tell me the number of times he placed 4th.": "## Target type: {number}\n## Query:\nStep1: Find the entity that placed 4th\nQuery1: \"get_information(relation='Position', tail_entity='4th')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did korzeniowski finish above fourth place?": "None",
    "what is the score of the last game on this chart?": "None",
    "what is the last event on the chart": "## Target type: {'Event'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "what year was the last time christopher williams had a song in the top 25 in any chart?": "## Target type: {'Year'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the first year entered service year?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of entered service\nQuery1: \"get_information(relation='Entered service')\"\nStep2: Get the min of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min entered service\nQuery3: \"get_information(relation='Entered service', tail_entity='output_of_query2')\"\nStep4: Extract the year from output_of_query3\nQuery4: \"extract_year(date='output_of_query3')\"",
    "what is the next name listed after jon taylor?": "None",
    "which name is listed below niki palli?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Niki Palli\nQuery1: \"get_information(relation='Name', tail_entity='Niki Palli')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who came in next after chris jespersen of norway?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Chris Jespersen\nQuery1: \"get_information(relation='Name', tail_entity='Chris Jespersen')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which member had the farther distance recorded, jari kuoppa, or arsi harju?": "## Target type: {member}\n## Query:\nStep1: Find the entity named Jari Kuoppa\nQuery1: \"get_information(relation='Name', tail_entity='Jari Kuoppa')\"\nStep2: Find the distance of output_of_query1\nQuery2: \"get_information(relation='Distance', head_entity='output_of_query1')\"\nStep3: Find the entity named Arsi Harju\nQuery3: \"get_information(relation='Name', tail_entity='Arsi Harju')\"\nStep4: Find the distance of output_of_query3\nQuery4: \"get_information(relation='Distance', head_entity='output_of_query3')\"\nStep5: Compare the distances of output_of_query2 and output_of_query4\nQuery5: \"if(distance(output_of_query2) > distance(output_of_query4), 'Jari Kuoppa', 'Arsi Harju')\"",
    "which player is taller, paul george or greg smith?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Paul George\nQuery1: \"get_information(relation='Name', tail_entity='Paul George')\"\nStep2: Find the Height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Find the entity named Greg Smith\nQuery3: \"get_information(relation='Name', tail_entity='Greg Smith')\"\nStep4: Find the Height of output_of_query3\nQuery4: \"get_information(relation='Height', head_entity='output_of_query3')\"\nStep5: Find the set with the larger Height\nQuery5: \"set_max(set1='output_of_query2', set2='output_of_query4')\"",
    "how many players were taller and weighed more than frank millard?": "None",
    "how many were in 2003?": "None",
    "which is the year that has a gross domestic product more than 8,114 but less than 21,783 in gross domestic product?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Gross Domestic Product\nQuery1: \"get_information(relation='Gross Domestic Product')\"\nStep2: Find the entity with GDP more than 8,114\nQuery2: \"get_information(relation='Gross Domestic Product', tail_entity>'8114')\"\nStep3: Find the entity with GDP less than 21,783\nQuery3: \"get_information(relation='Gross Domestic Product', tail_entity<'21783')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Find the year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "how many events were held in 2011": "None",
    "how many matches were in 2005-2006?": "## Target type: {number of matches}\n## Query:\nStep1: Find the entity for the season 2005-2006\nQuery1: \"get_information(relation='Season', tail_entity='2005\u20132006')\"\nStep2: Find the row_number for output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games were between both saints games in 1981?": "None",
    "how many nations did not receive any gold medals?": "## Target type: {number of nations}\n## Query:\nStep1: Find the entities with Gold is 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of drivers on the chart?": "## Target type: {number}\n## Query:\nStep1: Find all the drivers on the chart\nQuery1: \"get_information(relation='Driver')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the only station from minot public radio.": "None",
    "how many stations have the same format as the station klfv?": "None",
    "what is the number of these stations broadcasting at a frequency of greater than 100 mhz?": "## Target type: {number}\n## Query:\nStep1: Find the stations broadcasting at a frequency greater than 100 MHz\nQuery1: \"get_information(relation='Frequency', tail_entity>'100 MHz')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of awards that arisan won in 2004?": "None",
    "tell me a year the winner was the same as in 2011.": "None",
    "how many awards did kang ji-hwan win after 2010?": "None",
    "how many times did erbedija win best foreign performer between 1994 and 2012?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Erbedija\nQuery1: \"get_information(relation='Name', tail_entity='Erbedija')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities between 1994 and 2012\nQuery3: \"get_information(relation='Year', tail_entity>=1994, tail_entity<=2012)\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Find the Award of output_of_query4\nQuery5: \"get_information(relation='Award', head_entity='output_of_query4')\"\nStep6: Find the entities with Award of Best Foreign Performer\nQuery6: \"get_information(relation='Award', tail_entity='Best Foreign Performer')\"\nStep7: Calculate the count of output_of_query6\nQuery7: \"count(set='output_of_query6')\"",
    "who is older--leonardo burian or darwin torres?": "None",
    "belinda and simona were among the oldest finalists but who was the youngest?": "None",
    "patricia velasquez and ron vawter both had what career?": "None",
    "who is the youngest female, but not the youngest overall on the show cha$e?": "None",
    "is arthur kaye older or younger than brian hill?": "## Target type: {'older' or 'younger'}\n## Query:\nStep1: Find the entity named Arthur Kaye\nQuery1: \"get_information(relation='Name', tail_entity='Arthur Kaye')\"\nStep2: Find the Date of Birth of output_of_query1\nQuery2: \"get_information(relation='Date of Birth', head_entity='output_of_query1')\"\nStep3: Find the entity named Brian Hill\nQuery3: \"get_information(relation='Name', tail_entity='Brian Hill')\"\nStep4: Find the Date of Birth of output_of_query3\nQuery4: \"get_information(relation='Date of Birth', head_entity='output_of_query3')\"\nStep5: Compare the Dates of Birth of output_of_query2 and output_of_query4 to determine if one is older or younger\nQuery5: \"compare_date(date1='output_of_query2', date2='output_of_query4')\"",
    "who ran a shorter time than emebet anteneh mengistu?": "None",
    "did aya terakawa or erin gammel rank higher?": "## Target type: {'Rank'}\n## Query:\nStep1: Find the entity named Aya Terakawa\nQuery1: \"get_information(relation='Name', tail_entity='Aya Terakawa')\"\nStep2: Find the Rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Erin Gammel\nQuery3: \"get_information(relation='Name', tail_entity='Erin Gammel')\"\nStep4: Find the Rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find who ranked higher\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many total cars did chevrolet manufacture?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Chevrolet\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Chevrolet')\"\nStep2: Find the total count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of cars entered for 2007 in the green car category?": "None",
    "what was the total number of us drivers?": "None",
    "who was her opponent in the april 2009 mestre tournament?": "## Target type: {opponent in the final}\n## Query:\nStep1: Find the entity that Tournament is Mestre and Date is in April 2009\nQuery1: \"get_information(relation='Tournament', tail_entity='Mestre')\"\nQuery2: \"get_information(relation='Date', tail_entity='April 2009')\"\nStep3: Find the row_number of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Opponent in the final of output_of_query3\nQuery4: \"get_information(relation='Opponent in the final', head_entity='output_of_query3')\"",
    "how many miss pokhara selections finished below 2nd runner up since 1995?": "None",
    "how long did it take jo bonnier to finish all 75 laps?": "None",
    "how long did luis jesus take to finish in turin,italy in 1998?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity that Year is 1998\nQuery1: \"get_information(relation='Year', tail_entity='1998')\"\nStep2: Find the entity that Venue is Turin, Italy\nQuery2: \"get_information(relation='Venue', tail_entity='Turin, Italy')\"\nStep3: Find the entity that Event is Marathon\nQuery3: \"get_information(relation='Event', tail_entity='Marathon')\"\nStep4: Find the Notes of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query1')\"\nStep5: Find the time duration of output_of_query4\nQuery5: \"time_duration(set='output_of_query4')\"",
    "what grand prix was before the san marino grand prix?": "## Target type: {grand prix}\n## Query:\nStep1: Find the entity named San Marino Grand Prix\nQuery1: \"get_information(relation='Grand Prix', tail_entity='San Marino Grand Prix')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Grand Prix of output_of_query4\nQuery5: \"get_information(relation='Grand Prix', head_entity='output_of_query4')\"",
    "how many other grand slams are there besides wimbledon and the us open?": "## Target type: {number of other grand slams}\n## Query:\nStep1: Find the entity named Wimbledon\nQuery1: \"get_information(relation='Name', tail_entity='Wimbledon')\"\nStep2: Find the entity named US Open\nQuery2: \"get_information(relation='Name', tail_entity='US Open')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find all the grand slams except output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='all_grand_slams')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "the chicago bears drafted bob long who went to the same college as what other player that was also drafter in round 17 of the 1969 nft draft?": "None",
    "who did the green bay packers and chicago bears pick first?": "None",
    "did laron landry or ted ginn jr have an earlier draft pick?": "## Target type: {player}\n## Query:\nStep1: Find the draft pick of Laron Landry\nQuery1: \"get_information(relation='Player', tail_entity='Laron Landry')\"\nStep2: Find the draft pick of Ted Ginn Jr\nQuery2: \"get_information(relation='Player', tail_entity='Ted Ginn Jr')\"\nStep3: Compare the draft pick of output_of_query1 and output_of_query2\nQuery3: \"compare(draft_pick1='output_of_query1', draft_pick2='output_of_query2')\"",
    "did the detriot lions win before the chicago bears in 1982?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that Winner is Detroit Lions\nQuery1: \"get_information(relation='Winner', tail_entity='Detroit Lions')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that Winner is Chicago Bears\nQuery3: \"get_information(relation='Winner', tail_entity='Chicago Bears')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4 to check if the Detroit Lions won before the Chicago Bears in 1982\nQuery5: \"output_of_query2 < output_of_query4\"",
    "what was the next venue after colombo, sri lanka on march 28?": "## Target type: {venue}\n## Query:\nStep1: Find the entity named Colombo, Sri Lanka\nQuery1: \"get_information(relation='Venue', tail_entity='Colombo, Sri Lanka')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Venue of output_of_query4\nQuery5: \"get_information(relation='Venue', head_entity='output_of_query4')\"",
    "how many medals were won by kenya?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity who won the medal\nQuery1: \"get_information(relation='Nationality', tail_entity='Kenya')\"\nStep2: Find the medals won by output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many gold medals has kenya won?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Kenya\nQuery1: \"get_information(relation='Nation', tail_entity='Kenya')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many winning scores were less than -14?": "None",
    "were the results of the game of november 14 above or below the results of the october 17 game?": "## Target type: {above or below}\n## Query:\nStep1: Find the entity with the relation of Date is October 17\nQuery1: \"get_information(relation='Date', tail_entity='October 17')\"\nStep2: Find the Result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date is November 14\nQuery3: \"get_information(relation='Date', tail_entity='November 14')\"\nStep4: Find the Result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\nStep5: Compare the Result of output_of_query4 and output_of_query2\nQuery5: \"compare(set1='output_of_query4', set2='output_of_query2')\"",
    "did the artist fare better on the us chart or the us r&b chart?": "None",
    "which single(s) had the highest uk singles chart position?": "None",
    "which nation earned only one silver medal?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the only nation to have one silver medal?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver', tail_entity='1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which nation has one gold medal but zero in both silver and bronze?": "None",
    "which nation won the most silver medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Silver\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "who finished next after federica brignone?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Federica Brignone\nQuery1: \"get_information(relation='Name', tail_entity='Federica Brignone')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who ranked below kaitlin sandeno?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Kaitlin Sandeno\nQuery1: \"get_information(relation='Name', tail_entity='Kaitlin Sandeno')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "jan schulz is ranked immediately below which player?": "None",
    "what is the name of the location listed first on this list?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Location(s) of output_of_query3\nQuery4: \"get_information(relation='Location(s)', head_entity='output_of_query3')\"",
    "team that defeated the dolphins that was not the new england patriots": "None",
    "who was the opponent in the last game of the season?": "None",
    "what was the next opponent after the detroit lions?": "None",
    "who was this team's next opponent after facing the soviet union on june 14?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Opposition is Soviet Union\nQuery1: \"get_information(relation='Opposition', tail_entity='Soviet Union')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opposition of output_of_query4\nQuery5: \"get_information(relation='Opposition', head_entity='output_of_query4')\"",
    "besides the philadelphia eagles, who were the other 2 opponents in october?": "None",
    "how many total trains were build in 1949?": "## Target type: {number}\n## Query:\nStep1: Find the trains that were build in 1949\nQuery1: \"get_information(relation='Date', tail_entity='1949')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seats were won in the year 1994?": "None",
    "what was the very first station to open?": "None",
    "which country came in first?": "None",
    "what call sign is listed directly before kbmk?": "## Target type: {call sign}\n## Query:\nStep1: Find the entity with the Call sign of KBMK\nQuery1: \"get_information(relation='Call sign', tail_entity='KBMK')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Call sign of output_of_query4\nQuery5: \"get_information(relation='Call sign', head_entity='output_of_query4')\"",
    "who won the last championship recorded on this table?": "None",
    "who was the last opponent according to this chart?": "None",
    "what was the result of the first game on this chart?": "## Target type: {'Result'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the first row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"",
    "how many passengers are going to or coming from spain?": "None",
    "what was the number of winners from spain?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Country', tail_entity='Spain')\"\nStep2: Find the Winners of output_of_query1\nQuery2: \"get_information(relation='Winners', head_entity='output_of_query1')\"",
    "how many passengers were handled in an airport in spain?": "None",
    "what is the total amount of medals spain has won?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep2: Find the Total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the total number of immigrants from the netherlands?": "## Target type: {number}\n## Query:\nStep1: Find the entity that matches the relation \"Region/Country\"\nQuery1: \"get_information(relation='Region/Country', tail_entity='Netherlands')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many from the philippines?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Philippines\nQuery1: \"get_information(relation='Country of origin*', tail_entity='Philippines')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of medals won by united states?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the total medals won by output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the total number of medalists from the united states for bronze?": "## Target type: {number of medalists}\n## Query:\nStep1: Find the entity that Location is \"Salt Lake City, United States\"\nQuery1: \"get_information(relation='Location', tail_entity='Salt Lake City, United States')\"\nStep2: Find the bronze medals won by output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many total medals were given out?": "None",
    "how many united states competitors did not win medals?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that is United States competitors\nQuery3: \"get_information(relation='Nationality', tail_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the set difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many bus routes are handled by trustybus?": "## Target type: {number of bus routes}\n## Query:\nStep1: Find the entity with the relation of Operator being Trustybus\nQuery1: \"get_information(relation='Operator', tail_entity='Trustybus')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many reigned for less time than carl xvi gustaf?": "None",
    "is the best time for the 100 m more or less than the time for the 110 m hurdles?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity with the relation of Event is 100 m\nQuery1: \"get_information(relation='Event', tail_entity='100 m')\"\nStep2: Find the Performance of output_of_query1\nQuery2: \"get_information(relation='Performance', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Event is 110 m hurdles\nQuery3: \"get_information(relation='Event', tail_entity='110 m hurdles')\"\nStep4: Find the Performance of output_of_query3\nQuery4: \"get_information(relation='Performance', head_entity='output_of_query3')\"\nStep5: Compare the Performance of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "who was the last player selected in the first round of the 1989 major league baseball draft?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "how many deputy judges served on the permanent court of international justice after 1930?": "None",
    "who was the next judge to resign after alexander campbell king?": "None",
    "who was the only judge appointed by mckinley?": "## Target type: {judge}\n## Query:\nStep1: Find the entity named McKinley\nQuery1: \"get_information(relation='Appointed by', tail_entity='McKinley')\"\nStep2: Find the judge appointed by output_of_query1\nQuery2: \"get_information(relation='Judge', head_entity='output_of_query1')\"",
    "what mayor of anglet town served for the same number of years as daubin?": "None",
    "what competition was teeratep winothai in when he made his last international goal of 2008?": "None",
    "how many consecutive friendly competitions did chalupny score in?": "None",
    "who won after joseph kipkemboi's winning streak ended?": "None",
    "how many consecutive years has uladzimir kazlou taken part in the olympic games?": "None",
    "which album achieved the highest peak chart position?": "None",
    "what single previous to \"workin' it\" did not chart at all?": "None",
    "what year come after 2010-11": "None",
    "who was the next player picked after steve orth?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Steve Orth\nQuery1: \"get_information(relation='Player', tail_entity='Steve Orth')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "how many players represented scotland?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity with the relation of Country as Scotland\nQuery1: \"get_information(relation='Country', tail_entity='Scotland')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of players from the edinburgh kings?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Edinburgh Kings\nQuery1: \"get_information(relation='Current Club', tail_entity='Edinburgh Kings')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many canadian players are listed?": "## Target type: {number of players}\n## Query:\nStep1: Find all the Nationality entities\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Find the entity that is Canadian in output_of_query1\nQuery2: \"get_information(relation='Nationality', tail_entity='Canadian')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how long is the size (m) of algeria?": "## Target type: {size (m)}\n## Query:\nStep1: Find the entity with the relation of Country is Algeria\nQuery1: \"get_information(relation='Country', tail_entity='Algeria')\"\nStep2: Find the size (m) of output_of_query1\nQuery2: \"get_information(relation='Size (m)', head_entity='output_of_query1')\"",
    "how tall (in meters) is the tallest building?": "None",
    "name all the lifts that are longer than 5,000 ft.": "## Target type: {lift name}\n## Query:\nStep1: Find the entity that Length is greater than 5,000 ft.\nQuery1: \"get_information(relation='Length', tail_entity>'5000')\"\nStep2: Get the lift name of output_of_query1\nQuery2: \"get_information(relation='Lift Name', head_entity='output_of_query1')\"",
    "how many metres is the tallest pylon?": "## Target type: {height}\n## Query:\nStep1: Find the entity with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Height\nQuery3: \"get_information(relation='Height', tail_entity='output_of_query2')\"",
    "how many total commissioner were there between 1970-1985?": "None",
    "what is the number of computers first operational in 1944?": "None",
    "how many schools left in 1960?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools that left\nQuery1: \"get_information(relation='Left')\"\nStep2: Find the schools that left in 1960\nQuery2: \"get_information(relation='Left', tail_entity='1960')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many seats were in 1945?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity with the relation of Year is 1945.\nQuery1: \"get_information(relation='Year', tail_entity='1945')\"\nStep2: Find the Seats of output_of_query1.\nQuery2: \"get_information(relation='Seats', head_entity='output_of_query1')\"",
    "which country has produced the most drivers?": "## Target type: {country}\n## Query:\nStep1: Find all the Drivers entities\nQuery1: \"get_information(relation='Drivers')\"\nStep2: Split the output_of_query1 by newline character\nQuery2: \"split_string(string='output_of_query1', separator='\\n')\"\nStep3: Get the count of each unique country in output_of_query2\nQuery3: \"count_each(set='output_of_query2')\"\nStep4: Find the country with the maximum count\nQuery4: \"max(set='output_of_query3')\"",
    "how many times, total, was the result \"won\"": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result as \"Won\"\nQuery1: \"get_information(relation='Result', tail_entity='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times has the u.s. open be won by an all american team?": "None",
    "what is the number of times chevrolet was the winning team?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Winning team as Chevrolet\nQuery1: \"get_information(relation='Winning team', tail_entity='Chevrolet')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the next year after 1967?": "None",
    "who's date of death was after 1990 but before 1992?": "None",
    "what is the next album listed after 1993?": "## Target type: {album}\n## Query:\nStep1: Find the entity whose Year is 1993\nQuery1: \"get_information(relation='Year', tail_entity='1993')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "in 1998 and 2004 they were in what place?": "## Target type: {place}\n## Query:\nStep1: Find the row_number of 1998\nQuery1: \"get_information(relation='Season', tail_entity='1998')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the row_number of 2004\nQuery3: \"get_information(relation='Season', tail_entity='2004')\"\nStep4: Find the place of output_of_query3\nQuery4: \"get_information(relation='Place', head_entity='output_of_query3')\"",
    "what was the game made in the year previous to 1994?": "## Target type: {game}\n## Query:\nStep1: Find the year that is previous to 1994\nQuery1: \"get_information(relation='Year', tail_entity='1994')\"\nStep2: Find the game with the year of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many locations are bird sanctuaries.": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Description as \"Bird Sanctuary\"\nQuery1: \"get_information(relation='Description', tail_entity='Bird Sanctuary')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of times the location was in orlando?": "## Target type: {number}\n## Query:\nStep1: Find the entity where the Location is in Orlando\nQuery1: \"get_information(relation='Location', tail_entity='Orlando')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of locations?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many locations in netanya are there?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Netanya\nQuery1: \"get_information(relation='Location', tail_entity='Netanya')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of models manufactured in france": "## Target type: {number}\n## Query:\nStep1: Find the entity that Place of manufacture is France\nQuery1: \"get_information(relation='Place of manufacture', tail_entity='France')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the least amount of time it took to win a match?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"",
    "what is the number of stations serving terre haute?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Area served as Terre Haute\nQuery1: \"get_information(relation='Area served', tail_entity='Terre Haute')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many television channels in nambour, queensland are in hd?": "None",
    "how many times did an italian cyclist win a round?": "None",
    "which country produced 50 in 2002 but only 13 in 2003?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of 2002\nQuery1: \"get_information(relation='2002', tail_entity='50')\"\nStep2: Find the entity with the relation of 2003\nQuery2: \"get_information(relation='2003', tail_entity='13')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "what is the total number of women executed between 2000 and 2010?": "None",
    "whats the total number of immigrants from 1990-2001?": "None",
    "what was the next number to be retired after february 6, 2000?": "None",
    "the two best positions in which kazlou has ranked in major world competition were ________ and ______.": "None",
    "who was the only other besides david duval in the t2 category?": "## Target type: {player}\n## Query:\nStep1: Find the entity named David Duval\nQuery1: \"get_information(relation='Player', tail_entity='David Duval')\"\nStep2: Find the Place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entities in the same Place as output_of_query2\nQuery3: \"get_information(relation='Place', tail_entity='output_of_query2')\"\nStep4: Get the set difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "tell me the number of matches played on clay.": "## Target type: {number of matches}\n## Query:\nStep1: Find the matches on clay\nQuery1: \"get_information(relation='Surface', tail_entity='Clay')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what are the total number of times the position of 1st place was earned?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the position 1st\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different passenger baseplates for vehicle registration have been used in vermont?": "None",
    "how many of these locomotives had the same builder as the a.h. houston?": "None",
    "which junction on highway 91 is closer to ein zivan, gadot junction or shipon junction?": "## Target type: {junction}\n## Query:\nStep1: Find the junction named Gadot Junction\nQuery1: \"get_information(relation='Name', tail_entity='Gadot Junction')\"\nStep2: Find the junction named Shipon Junction\nQuery2: \"get_information(relation='Name', tail_entity='Shipon Junction')\"\nStep3: Find the kilometer of Ein Zivan\nQuery3: \"get_information(relation='Kilometers', tail_entity='Ein Zivan')\"\nStep4: Find the kilometer of output_of_query1\nQuery4: \"get_information(relation='Kilometers', tail_entity='output_of_query1')\"\nStep5: Find the kilometer of output_of_query2\nQuery5: \"get_information(relation='Kilometers', tail_entity='output_of_query2')\"\nStep6: Find the absolute difference between output_of_query4 and output_of_query3\nQuery6: \"abs_difference(value1='output_of_query4', value2='output_of_query3')\"\nStep7: Find the absolute difference between output_of_query5 and output_of_query3\nQuery7: \"abs_difference(value1='output_of_query5', value2='output_of_query3')\"\nStep8: Use the calculator to",
    "how many different countries won at least one stage in the 1964 tour de france?": "None",
    "how many stations are at least 128 kbit/s?": "None",
    "who finished directly before akinremi?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Akinremi\nQuery1: \"get_information(relation='Name', tail_entity='Akinremi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the average number of gold medals won by the top 5 nations?": "None",
    "what was the average number of gold medals received by a nation?": "None",
    "which senator listed was the oldest when he died?": "None",
    "which is the oldest locomotive?": "## Target type: {locomotive}\n## Query:\nStep1: Find the entity with the attribute Entered service\nQuery1: \"get_information(relation='Entered service')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Entered service\nQuery3: \"get_information(relation='Entered service', tail_entity='output_of_query2')\"\nStep4: Find the Locomotive of output_of_query3\nQuery4: \"get_information(relation='Locomotive', head_entity='output_of_query3')\"",
    "who was the oldest player?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Birth Date/Age at start of campaign\nQuery1: \"get_information(relation='Birth Date/Age at start of campaign')\"\nStep2: Get the max age from output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max age\nQuery3: \"get_information(relation='Birth Date/Age at start of campaign', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "considering just the landmarks that have constructed dates, which is the oldest?": "None",
    "how long did william r. poage serve in texas?": "None",
    "how long was paidsetti jayanthi the chairperson of this municipality?": "None",
    "which country is last on the table?": "## Target type: {'Nation'}\n## Query:\nStep1: Find the entity named Total\nQuery1: \"get_information(relation='Nation', tail_entity='Total')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what country came in first place?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank as '1'\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which country produced the player who placed last?": "None",
    "which country's team came in last place during the 1951 world ice hockey championships?": "None",
    "which nation came in last in the 2007 worlds qualification tournament?": "None",
    "name of the last placed nation?": "## Target type: {nation}\n## Query:\nStep1: Find the row_number that is the maximum value\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which station name has the same amount of population served as lincoln university?": "None",
    "after 1994 how may individuals with the first name giorgi bear the flag for georgia in the olympics?": "None",
    "when was the first year that poland did not place in the top three positions of the team speedway junior world championship?": "None",
    "how many world championships had the soviet union won first place in in the 25 metre pistol women's world championship?": "None",
    "how many teams finished better than spain in cycling at the 1996 summer olympics men's team pursuit?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Team', tail_entity='Spain')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities whose row_number is less than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Find the teams of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "which route travels to broxbourne station and also essex road industrial estate?": "None",
    "tell me the number of trains headed for jolarpet junction.": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jolarpet Junction\nQuery1: \"get_information(relation='Destination', tail_entity='Jolarpet Junction')\"\nStep2: Find the number of trains for output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "when was the first friendly competition?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of Competition as Friendly\nQuery1: \"get_information(relation='Competition', tail_entity='Friendly')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many drivers had at least 10 points?": "None",
    "how many drivers got less than 80 points?": "## Target type: {number}\n## Query:\nStep1: Find the drivers with points less than 80\nQuery1: \"get_information(relation='Points', tail_entity<'80')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the average number of points": "None",
    "who was the only winner in 1995?": "None",
    "what was the last year that ind had a winner?": "None",
    "how many took place at 2013 asian indoor-martial arts games competition?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Competition and value of '2013 Asian Indoor-Martial Arts Games'\nQuery1: \"get_information(relation='Competition', value='2013 Asian Indoor-Martial Arts Games')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many points did alianza f.c. receive?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Alianza F.C.\nQuery1: \"get_information(relation='Team', tail_entity='Alianza F.C.')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how many total competitions were in south korea?": "None",
    "how many medals does iraq have in total?": "## Target type: {Total}\n## Query:\nStep1: Find the entity named Iraq\nQuery1: \"get_information(relation='Nation', tail_entity='Iraq')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what are the total times 'won' was listed as the outcome?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Outcome being 'won'\nQuery1: \"get_information(relation='Outcome', tail_entity='won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players won at least later than 2010?": "## Target type: {number}\n## Query:\nStep1: Find the players who won later than 2010\nQuery1: \"get_information(relation='Year', tail_entity>'2010')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many results are indicated as won?": "## Target type: {number}\n## Query:\nStep1: Find the rows with the relation of Result and the value of 'Won'\nQuery1: \"get_information(relation='Result', value='Won')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many wins were after 1987?": "None",
    "how long has kalakaua middle school been erected?": "None",
    "how long did kodikamam government tamil mixed school go without topping 500 idps?": "None",
    "what was the last year that the regent house grammar school won a title?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Regent House Grammar School\nQuery1: \"get_information(relation='School', tail_entity='Regent House Grammar School')\"\nStep2: Find the last title of output_of_query1\nQuery2: \"get_information(relation='Last Title', head_entity='output_of_query1')\"",
    "what is the only country represented that is not the united states?": "None",
    "how many nations have set the record more than the united states?": "None",
    "what country ranks in first place?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank equals 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what other country besides the united states had players picked?": "None",
    "what number of countries placed ahead of the united states?": "None",
    "more beetles came from which country, spain or south africa?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Country of origin', tail_entity='Spain')\"\nStep2: Find the Total released of output_of_query1\nQuery2: \"get_information(relation='Total released', head_entity='output_of_query1')\"\nStep3: Find the entity named South Africa\nQuery3: \"get_information(relation='Country of origin', tail_entity='South Africa')\"\nStep4: Find the Total released of output_of_query3\nQuery4: \"get_information(relation='Total released', head_entity='output_of_query3')\"\nStep5: Compare the Total released of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "how many different species were released in south africa?": "None",
    "what was the only year to use the code ch?": "None",
    "who was the tallest player drafted?": "None",
    "which team that drafted players in round four had the longest name?": "None",
    "what players was drafted after al guepe?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Al Guepe\nQuery1: \"get_information(relation='Player', tail_entity='Al Guepe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "patrick murphy and who else was drafted in round seven?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Patrick Murphy\nQuery1: \"get_information(relation='Player', tail_entity='Patrick Murphy')\"\nStep2: Find the Round of output_of_query1\nQuery2: \"get_information(relation='Round', head_entity='output_of_query1')\"\nStep3: Find the entity(s) in Round 7\nQuery3: \"get_information(relation='Round', tail_entity='7')\"\nStep4: Get the set difference between output_of_query1 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who was the first linebacker selected in this round?": "## Target type: {Player}\n## Query:\nStep1: Find the entity in Position that is 'Linebacker'\nQuery1: \"get_information(relation='Position', tail_entity='Linebacker')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "how many radio stations are under the licensee simmons broadcasting?": "## Target type: {number of radio stations}\n## Query:\nStep1: Find the entity that is Simmons Broadcasting\nQuery1: \"get_information(relation='Licensee', tail_entity='Simmons Broadcasting')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which players are not from denmark?": "None",
    "what is the name of the first player on this chart?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what was the difference between he bronze medalist and the fourth place finisher's time?": "## Target type: {time difference}\n## Query:\nStep1: Find the time of the bronze medalist\nQuery1: \"get_information(relation='row_number', tail_entity='3')\"\nStep2: Get the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the time of the fourth place finisher\nQuery3: \"get_information(relation='row_number', tail_entity='4')\"\nStep4: Get the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the average time of the medal winners?": "None",
    "what was the difference in gold medals between russia and china?": "None",
    "who is the first under 18 bruce wilkinson medal winner?": "None",
    "who was the first calder memorial trophy winner from the boston bruins?": "None",
    "the \"fellowship award of the institute of governance and social research\" was awarded in 2003 or 2004?": "## Target type: {'Date of Award'}\n## Query:\nStep1: Find the entity with the relation of \"Honour/Award Title\" and value of \"Fellowship Award of the Institute of Governance and Social Research\"\nQuery1: \"get_information(relation='Honour/Award Title', tail_entity='Fellowship Award of the Institute of Governance and Social Research')\"\nStep2: Find the Date of Award of output_of_query1\nQuery2: \"get_information(relation='Date of Award', head_entity='output_of_query1')\"\nStep3: Find if the Date of Award is 2003 or 2004\nQuery3: \"is_in(set='output_of_query2', value_list=['2003', '2004'])\"",
    "who was the first recorded winner of the eindhoven marathon?": "## Target type: {winner}\n## Query:\nStep1: Find the entity with the relation of Edition is \"1st\"\nQuery1: \"get_information(relation='Edition', tail_entity='1st')\"\nStep2: Find the winner of output_of_query1\nQuery2: \"get_information(relation='winner', head_entity='output_of_query1')\"",
    "number of lighthouses that begin with the letter p": "None",
    "how many locations have or had at least 2 windmills?": "None",
    "cardona island light and caja de muertos light are both located in what municipality?": "## Target type: {municipality}\n## Query:\nStep1: Find the entity named Cardona Island Light\nQuery1: \"get_information(relation='Name', tail_entity='Cardona Island Light')\"\nStep2: Find the municipality of output_of_query1\nQuery2: \"get_information(relation='Municipality', head_entity='output_of_query1')\"\nStep3: Find the entity named Caja de Muertos Light\nQuery3: \"get_information(relation='Name', tail_entity='Caja de Muertos Light')\"\nStep4: Find the municipality of output_of_query3\nQuery4: \"get_information(relation='Municipality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the only location of early sawmill?": "## Target type: {location}\n## Query:\nStep1: Find the entity named \"early sawmill\"\nQuery1: \"get_information(relation='Marker name', tail_entity='early sawmill')\"\nStep2: Find the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "what are the total number of landmarks located in maui?": "## Target type: {number of landmarks}\n## Query:\nStep1: Find the landmarks located in Maui\nQuery1: \"get_information(relation='County', tail_entity='Maui')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "where is the location (city) of the first u.s. post office and court house on the chart?": "None",
    "what other two locations have a rail bridge?": "## Target type: {locations}\n## Query:\nStep1: Find the entity with relation of Building as 'Rail bridge'\nQuery1: \"get_information(relation='Building', tail_entity='Rail bridge')\"\nStep2: Find the Location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"\nStep3: Find the negation of output_of_query2\nQuery3: \"set_negation(set='output_of_query2')\"\nStep4: Find the other two locations that have a rail bridge\nQuery4: \"choose_n(set='output_of_query3', n=2)\"",
    "what is the total number of winners?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of winning outcomes?": "## Target type: {number of outcomes}\n## Query:\nStep1: Find the outcomes that are winning\nQuery1: \"get_information(relation='Outcome', tail_entity='Win')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of winners that have a one word name?": "None",
    "what is the total number of states formed between 1000 and 1200?": "None",
    "how many rides have a max capacity of 600?": "None",
    "how many were directed by adam miller?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Adam Miller\nQuery1: \"get_information(relation='Directed by', tail_entity='Adam Miller')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of episodes directed by jeff mccracken?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jeff McCracken\nQuery1: \"get_information(relation='Directed by', tail_entity='Jeff McCracken')\"\nStep2: Find the number of episodes directed by output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of episodes directed by shelley jensen?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Shelley Jensen\nQuery1: \"get_information(relation='Directed by', tail_entity='Shelley Jensen')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many locomotives entered service after the bl31?": "None",
    "how many times was the porsche rs spyder used in competition?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Porsche RS Spyder\nQuery1: \"get_information(relation='Car', tail_entity='Porsche RS Spyder')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many french winners are listed?": "None",
    "how many cyclists are from norway?": "None",
    "what is the total number of japanese riders in the top 20?": "None",
    "name all the nations that did not win any gold medals.": "None",
    "which nations had a gold medal but no silver medals?": "## Target type: {nation}\n## Query:\nStep1: Find the nations with gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>='1')\"\nStep2: Find the nations with silver medals\nQuery2: \"get_information(relation='Silver', tail_entity>='1')\"\nStep3: Get the difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "name the countries that did not win any gold medals.": "## Target type: {country}\n## Query:\nStep1: Find the entity that Gold is 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which model with a screen size of 3 inches did not weigh less than 210 g?": "None",
    "how many players were taller than 6'0?": "None",
    "which buildings are taller than 500 ft?": "None",
    "how many buildings on this table are taller than 450 feet?": "None",
    "what is the total of players under 6 ft tall?": "None",
    "which are the only players under six feet tall?": "None",
    "how many lifts were installed after 1991?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Year installed is after 1991\nQuery1: \"get_information(relation='Year installed', tail_entity>'1991')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of popular votes cast in 2003?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Election that is 2003\nQuery1: \"get_information(relation='Election', tail_entity='2003')\"\nStep2: Find the number of popular votes of output_of_query1\nQuery2: \"get_information(relation='Number of popular votes', head_entity='output_of_query1')\"",
    "how many albums has diddy released under bad boy records?": "None",
    "who has the most albums released under bad boy?": "None",
    "title of the episode that came before the one directed by bob balaban": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Directed by Bob Balaban\nQuery1: \"get_information(relation='Directed by', tail_entity='Bob Balaban')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "who won the crystal bicycle earlier, boonen or nys?": "None",
    "who was the previous winner before john henry phelan in 1951?": "None",
    "what is the difference in time between the first place and second place cyclist?": "None",
    "how many points apart were the 1st place competitor and the 12th place competitor?": "None",
    "what is the number of tournaments played on grass?": "## Target type: {number}\n## Query:\nStep1: Find the tournaments played on grass\nQuery1: \"get_information(relation='Surface', tail_entity='Grass')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "looking at the top of the table, what is the name of the first quarry listed, and what year did it close?": "None",
    "what is the next destination after limestone road north?": "## Target type: {destination}\n## Query:\nStep1: Find the entity named Limestone Road\nQuery1: \"get_information(relation='Destinations', tail_entity='Limestone Road')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Destination of output_of_query4\nQuery5: \"get_information(relation='Destinations', head_entity='output_of_query4')\"",
    "what is the first category listed on this chart?": "## Target type: {category}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the category of output_of_query3\nQuery4: \"get_information(relation='Kategori', head_entity='output_of_query3')\"",
    "what is the name of the first category listed on this chart?": "## Target type: {'Category'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Category of output_of_query3\nQuery4: \"get_information(relation='Category', head_entity='output_of_query3')\"",
    "what is the top place listed on the chart?": "## Target type: {place}\n## Query:\nStep1: Find all the places listed on the chart\nQuery1: \"get_information(relation='Place')\"\nStep2: Find the top place of output_of_query1\nQuery2: \"top(set='output_of_query1')\"",
    "what is the only album released in 2000?": "None",
    "what was the only single released in 2006?": "## Target type: {'Title'}\n## Query:\nStep1: Find the row_number of 2006\nQuery1: \"get_information(relation='Year', tail_entity='2006')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what was the only single released in 1993?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation Year equals 1993\nQuery1: \"get_information(relation='Year', tail_entity='1993')\"\nStep2: Find the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "name a film that was released before 1996.": "None",
    "what chassis is previous to year 1989?": "## Target type: {chassis}\n## Query:\nStep1: Find the entity with the relation of Year is 1989\nQuery1: \"get_information(relation='Year', tail_entity='1989')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Chassis of output_of_query4\nQuery5: \"get_information(relation='Chassis', head_entity='output_of_query4')\"",
    "what is the only album to come out in the year 2001?": "## Target type: {album}\n## Query:\nStep1: Find the entity whose Year is 2001\nQuery1: \"get_information(relation='Year', tail_entity='2001')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "who led the scotland national team for number of goals scored during the 1950 british home championship?": "None",
    "how many total points did scotland score in friendly competitions?": "None",
    "how many goals did the scotland national team score during the 1950 british home championship?": "None",
    "how many canadians listed were born in scotland?": "None",
    "in which two games did scotland not score a goal?": "None",
    "scotland played their first match of the 1951 british home championship against which team?": "None",
    "how many times is edinburgh of the seven seas on the list?": "None",
    "which game was closer, morton vs kilmarnock or ayr united vs. falkirk?": "None",
    "how many years is the chart for?": "None",
    "how many number of titles are listed for the year 1991?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity that is the year 1991\nQuery1: \"get_information(relation='Year', tail_entity='1991')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many drivers are from the united states?": "None",
    "how many competitors were from the united states?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the athletes came from the united states?": "## Target type: {number}\n## Query:\nStep1: Find the entity from Country that is United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Find the athletes from output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many total athletes were from the us?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that represents the United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which is the above tengku hadzali shah": "None",
    "besides bhumibol adulyadej, which other people were born in december?": "None",
    "which monarchs attended the same college at the university of oxford as seretse khama?": "None",
    "what is the difference between the total number of bronze medals won by the united states and west germany?": "## Target type: {difference}\n## Query:\nStep1: Find the nation named United States\nQuery1: \"get_information(relation='Nation', tail_entity='United States')\"\nStep2: Find the nation named West Germany\nQuery2: \"get_information(relation='Nation', tail_entity='West Germany')\"\nStep3: Find the total number of bronze medals won by output_of_query1\nQuery3: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep4: Find the total number of bronze medals won by output_of_query2\nQuery4: \"get_information(relation='Bronze', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"difference(value1='output_of_query3', value2='output_of_query4')\"",
    "how many times was the world artistic gymnastics championships held in the united states?": "None",
    "who performed the number 1 single of 1995?": "None",
    "in what year was the single \"that girl\" on the polish charts?": "None",
    "what year did firehouse release their last single?": "None",
    "which player scored the largest number of points in one game in april?": "None",
    "how long was baldo prokurica prokurica vice-president?": "None",
    "who coached the silverbacks longer, abundis or chacon?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Abundis\nQuery1: \"get_information(relation='Name', tail_entity='Abundis')\"\nStep2: Find the Until of output_of_query1\nQuery2: \"get_information(relation='Until', head_entity='output_of_query1')\"\nStep3: Find the entity named Chacon\nQuery3: \"get_information(relation='Name', tail_entity='Chacon')\"\nStep4: Find the Until of output_of_query3\nQuery4: \"get_information(relation='Until', head_entity='output_of_query3')\"\nStep5: Compare the duration of output_of_query2 and output_of_query4\nQuery5: \"duration(set1='output_of_query2', set2='output_of_query4')\"",
    "who served after maturi ramaro?": "None",
    "what are the number of times wexford is listed as the county on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Wexford\nQuery1: \"get_information(relation='County', tail_entity='Wexford')\"\nStep2: Find the number of times output_of_query1 appears in County\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only contestant from switzerland to place in the top 50?": "None",
    "what was the uci rating of the last race of the tour?": "## Target type: {'UCI Rating'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the UCI Rating of output_of_query3\nQuery4: \"get_information(relation='UCI Rating', head_entity='output_of_query3')\"",
    "which rider scored more than 16 points but less than 25?": "None",
    "how many athletes earned more than 1,100 points in the riding competition?": "None",
    "what is the last church located in koreatown?": "None",
    "which symbol is listed at the top of the jamo column?": "None",
    "which is the first church located in los angeles?": "## Target type: {church name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Church name of output_of_query3\nQuery4: \"get_information(relation='Church name', head_entity='output_of_query3')\"",
    "which church had more weekly collections; cathedral of christ the king, or saint brigid catholic church?": "## Target type: {church}\n## Query:\nStep1: Find the entity named Cathedral of Christ the King\nQuery1: \"get_information(relation='Church', tail_entity='Cathedral of Christ the King')\"\nStep2: Find the weekly collections of output_of_query1\nQuery2: \"get_information(relation='Weekly collections', head_entity='output_of_query1')\"\nStep3: Find the entity named Saint Brigid Catholic Church\nQuery3: \"get_information(relation='Church', tail_entity='Saint Brigid Catholic Church')\"\nStep4: Find the weekly collections of output_of_query3\nQuery4: \"get_information(relation='Weekly collections', head_entity='output_of_query3')\"\nStep5: Compare the weekly collections of output_of_query2 and output_of_query4 to find the church with more weekly collections\nQuery5: \"if(set1>'set2', output_of_query1, output_of_query3)\"",
    "other than st mary, which parish was founded by fr frank thorpe?": "None",
    "which year had more laps, 1988 or 1985?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is 1988\nQuery1: \"get_information(relation='Year', tail_entity='1988')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity that is 1985\nQuery3: \"get_information(relation='Year', tail_entity='1985')\"\nStep4: Find the laps of output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Perform a comparison to determine which year had more laps\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4', operator='>')\"\nStep6: If output_of_query5 is True, output '1988'; otherwise, output '1985'\nQuery6: \"if_else(condition='output_of_query5', true='1988', false='1985')\"",
    "what is the average number of ncaa tournaments reached by a single coach from 1963-2013?": "None",
    "the lego movie was number one on february 9. what was the previous number one?": "## Target type: {Film}\n## Query:\nStep1: Find the entity named The Lego Movie\nQuery1: \"get_information(relation='Film', tail_entity='The Lego Movie')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "how many \"best of\" volumes compile the top episodes of the television show \"the two ronnies\".": "None",
    "which 1967 episode of the inspector is the only one written by tony benedict?": "None",
    "who completed more laps, phil hill or richard attwood?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Phil Hill\nQuery1: \"get_information(relation='Drivers', tail_entity='Phil Hill')\"\nStep2: Find the laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity named Richard Attwood\nQuery3: \"get_information(relation='Drivers', tail_entity='Richard Attwood')\"\nStep4: Find the laps completed by output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Compare the laps completed by output_of_query2 and output_of_query4 to find the driver who completed more laps.\nQuery5: \"if(set1>'output_of_query4', output_of_query1, output_of_query3)\"",
    "when was number 4102 entered into service?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Number\nQuery1: \"get_information(relation='Number', tail_entity='4102')\"\nStep2: Find the Entered Service of output_of_query1\nQuery2: \"get_information(relation='Entered Service', head_entity='output_of_query1')\"",
    "other than 1927 what year did the code start with a?": "None",
    "what is the total number of bronze medals given out?": "None",
    "did great britain or hong kong have a higher ratio of silver to bronze medals?": "None",
    "in how many competitions has irina gordeeva finished higher than 10th but lower than fourth?": "None",
    "which was the only venue where anna ustinova took 6th place?": "None",
    "tell me the number of horses with a 10-0 handicap.": "## Target type: {number of horses}\n## Query:\nStep1: Find the entity with a handicap of 10-0\nQuery1: \"get_information(relation='Handicap (st-lb)', tail_entity='10-0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many lanes were there?": "## Target type: {number of lanes}\n## Query:\nStep1: Find the entity named Sycerika McMahon\nQuery1: \"get_information(relation='Name', tail_entity='Sycerika McMahon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Lane\nQuery3: \"get_information(relation='Lane')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many stages were at least 200 km in length in the 1995 tour de france?": "None",
    "what is the total number of teams located in minsk?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Location is Minsk\nQuery1: \"get_information(relation='Location', tail_entity='Minsk')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of nations?": "## Target type: {number of nations}\n## Query:\nStep1: Find all the Nations\nQuery1: \"get_information(relation='Nation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which countries earned the same number of silver medals as germany?": "None",
    "what is the total number of bronze medals won by france?": "## Target type: {total number}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the total number of bronze medals of output_of_query1\nQuery2: \"get_information(relation='Bronze', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "what countries have the same amount of bronze medals as germany?": "None",
    "who won before walsall wood in 1952?": "None",
    "other than frank gleiber, who else did play-by-play for cbs in 1965?": "None",
    "which coach started in the same year as charles armstrong?": "None",
    "who was the only director to begin work in the 1950's?": "None",
    "which player played more games, r.c hass or clyde alwood?": "## Target type: {player}\n## Query:\nStep1: Find the entity named R.C Hass\nQuery1: \"get_information(relation='Player', tail_entity='R.C Hass')\"\nStep2: Find the games played of output_of_query1\nQuery2: \"get_information(relation='Games Played', head_entity='output_of_query1')\"\nStep3: Find the entity named Clyde Alwood\nQuery3: \"get_information(relation='Player', tail_entity='Clyde Alwood')\"\nStep4: Find the games played of output_of_query3\nQuery4: \"get_information(relation='Games Played', head_entity='output_of_query3')\"\nStep5: Compare the games played of output_of_query2 and output_of_query4 to find the player who played more games.\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='greater than')\"",
    "how many songs were released after 1977?": "None",
    "what number of songs was released in may?": "None",
    "what were the total number of songs released in january?": "None",
    "which allows for more seated, ladysmead or cossham street?": "## Target type: {stadium}\n## Query:\nStep1: Find the entity named Ladysmead\nQuery1: \"get_information(relation='Stadium', tail_entity='Ladysmead')\"\nStep2: Find the Seated capacity of output_of_query1\nQuery2: \"get_information(relation='Seated', head_entity='output_of_query1')\"\nStep3: Find the entity named Cossham Street\nQuery3: \"get_information(relation='Stadium', tail_entity='Cossham Street')\"\nStep4: Find the Seated capacity of output_of_query3\nQuery4: \"get_information(relation='Seated', head_entity='output_of_query3')\"\nStep5: Compare the Seated capacities of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "what is the country with the most consecutive men's winners?": "None",
    "which tournament has the largest total win record?": "## Target type: {'Tournament'}\n## Query:\nStep1: Find the entity with the relation of W\u2013L\nQuery1: \"get_information(relation='W\u2013L')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max win record\nQuery3: \"get_information(relation='W\u2013L', tail_entity='output_of_query2')\"\nStep4: Find the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "what was the total number of goals in 1945/1946?": "None",
    "how many people died on the air france 193 attack?": "None",
    "which single was the last one to be on the charts in 1993?": "None",
    "which was the last album to be produced?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the last title released?": "None",
    "what is the difference in years between his last role and his first role?": "None",
    "what is the difference in years between the first volume published and the 13th volume published?": "None",
    "which one is the last in construction time": "None",
    "which events had at least one hundred events held?": "None",
    "what location saw the most matches?": "None",
    "which location has the best time other than brussels?": "None",
    "which location had the most conferences listed?": "## Target type: {location}\n## Query:\nStep1: Find all the locations listed\nQuery1: \"get_information(relation='Place of Conference')\"\nStep2: Find the location that appears the most\nQuery2: \"most(set='output_of_query1')\"",
    "what location hosted more, osaka or tokyo?": "## Target type: {location}\n## Query:\nStep1: Find the entity that is Osaka\nQuery1: \"get_information(relation='Location', tail_entity='Osaka')\"\nStep2: Find the entity that is Tokyo\nQuery2: \"get_information(relation='Location', tail_entity='Tokyo')\"\nStep3: Find the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Find the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4, and select the entity with the larger count\nQuery5: \"if(set1='output_of_query3' > set2='output_of_query4', output_of_query1, output_of_query2)\"",
    "what is the only location in the us?": "None",
    "what was the only venue not in an asian country where japan placed?": "None",
    "how many athletes are there total?": "None",
    "the least number of kilometres traveled was what number?": "None",
    "which players are not part of the united states?": "None",
    "how many employers have under 300 employees?": "## Target type: {number of employers}\n## Query:\nStep1: Find all the # of Employees\nQuery1: \"get_information(relation='# of Employees')\"\nStep2: Find the entities with # of Employees under 300\nQuery2: \"get_information(relation='# of Employees', tail_entity<'300')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many employers listed have less than 250 employees?": "## Target type: {number of employers}\n## Query:\nStep1: Find the entities with the relation of # of Employees that have less than 250 employees\nQuery1: \"get_information(relation='# of Employees', tail_entity<250)\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many employees does the first three employers have combined?": "## Target type: {number of employees}\n## Query:\nStep1: Find the entities with the relation Employer\nQuery1: \"get_information(relation='Employer')\"\nStep2: Get the first three entities of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity<='3')\"\nStep3: Find the # of Employees of output_of_query2\nQuery3: \"get_information(relation='# of Employees', head_entity='output_of_query2')\"\nStep4: Calculate the sum of output_of_query3\nQuery4: \"sum(set='output_of_query3')\"",
    "what was the total number of destroyers completed in august 1939?": "None",
    "how many rounds are on the list after round 1?": "## Target type: {number of rounds}\n## Query:\nStep1: Find the entity in Round that is after Round 1\nQuery1: \"get_information(relation='Round', tail_entity>'1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "has she won more doubles tournaments on clay or on hard?": "## Target type: {'Surface'}\n## Query:\nStep1: Find the entity named Marie-\u00c8ve Pelletier\nQuery1: \"get_information(relation='Partner', tail_entity='Marie-\u00c8ve Pelletier')\"\nStep2: Find the Surface of output_of_query1\nQuery2: \"get_information(relation='Surface', head_entity='output_of_query1')\"\nStep3: Find the entities that are the opponents of output_of_query1\nQuery3: \"get_information(relation='Opponents', tail_entity='output_of_query1')\"\nStep4: Find the Surface of output_of_query3\nQuery4: \"get_information(relation='Surface', head_entity='output_of_query3')\" \nStep5: Count the number of times 'clay' appears in output_of_query2\nQuery5: \"count_word(set='output_of_query2', word='clay')\"\nStep6: Count the number of times 'hard' appears in output_of_query4\nQuery6: \"count_word(set='output_of_query4', word='hard')\"\nStep7: Compare the counts of output_of_query5 and output_of_query6\nQuery7: \"compare(value1='output_of_query5', value2='output_of",
    "who won more races in 2013, oscar sevilla or oscar sanchez?": "None",
    "did anne smith win more than five doubles finals on clay?": "None",
    "what was the last year that yelena slesarenko had a 1st place finish at the world indoor championships?": "None",
    "the other women's winner with the same finish time as jo pavey in 2012": "None",
    "which tournament was later, volvo pga or algarve portuguese open?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity named Volvo PGA\nQuery1: \"get_information(relation='Tournament', tail_entity='Volvo PGA')\"\nStep2: Find the Dates of output_of_query1\nQuery2: \"get_information(relation='Dates', head_entity='output_of_query1')\"\nStep3: Find the entity named Algarve Portuguese Open\nQuery3: \"get_information(relation='Tournament', tail_entity='Algarve Portuguese Open')\"\nStep4: Find the Dates of output_of_query3\nQuery4: \"get_information(relation='Dates', head_entity='output_of_query3')\"\nStep5: Compare the Dates of output_of_query2 and output_of_query4 to determine which one is later.\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4')\"",
    "other than qatar masters, name a tournament that was in february.": "None",
    "how many channels are in hd?": "## Target type: {number of channels}\n## Query:\nStep1: Find the entity with the relation of Definition is HD\nQuery1: \"get_information(relation='Definition', tail_entity='HD')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many channels are not an abc channel?": "None",
    "what is the average number of channels?": "None",
    "whats is the number of channel's that broadcast in hd?": "## Target type: {number}\n## Query:\nStep1: Find the channel that broadcasts in HD\nQuery1: \"get_information(relation='Definition', tail_entity='HD')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which player is younger, soan\u00e9 falafala or david smith?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Soan\u00e9 Falafala\nQuery1: \"get_information(relation='Name', tail_entity='Soan\u00e9 Falafala')\"\nStep2: Find the date of birth of output_of_query1\nQuery2: \"get_information(relation='Date of birth', head_entity='output_of_query1')\"\nStep3: Find the entity named David Smith\nQuery3: \"get_information(relation='Name', tail_entity='David Smith')\"\nStep4: Find the date of birth of output_of_query3\nQuery4: \"get_information(relation='Date of birth', head_entity='output_of_query3')\"\nStep5: Compare the birth dates of output_of_query2 and output_of_query4 to find the younger player\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4', operator='less_than')\"",
    "how long (rounded to the nearest month), was it between jari litmanen's first international goal and second international goal?": "None",
    "what tv series has he done the most work with in terms of episodes?": "None",
    "how many times did shelley jensen directed episodes in season 6?": "None",
    "how many of the films listed were a television movie?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Notes with the value \"Television movie\"\nQuery1: \"get_information(relation='Notes', tail_entity='Television movie')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year was there at least three movies?": "None",
    "how many films were there in 1990?": "## Target type: {number}\n## Query:\nStep1: Find the films in 1990\nQuery1: \"get_information(relation='Year', tail_entity='1990')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many nations are listed in the table?": "## Target type: {number of nations}\n## Query:\nStep1: Find all the nations in the table\nQuery1: \"get_information(relation='Nation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what order is listed first at the top of the table?": "## Target type: {'Order'}\n## Query:\nStep1: Find the row_number that is at the top of the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Order of output_of_query1\nQuery2: \"get_information(relation='Order', head_entity='output_of_query1')\"",
    "what region is listed at the top?": "None",
    "whom is listed at the top of the chart?": "None",
    "what title is at the top of the table?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity at the top of the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what was the total amount of \"m\" (mexican) victories?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Victor equal to \"M\"\nQuery1: \"get_information(relation='Victor', tail_entity='M')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "list three american racers consecutivly in the order they won": "None",
    "how many teams started before 1940?": "None",
    "what is the name with the only listing date on april 14, 1961": "None",
    "name a site that was listed no later than 1960.": "None",
    "when was the next time spain was a finalist after 1979?": "None",
    "prior to 1969 when was the previous wimbledon won?": "None",
    "what is the last city/town/village listed in the table?": "## Target type: {'City/Town/Village'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the City/Town/Village of output_of_query3\nQuery4: \"get_information(relation='City/Town/Village', head_entity='output_of_query3')\"",
    "how long has the city of brattleboro's courthouse been in use?": "None",
    "what was the location before tri-county soccerplex?": "## Target type: {location}\n## Query:\nStep1: Find the entity named Tri-County Soccerplex\nQuery1: \"get_information(relation='Location', tail_entity='Tri-County Soccerplex')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "which city's courthouse has been in use longer, brattleboro or newport?": "## Target type: {city}\n## Query:\nStep1: Find the entity whose Courthouse is Brattleboro\nQuery1: \"get_information(relation='Courthouse', tail_entity='Brattleboro')\"\nStep2: Find the Dates of use of output_of_query1\nQuery2: \"get_information(relation='Dates of use', head_entity='output_of_query1')\"\nStep3: Find the entity whose Courthouse is Newport\nQuery3: \"get_information(relation='Courthouse', tail_entity='Newport')\"\nStep4: Find the Dates of use of output_of_query3\nQuery4: \"get_information(relation='Dates of use', head_entity='output_of_query3')\"\nStep5: Calculate the length of use of output_of_query2\nQuery5: \"length(output_of_query2)\"\nStep6: Calculate the length of use of output_of_query4\nQuery6: \"length(output_of_query4)\"\nStep7: Compare the length and return the city with the longer use\nQuery7: \"if_then_else(compare1='output_of_query5 > output_of_query6', result1='output_of_query1', result2='output_of_query3')\"",
    "which is the oldest, henry w. baker house or annapolis park historic district?": "None",
    "which county is listed before meath?": "None",
    "what is the first county listed?": "## Target type: {county}\n## Query:\nStep1: Find the entity that is the first in row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "were any towers established before the year 1800?": "None",
    "how many teams had at least two drivers this season?": "None",
    "how many drivers had the same number of laps as at least one other driver?": "None",
    "the two teams who raced in 2011 are carlin motorsport and what other team?": "None",
    "which team completed only two laps?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Laps that equals to '2'\nQuery1: \"get_information(relation='Laps', tail_entity='2')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "who was the first american to enter their respective office?": "None",
    "who was the first person to hold this office?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the total number of rider?": "## Target type: {number of riders}\n## Query:\nStep1: Find the entity with the relation of Rider\nQuery1: \"get_information(relation='Rider')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was their top performance?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Position being \"1st\"\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the Division of output_of_query1\nQuery2: \"get_information(relation='Division', head_entity='output_of_query1')\"\nStep3: Find the Season of output_of_query1\nQuery3: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "what was the last title in 2002 to gross the most money?": "## Target type: {'Film'}\n## Query:\nStep1: Find the year is 2002\nQuery1: \"get_information(relation='Date', tail_entity='2002')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number of output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "what was the biggest difference in years between album release dates?": "None",
    "for the date of death, how many years difference is there for frank churchill compared to allen davey?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Frank Churchill\nQuery1: \"get_information(relation='Name', tail_entity='Frank Churchill')\"\nStep2: Find the date of death of output_of_query1\nQuery2: \"get_information(relation='Date of Death', head_entity='output_of_query1')\"\nStep3: Find the entity named Allen Davey\nQuery3: \"get_information(relation='Name', tail_entity='Allen Davey')\"\nStep4: Find the date of death of output_of_query3\nQuery4: \"get_information(relation='Date of Death', head_entity='output_of_query3')\"\nStep5: Calculate the year difference between output_of_query2 and output_of_query4\nQuery5: \"year_difference(date1='output_of_query2', date2='output_of_query4')\"",
    "did big bang release more or less albums than 2ne1?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity named 2NE1\nQuery1: \"get_information(relation='Title', tail_entity='2NE1')\"\nStep2: Find the albums released by output_of_query1\nQuery2: \"get_information(relation='Format', head_entity='output_of_query1')\"\nStep3: Find the entity named Big Bang\nQuery3: \"get_information(relation='Artist', tail_entity='Big Bang')\"\nStep4: Find the albums released by output_of_query3\nQuery4: \"get_information(relation='Format', head_entity='output_of_query3')\"\nStep5: Compare the count of output_of_query2 and output_of_query4\nQuery5: \"compare_count(set1='output_of_query2', set2='output_of_query4')\"",
    "how many years before 1996 did they have at least 2 hits?": "None",
    "how many years after 1999 did merge records release their next album?": "None",
    "how many compilation albums did they release in 1997?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 1997\nQuery1: \"get_information(relation='Year', tail_entity='1997')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was the first compilation album released?": "None",
    "which year was \"try not to think\" and \"bleach\" released?": "None",
    "how many singles did kitty wells release before 1952?": "None",
    "how many teams finished below 3 minutes and 3 seconds?": "None",
    "how many riders finished less than a minute out of first?": "None",
    "who's name was listed the most under male winner's.": "None",
    "which two winners of grande fratello won the most money?": "## Target type: {Winner}\n## Query:\nStep1: Find the entity with the relation of Grand Prize\nQuery1: \"get_information(relation='Grand Prize')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Grand Prize\nQuery3: \"get_information(relation='Grand Prize', tail_entity='output_of_query2')\"\nStep4: Find the Winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"\n\nStep5: Find the entity with the relation of Grand Prize except for output_of_query3\nQuery5: \"get_information(relation='Grand Prize', tail_entity!='output_of_query3')\"\nStep6: Get the max output_of_query5\nQuery6: \"max(set='output_of_query5')\" \nStep7: Find the entity with the max Grand Prize\nQuery7: \"get_information(relation='Grand Prize', tail_entity='output_of_query6')\"\nStep8: Find the Winner of output_of_query7\nQuery8: \"get_information(relation='Winner', head_entity='output_of_query7')\"\n\nNote: The above query will",
    "who was the top winner?": "None",
    "who was the top prize winner in cha$e?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Prize Money (USD)\nQuery1: \"get_information(relation='Prize Money (USD)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Prize Money\nQuery3: \"get_information(relation='Prize Money (USD)', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the name of the top finalist of this semifinals heat?": "None",
    "what the the top score result?": "None",
    "how many total points were score over all the seasons?": "None",
    "what was the total number of trio series shows were charmaine sheh on?": "None",
    "who is the last manager shown to have been appointed?": "## Target type: {manager}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the manager of output_of_query3\nQuery4: \"get_information(relation='Outgoing manager', head_entity='output_of_query3')\"",
    "which person has been a manager the longest?": "None",
    "who was earlier, t.v. sivaraopantulu or gynatevenkatarao?": "None",
    "who held the position longer, t.v sivaraopantulu or l. suryalingam?": "None",
    "who has served longer, regi van acker or dante brogno?": "## Target type: {manager}\n## Query:\nStep1: Find the entity named Regi Van Acker\nQuery1: \"get_information(relation='Name', tail_entity='Regi Van Acker')\"\nStep2: Find the time as manager of output_of_query1\nQuery2: \"get_information(relation='Time as manager', head_entity='output_of_query1')\"\nStep3: Find the entity named Dante Brogno\nQuery3: \"get_information(relation='Name', tail_entity='Dante Brogno')\"\nStep4: Find the time as manager of output_of_query3\nQuery4: \"get_information(relation='Time as manager', head_entity='output_of_query3')\"\nStep5: Compare the time served of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query2', set2='output_of_query4')\"",
    "when was their lowest scoring win?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what is the lowest place they came in": "None",
    "name the second highest grossing film of 1977.": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that has the relation of Rank is '2.'\nQuery1: \"get_information(relation='Rank', tail_entity='2.')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how long has it been since the first hanging occurred?": "None",
    "how many representatives served before the 1800s began?": "None",
    "how long was the first duma on rigtists": "None",
    "how many prisons were designed for at least two hundred prisoners?": "None",
    "how many hijackers were killed october 13,1977?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Date is October 13, 1977\nQuery1: \"get_information(relation='Date', tail_entity='October 13, 1977')\"\nStep2: Find the entity named hijacker\nQuery2: \"get_information(relation='Type', tail_entity='hijacker')\"\nStep3: Find the Dead of output_of_query2\nQuery3: \"get_information(relation='Dead', head_entity='output_of_query2')\"",
    "after the first episode, when was will dixon's next written episode?": "None",
    "the match on november 12, 1978 was on a hard surface. what was the surface of the previous match?": "## Target type: {surface}\n## Query:\nStep1: Find the entity with the relation of Date as \"November 12, 1978\"\nQuery1: \"get_information(relation='Date', tail_entity='November 12, 1978')\"\nStep2: Find the surface of output_of_query1\nQuery2: \"get_information(relation='Surface', head_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_number is output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Find the surface of output_of_query5\nQuery6: \"get_information(relation='Surface', head_entity='output_of_query5')\"",
    "what was the first song to be in the top ten of the us hot 100 list?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of US Hot 100\nQuery1: \"get_information(relation='US Hot 100')\"\nStep2: Find the min row_number of output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='US Hot 100', tail_entity='output_of_query2')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "how many german athletes competed in the cross-country skiing at the 2014 winter olympics men's 15 kilometre classical?": "None",
    "how many times was a mitsubishi lancer the winning car before the year 2004?": "None",
    "what was the highest that german silva placed in an international race after 1995?": "None",
    "what is the number of countries represented on team 2?": "None",
    "name one team below rank 2": "None",
    "what team appears on this table the most?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Team\nQuery1: \"get_information(relation='Team')\"\nStep2: Find the team that appears the most in output_of_query1\nQuery2: \"get_information(relation='Team', tail_entity>='most')\"",
    "how many different players are listed in this table?": "None",
    "how many titles were released before, but not including, 1988?": "## Target type: {number}\n## Query:\nStep1: Find the titles released before 1988\nQuery1: \"get_information(relation='Year', tail_entity<'1988')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many were released in 2012?": "None",
    "how many games were released before 2008?": "None",
    "what are the number of titles listed in 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what were the number of times second place was earned?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity in Place that is \"2nd\"\nQuery1: \"get_information(relation='Place', tail_entity='2nd')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which track is longer? \"ny weather report\" or \"country cousins\"?": "## Target type: {track}\n## Query:\nStep1: Find the track titled \"NY Weather Report\"\nQuery1: \"get_information(relation='Title', tail_entity='NY Weather Report')\"\nStep2: Find the track titled \"Country Cousins\"\nQuery2: \"get_information(relation='Title', tail_entity='Country Cousins')\"\nStep3: Find the time of output_of_query1\nQuery3: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep4: Find the time of output_of_query2\nQuery4: \"get_information(relation='Time', head_entity='output_of_query2')\"\nStep5: Compare the time of output_of_query3 and output_of_query4 and find the longer one\nQuery5: \"compare(time1='output_of_query3', time2='output_of_query4')\"",
    "what is the total amount of times a new york city marathon competition had a 1st position place?": "None",
    "how many ivy league schools are in new york?": "None",
    "which state had a more recent execution take place delaware or mississippi?": "## Target type: {state}\n## Query:\nStep1: Find the entity named Delaware\nQuery1: \"get_information(relation='State', tail_entity='Delaware')\"\nStep2: Find the last execution date of output_of_query1\nQuery2: \"get_information(relation='Last execution date', head_entity='output_of_query1')\"\nStep3: Find the entity named Mississippi\nQuery3: \"get_information(relation='State', tail_entity='Mississippi')\"\nStep4: Find the last execution date of output_of_query3\nQuery4: \"get_information(relation='Last execution date', head_entity='output_of_query3')\"\nStep5: Compare the dates of output_of_query2 and output_of_query4 to find the more recent state\nQuery5: \"if(output_of_query2 > output_of_query4, 'output_of_query2', 'output_of_query4')\"",
    "which show was the last to air?": "## Target type: {'Show'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Show of output_of_query3\nQuery4: \"get_information(relation='Show', head_entity='output_of_query3')\"",
    "who only won 13 silver medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that won 13 silver medals\nQuery1: \"get_information(relation='Silver', tail_entity='13')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many total sports had silver medals awarded?": "## Target type: {number of sports}\n## Query:\nStep1: Find the entity with the relation of Medal\nQuery1: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep2: Find the sports of output_of_query1\nQuery2: \"get_information(relation='Sport', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many received a gold or silver medal in cycling?": "None",
    "how many total silver medals did india win?": "None",
    "how many silver medals did turkey win?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Turkey\nQuery1: \"get_information(relation='Nation', tail_entity='Turkey')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "besides the game in november 18, 1956, which other game date had 69,000 people in attendance?": "None",
    "what were the number of people that attended the game on 11/28/2012?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of Date and value of 11/28/2012\nQuery1: \"get_information(relation='Date', tail_entity='11/28/2012')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many people attended the game on 12/01/2013?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"12/01/2013\"\nQuery1: \"get_information(relation='Date', tail_entity='12/01/2013')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "on which date was the game played with the most number of people in attendance?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what's the number of people who attended the oklahoma game on 11/29/1985?": "## Target type: {number of people}\n## Query:\nStep1: Find the game with the opponent named Oklahoma\nQuery1: \"get_information(relation='Opponent#', tail_entity='Oklahoma')\"\nStep2: Find the game with the Date of 11/29/1985\nQuery2: \"get_information(relation='Date', tail_entity='11/29/1985')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "what is the difference in total victims between vilovo and novi sad?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Vilovo\nQuery1: \"get_information(relation='Place', tail_entity='Vilovo')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Novi Sad\nQuery3: \"get_information(relation='Place', tail_entity='Novi Sad')\"\nStep4: Find the Total of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the difference in time for petar popangelov in race 1and 2": "## Target type: {time difference}\n## Query:\nStep1: Find the athlete named Petar Popangelov\nQuery1: \"get_information(relation='Athlete', tail_entity='Petar Popangelov')\"\nStep2: Find the time for Race 1 for output_of_query1\nQuery2: \"get_information(relation='Race 1', head_entity='output_of_query1')\"\nStep3: Find the time for Race 2 for output_of_query1\nQuery3: \"get_information(relation='Race 2', head_entity='output_of_query1')\"\nStep4: Calculate the difference in time for output_of_query1\nQuery4: \"calculate_difference(time1='output_of_query2', time2='output_of_query3')\"",
    "what is the difference in year of borth between vachon and vaid?": "None",
    "calculate the difference between paul yego's time and danilo goffi's time.": "None",
    "what is the difference in league debut date between farrell and carne?": "## Target type: {difference in league debut date}\n## Query:\nStep1: Find the entity named Farrell\nQuery1: \"get_information(relation='Name', tail_entity='Farrell')\"\nStep2: Find the league debut date of output_of_query1\nQuery2: \"get_information(relation='Rugby League Debut', head_entity='output_of_query1')\"\nStep3: Find the entity named Carne\nQuery3: \"get_information(relation='Name', tail_entity='Carne')\"\nStep4: Find the league debut date of output_of_query3\nQuery4: \"get_information(relation='Rugby League Debut', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what was the difference in percentage between cuomo and astorino from february 28-march 3, 2014?": "None",
    "what was the last piece completed?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "each kostroma had construction cancelled in which decade?": "## Target type: {decade}\n## Query:\nStep1: Find the entity named Kostroma\nQuery1: \"get_information(relation='Location', tail_entity='Kostroma')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with row_number equal to output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Status of output_of_query3\nQuery4: \"get_information(relation='Status', head_entity='output_of_query3')\"\nStep5: Find the construction cancelled year in output_of_query4\nQuery5: \"get_information(relation='construction cancelled', tail_entity='output_of_query4')\"\nStep6: Find the decade of output_of_query5\nQuery6: \"calc_decade(year='output_of_query5')\"",
    "what is takashi miike's work with the least amount of years since release?": "None",
    "how many works had terence cuneo completed before the year 1950?": "## Target type: {number of works}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Find the entities with Year less than 1950\nQuery2: \"get_information(relation='Year', tail_entity<'1950')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what name was in the last construction year?": "## Target type: {name}\n## Query:\nStep1: Find all the construction year\nQuery1: \"get_information(relation='construction year')\"\nStep2: Find the max construction year\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max construction year\nQuery3: \"get_information(relation='construction year', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many municipalities have above 15% korean-american percentage of overall population?": "None",
    "name a city that does not have at least 12% of the population being korean-american": "None",
    "which california city has a higher percentage of korean-americans?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of State is California\nQuery1: \"get_information(relation='State', tail_entity='California')\"\nStep2: Find the Percentage of output_of_query1\nQuery2: \"get_information(relation='Percentage', head_entity='output_of_query1')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\" \nStep4: Find the entity with the max Percentage\nQuery4: \"get_information(relation='Percentage', tail_entity='output_of_query3')\"\nStep5: Find the city of output_of_query4\nQuery5: \"get_information(relation='City', head_entity='output_of_query4')\"",
    "what is the top city for percent korean-american population?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Percentage\nQuery1: \"get_information(relation='Percentage')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Percentage\nQuery3: \"get_information(relation='Percentage', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which is the only company to have under 10% arms sales as share of company's total sales?": "## Target type: {company}\n## Query:\nStep1: Find the entity with arms sales as share of company's total sales (%) under 10%\nQuery1: \"get_information(relation='Arms sales as share of company\u2019s total sales (%)', tail_entity<'10')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: If output_of_query2 equals to 1, find the name of the company of output_of_query1\nQuery3: \"get_information(relation='Company (country)', head_entity='output_of_query1')\"",
    "the two drivers on t-sport are clivio piccione and what other driver?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Clivio Piccione\nQuery1: \"get_information(relation='Driver', tail_entity='Clivio Piccione')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"\nStep3: Find the entity named T-Sport\nQuery3: \"get_information(relation='Team', tail_entity='T-Sport')\"\nStep4: Find the drivers of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"\nStep5: Get the set difference of output_of_query4 and output_of_query2\nQuery5: \"set_difference(set1='output_of_query4', set2='output_of_query2')\"",
    "which canadian driver finished first: alex tagliani or paul tracy?": "## Target type: {driver}\n## Query:\nStep1: Find the drivers named Alex Tagliani\nQuery1: \"get_information(relation='Driver', tail_entity='Alex Tagliani')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the drivers named Paul Tracy\nQuery3: \"get_information(relation='Driver', tail_entity='Paul Tracy')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the output_of_query2 is smaller than output_of_query4 or not\nQuery5: \"output_of_query2 < output_of_query4\"\nStep6: If output_of_query5 is True, then return 'Alex Tagliani'. Else, return 'Paul Tracy'.",
    "how many episodes of psi factor: chronicles of the paranormal originally aired in 1996?": "None",
    "how many times were roddick's opponents not from the usa?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Opponent\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Find the entity with the relation of USA\nQuery2: \"get_information(relation='Opponent', head_entity='USA')\"\nStep3: Find the set_difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of times that the winning driver was driving a toyota supra?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Car is Toyota Supra\nQuery1: \"get_information(relation='Car', tail_entity='Toyota Supra')\"\nStep2: Find the Winning driver of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the top song title?": "## Target type: {'Song title'}\n## Query:\nStep1: Find the entity with the relation of row number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Song title of output_of_query3\nQuery4: \"get_information(relation='Song title', head_entity='output_of_query3')\"",
    "what song made it to the highest rank on the us rap charts?": "None",
    "which song is at the top for downloads?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of Total Downloads\nQuery1: \"get_information(relation='Total Downloads')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Downloads\nQuery3: \"get_information(relation='Total Downloads', tail_entity='output_of_query2')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "what is the number of gold medals won in the rowing category?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity with the relation of Sport as Rowing\nQuery1: \"get_information(relation='Sport', tail_entity='Rowing')\"\nStep2: Find the Gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how many tournaments did sergio garcia win on the 2002 pga tour?": "## Target type: {number of tournaments}\n## Query:\nStep1: Find the entity named Sergio Garcia\nQuery1: \"get_information(relation='Winner', tail_entity='Sergio Garcia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "was charles heathcote the architect of ancoats hospital and apollo theatre?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Ancoats Hospital\nQuery1: \"get_information(relation='Name', tail_entity='Ancoats Hospital')\"\nStep2: Find the Architect of output_of_query1\nQuery2: \"get_information(relation='Architect', head_entity='output_of_query1')\"\nStep3: Find the entity named Apollo Theatre\nQuery3: \"get_information(relation='Name', tail_entity='Apollo Theatre')\"\nStep4: Find the Architect of output_of_query3\nQuery4: \"get_information(relation='Architect', head_entity='output_of_query3')\"\nStep5: Check if \"Charles Heathcote\" is in both output_of_query2 and output_of_query4\nQuery5: \"is_in(value='Charles Heathcote', set='output_of_query2') and is_in(value='Charles Heathcote', set='output_of_query4')\"",
    "how many australian prime ministers were older than 50 at the time they began their first term?": "None",
    "which has the most surface?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Surface (km\u00b2)\nQuery1: \"get_information(relation='Surface (km\u00b2)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Surface\nQuery3: \"get_information(relation='Surface (km\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which bench is represented the most?": "None",
    "which surface has the most winners?": "## Target type: {'Surface'}\n## Query:\nStep1: Find the entity with the relation of Outcome is \"Winner\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Winner')\"\nStep2: Find the surface of output_of_query1\nQuery2: \"get_information(relation='Surface', head_entity='output_of_query1')\"\nStep3: Find the entity that appears the most in output_of_query2\nQuery3: \"get_information(relation='Surface', tail_entity>='most')\"",
    "which party is the least represented in the vacator column?": "None",
    "which location is listed the least on this chart?": "None",
    "who has scored more goals than any other melbourne player?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Goals scored\nQuery1: \"get_information(relation='Goals scored')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Goals scored\nQuery3: \"get_information(relation='Goals scored', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "ze roberto and emerson each scored how many goals?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named Ze Roberto\nQuery1: \"get_information(relation='Name', tail_entity='Ze Roberto')\"\nStep2: Find the goals of output_of_query1\nQuery2: \"get_information(relation='Goals', head_entity='output_of_query1')\"\nStep3: Find the entity named Emerson\nQuery3: \"get_information(relation='Name', tail_entity='Emerson')\"\nStep4: Find the goals of output_of_query3\nQuery4: \"get_information(relation='Goals', head_entity='output_of_query3')\"",
    "how many directors were from 2000 to 2009?": "None",
    "what is the total number of teams that entered administration in 1992?": "None",
    "how many total governors-general of the union of south africa were there from 1910 to 1961?": "None",
    "how many outgoing managers were appointed in november 2007?": "None",
    "how many advisors were in office for less than 3 years?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Left office\nQuery1: \"get_information(relation='Left office')\"\nStep2: Find the entity with the relation of Took office\nQuery2: \"get_information(relation='Took office')\"\nStep3: Find the office duration of each entity\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the duration less than 3 years in output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='3 years')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many people had terms in the 1970s?": "None",
    "how many states had their last execution take place in 1997?": "None",
    "arizona last put someone to death in october 2013 what state had the closest previous execution?": "None",
    "name two players with goals above 15.": "None",
    "which location has the east-west game been played at the least?": "None",
    "which movies were number 1 for at least two consecutive weeks?": "None",
    "in addition to beverly hills chihuahua and four christmases, what other film spent more than one week as the number 1 movie in north america?": "None",
    "what is the total number of weeks ed sheeran was number 1?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ed Sheeran\nQuery1: \"get_information(relation='Performer', tail_entity='Ed Sheeran')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_numbers where Ed Sheeran was number 1\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which song had the most weeks on the ufo radio top 15 chart?": "None",
    "which opponent team had the most wins?": "None",
    "how many athletes have a time below 5:56:21 ?": "None",
    "how many athletes had times under 8 minutes?": "None",
    "how many athletes have their time below the 1:55 marking?": "None",
    "how many athletes took at least an hour and 32 minutes?": "None",
    "how many athletes had times that were at least 8 minutes?": "None",
    "which episodes were not directed by shelley jensen?": "None",
    "what is the number of films directed by david s. ward?": "## Target type: {number of films}\n## Query:\nStep1: Find the entity named David S. Ward\nQuery1: \"get_information(relation='Director', tail_entity='David S. Ward')\"\nStep2: Count the number of films directed by output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year was their highest ranking?": "None",
    "what is his/her best ranking season?": "None",
    "which season ranked superior out of every other season?": "None",
    "which team has the highest rank among those listed?": "None",
    "after 2008 what was their highest rank?": "None",
    "what is the lowest tier season to season?": "## Target type: {tier}\n## Query:\nStep1: Find all the tiers\nQuery1: \"get_information(relation='Tier')\"\nStep2: Get the min tier\nQuery2: \"min(set='output_of_query1')\"",
    "name a season they did not place higher than 18th.": "None",
    "what episode came after \"i, done\" (part 1)?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"I, Done\" (Part 1)\nQuery1: \"get_information(relation='Title', tail_entity='I, Done')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "the last episode of season one": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what is the name of the episode that comes after \"the return\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"The Return\"\nQuery1: \"get_information(relation='Title', tail_entity='The Return')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which episode aired after \"marion the superfluous feed character\" ?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"Marion the Superfluous Feed Character\"\nQuery1: \"get_information(relation='Title', tail_entity='Marion the Superfluous Feed Character')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which public middle school in hawaii was established most closely after washington middle school?": "None",
    "which school had the most wins overall?": "None",
    "which school won class a in the season previous to 1999-2000?": "## Target type: {school}\n## Query:\nStep1: Find the entity named 1999-2000\nQuery1: \"get_information(relation='School Year', tail_entity='1999-2000')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the school of output_of_query4 in Class A\nQuery5: \"get_information(relation='Class A', head_entity='output_of_query4')\"",
    "benton high school and bishop leblond high school are both located in what town?": "## Target type: {town}\n## Query:\nStep1: Find the entity named Benton High School\nQuery1: \"get_information(relation='School', tail_entity='Benton High School')\"\nStep2: Find the town of output_of_query1\nQuery2: \"get_information(relation='Town', head_entity='output_of_query1')\"\nStep3: Find the entity named Bishop LeBlond High School\nQuery3: \"get_information(relation='School', tail_entity='Bishop LeBlond High School')\"\nStep4: Find the town of output_of_query3\nQuery4: \"get_information(relation='Town', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what are the number of schools with more than 2 cws appearances?": "None",
    "how many more schools received a single-bye than schools that received a double-bye?": "None",
    "does evansville have more than 4 stations?": "## Target type: {yes or no}\n## Query:\nStep1: Find the entity named Evansville\nQuery1: \"get_information(relation='City of license', tail_entity='Evansville')\"\nStep2: Find the number of stations of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if output_of_query2 is greater than 4\nQuery3: \"if_greater_than(a='output_of_query2', b=4)\"",
    "how many of these missouri tv stations are actually licensed in a city in illinois (il)?": "None",
    "which race had the only german team win?": "None",
    "which country is listed the most under the opposing team column?": "## Target type: {country}\n## Query:\nStep1: Find the entities under the Opposing team column\nQuery1: \"get_information(relation='Opposing team')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most(set='output_of_query1')\"",
    "which position was represented the most on the team?": "## Target type: {position}\n## Query:\nStep1: Find all the positions on the team\nQuery1: \"get_information(relation='Position')\"\nStep2: Find the entity that represents the most in output_of_query1\nQuery2: \"get_information(relation='Position', tail_entity>='most')\"",
    "which team had the most pyramids?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Pyramids\nQuery1: \"get_information(relation='Pyramids')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Pyramids\nQuery3: \"get_information(relation='Pyramids', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many caps did jean-pierre rives and michel crauste accrue?": "None",
    "how many caps did guy basquet accrue during his career?": "## Target type: {number of caps}\n## Query:\nStep1: Find the player named Guy Basquet\nQuery1: \"get_information(relation='Player', tail_entity='Guy Basquet')\"\nStep2: Find the total caps of output_of_query1\nQuery2: \"get_information(relation='Total caps', head_entity='output_of_query1')\"",
    "how many people have less than 3 caps?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity with the relation of caps\nQuery1: \"get_information(relation='caps')\"\nStep2: Find the entity whose caps is less than 3\nQuery2: \"get_information(relation='caps', tail_entity<'3')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which contest was held in the same site as the game versus western carolina?": "None",
    "where was the only site that both team ever tied the game in?": "None",
    "which week did they not have a match?": "None",
    "who is the director next to the title diwan bahadur?": "None",
    "what role did kajal aggarwal play in which she had no name?": "None",
    "before rudhra gangadharan, how many directors were before him?": "None",
    "in which year was there the same decrease in seats as the decrease in seats in the year 1948?": "None",
    "before 10 march 1965, how many seats were won through death of a relative?": "None",
    "when was their second win?": "None",
    "how many songs were on the mtv taiwan top 20 chart?": "None",
    "how many times did the single \"butterfly\" rank as 1 in the chart?": "None",
    "how many historic places were listed in the 1980's?": "None",
    "how many historic sites were listed before 1965?": "None",
    "which year has the most buildings listed?": "None",
    "which two buildings were listed before 1974?": "None",
    "how many sites were added to the list before 1970?": "None",
    "who was last in the slalom overall?": "None",
    "whos name is listed last on the chart?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who name is listed last?": "## Target type: {'Name'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many times did liz larin win a category?": "None",
    "number of total goals scored in the round": "None",
    "how many total goals has jones kusi-asare scored?": "None",
    "how many countries have more than one competitor listed?": "None",
    "what is the total amount of opponents from the united states in the final?": "None",
    "how many total competitors did canada have?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity named Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "out of 30 top competitors, what number of those are from norway?": "## Target type: {number}\n## Query:\nStep1: Find the top 30 competitors\nQuery1: \"get_information(relation='row_number', tail_entity<='30')\"\nStep2: Find the competitors from Norway\nQuery2: \"get_information(relation='Country', tail_entity='Norway')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many years span the table entry?": "None",
    "other than william stuart price, which other businessman was born in tulsa?": "## Target type: {name}\n## Query:\nStep1: Find the entity named William Stuart Price\nQuery1: \"get_information(relation='Name', tail_entity='William Stuart Price')\"\nStep2: Find the hometown of output_of_query1\nQuery2: \"get_information(relation='Hometown', head_entity='output_of_query1')\"\nStep3: Find the entities with the hometown of output_of_query2\nQuery3: \"get_information(relation='Hometown', tail_entity='output_of_query2')\"\nStep4: Get the difference of output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "when did the first provincial representative for gilbert plains take office?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Gilbert Plains\nQuery1: \"get_information(relation='Name', tail_entity='Gilbert Plains')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with row_number equals to output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Took Office year of output_of_query3\nQuery4: \"get_information(relation='Took Office', head_entity='output_of_query3')\"",
    "how many mobile prefixes are assigned for mobitel?": "None",
    "how many times did chuck thompson serve as a broadcaster?": "None",
    "what the number of seats that are in fairfax park?": "None",
    "against what opponent did utah score the largest amount of points?": "None",
    "what is the total number of teams in the chart?": "## Target type: {number of teams}\n## Query:\nStep1: Find all the entities with the relation of Team #1\nQuery1: \"get_information(relation='Team #1')\"\nStep2: Find all the entities with the relation of Team #2\nQuery2: \"get_information(relation='Team #2')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many weeks was the song far away on the ufo top list?": "## Target type: {number of weeks}\n## Query:\nStep1: Find the entity that Song is \"Far Away\"\nQuery1: \"get_information(relation='Song', tail_entity='Far Away')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the weeks of output_of_query2 in the UFO Top list\nQuery3: \"get_information(relation='UFO Radio\\nTop 20', head_entity='output_of_query2')\"",
    "which song has the longest weeks on global asia's top 15 chart?": "None",
    "what was the number of weeks songs were performed?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Week (Stage)\nQuery1: \"get_information(relation='Week (Stage)')\"\nStep2: Find the number of weeks songs were performed\nQuery2: \"count(set='output_of_query1')\"",
    "which companies were founded at least after 1990?": "None",
    "how many goals did hateley score?": "None",
    "how many goals did durrant score?": "None",
    "which driver and co-driver have the most points?": "None",
    "which driver drove the least amount of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "how long did nicole fessel take?": "## Target type: {time duration}\n## Query:\nStep1: Find the entity named Nicole Fessel\nQuery1: \"get_information(relation='Athlete', tail_entity='Nicole Fessel')\"\nStep2: Find the time taken by output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "how many games did the home team score at least 3 goals?": "None",
    "what was the highest number of goals fc seoul scored against an opponent in a single match during the 2013 season?": "None",
    "tell me the total number of goals scored in the 2010 match.": "None",
    "how many places are listed previous to dixon?": "None",
    "of the top 10 most heavily populated census subdivisions in 2011, how many located were in ontario?": "None",
    "funningsfj\u00f8r\u00f0ur and fuglafj\u00f8r\u00f0ur are located on the same island as...?": "None",
    "other than mauna kea, name a place in hawaii.": "None",
    "bob caudle was an announcer, who was the other one?": "None",
    "how many roles did gina bellman play where her character was named christine?": "None",
    "what was the previous role this actress played before playing cynthia in plebs?": "## Target type: {character}\n## Query:\nStep1: Find the entity named Cynthia\nQuery1: \"get_information(relation='Character', tail_entity='Cynthia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Character of output_of_query4\nQuery5: \"get_information(relation='Character', head_entity='output_of_query4')\"",
    "alex shelly and robert roode had the same time as which other wrestler?": "None",
    "before she was in dubshatar, which film did she make a special appearance in?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity named Dubshatar\nQuery1: \"get_information(relation='Film', tail_entity='Dubshatar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "how long does the show defcon 3 last?": "None",
    "how many days during the week does the show fbn live air?": "None",
    "how long did the the saros on july 30, 2307 last for?": "## Target type: {duration}\n## Query:\nStep1: Find the entity where Date is July 30, 2307\nQuery1: \"get_information(relation='Date', tail_entity='July 30, 2307')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity where row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Duration of output_of_query3\nQuery4: \"get_information(relation='Duration (min:sec)', head_entity='output_of_query3')\"",
    "which is the only lake with a max depth of 372m?": "## Target type: {lake}\n## Query:\nStep1: Find the entity with the relation of max. depth\nQuery1: \"get_information(relation='max. depth in meter', tail_entity='372')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what's the total max depth of lake geneva and lake constance combined?": "## Target type: {max. depth in meter}\n## Query:\nStep1: Find the entity with the name Lake Geneva\nQuery1: \"get_information(relation='Name', tail_entity='Lake Geneva')\"\nStep2: Find the max. depth of output_of_query1\nQuery2: \"get_information(relation='max. depth in meter', head_entity='output_of_query1')\"\nStep3: Find the entity with the name Lake Constance\nQuery3: \"get_information(relation='Name', tail_entity='Lake Constance')\"\nStep4: Find the max. depth of output_of_query3\nQuery4: \"get_information(relation='max. depth in meter', head_entity='output_of_query3')\"\nStep5: Add the max. depth of output_of_query2 and output_of_query4\nQuery5: \"add(output_of_query2, output_of_query4)\"",
    "how many lakes have areas more then 300km": "None",
    "at least how many grams of water do the staple foods have?": "None",
    "how many of the townships have their water area as 0 km?": "## Target type: {number of townships}\n## Query:\nStep1: Find the townships that have water area as 0 km\nQuery1: \"get_information(relation='Water area km\u00b2', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many pumps temperature was 75 degrees celsuis?": "None",
    "which player was the top scorer for the 1979 season?": "None",
    "which game had more scorers, november 18 or december 2?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity for November 18\nQuery1: \"get_information(relation='Date', tail_entity='November 18')\"\nStep2: Find the entity for December 2\nQuery2: \"get_information(relation='Date', tail_entity='December 2')\"\nStep3: Find the number of scorers for output_of_query1\nQuery3: \"get_information(relation='Scorers', head_entity='output_of_query1')\"\nStep4: Find the number of scorers for output_of_query2\nQuery4: \"get_information(relation='Scorers', head_entity='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"compare(count(set='output_of_query3'), count(set='output_of_query4'))\"",
    "who was the top scorer on day 9 in january?": "None",
    "when was the score higher for the winning team, 1959 or 1960?": "None",
    "which regions have over one million in population?": "None",
    "how many provinces have populations higher than 300,000?": "None",
    "what is the number of kingdoms that have more than 300 villages?": "## Target type: {number of kingdoms}\n## Query:\nStep1: Find the entity whose No. of villages is larger than 300\nQuery1: \"get_information(relation='No. of villages', tail_entity>'300')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many many regions make up the swedish part?": "None",
    "how many provinces in andalusia have at least 100 municipalities?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Andalusia\nQuery1: \"get_information(relation='Province', tail_entity='Andalusia')\"\nStep2: Find the municipalities of output_of_query1\nQuery2: \"get_information(relation='Municipalities', head_entity='output_of_query1')\"\nStep3: Find the entities with at least 100 municipalities in output_of_query2\nQuery3: \"get_information(relation='Municipalities', tail_entity>='100')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of violent deaths across all regions?": "## Target type: {number}\n## Query:\nStep1: Find the relation with the description of violent deaths\nQuery1: \"get_information(relation='Description', tail_entity='violent deaths')\"\nStep2: Find the total number of violent deaths across all regions\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "who was the sooners opponent after usc?": "None",
    "who was the opponent after hatsu kioki?": "None",
    "who was the opponent after georgia?": "None",
    "after nubarashen, which facility was designed for the biggest number of prisoners?": "None",
    "how many movies did sunil kumar desai make between 2000 and 2006?": "None",
    "how many of the tallest buildings in oakland were built before 1950?": "None",
    "of the ten tallest buildings in oakland, which was not built in the last 75 years?": "## Target type: {building name}\n## Query:\nStep1: Find the entities in Oakland that are included in the ten tallest buildings\nQuery1: \"get_information(relation='row_number', tail_entity='1-10')\"\nStep2: Find the entities that were built in the last 75 years\nQuery2: \"get_information(relation='Year', tail_entity>'current_year-75')\"\nStep3: Find the set difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the name of the building with the first downtown private office building constructed since 1992?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named \"first downtown private office building constructed since 1992\"\nQuery1: \"get_information(relation='Notes', tail_entity='first downtown private office building constructed since 1992')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "after ids tower what is the second tallest building in minneapolis?": "None",
    "was there a larger total population before expulsion in poland or sudetendeutsch?": "None",
    "what year were prose accessits awarded to the largest number of people?": "None",
    "how long did the badgers go before losing or tying their first game in the season?": "None",
    "which game had a larger gap in score between the two teams, week 9 or week 11?": "## Target type: {week}\n## Query:\nStep1: Find the entity with the relation of Week is 9\nQuery1: \"get_information(relation='Week', tail_entity='9')\"\nStep2: Find the entity with the relation of Week is 11\nQuery2: \"get_information(relation='Week', tail_entity='11')\"\nStep3: Get the game site of output_of_query1\nQuery3: \"get_information(relation='Game site', head_entity='output_of_query1')\"\nStep4: Get the game site of output_of_query2\nQuery4: \"get_information(relation='Game site', head_entity='output_of_query2')\"\nStep5: Calculate the gap in score between output_of_query1 and output_of_query3\nQuery5: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "what stadium was play at three consecutive games at?": "None",
    "what country had the least arrivals per 1000 inhabitants in 2007(estimated)?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation \"Tourist arrivals per 1000 inhab (estimated)\"\nQuery1: \"get_information(relation='Tourist arrivals per 1000 inhab (estimated)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min arrivals per 1000 inhabitants\nQuery3: \"get_information(relation='Tourist arrivals per 1000 inhab (estimated)', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Selected Latin American countries', head_entity='output_of_query3')\"",
    "which areas had a population of more than 10,000,000 but less than 20,000,000?": "None",
    "what country had the least gdp growth from 2007-2011?": "None",
    "what continent had the highest population in 1970?": "None",
    "what is the average population of 2001?": "None",
    "who built the larger version of the first bagnall locomotive?": "## Target type: {'Builder'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the builder of output_of_query3\nQuery4: \"get_information(relation='Builder', head_entity='output_of_query3')\"",
    "based on the table, which locomotive was built first?": "## Target type: {locomotive}\n## Query:\nStep1: Find the locomotive with the relation of Date\nQuery1: \"get_information(relation='Date')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the locomotive with the min Date\nQuery3: \"get_information(relation='Date', tail_entity='output_of_query2')\"\nStep4: Find the locomotive name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what was the album released immediately before the one that had boku wa do kana on it?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Boku wa Do Kana\nQuery1: \"get_information(relation='Title', tail_entity='Boku wa Do Kana')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "what album was published next after mama?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Mama\nQuery1: \"get_information(relation='Album', tail_entity='Mama')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "what single release came before \"junkies\"?": "## Target type: {Single/EP}\n## Query:\nStep1: Find the entity named \"Junkies\"\nQuery1: \"get_information(relation='Single/EP', tail_entity='Junkies')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Single/EP of output_of_query4\nQuery5: \"get_information(relation='Single/EP', head_entity='output_of_query4')\"",
    "what album was released before kmo haruach?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Kmo Haruach\nQuery1: \"get_information(relation='Title', tail_entity='Kmo Haruach')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "which of the singles from \"dosage\" had the highest billboard hot 100 rating?": "## Target type: {'Single'}\n## Query:\nStep1: Find all the singles from \"dosage\"\nQuery1: \"get_information(relation='Single', tail_entity='dosage')\"\nStep2: Find the single with the highest billboard hot 100 rating\nQuery2: \"get_information(relation='Position', tail_entity='1')\"\nStep3: Get the single of output_of_query2\nQuery3: \"get_information(relation='Single', head_entity='output_of_query2')\"",
    "what is the number of times the title reign was longer than 3 years?": "None",
    "which justice served a total of 17 years before they retired?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Years until mandatory retirement\nQuery1: \"get_information(relation='Years until mandatory retirement', tail_entity='17 years')\"\nStep2: Find the entity with the relation of Name that matches output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what was the only coach to serve for only six years?": "## Target type: {'Coach'}\n## Query:\nStep1: Find the entity with the relation of Years as '6'\nQuery1: \"get_information(relation='Years', tail_entity='6')\"\nStep2: Find the coach of output_of_query1\nQuery2: \"get_information(relation='Coach', head_entity='output_of_query1')\"",
    "which episode had a higher number of viewers, \"identity\" or \"dead drop\"?": "## Target type: {episode}\n## Query:\nStep1: Find the episode named Identity\nQuery1: \"get_information(relation='Title', tail_entity='Identity')\"\nStep2: Find the viewers of output_of_query1\nQuery2: \"get_information(relation='U.S. viewers (millions)', head_entity='output_of_query1')\"\nStep3: Find the episode named Dead Drop\nQuery3: \"get_information(relation='Title', tail_entity='Dead Drop')\"\nStep4: Find the viewers of output_of_query3\nQuery4: \"get_information(relation='U.S. viewers (millions)', head_entity='output_of_query3')\"\nStep5: Compare the viewers of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4: 'Identity' else: 'Dead Drop'\"",
    "what is the last platform listed on this chart?": "None",
    "how many works did terence cuneo complete in total?": "None",
    "how many games did ohio state win in this 1982 season?": "None",
    "how long did sala burton serve?": "None",
    "what was the first building named as the tallest?": "## Target type: {building name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what construction company built most of these landmarks?": "None",
    "what was the last bridge built?": "None",
    "who built the last ship on the table?": "## Target type: {builder}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Builder of output_of_query3\nQuery4: \"get_information(relation='Builder', head_entity='output_of_query3')\"",
    "what stadium can seat the least number of people?": "None",
    "the stadium can only hold 2500 people.": "## Target type: {'Stadium'}\n## Query:\nStep1: Find the entity with the relation of Stadium\nQuery1: \"get_information(relation='Stadium')\"\nStep2: Find the Capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity whose Capacity is less than or equal to 2500\nQuery3: \"get_information(relation='Capacity', tail_entity<='2500')\"\nStep4: Find the Stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"",
    "did chile rank above or below bolivia taekwondo at the 2013 bolivarian games?": "## Target type: {comparison (above, below)}\n## Query:\nStep1: Find the entity named Chile\nQuery1: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Bolivia Taekwondo\nQuery3: \"get_information(relation='Nation', tail_entity='Bolivia Taekwondo')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which is the only team that chile was faster than in cycling at the 1996 summer olympics men's team pursuit?": "None",
    "how many more gold medals did jamaica win compared to cuba?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Jamaica\nQuery1: \"get_information(relation='Nation', tail_entity='Jamaica')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Cuba\nQuery3: \"get_information(relation='Nation', tail_entity='Cuba')\"\nStep4: Find the gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "was chile below or above the gold medal count for panama?": "## Target type: {'Rank'}\n## Query:\nStep1: Find the entity that is Panama\nQuery1: \"get_information(relation='Nation', tail_entity='Panama')\"\nStep2: Find the gold medal count of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\n\nStep3: Find the entity that is Chile\nQuery3: \"get_information(relation='Nation', tail_entity='Chile')\"\nStep4: Find the gold medal count of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\n\nStep5: Check if output_of_query4 is below or above output_of_query2\nQuery5: \"if(set1='output_of_query4', relation='rank', set2='output_of_query2', operator='comparison')\"",
    "how many teams completed all 150 laps of the 1998 marlboro grand prix of miami?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is the 1998 Marlboro Grand Prix of Miami\nQuery1: \"get_information(relation='Race', tail_entity='1998 Marlboro Grand Prix of Miami')\"\nStep2: Find the Laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity that completed all 150 laps\nQuery3: \"get_information(relation='Laps', tail_entity='150')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total of 2013 teams on the chart?": "None",
    "what is the name of the river listed before chalakkudy?": "None",
    "which is the oldest, kachorra or sos mi vida?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named Kachorra\nQuery1: \"get_information(relation='Title', tail_entity='Kachorra')\"\nStep2: Find the entity named Sos mi vida\nQuery2: \"get_information(relation='Title', tail_entity='Sos mi vida')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2 to get the oldest one\nQuery5: \"if(output_of_query3 < output_of_query4, output_of_query1, output_of_query2)\"",
    "hans r. esmer and christophe larrouilh were both replaced in what month in 2009?": "None",
    "the 2011 championship was hosted by university of michigan. what is its venue's name?": "None",
    "what is the number of cities with a population over 10,000 between 2005-2009?": "## Target type: {number of cities}\n## Query:\nStep1: Find the cities with population over 10,000 in 2005\nQuery1: \"get_information(relation='Population (2005)', tail_entity>'10000')\"\nStep2: Find the cities with population over 10,000 in 2009\nQuery2: \"get_information(relation='Population (2009)', tail_entity>'10000')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the last team played for?": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which parish was founded after 1950?": "## Target type: {parish}\n## Query:\nStep1: Find the entity that Founded is after 1950\nQuery1: \"get_information(relation='Founded', tail_entity>'1950')\"\nStep2: Find the Parish of output_of_query1\nQuery2: \"get_information(relation='Parish', head_entity='output_of_query1')\"",
    "what is the number of clubs that were founded after 1950?": "## Target type: {number of clubs}\n## Query:\nStep1: Find the clubs that were founded after 1950\nQuery1: \"get_information(relation='Founded', tail_entity>'1950')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which state has the largest amount of judges to serve?": "None",
    "what's the difference between bedford's score on 12 march 2005 and their score on 2 april 2005?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity with the relation of Home team is Bedford and Date is 12 March 2005\nQuery1: \"get_information(relation='Home team', tail_entity='Bedford', key='Date', value='12 March 2005')\"\nStep2: Get the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Home team is Bedford and Date is 2 April 2005\nQuery3: \"get_information(relation='Home team', tail_entity='Bedford', key='Date', value='2 April 2005')\"\nStep4: Get the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the difference between southampton's score and sunderland's score?": "None",
    "what is the department with the most amount of total deputies?": "None",
    "how many more roles did jon stewart have in 1997 compared to 2007?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jon Stewart in 1997\nQuery1: \"get_information(relation='Year', tail_entity='1997')\"\nStep2: Find the roles of output_of_query1\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"\nStep3: Find the entity named Jon Stewart in 2007\nQuery3: \"get_information(relation='Year', tail_entity='2007')\"\nStep4: Find the roles of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"\nStep5: Get the difference between output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "of these players, who had the longest career?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Career\nQuery1: \"get_information(relation='Career')\"\nStep2: Calculate the length of each career in output_of_query1\nQuery2: \"calculate_length(set='output_of_query1')\"\nStep3: Find the max length in output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with max length\nQuery4: \"get_information(relation='Career', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "how many shows have given stewart writing credit?": "None",
    "how long did bob martinez serve as director?": "None",
    "how many years did cooney checkaye coach the muncie flyers?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Cooney Checkaye\nQuery1: \"get_information(relation='Coach', tail_entity='Cooney Checkaye')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of people served by the rolla station?": "None",
    "how many airbases have helipads?": "## Target type: {number}\n## Query:\nStep1: Find the airbases\nQuery1: \"get_information(relation='Utilization', tail_entity='Military')\"\nStep2: Find the airbases with helipads\nQuery2: \"get_information(relation='Helipads', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which album hit the highest spot on the uk albums chart?": "None",
    "what was the highest ranking in the singles chart \"holding out for a hero\" achieved outside of europe.": "None",
    "what single title(s) were on the irish charts and not on the uk singles chart?": "None",
    "which song did better on the uk singles chart, \"til the day\" or \"bleach\"?": "## Target type: {song}\n## Query:\nStep1: Find the entity named \"Til the Day\"\nQuery1: \"get_information(relation='Single/EP', tail_entity='Til the Day')\"\nStep2: Find the UK Singles Chart Position of output_of_query1\nQuery2: \"get_information(relation='UK Singles Chart Position', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Bleach\"\nQuery3: \"get_information(relation='Single/EP', tail_entity='Bleach')\"\nStep4: Find the UK Singles Chart Position of output_of_query3\nQuery4: \"get_information(relation='UK Singles Chart Position', head_entity='output_of_query3')\"\nStep5: Compare the positions of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 < output_of_query4, 'Til the Day', 'Bleach')\"",
    "what is the top city listed on the table?": "## Target type: {city}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "what city ranks first in altitude?": "None",
    "which is the last city listed alphabetically?": "## Target type: {city}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of place of output_of_query3\nQuery4: \"get_information(relation='Name of place', head_entity='output_of_query3')\"",
    "which division has this team played the most games in?": "## Target type: {division}\n## Query:\nStep1: Find the row_number that matches the given season\nQuery1: \"get_information(relation='Season', tail_entity='1996/97')\"\nStep2: Find the division of output_of_query1\nQuery2: \"get_information(relation='Division', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"\nStep4: Find the division that appears the most in output_of_query2\nQuery4: \"most(set='output_of_query2')\"",
    "in their first 20 games, which team did the tigers play the most?": "## Target type: {team}\n## Query:\nStep1: Find the entity that is Tigers\nQuery1: \"get_information(relation='Opponent', tail_entity='Tigers')\"\nStep2: Find the first 20 games\nQuery2: \"get_information(relation='row_number', tail_entity<='20')\"\nStep3: Find the opponent of output_of_query2\nQuery3: \"get_information(relation='Opponent', head_entity='output_of_query2')\"\nStep4: Find the team that appears the most in output_of_query3\nQuery4: \"most(set='output_of_query3')\"",
    "how many times did this player play in lionel roberts park?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that Venue is Lionel Roberts Park\nQuery1: \"get_information(relation='Venue', tail_entity='Lionel Roberts Park')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many race car drivers out of the 43 listed drove toyotas?": "## Target type: {number of race car drivers}\n## Query:\nStep1: Find the entities with the relation of Make as Toyota\nQuery1: \"get_information(relation='Make', tail_entity='Toyota')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many drivers had a total of 58 laps or more?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Laps and its value is 58 or more.\nQuery1: \"get_information(relation='Laps', tail_entity>='58')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many american drivers participated in the race?": "None",
    "how many of the 7 tallest buildings in kanpur, india were built before 2010?": "## Target type: {number}\n## Query:\nStep1: Find the buildings in Kanpur, India\nQuery1: \"get_information(relation='Name', tail_entity='Kanpur, India')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the buildings that were built before 2010\nQuery3: \"get_information(relation='Year', tail_entity<'2010')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many buildings on the list are chapels?": "## Target type: {number of buildings}\n## Query:\nStep1: Find the entities with the Current Use of \"Chapel\"\nQuery1: \"get_information(relation='Current Use', tail_entity='Chapel')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the other single of the toadies which ranked 23rd in the us main chart in 1995?": "None",
    "what is the number of games played in teh 2010-2011 season": "## Target type: {number of games}\n## Query:\nStep1: Find the games in the 2010-2011 season\nQuery1: \"get_information(relation='Date', tail_entity~='2010-2011')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many seasons lasted more than 100 days?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the seasons with the relation of Days greater than 100\nQuery1: \"get_information(relation='Days', tail_entity>'100')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was the round for season 2010": "None",
    "how long did the 2010 clippers pre-season last?": "None",
    "what team played the last game of the 1981 season?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the last game of the 1981 season\nQuery1: \"get_information(relation='row_number', tail_entity='16')\"\nStep2: Find the Opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "what was the last game released?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "who was the first person to take office in 1803?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the relation of Took office\nQuery1: \"get_information(relation='Took office')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Took office\nQuery3: \"get_information(relation='Took office', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "when was the first year of rugby of the terrapins?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Terrapins\nQuery1: \"get_information(relation='Nickname', tail_entity='Terrapins')\"\nStep2: Find the Rugby Since of output_of_query1\nQuery2: \"get_information(relation='Rugby Since', head_entity='output_of_query1')\"",
    "besides the loss to cody goodale, what other losses occurred?": "None",
    "what was the number of losses gran cochisse had against el dandy?": "None",
    "what was the total of dead and injured in the attack on air france flight 193?": "None",
    "were the gains and losses the same on july 8th, 1964 and may 30, 1963?": "None",
    "tell me one that did not have any wins, promotions, or relegations.": "None",
    "what is the number of games that ended in a tie?": "None",
    "how many games did the philadelphia soul lose before earning their first win?": "None",
    "how many total times in new jersey represented in this chart?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named New Jersey in State\nQuery1: \"get_information(relation='State', tail_entity='New Jersey')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of albus from this chart that made the billboard 200?": "None",
    "number of cities in new jersey where the korean population is greater than 15%": "None",
    "how many mills were mentioned or built before 1700?": "None",
    "what is the total number of established dioceses?": "None",
    "what is the number of formula one series races that cochet has been in?": "None",
    "what is the number of different races that brazil has won?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Brazil\nQuery1: \"get_information(relation='Location', tail_entity='Brazil')\"\nStep2: Find the races that Brazil has won\nQuery2: \"get_information(relation='Winner', tail_entity='output_of_query1')\"\nStep3: Get the count of the unique races from output_of_query2\nQuery3: \"count(set='output_of_query2', distinct=True)\"",
    "which operation occurred right after operation maritime guard?": "None",
    "what was the name of the next spec ops mission release after arctic recon?": "## Target type: {'Spec Ops Mission'}\n## Query:\nStep1: Find the entity named Arctic Recon\nQuery1: \"get_information(relation='Spec Ops Mission', tail_entity='Arctic Recon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Spec Ops Mission of output_of_query4\nQuery5: \"get_information(relation='Spec Ops Mission', head_entity='output_of_query4')\"",
    "what was the next operational computer after the modified eniac?": "None",
    "how long did the mount harquahala, arizon station operate?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Mount Harquahala, Arizona\nQuery1: \"get_information(relation='Station', tail_entity='Mount Harquahala, Arizona')\"\nStep2: Find the opened date of output_of_query1\nQuery2: \"get_information(relation='Opened', head_entity='output_of_query1')\"\nStep3: Find the closed date of output_of_query1\nQuery3: \"get_information(relation='Closed', head_entity='output_of_query1')\"\nStep4: Calculate the duration between output_of_query2 and output_of_query3\nQuery4: \"duration(start_date='output_of_query2', end_date='output_of_query3')\"",
    "where was the first location used in august, 1976?": "None",
    "what is the total time that habbo was in operation in the people's republic of china?": "None",
    "what was the name of the mission previous to cosmos 300?": "## Target type: {mission name}\n## Query:\nStep1: Find the entity named Cosmos 300\nQuery1: \"get_information(relation='Name', tail_entity='Cosmos 300')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the total number of fdrcs that the ppopp has been a part of?": "None",
    "the number of miss supranational's from puerto rico": "## Target type: {number}\n## Query:\nStep1: Find the entity named Puerto Rico\nQuery1: \"get_information(relation='Country/Territory', tail_entity='Puerto Rico')\"\nStep2: Find the number of Miss Supranational from output_of_query1\nQuery2: \"get_information(relation='Miss Supranational', head_entity='output_of_query1')\"",
    "how many people does argir have?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Argir\nQuery1: \"get_information(relation='Town/Village', tail_entity='Argir')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "how many total women were victims?": "None",
    "what is the number of diocese with an area larger than 20,000(km2)?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Area (km2) larger than 20,000\nQuery1: \"get_information(relation='Area (km2)', tail_entity>'20000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total area in km\u00b2 of lake sils?": "## Target type: {area in km\u00b2}\n## Query:\nStep1: Find the entity named Lake Sils\nQuery1: \"get_information(relation='Name', tail_entity='Lake Sils')\"\nStep2: Find the area in km\u00b2 of output_of_query1\nQuery2: \"get_information(relation='Area in km\u00b2', head_entity='output_of_query1')\"",
    "the game on what date had the most attendance?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "what are the number of times weld county is listed on this chart?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that Principal county is Weld County\nQuery1: \"get_information(relation='Principal county', tail_entity='Weld County')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the last event to be held?": "## Target type: {'Event'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "what single was released next after \"tomber\"?": "## Target type: {'Single'}\n## Query:\nStep1: Find the entity named Tomber\nQuery1: \"get_information(relation='Single', tail_entity='Tomber')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Single of output_of_query4\nQuery5: \"get_information(relation='Single', head_entity='output_of_query4')\"",
    "what was the next single after \"overrated (everything is)\"?": "None",
    "what is the single/ep listed after \"bleach\"?": "None",
    "what was the next single released after \"melting pot?\"": "## Target type: {title}\n## Query:\nStep1: Find the entity named Melting Pot\nQuery1: \"get_information(relation='Title', tail_entity='Melting Pot')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "who was the first person to take office after benjamin edwards?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Benjamin Edwards\nQuery1: \"get_information(relation='Name', tail_entity='Benjamin Edwards')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who was the first minister of transport?": "None",
    "who was the first astro to be the opening day pitcher in the astrodome?": "None",
    "who is the only goal scorer from jamaica?": "None",
    "how many games had four total points scored or more?": "None",
    "which latin american country had the largest number of tourism arrivals in 2010?": "## Target type: {Latin American country}\n## Query:\nStep1: Find the entity named Latin American countries\nQuery1: \"get_information(relation='Selected Latin American countries')\"\nStep2: Get the entity with largest tourism arrivals in 2010\nQuery2: \"get_information(relation='Internl. tourism arrivals 2010 (x 1000)', tail_entity>='largest')\"\nStep3: Find the Latin American country of output_of_query2\nQuery3: \"get_information(relation='Selected Latin American countries', head_entity='output_of_query2')\"",
    "besides france, which other nation ranked 5th at the 1997 world taekwondo championships?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find other nations with the same rank as output_of_query2\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Get the set difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "which country had the least amount of per capita usd in 2012?": "None",
    "are more of the amateur draft picks from canada or the united states?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Nationality is Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity with the relation of Nationality is United States\nQuery3: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Compare the counts of output_of_query2 and output_of_query4\nQuery5: \"compare(count1='output_of_query2', count2='output_of_query4')\"",
    "what is the home team of the only 0-0 score?": "## Target type: {home team}\n## Query:\nStep1: Find the entity with the relation of Score is 0\u20130\nQuery1: \"get_information(relation='Score', tail_entity='0\u20130')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home Team', head_entity='output_of_query1')\"",
    "who was the opponent to lose by only 2 points": "## Target type: {opponent}\n## Query:\nStep1: Find the entity whose Result is \"Lost by 2 points\"\nQuery1: \"get_information(relation='Result', tail_entity='Lost by 2 points')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "what was the score previous to the benin opponent?": "None",
    "how many were released in 2013?": "None",
    "which opponent is listed previous to j\u00fcrgen fassbender?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named J\u00fcrgen Fassbender\nQuery1: \"get_information(relation='Opponent', tail_entity='J\u00fcrgen Fassbender')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "how many players are older than cyril guittet?": "None",
    "how many cities have populations greater than arquata scrivia?": "## Target type: {number of cities}\n## Query:\nStep1: Find the entity named Arquata Scrivia\nQuery1: \"get_information(relation='City', tail_entity='Arquata Scrivia')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the cities with populations greater than output_of_query2\nQuery3: \"get_information(relation='Population', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total number of times johan bryneel's name appears on all of these lists?": "None",
    "how many consecutive losses did texas tech experience from september 11th to october 9th?": "None",
    "how many losses did the team have in 1981?": "None",
    "what are the number of times that the result in a loss game was 31-14?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Result/Score\nQuery1: \"get_information(relation='Result/Score')\"\nStep2: Find the entity whose result was \"L 31-14\"\nQuery2: \"get_information(relation='Result/Score', tail_entity='L 31-14')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the total amount of points scored on november 4th?": "None",
    "how many total points did the fighting irish score in october 1946?": "None",
    "who had a higher score: craig stadler or joe inman?": "None",
    "who had the most touchdowns: jerel myers or cecil moore?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Jerel Myers\nQuery1: \"get_information(relation='Player', tail_entity='Jerel Myers')\"\nStep2: Find the touchdowns of output_of_query1\nQuery2: \"get_information(relation='TD's, head_entity='output_of_query1')\"\nStep3: Find the entity named Cecil Moore\nQuery3: \"get_information(relation='Player', tail_entity='Cecil Moore')\"\nStep4: Find the touchdowns of output_of_query3\nQuery4: \"get_information(relation='TD's, head_entity='output_of_query3')\"\nStep5: Compare output_of_query2 and output_of_query4 to find the one with more touchdowns\nQuery5: \"if output_of_query2 > output_of_query4 then output_of_query1 else output_of_query3\"",
    "which team did this player face before pakistan on april 4, 2008?": "None",
    "who did this player face in her only game in switzerland?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Switzerland\nQuery1: \"get_information(relation='Tournament', tail_entity='Switzerland')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "which next club did shanghai shenhua face after the march 7,1999 match?": "None",
    "who did lukas podolski's team face after thailand in december 21, 2004?": "None",
    "which competitor came after diego cuenca in the 1995 finals?": "## Target type: {competitor}\n## Query:\nStep1: Find the entity named Diego Cuenca\nQuery1: \"get_information(relation='Name', tail_entity='Diego Cuenca')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the competitor of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "zwicker faced tom hubert on october 15th, 2005, who did he face before him?": "None",
    "who was the next transfer after maico on may 30, 2009?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Maico\nQuery1: \"get_information(relation='Name', tail_entity='Maico')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "between 2006-2011, which subdivision had the largest change in population? (%)": "## Target type: {census subdivision}\n## Query:\nStep1: Find the change in population (%) between 2006 and 2011 for all subdivisions\nQuery1: \"get_information(relation='Change in % 2006\u20132011')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the census subdivision with the max change in population\nQuery3: \"get_information(relation='Change in % 2006\u20132011', tail_entity='output_of_query2')\"\nStep4: Find the census subdivision name of output_of_query3\nQuery4: \"get_information(relation='Census subdivision', head_entity='output_of_query3')\"",
    "what are the total number of times northampton-class cruiser is listed as the class of the ship?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Northampton-class cruiser\nQuery1: \"get_information(relation='Class', tail_entity='Northampton-class cruiser')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the total number of times output_of_query1 is listed as the class of the ship\nQuery3: \"count(set='output_of_query2')\"",
    "how many quarries opened before 1892?": "None",
    "what is the total number of teams that played 1919 brazilian football?": "None",
    "how many people were born in 1976?": "None",
    "how many ties are listed?": "None",
    "how many networks have more affiliates than canal de las estrellas?": "## Target type: {number of networks}\n## Query:\nStep1: Find the entity named Canal de las Estrellas\nQuery1: \"get_information(relation='Network name', tail_entity='Canal de las Estrellas')\"\nStep2: Find the affiliates of output_of_query1\nQuery2: \"get_information(relation='Affiliates', head_entity='output_of_query1')\"\nStep3: Find the networks whose affiliates are more than output_of_query2\nQuery3: \"get_information(relation='Affiliates', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the number of networks that are owned by televisa?": "## Target type: {number of networks}\n## Query:\nStep1: Find the entity that is owned by Televisa\nQuery1: \"get_information(relation='Owner', tail_entity='Televisa')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of affiliates of canal de las estrellas.": "## Target type: {number of affiliates}\n## Query:\nStep1: Find the entity named Canal de las Estrellas\nQuery1: \"get_information(relation='Network name', tail_entity='Canal de las Estrellas')\"\nStep2: Find the number of affiliates of output_of_query1\nQuery2: \"get_information(relation='Affiliates', head_entity='output_of_query1')\"",
    "which year saw the most naturalization by marriage?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity with the relation of Naturalisation by marriage\nQuery1: \"get_information(relation='Naturalisation by marriage')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Naturalisation by marriage\nQuery3: \"get_information(relation='Naturalisation by marriage', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what is the total of seats?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many clubs are listed in the table?": "None",
    "how many total people were impacted by the southern bell telephone co. strike in 1955?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Southern Bell Telephone Co.\nQuery1: \"get_information(relation='Company', tail_entity='Southern Bell Telephone Co.')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with Year equal to 1955\nQuery3: \"get_information(relation='Year', tail_entity='1955')\"\nStep4: Find the Number of Members Affected of output_of_query3\nQuery4: \"get_information(relation='Number of Members Affected', head_entity='output_of_query3')\"",
    "how many dates had an attendance of over 60,000?": "## Target type: {number of dates}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Find the attendance over 60,000 in output_of_query1\nQuery2: \"get_information(relation='Attendance', tail_entity>'60000')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference in number between the uninominal deputies from potos\u00ed and beni?": "None",
    "what is the total number of priests that have held the job in resita?": "## Target type: {number of priests}\n## Query:\nStep1: Find the entity named Resita\nQuery1: \"get_information(relation='Surname', tail_entity='Resita')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the relation of row_number\nQuery5: \"get_information(relation='row_number')\"\nStep6: Find the number of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what player had the shortest time between their \"from\" and \"to\" date?": "None",
    "what is the difference between mckoy's longest and shortest javelin throws?": "None",
    "what was the first olympic games in which indrek kaseorg competed?": "None",
    "what was the only year mr. wu competed in the olympic games?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Mr. Wu\nQuery1: \"get_information(relation='Name', tail_entity='Mr. Wu')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Competition as 'Olympic Games'\nQuery3: \"get_information(relation='Competition', tail_entity='Olympic Games')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "when was the first ship laid down?": "None",
    "which was the first ship to be launched in 1878?": "## Target type: {ship}\n## Query:\nStep1: Find the entity with the relation of year 1878\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Ship of output_of_query3\nQuery4: \"get_information(relation='Ship', head_entity='output_of_query3')\"",
    "what is the number of battles that took place in 1836?": "None",
    "after 1 december 1918 when was the next encyclical?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity that Date is 1 December 1918\nQuery1: \"get_information(relation='Date', tail_entity='1 December 1918')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "when was the last recorded opening date of an observatory?": "None",
    "which divisions had a population below 15,000 in 2005?": "None",
    "which region had the least total of unsolved cases?": "None",
    "what was the number of singles from the hold your fire album?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Hold Your Fire\" album\nQuery1: \"get_information(relation='Album', tail_entity='Hold Your Fire')\"\nStep2: Find the UK Singles of output_of_query1\nQuery2: \"get_information(relation='UK Singles', head_entity='output_of_query1')\"\nStep3: Get the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the last single released by the triffids?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many consecutive losing seasons were there?": "None",
    "which team had two consecutive losses?": "None",
    "how many employees does mundelein high school have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mundelein High School\nQuery1: \"get_information(relation='Employer', tail_entity='Mundelein High School')\"\nStep2: Find the # of Employees of output_of_query1\nQuery2: \"get_information(relation='# of Employees', head_entity='output_of_query1')\"",
    "how many people attended the club's games in the month of march?": "None",
    "how many release dates were in april?": "None",
    "what were the total number of air dates in february?": "None",
    "was attendance higher during week 5 or week 9?": "None",
    "which team had the most points?": "None",
    "what is the next airline to be listed after royal daisy airlines?": "None",
    "which other team's stadium has the same capacity as didcot town's stadium?": "None",
    "how many stations have at least 5 kw or more listed in the power column?": "## Target type: {number of stations}\n## Query:\nStep1: Find the entities in the Power column that have at least 5 kW or more\nQuery1: \"get_information(relation='Power (kW)', tail_entity>='5 kW')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of albums were recorded on the ode label?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Label as \"Ode\"\nQuery1: \"get_information(relation='Label', tail_entity='Ode')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of albums released under the ode label": "## Target type: {number of albums}\n## Query:\nStep1: Find the entity named Ode Label\nQuery1: \"get_information(relation='Label', tail_entity='Ode')\"\nStep2: Count the number of albums with output_of_query1 as Label\nQuery2: \"count(set='output_of_query1')\"",
    "what are the number of times jive records is listed as the label?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Label is Jive Records\nQuery1: \"get_information(relation='Label', tail_entity='Jive Records')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in the gdp (usd bin) in 2012 between algeria and comoros?": "## Target type: {GDP (USD bln)}\n## Query:\nStep1: Find the entity named Algeria\nQuery1: \"get_information(relation='Country', tail_entity='Algeria')\"\nStep2: Find the GDP (USD bln) in 2012 of output_of_query1\nQuery2: \"get_information(relation='GDP (USD bln, 2012)', head_entity='output_of_query1')\"\nStep3: Find the entity named Comoros\nQuery3: \"get_information(relation='Country', tail_entity='Comoros')\"\nStep4: Find the GDP (USD bln) in 2012 of output_of_query3\nQuery4: \"get_information(relation='GDP (USD bln, 2012)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "seychelles and guinea-bissau have the same total gdp (nominal) of ?": "## Target type: {Total GDP (nominal)}\n## Query:\nStep1: Find the entity named Seychelles\nQuery1: \"get_information(relation='Country', tail_entity='Seychelles')\"\nStep2: Find the Total GDP (nominal) of output_of_query1\nQuery2: \"get_information(relation='Total GDP (nominal)', head_entity='output_of_query1')\"\nStep3: Find the entity named Guinea-Bissau\nQuery3: \"get_information(relation='Country', tail_entity='Guinea-Bissau')\"\nStep4: Find the Total GDP (nominal) of output_of_query3\nQuery4: \"get_information(relation='Total GDP (nominal)', head_entity='output_of_query3')\"",
    "how many times did togo at least make it to the africa cup, also counting withdraws?": "None",
    "how long did it take him to finish the marathon at the olympics in 2004?": "None",
    "what is the number of times the eindhoven marathon has been held since 1959": "None",
    "its operating years total 37": "None",
    "how many years after uganda air cargo commenced operations did air uganda commence operations?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Uganda Cargo\nQuery1: \"get_information(relation='CALLSIGN', tail_entity='Uganda Cargo')\"\nStep2: Find the commenced operations of output_of_query1\nQuery2: \"get_information(relation='COMMENCED OPERATIONS', head_entity='output_of_query1')\"\nStep3: Find the entity named Air Uganda\nQuery3: \"get_information(relation='AIRLINE', tail_entity='Air Uganda')\"\nStep4: Find the commenced operations of output_of_query3\nQuery4: \"get_information(relation='COMMENCED OPERATIONS', head_entity='output_of_query3')\"\nStep5: Calculate the number of years between output_of_query2 and output_of_query4\nQuery5: \"calculate_years_difference(date1='output_of_query2', date2='output_of_query4')\"",
    "how many years have the brewers competed in the nl?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity that League is 'NL'\nQuery1: \"get_information(relation='League', tail_entity='NL')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which driver completed the least number of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "who was the only driver to drive 33 laps according to this chart?": "## Target type: {driver}\n## Query:\nStep1: Find the entity that Laps is 33\nQuery1: \"get_information(relation='Laps', tail_entity='33')\" \nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "how many drivers did not complete 95 laps?": "## Target type: {number of drivers}\n## Query:\nStep1: Find the entity whose laps is less than 95\nQuery1: \"get_information(relation='Laps', tail_entity<'95')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many laps did the last place finisher complete?": "None",
    "how many drivers completed at least 45 laps?": "## Target type: {number}\n## Query:\nStep1: Find the drivers who completed at least 45 laps\nQuery1: \"get_information(relation='Laps', tail_entity>='45')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total bridges are in copiah county?": "None",
    "which district was first to have a successor seated?": "None",
    "how many opponents are listed?": "None",
    "the total number of different teams listed as an opponent": "## Target type: {number}\n## Query:\nStep1: Find all the Opponent\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many competitors did not start the race at all?": "## Target type: {number of competitors}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entities with the relation of Time as \"DNS\" (Did Not Start)\nQuery2: \"get_information(relation='Time', tail_entity='DNS')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many events had no casualties?": "None",
    "what is the total number of opponent?": "## Target type: {number}\n## Query:\nStep1: Find the value of the opponent\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many events lasted 3 rounds?": "## Target type: {number}\n## Query:\nStep1: Find the events with the relation of Round being '3'\nQuery1: \"get_information(relation='Round', tail_entity='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many matches overall were there?": "None",
    "whose score was the same as crenshaw's?": "None",
    "who had the same score as ben crenshaw?": "None",
    "after george halas, which two players are tied for lowest number of points?": "## Target type: {player}\n## Query:\nStep1: Find the entity named George Halas\nQuery1: \"get_information(relation='Player', tail_entity='George Halas')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Points\nQuery5: \"get_information(relation='Points')\"\nStep6: Get the min output_of_query5\nQuery6: \"min(set='output_of_query5')\"\nStep7: Find the entity with the min Points\nQuery7: \"get_information(relation='Points', tail_entity='output_of_query6')\"\nStep8: Get the entity with the relation of Points\nQuery8: \"get_information(relation='Points', tail_entity='output_of_query6')\"\nStep9: Get the intersection of output_of_query7 and output_of_query8\nQuery",
    "which players have the same score as ed sneed?": "None",
    "which competitor had the same score as lew worhsam?": "None",
    "the only shutout of the season was won against which team?": "None",
    "what are the total number of singles in 1974?": "## Target type: {number of singles}\n## Query:\nStep1: Find the singles in the year 1974\nQuery1: \"get_information(relation='Year', tail_entity='1974')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of singles for rockmelons?": "None",
    "what was the date of the last win?": "None",
    "who was the next coach of the auburn tigers baseball team after steve renfroe?": "## Target type: {'Coach'}\n## Query:\nStep1: Find the entity named Steve Renfroe\nQuery1: \"get_information(relation='Coach', tail_entity='Steve Renfroe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "marc dos santos started as coach the same year as what other coach?": "None",
    "who was the coach of fc edmonton before miller?": "## Target type: {coach}\n## Query:\nStep1: Find the entity that is Miller\nQuery1: \"get_information(relation='Name', tail_entity='Miller')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the coach of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who was the previous manager of the california league before ray perry?": "None",
    "who is the last opponent?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "what is the last opponent listed?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "who was last?": "None",
    "which ships are class arktika but are not operational?": "None",
    "which region has more than one format?": "## Target type: {region}\n## Query:\nStep1: Find the entities that have more than one format\nQuery1: \"get_information(relation='Format', tail_entity>='2')\"\nStep2: Find the regions of output_of_query1\nQuery2: \"get_information(relation='Region', head_entity='output_of_query1')\"",
    "which is the only region with vinyl lp format?": "None",
    "name another region for the 1985 release other than greece.": "## Target type: {region}\n## Query:\nStep1: Find the entity whose Date is 1985\nQuery1: \"get_information(relation='Date', tail_entity='1985')\"\nStep2: Find the region of output_of_query1\nQuery2: \"get_information(relation='Region', head_entity='output_of_query1')\"\nStep3: Find the entity whose Region is not Greece\nQuery3: \"get_information(relation='Region', tail_entity!='Greece')\"\nStep4: Get the random output_of_query3\nQuery4: \"random(set='output_of_query3')\"",
    "how many stadiums are located in belfast?": "## Target type: {number of stadiums}\n## Query:\nStep1: Find the stadiums located in Belfast\nQuery1: \"get_information(relation='City', tail_entity='Belfast')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which stadium holds more people, yeshurun or holon city.": "## Target type: {'Stadium'}\n## Query:\nStep1: Find the entity named Yeshurun\nQuery1: \"get_information(relation='Stadium', tail_entity='Yeshurun')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity named Holon City\nQuery3: \"get_information(relation='Home city', tail_entity='Holon City')\"\nStep4: Find the stadium of output_of_query3\nQuery4: \"get_information(relation='Stadium', head_entity='output_of_query3')\"\nStep5: Find the capacity of output_of_query4\nQuery5: \"get_information(relation='Capacity', head_entity='output_of_query4')\"\nStep6: Compare the capacity of output_of_query2 and output_of_query5\nQuery6: \"compare(value1='output_of_query2', comparator='greater_than', value2='output_of_query5')\"",
    "how many athletes show up on this chart at least 5 times?": "None",
    "how many times does philanthropist appear in the position column on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Position as Philanthropist\nQuery1: \"get_information(relation='Position', tail_entity='Philanthropist')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many clubs entered competition after 1945?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Entered Competition\nQuery1: \"get_information(relation='Entered Competition')\"\nStep2: Find the entities with the value greater than 1945 in output_of_query1\nQuery2: \"get_information(relation='Entered Competition', tail_entity>'1945')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "aside from burlington, what were the other cities in which events were held?": "None",
    "how many consecutive losses for charleston southern against fbs opponents since 2002?": "None",
    "what is the number of home games the new york rangers won in january 1931?": "## Target type: {number of home games}\n## Query:\nStep1: Find the entity that is New York Rangers\nQuery1: \"get_information(relation='Opponent', tail_entity='New York Rangers')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that is January 1931\nQuery3: \"get_information(relation='January', tail_entity='1931')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the entity with the relation of Game and the row_number of output_of_query2\nQuery5: \"get_information(relation='Game', tail_entity='output_of_query2')\"\nStep6: Find the record of output_of_query5\nQuery6: \"get_information(relation='Record', head_entity='output_of_query5')\"\nStep7: Calculate the count of output_of_query6 which equals to the number of home games won\nQuery7: \"count(set='output_of_query6')\"",
    "what is the total road games did the new york rangers won in december 1930?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Opponent as @ New York Americans\nQuery1: \"get_information(relation='Opponent', tail_entity='@ New York Americans')\"\nStep2: Find the entity with the relation of December as 1930\nQuery2: \"get_information(relation='December', tail_entity='1930')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Game as output_of_query3\nQuery4: \"get_information(relation='Game', tail_entity='output_of_query3')\"\nStep5: Find the Record of output_of_query4\nQuery5: \"get_information(relation='Record', head_entity='output_of_query4')\"\nStep6: Split the output_of_query5 by '-' and get the second part\nQuery6: \"split(string='output_of_query5', delimiter='-')[1]\"\nStep7: Calculate the count of road games won\nQuery7: \"count(set='output_of_query6', value='W')\"",
    "did the team win more or less games in 1933 than the year before?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the entity with the relation of Overall Record\nQuery1: \"get_information(relation='Overall Record')\"\nStep2: Find the year before 1933\nQuery2: \"get_information(relation='Season', tail_entity='1933')\"\nStep3: Find the overall record of output_of_query2\nQuery3: \"get_information(relation='Overall Record', tail_entity='output_of_query2')\"\nStep4: Check if the games won in output_of_query1 is more or less than output_of_query3\nQuery4: \"compare(output_of_query1, output_of_query3)\"",
    "how far did they make it in the fa cup after 2009?": "None",
    "in what year did england get the top achievment in the 200 meter?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is England\nQuery1: \"get_information(relation='Notes', tail_entity='England')\"\nStep2: Find the entity whose achievement is top in the 200 meter\nQuery2: \"get_information(relation='Position', tail_entity='1st')\"\nStep3: Find the year of output_of_query2\nQuery3: \"get_information(relation='Year', head_entity='output_of_query2')\"",
    "during what month are the highest temperature records at bari karol wojtyla airport?": "None",
    "how many stages was the 1982 marlboro tour?": "## Target type: {number of stages}\n## Query:\nStep1: Find the entity of Marlboro Tour in 1982\nQuery1: \"get_information(relation='Name', tail_entity='Marlboro Tour', key='Year', value='1982')\"\nStep2: Find the stages of output_of_query1\nQuery2: \"get_information(relation='Stages', head_entity='output_of_query1')\"",
    "what was the difference in hurdle length for the olympic games 2008 and the world indoor championships 2008?": "None",
    "what is the acreage of langley and little paxton woods combined?": "None",
    "what is the difference between the length of english canyon and the length of munger creek?": "## Target type: {length}\n## Query:\nStep1: Find the entity named English Canyon\nQuery1: \"get_information(relation='Name', tail_entity='English Canyon')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity named Munger Creek\nQuery3: \"get_information(relation='Name', tail_entity='Munger Creek')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "are there more or less than 8 properties?": "## Target type: {comparison result}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the output_of_query2 is greater than 8\nQuery3: \"comparison(greater_than='output_of_query2', value=8)\"",
    "what is the implied probability of 8 = 23 + 0?": "## Target type: {'Implied probability'}\n## Query:\nStep1: Find the entity where Number is 8 = 23 + 0\nQuery1: \"get_information(relation='Number', tail_entity='8 = 23 + 0')\"\nStep2: Find the Implied probability of output_of_query1\nQuery2: \"get_information(relation='Implied probability', head_entity='output_of_query1')\"",
    "how many districts are there in virginia?": "None",
    "what is the number of legal districts in almeria province?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Almeria\nQuery1: \"get_information(relation='Province', tail_entity='Almeria')\"\nStep2: Find the number of legal districts in output_of_query1\nQuery2: \"get_information(relation='Legal districts', head_entity='output_of_query1')\"",
    "what is the difference between the number times the result was \"won\" and the number of times the result was \"nominated?\"": "## Target type: {number}\n## Query:\nStep1: Find the number of times the result was \"won\"\nQuery1: \"get_information(relation='Result', tail_entity='won')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the number of times the result was \"nominated\"\nQuery3: \"get_information(relation='Result', tail_entity='nominated')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"subtraction(a='output_of_query2', b='output_of_query4')\"",
    "how many results were at least 45?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the entity whose Result is at least 45\nQuery2: \"get_information(relation='Result', tail_entity>='45')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "if you added all the total's up, what would the number be?": "None",
    "who served after v. vaithilingam?": "None",
    "who was the flag bearer after ramaz nozadze?": "None",
    "which team finished after germany in cycling at the 1996 summer olympics men's team pursuit?": "## Target type: {team}\n## Query:\nStep1: Find the entity that is Germany\nQuery1: \"get_information(relation='Team', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "where was the last date held?": "## Target type: {location}\n## Query:\nStep1: Find all the Dates\nQuery1: \"get_information(relation='Dates')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='Dates', tail_entity='output_of_query2')\"\nStep4: Get the location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what was the first historical site on the list?": "## Target type: {site}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the site of output_of_query3\nQuery4: \"get_information(relation='Site', head_entity='output_of_query3')\"",
    "what was the design of the first passenger baseplate for vehicle registration of vermont?": "## Target type: {'Design'}\n## Query:\nStep1: Find the entity that has the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the minimum value of output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the row with the minimum row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Design of output_of_query3\nQuery4: \"get_information(relation='Design', head_entity='output_of_query3')\"",
    "how many consecutive games did the denver broncos win to start the 1998 season?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Denver Broncos\nQuery1: \"get_information(relation='Opponent', tail_entity='Denver Broncos')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "how many games did the broncos win?": "None",
    "how many games were won after their second loss of the season to the pittsburgh steelers?": "## Target type: {number of games}\n## Query:\nStep1: Find the row_number of their second loss to the Pittsburgh Steelers\nQuery1: \"get_information(relation='Opponent', tail_entity='Pittsburgh Steelers')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is larger than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many finished more than 150 laps?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Find the entity that has more than 150 laps\nQuery2: \"get_information(relation='Laps', tail_entity>'150')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who only completed 7 laps?": "None",
    "how many drivers completed at least 52 laps>": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Laps completed\nQuery1: \"get_information(relation='Laps')\"\nStep2: Find the drivers who completed at least 52 laps\nQuery2: \"get_information(relation='Laps', tail_entity>='52')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many teams completed 200 laps but didn't complete 220 laps?": "None",
    "how many sides were there to the original building that housed sherman's carousel?": "## Target type: {number of sides}\n## Query:\nStep1: Find the entity named Sherman's Carousel\nQuery1: \"get_information(relation='Name', tail_entity='Sherman's Carousel')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Notes of output_of_query3\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query3')\"\nStep5: Parse the number of sides from the Notes of output_of_query4\nQuery5: \"extract_number_from_string(string='output_of_query4')\"",
    "which terminal was longer (quay length) than terminal 8 west?": "## Target type: {terminal}\n## Query:\nStep1: Find the terminal named Terminal 8 West\nQuery1: \"get_information(relation='Terminal', tail_entity='Terminal 8 West')\"\nStep2: Find the quay length of output_of_query1\nQuery2: \"get_information(relation='Quay length', head_entity='output_of_query1')\"\nStep3: Find the entity whose quay length is greater than output_of_query2\nQuery3: \"get_information(relation='Quay length', tail_entity>'output_of_query2')\"\nStep4: Find the terminal of output_of_query3\nQuery4: \"get_information(relation='Terminal', head_entity='output_of_query3')\"",
    "how many marlboro tours did carlo guieb win?": "None",
    "what is the total number of fifa world cup goals scored by juan g\u00f3mez gonz\u00e1lez?": "None",
    "what is the difference between the caps of henry carlsson and borge leander?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Henry Carlsson\nQuery1: \"get_information(relation='name', tail_entity='Henry Carlsson')\"\nStep2: Find the caps of output_of_query1\nQuery2: \"get_information(relation='caps', head_entity='output_of_query1')\"\nStep3: Find the entity named Borge Leander\nQuery3: \"get_information(relation='name', tail_entity='Borge Leander')\"\nStep4: Find the caps of output_of_query3\nQuery4: \"get_information(relation='caps', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many matches did jones kusi-asare play in in his first season?": "None",
    "which single was release earlier: \"it wasn't god who made honky tong angels\" or \"hey joe\"?": "None",
    "how many teams had their cws best finish in 1955?": "None",
    "what is the attendance of the last uefa cup match on 20 march 1985?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity in Date that equals \"20 March 1985\"\nQuery1: \"get_information(relation='Date', tail_entity='20 March 1985')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what event is after the 400 m?": "None",
    "what is the average score on 100m sprint?": "None",
    "how many 4x 100m relays were run?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Notes is \"4x 100m relays\"\nQuery1: \"get_information(relation='Notes', tail_entity='4x 100m relays')\"\nStep2: Count the occurrences of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many swimmers swam the 100 meters in under 55 seconds?": "## Target type: {number}\n## Query:\nStep1: Find the swimmers who swam the 100 meters in under 55 seconds\nQuery1: \"get_information(relation='Time', tail_entity<'55 seconds')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "on how many dates were there at least 100 prev. points?": "## Target type: {number}\n## Query:\nStep1: Find the entities with at least 100 Prev. points\nQuery1: \"get_information(relation='Prev. points', tail_entity>='100')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the name of the last person to accomplish this up to date?": "## Target type: {'Player'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who was the last competitor to actually finish both runs?": "None",
    "who is the last partner listed?": "## Target type: {partner}\n## Query:\nStep1: Find the entity that is the last row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Partner of output_of_query3\nQuery4: \"get_information(relation='Partner', head_entity='output_of_query3')\"",
    "which was the last horse to finish?": "## Target type: {'Horse'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Horse of output_of_query3\nQuery4: \"get_information(relation='Horse', head_entity='output_of_query3')\"",
    "which championship only takes place in year 1975?": "## Target type: {championship}\n## Query:\nStep1: Find the entity in the Year of 1975\nQuery1: \"get_information(relation='Year', tail_entity='1975')\"\nStep2: Find the championship of output_of_query1\nQuery2: \"get_information(relation='Championship', head_entity='output_of_query1')\"",
    "the 1993-1994 flyers missed the playoffs again. how many consecutive seasons up until 93-94 did the flyers miss the playoffs?": "None",
    "which other year than 1998 was 3rd position?": "None",
    "name an athlete that finished in less than 3:43 but more than 3:34.": "None",
    "other than canada, name a country that had two athletes representing them.": "None",
    "other than costa, name a swimmer from brazil.": "## Target type: {name}\n## Query:\nStep1: Find the entity named Costa\nQuery1: \"get_information(relation='Name', tail_entity='Costa')\"\nStep2: Find the Nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity with the Nationality of Brazil\nQuery3: \"get_information(relation='Nationality', tail_entity='Brazil')\"\nStep4: Get the set difference between output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"\nStep5: Get any output_of_query4\nQuery5: \"any(set='output_of_query4')\"",
    "how many commissioners of food and drugs did george w bush appoint?": "None",
    "what is the number of directors that held the position of fias?": "## Target type: {number of directors}\n## Query:\nStep1: Find the entity whose Occupation is IAS\nQuery1: \"get_information(relation='Occupation', tail_entity='IAS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which region is listed below atacama?": "None",
    "what country is listed before germany?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "how long was the biggest win streak?": "None",
    "how many towers does ch\u00e2teau d'angers have?": "None",
    "how many drivers scored above 150 points?": "## Target type: {'number'}\n## Query:\nStep1: Find the drivers with Points above 150\nQuery1: \"get_information(relation='Points', tail_entity>'150')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the most points rewarded to drivers under 225 laps": "None",
    "total amount of times the team made the playoffs": "None",
    "in the 1975 stanley cup playoffs, in how many games did opponents of the buffalo sabres score at most 2 goals?": "None",
    "what was the title of the first album released in 2011?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the first single that this music group released?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "who did the club play its first match against?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "what is the next show listed after ek anhonee?": "## Target type: {show}\n## Query:\nStep1: Find the entity named Ek Anhonee\nQuery1: \"get_information(relation='Show', tail_entity='Ek Anhonee')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Show of output_of_query4\nQuery5: \"get_information(relation='Show', head_entity='output_of_query4')\"",
    "how many total charts did \"lead me on\" appear on?": "None",
    "how many games did the club play in the month of july?": "None",
    "total games played against the white sox in july?": "None",
    "before 1990 what was the highest percentage of popular vote?": "None",
    "in which year was the percentage of those without religion at least 20%?": "None",
    "did february 2012 or july 2006 have more total votes?": "## Target type: {month}\n## Query:\nStep1: Find the entity with the relation of Month\nQuery1: \"get_information(relation='Month')\"\nStep2: Find the entity named February 2012\nQuery2: \"get_information(relation='Month', tail_entity='February 2012')\"\nStep3: Find the entity named July 2006\nQuery3: \"get_information(relation='Month', tail_entity='July 2006')\"\nStep4: Find the total votes of output_of_query2\nQuery4: \"get_information(relation='Total votes', head_entity='output_of_query2')\"\nStep5: Find the total votes of output_of_query3\nQuery5: \"get_information(relation='Total votes', head_entity='output_of_query3')\"\nStep6: Compare the total votes of output_of_query4 and output_of_query5\nQuery6: \"output_of_query4 > output_of_query5\"",
    "which election had the highest percentage of popular votes - 2003 or 2007?": "## Target type: {election}\n## Query:\nStep1: Find the entity that Election is 2003\nQuery1: \"get_information(relation='Election', tail_entity='2003')\"\nStep2: Find the percentage of popular votes of output_of_query1\nQuery2: \"get_information(relation='% of popular votes', head_entity='output_of_query1')\"\nStep3: Find the entity that Election is 2007\nQuery3: \"get_information(relation='Election', tail_entity='2007')\"\nStep4: Find the percentage of popular votes of output_of_query3\nQuery4: \"get_information(relation='% of popular votes', head_entity='output_of_query3')\"\nStep5: Compare the percentage of popular votes of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operation='max')\"",
    "who was the only prime minister to be in office three times?": "None",
    "who is the opponent listed after japan?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Opponent', tail_entity='Japan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "who is the opponent listed after wku?": "None",
    "who was the opponent after auburn?": "None",
    "how many seasons were no goals scored?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the seasons where no goals were scored\nQuery1: \"get_information(relation='Goals', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what two seasons were there no goals scored?": "## Target type: {season(s)}\n## Query:\nStep1: Find the entity that has no goals scored\nQuery1: \"get_information(relation='Goals', tail_entity='0')\"\nStep2: Get the season(s) of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "how many of the players did not score any goals in the cup?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity in Cup with number of goals scored equal to 0\nQuery1: \"get_information(relation='Cup', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many years did syd bycroft spend playing for doncaster?": "None",
    "did he play less than 20 years?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Year\nQuery1: \"get_information(relation='Year')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if the count in output_of_query2 is less than 20\nQuery3: \"if_less_than(count='output_of_query2', value='20')\"",
    "how long was gina carano active in the sport?": "None",
    "what year did imma clopes only place 24th?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Imma Clopes\nQuery1: \"get_information(relation='Name', tail_entity='Imma Clopes')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose Position is 24th\nQuery3: \"get_information(relation='Position', tail_entity='24th')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what country had the most cities founded in the 1830's?": "None",
    "how many names are listed with an image?": "None",
    "how many buildings do not have an image listed?": "None",
    "how many total tugboats are pictures?": "None",
    "what was the longest distance traveled in the competitions?": "## Target type: {distance}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max distance\nQuery3: \"get_information(relation='Notes', tail_entity='output_of_query2')\"\nStep4: Find the distance of output_of_query3\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query3')\"",
    "which is the largest days held": "None",
    "how long did it take to walk 50 km in the 2004 olympic games?": "## Target type: {time}\n## Query:\nStep1: Find the entity with the relation of Event as '50 km walk'\nQuery1: \"get_information(relation='Event', tail_entity='50 km walk')\"\nStep2: Find the entity with the relation of Year as '2004'\nQuery2: \"get_information(relation='Year', tail_entity='2004')\"\nStep3: Find the entity with both output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Notes of output_of_query3 (which represents the time taken)\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query3')\"",
    "how long did haraldsson take in race 1 of the slalom?": "None",
    "how long did the 400m in erfurt, germany take for piotr kedzia?": "None",
    "how long did it take martinez to run the 20 km at the central american games in 1994?": "None",
    "what is the difference between huang qiuyan's result and fumiyo yoshida's result?": "## Target type: {'difference'}\n## Query:\nStep1: Find the row with the Name Huang Qiuyan\nQuery1: \"get_information(relation='Name', tail_entity='Huang Qiuyan')\"\nStep2: Find the result of output_of_query1\nQuery2: \"get_information(relation='Result', head_entity='output_of_query1')\"\n\nStep3: Find the row with the Name Fumiyo Yoshida\nQuery3: \"get_information(relation='Name', tail_entity='Fumiyo Yoshida')\"\nStep4: Find the result of output_of_query3\nQuery4: \"get_information(relation='Result', head_entity='output_of_query3')\"\n\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what was the difference in final score between russia and denmark in 2011?": "None",
    "what is the difference in wins between wimbledon and the us open for this player?": "## Target type: {difference in wins}\n## Query:\nStep1: Find the entity named Wimbledon\nQuery1: \"get_information(relation='Tournament', tail_entity='Wimbledon')\"\nStep2: Find the W\u2013L of output_of_query1\nQuery2: \"get_information(relation='W\u2013L', head_entity='output_of_query1')\"\nStep3: Find the entity named US Open\nQuery3: \"get_information(relation='Tournament', tail_entity='US Open')\"\nStep4: Find the W\u2013L of output_of_query3\nQuery4: \"get_information(relation='W\u2013L', head_entity='output_of_query3')\"\nStep5: Find the value of wins for Wimbledon from output_of_query2\nQuery5: \"get_information(relation='wins', tail_entity='output_of_query2')\"\nStep6: Find the value of wins for US Open from output_of_query4\nQuery6: \"get_information(relation='wins', tail_entity='output_of_query4')\"\nStep7: Calculate the difference in wins between output_of_query5 and output_of_query6\nQuery7: \"subtract(output_of_query6, output_of_query5)\"",
    "what is the difference in win pct under fred jordan and chal port?": "## Target type: {difference in win pct}\n## Query:\nStep1: Find the coach named Fred Jordan\nQuery1: \"get_information(relation='Coach', tail_entity='Fred Jordan')\"\nStep2: Find the Pct of output_of_query1\nQuery2: \"get_information(relation='Pct', head_entity='output_of_query1')\"\nStep3: Find the coach named Chal Port\nQuery3: \"get_information(relation='Coach', tail_entity='Chal Port')\"\nStep4: Find the Pct of output_of_query3\nQuery4: \"get_information(relation='Pct', head_entity='output_of_query3')\"\nStep5: Find the difference in Pct between output_of_query2 and output_of_query4\nQuery5: \"calc_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which song had a peak chart position of 45 and 24?": "None",
    "what was the only year that this player played for the atlanta falcons?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Atlanta Falcons\nQuery1: \"get_information(relation='Team', tail_entity='Atlanta Falcons')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\n\nNote: If the output_of_query2 is a list of multiple years, there are multiple years that this player played for the Atlanta Falcons.",
    "which site has a greater area wall lands or hurdlow meadows?": "## Target type: {site name}\n## Query:\nStep1: Find the site named Wall Lands\nQuery1: \"get_information(relation='Site name', tail_entity='Wall Lands')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area', head_entity='output_of_query1')\"\nStep3: Find the site named Hurdlow Meadows\nQuery3: \"get_information(relation='Site name', tail_entity='Hurdlow Meadows')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area', head_entity='output_of_query3')\"\nStep5: Find the site with the larger area between output_of_query2 and output_of_query4\nQuery5: \"if set1 > set2 then output_of_query1 else output_of_query3\"",
    "which area covers the most land in square kilometers?": "None",
    "what is the first name on the table?": "## Target type: {first name}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which devanagari transliteration is listed on the top of the table?": "None",
    "name a country listed in the table, other than india?": "None",
    "which country has the athlete with the most distance?": "None",
    "what is the top score ever scored by the brazil national team?": "None",
    "how many total films has she starred in?": "None",
    "which two buildings have the same number of floors as bsnl tower and som business square?": "None",
    "list each of the groups that had more than 5 caucusing members.": "None",
    "the name of the game and over the hill with the sword of a thousand men were on what page number?": "## Target type: {'TPB page number'}\n## Query:\nStep1: Find the entity named \"The name of the game\"\nQuery1: \"get_information(relation='Title', tail_entity='The name of the game')\"\nStep2: Find the TPB page number of output_of_query1\nQuery2: \"get_information(relation='TPB page number', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Over the Hill with the Sword of a Thousand Men\"\nQuery3: \"get_information(relation='Title', tail_entity='Over the Hill with the Sword of a Thousand Men')\"\nStep4: Find the TPB page number of output_of_query3\nQuery4: \"get_information(relation='TPB page number', head_entity='output_of_query3')\"",
    "which team won the championship after clonkill in 2007?": "None",
    "how many nominated results are shown?": "## Target type: {number}\n## Query:\nStep1: Find the nominated results\nQuery1: \"get_information(relation='Result', tail_entity='nominated')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many results were only ties?": "None",
    "who was the last person to be sent home?": "## Target type: {'Sent Home'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Sent Home of output_of_query3\nQuery4: \"get_information(relation='Sent Home', head_entity='output_of_query3')\"",
    "who was the last competitor to actually finish the preliminaries?": "None",
    "who were the champions in 1961?": "## Target type: {'Champion'}\n## Query:\nStep1: Find the entity in Year that is 1961\nQuery1: \"get_information(relation='Year', tail_entity='1961')\"\nStep2: Find the champions of output_of_query1\nQuery2: \"get_information(relation='Champion', head_entity='output_of_query1')\"",
    "what was the first year boston college won the championship?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "for 1 fc saabrucken how often did he have less than 20 appearances?": "None",
    "how many consecutive seasons has he played sixteen games?": "None",
    "how many appearances did he have in 2001?": "## Target type: {number of appearances}\n## Query:\nStep1: Find the entity with the relation of Season as 2001\nQuery1: \"get_information(relation='Season', tail_entity='2001')\"\nStep2: Find the appearances of output_of_query1\nQuery2: \"get_information(relation='Appearance', head_entity='output_of_query1')\"",
    "what is the highest position a song from \"bonafide\" reached on any chart?": "None",
    "what is the number of menteri besar that served 4 or more years?": "None",
    "what were the total number of years wallace wade was a coach?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Wallace Wade\nQuery1: \"get_information(relation='Coach', tail_entity='Wallace Wade')\"\nStep2: Find the years of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many different countries participated?": "None",
    "how many floors does the tallest building have?": "## Target type: {number of floors}\n## Query:\nStep1: Find the entity that is the tallest building\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the number of floors of output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"",
    "which building is the tallest?": "## Target type: {building}\n## Query:\nStep1: Find the buildings with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Find the max Height of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the building with the max Height\nQuery3: \"get_information(relation='Height', tail_entity='output_of_query2')\"\nStep4: Find the building name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many towers are at least 18 meters tall?": "None",
    "how many athletes were from china?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity named China\nQuery1: \"get_information(relation='Nationality', tail_entity='China')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many athletes represented canada?": "None",
    "what two consecutive films did damon executive produce that were directed by wolfgang petersen?": "None",
    "what is the only movie to win best scary scene before kuntilanak did?": "None",
    "other than friendly games, how many games did serbia play in 2010?": "None",
    "what is the only interval with a size in cents of 150?": "## Target type: {interval name}\n## Query:\nStep1: Find the entity with a size in cents of 150\nQuery1: \"get_information(relation='size (cents)', tail_entity='150')\"\nStep2: Get the interval name of output_of_query1\nQuery2: \"get_information(relation='interval name', head_entity='output_of_query1')\"",
    "which tournament had a prize no less than $1,100,000?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity with the relation of 1st prize ($)\nQuery1: \"get_information(relation='1st prize ($)')\"\nStep2: Find the entity with prize no less than $1,100,000\nQuery2: \"get_information(relation='1st prize ($)', value>='1100000')\"\nStep3: Find the tournament of output_of_query2\nQuery3: \"get_information(relation='Tournament', head_entity='output_of_query2')\"",
    "which was the team the astros played next after the cardinals?": "None",
    "who did the astros play after the reds?": "None",
    "who played phoenix after the game on june 20th?": "None",
    "what was the first marathon juma ikangaa won?": "None",
    "how many films were made 1992?": "## Target type: {number of films}\n## Query:\nStep1: Find the entity with the relation of Year 1992\nQuery1: \"get_information(relation='Year', tail_entity='1992')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films made in 2003?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 2003\nQuery1: \"get_information(relation='Year', tail_entity='2003')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the cable television station that broadcast games after ontv?": "None",
    "which station is licensed in the same city as koam-tv?": "None",
    "what city is before windygates on 201 wesr?": "None",
    "who produced the most tracks?": "## Target type: {'Producer(s)'}\n## Query:\nStep1: Find the entity in Producer(s) that appears the most.\nQuery1: \"get_information(relation='Producer(s)', tail_entity>='most')\"\nStep2: Find the Producer(s) of output_of_query1.\nQuery2: \"get_information(relation='Producer(s)', head_entity='output_of_query1')\"",
    "which producer had the most titles?": "## Target type: {producer}\n## Query:\nStep1: Find all the producers\nQuery1: \"get_information(relation='Producer(s)')\"\nStep2: Group the producers and count the titles for each producer\nQuery2: \"count_by_group(set='output_of_query1')\"\nStep3: Find the producer with the maximum count\nQuery3: \"argmax(set='output_of_query2')\"",
    "which album contained the most successful song in the charts?": "None",
    "which solid base album had the most charting singles?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the albums\nQuery1: \"get_information(relation='Album')\"\nStep2: Iterate over output_of_query1 and find the number of charting singles for each album\nQuery2:  \"calculate_count(relation='Single', tail_entity='output_of_query1')\"\nStep3: Find the album with the maximum number of charting singles\nQuery3: \"find_max(relation='Album', set='output_of_query2')\"",
    "how many games did this person play against jimmy connors?": "None",
    "how many times has this competitor placed 5th or better in competition?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity with the relation of Competition\nQuery1: \"get_information(relation='Competition')\"\nStep2: Get the entity that has the same Competition as output_of_query1\nQuery2: \"get_information(relation='Competition', tail_entity='output_of_query1')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the entity that has a row_number of 5th or better\nQuery4: \"get_information(relation='row_number', tail_entity>'4')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how long was the longest title reign?": "## Target type: {'Title Reign'}\n## Query:\nStep1: Find the entity with the relation of Title Reign\nQuery1: \"get_information(relation='Title Reign')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Title Reign\nQuery3: \"get_information(relation='Title Reign', tail_entity='output_of_query2')\"",
    "how many matches were in may 2010?": "None",
    "how many points did patrick carpentier earn during the 1999 miller lite 225?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Patrick Carpentier\nQuery1: \"get_information(relation='Driver', tail_entity='Patrick Carpentier')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "name a driver who scored at least 5 points.": "None",
    "what are the number of times newcastle united is listed as an opponent on this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Newcastle United\nQuery1: \"get_information(relation='Opponent', tail_entity='Newcastle United')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the average number of passengers in the united states?": "None",
    "how many headquarters are based outside of the us?": "None",
    "is 159 above or below the amount of laps that townsend bell completed?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Townsend Bell\nQuery1: \"get_information(relation='Driver', tail_entity='Townsend Bell')\"\nStep2: Find the laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Check if 159 is above or below output_of_query2\nQuery3: \"if_above_or_below(value1=159, value2='output_of_query2')\"",
    "what was the total number of rounds in the fight against ovince st. preux?": "## Target type: {round number}\n## Query:\nStep1: Find the entity named Ovince St. Preux\nQuery1: \"get_information(relation='Opponent', tail_entity='Ovince St. Preux')\"\nStep2: Find the rounds of output_of_query1\nQuery2: \"get_information(relation='Round', head_entity='output_of_query1')\"",
    "how many times has she played herself?": "None",
    "in how many films is the role listed as \"herself\"?": "None",
    "how many times has mary j. blige played characters other than herself since her role as mrs. butler?": "None",
    "how many appearances have no role listed?": "None",
    "what are the total number of times ananth nag appears under cast?": "None",
    "what are the total number of temples in itano?": "## Target type: {number}\n## Query:\nStep1: Find the entity that City/Town/Village is Itano\nQuery1: \"get_information(relation='City/Town/Village', tail_entity='Itano')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the temples with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many total games did he play in his career?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Games of output_of_query3\nQuery4: \"get_information(relation='Games', head_entity='output_of_query3')\"  \nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "what was the actor's first film?": "## Target type: {film}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "which was the first film in kannada?": "None",
    "when was minelli's first film?": "## Target type: {'year'}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the year of output_of_query3\nQuery4: \"get_information(relation='year', head_entity='output_of_query3')\"",
    "which movie was the first win?": "None",
    "what is the total number of films that are love stories?": "## Target type: {number}\n## Query:\nStep1: Find the films that are love stories\nQuery1: \"get_information(relation='Genre', tail_entity='Love story')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of films in tamil?": "## Target type: {number}\n## Query:\nStep1: Find the films in Tamil\nQuery1: \"get_information(relation='Language', tail_entity='Tamil')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what tower has at most 10 floors?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Floors that has at most 10 floors\nQuery1: \"get_information(relation='Floors', tail_entity<='10')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what place did this team finish immediately after the 2008/2009 season?": "## Target type: {'Place'}\n## Query:\nStep1: Find the entity with the relation of Season\nQuery1: \"get_information(relation='Season', tail_entity='2008/2009')\"\nStep2: Find the row_number of output_of_query1 \nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Place of output_of_query4\nQuery5: \"get_information(relation='Place', head_entity='output_of_query4')\"",
    "what team finished at the top of all else and was finished as champions?": "## Target type: {team}\n## Query:\nStep1: Find the entity that finished as champions\nQuery1: \"get_information(relation='Finished', tail_entity='champions')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the entity with relation of Finished that is not champions\nQuery3: \"get_information(relation='Finished', tail_entity!='champions')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"\nStep5: Get the set_difference of output_of_query2 and output_of_query4\nQuery5: \"set_difference(set1='output_of_query2', set2='output_of_query4')\"",
    "what was the first movie directed by c.v. sridhar that was filmed in the hindi language?": "None",
    "which ancient woods has the greatest number of acres?": "None",
    "which ancient woods have the least number of acres and public access?": "None",
    "how many total woods are public access?": "None",
    "how many ancient woods have public access?": "None",
    "the top played position according to this chart.": "None",
    "which three teams have been playing for the most seasons?": "None",
    "how many athletes were faster than bill chisholm?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity named Bill Chisholm\nQuery1: \"get_information(relation='Name', tail_entity='Bill Chisholm')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with row_number less than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which year had the most vinyls released": "None",
    "how many tops have listed two numbers within the same cell?": "## Target type: {number of tops}\n## Query:\nStep1: Find the entity with the relation of First TOPS\nQuery1: \"get_information(relation='First TOPS')\"\nStep2: Find the entity with the relation of Second TOPS\nQuery2: \"get_information(relation='Second TOPS')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "is 3rd place listed above 18th place?": "## Target type: {True/False}\n## Query:\nStep1: Find the place that is 3rd\nQuery1: \"get_information(relation='Place', tail_entity='3rd')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the place that is 18th\nQuery3: \"get_information(relation='Place', tail_entity='18th')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if the row_number of output_of_query1 is less than the row_number of output_of_query3\nQuery5: \"compare(a='output_of_query2', b='output_of_query4', operator='less_than')\"",
    "which was a higher scoring game, game #1 or #7?": "None",
    "what is the last frequency on the chart?": "None",
    "the last row on the list all has verbs ending in:": "None",
    "how many players are from canada?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity with the relation of Nationality as Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what country lost the most ships to u-502?": "## Target type: {country}\n## Query:\nStep1: Find the entity that U-502\nQuery1: \"get_information(relation='Fate', tail_entity='U-502')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the country of output_of_query2\nQuery3: \"get_information(relation='Nationality', head_entity='output_of_query2')\"\nStep4: Find the entity that Lost the most ships to U-502\nQuery4: \"get_information(relation='Nationality', tail_entity>='most')\"",
    "which was delivered earlier, uss lawrence or uss macdonough?": "None",
    "what was the last ship that was sunk?": "None",
    "the vaygach was commissioned for service the same year as which ship?": "None",
    "which ship was first employed as a world war ii troopship?": "## Target type: {ship}\n## Query:\nStep1: Find the entity that was employed as a World War II troopship\nQuery1: \"get_information(relation='Notes', tail_entity='World War II troopship')\"\nStep2: Get the ship of output_of_query1\nQuery2: \"get_information(relation='Ship', head_entity='output_of_query1')\"",
    "what was the only election with more than 450,000 popular votes?": "None",
    "when was the single, \"am i too late\", released?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity named \"Am I Too Late\"\nQuery1: \"get_information(relation='Single', tail_entity='Am I Too Late')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "what is the total number of points obtained by the top 5 runners on the list?": "## Target type: {number}\n## Query:\nStep1: Find the top 5 runners on the list\nQuery1: \"get_information(relation='row_number', tail_entity<='5')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many san francisco and san jose railroad locomotives with known build dates were built before 1869?": "None",
    "how many different teams have there been since 1985?": "None",
    "the two level 6 seasons were 2012/13 and what other season?": "None",
    "what was the total gross of frozen when it was number one?": "None",
    "how many total works did liszt adapt from gaetano donizetti?": "None",
    "which nation came in first place?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named \"First place\" in relation \"Rank\"\nQuery1: \"get_information(relation='Rank', tail_entity='First place')\"\nStep2: Find the nation associated with output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "how many times was the location in the united states?": "None",
    "how many times did the united states rank?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Nationality is United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Rank of output_of_query2\nQuery3: \"get_information(relation='Rank', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many courthouses were named after u.s. representitives?": "None",
    "what is the number of \"anchor\" roles this actor has had?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Role as Anchor\nQuery1: \"get_information(relation='Role', tail_entity='Anchor')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many positions are held by canada?": "None",
    "which position was held the most number of times?": "None",
    "what is the total number of players who tied for fourth, seventh, and tenth combined?": "None",
    "how many drivers did not make more than 60 laps?": "## Target type: {number}\n## Query:\nStep1: Find the drivers whose laps is less than or equal to 60\nQuery1: \"get_information(relation='Laps', tail_entity<='60')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what driver came in last place?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Position\nQuery1: \"get_information(relation='Position')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Position\nQuery3: \"get_information(relation='Position', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "who was in the last position?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Pos\nQuery1: \"get_information(relation='Pos')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Pos\nQuery3: \"get_information(relation='Pos', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "how many of these locomotives were eventually converted to 4-cylinder simple engines?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation Notes indicating conversion to 4-cylinder simple engines\nQuery1: \"get_information(relation='Notes', tail_entity~='converted to 4-cylinder simple')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films did zhao dan star in before 1949?": "None",
    "how many games had more than 1,500 in attendance?": "None",
    "name the nation with the most appearances.": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Total Apps\nQuery1: \"get_information(relation='Total Apps')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Apps\nQuery3: \"get_information(relation='Total Apps', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "which team had the most time?": "None",
    "how many years did not qualify?": "## Target type: {number}\n## Query:\nStep1: Find the years where Playoffs did not qualify\nQuery1: \"get_information(relation='Playoffs', tail_entity='Did not qualify')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams were ended in the last ten years?": "None",
    "how many points were scored in the final round of the 2012 summer olympics afc qualification?": "None",
    "how many total points did ingrid kr\u00e4mer score in the final?": "None",
    "which 1965 film starred actors elizabeth taylor and richard burton?": "None",
    "which film aired in 1994 and has marika as the role?": "## Target type: {film}\n## Query:\nStep1: Find the entity that Year is 1994\nQuery1: \"get_information(relation='Year', tail_entity='1994')\"\nStep2: Find the entity that Role is Marika\nQuery2: \"get_information(relation='Role', tail_entity='Marika')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\" \nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many movies was she in in 1998?": "## Target type: {number of movies}\n## Query:\nStep1: Find the entity that Year is 1998\nQuery1: \"get_information(relation='Year', tail_entity='1998')\"\nStep2: Find the movies that output_of_query1 appeared in\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the only movie madhurima play in during the year 2012?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity with the relation of Year and Year is 2012\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Find the entity with the relation of Role and Film is output_of_query1\nQuery2: \"get_information(relation='Film', head_entity='output_of_query1')\"",
    "which of elizabeth berkley's films got her the most award nominations?": "None",
    "which tournament is the last one of the year?": "## Target type: {tournament}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"`\nStep4: Get the Tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "where was the only tournament in 1991 held?": "None",
    "what tournament comes before the one one 1970?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity that has the relation of Date and is '1970'\nQuery1: \"get_information(relation='Date', tail_entity='1970')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Tournament of output_of_query4\nQuery5: \"get_information(relation='Tournament', head_entity='output_of_query4')\"",
    "which competition has the highest meters listed?": "## Target type: {competition}\n## Query:\nStep1: Find the entity that has the highest meters listed\nQuery1: \"get_information(relation='Notes', tail_entity>='highest')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "what country's 200 m was the quickest?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Event as \"200 m\"\nQuery1: \"get_information(relation='Event', tail_entity='200 m')\"\nStep2: Find the entity with the relation of Performance that is the quickest\nQuery2: \"get_information(relation='Performance', tail_entity>='quickest')\"\nStep3: Find the country of output_of_query2\nQuery3: \"get_information(relation='Nation', head_entity='output_of_query2')\"",
    "what distance hurdles was run the most?": "None",
    "what was the top speed in miles per hour?": "## Target type: {Speed (mph)}\n## Query:\nStep1: Find the entity with the relation of Speed (mph)\nQuery1: \"get_information(relation='Speed (mph)')\"\nStep2: Find the max Speed (mph) of output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Speed (mph)\nQuery3: \"get_information(relation='Speed (mph)', tail_entity='output_of_query2')\"",
    "which manufacturer built a model that had a max range over 5,000 km?": "## Target type: {manufacturer}\n## Query:\nStep1: Find the model with max range over 5000 km\nQuery1: \"get_information(relation='max range (km)', tail_entity>'5000')\"\nStep2: Get the manufacturer of output_of_query1\nQuery2: \"get_information(relation='Manufacturer', head_entity='output_of_query1')\"",
    "how many titles did not list an english translation?": "None",
    "how many athletes were there in monterrey in 2000 and sherbrooke in 2004 combined?": "## Target type: {number of athletes}\n## Query:\nStep1: Find the entity that City is Monterrey in Year 2000\nQuery1: \"get_information(relation='City', tail_entity='Monterrey', key='Year', value='2000')\"\nStep2: Find the No. of Athletes of output_of_query1\nQuery2: \"get_information(relation='No. of Athletes', head_entity='output_of_query1')\"\nStep3: Find the entity that City is Sherbrooke in Year 2004\nQuery3: \"get_information(relation='City', tail_entity='Sherbrooke', key='Year', value='2004')\"\nStep4: Find the No. of Athletes of output_of_query3\nQuery4: \"get_information(relation='No. of Athletes', head_entity='output_of_query3')\"\nStep5: Get the sum of output_of_query2 and output_of_query4\nQuery5: \"add(value1='output_of_query2', value2='output_of_query4')\"",
    "how long did innes ireland take to complete the 8th glover trophy race?": "## Target type: {time}\n## Query:\nStep1: Find the entity whose row_number is 8\nQuery1: \"get_information(relation='row_number', tail_entity='8')\"\nStep2: Find the entity named Innes Ireland\nQuery2: \"get_information(relation='Driver', tail_entity='Innes Ireland')\"\nStep3: Find the time/retired of output_of_query2\nQuery3: \"get_information(relation='Time/Retired', head_entity='output_of_query2')\"",
    "what is the number of times, between 1990 and 2013, for britain not to win the men's or women's bupa great south run?": "None",
    "who many matches were won by at least 12?": "## Target type: {number}\n## Query:\nStep1: Find all the matches\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the matches won by at least 12 points\nQuery2: \"get_information(relation='agg.', head_entity>='12')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of points earned by maris rupeiks during the 2007 season?": "None",
    "name one aircraft that can travel at least 500.00 mph.": "None",
    "what is the total amount of times a suzuki sx4 wrc car was used?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Suzuki SX4 WRC\nQuery1: \"get_information(relation='Car', tail_entity='Suzuki SX4 WRC')\"\nStep2: Find the total amount of times output_of_query1 was used\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the seven tallest buildings in kanpur, india have more than 14 floors?": "## Target type: {number}\n## Query:\nStep1: Find the entity's Height in Kanpur, India\nQuery1: \"get_information(relation='Height', tail_entity='Kanpur, India')\"\nStep2: Find the entity's Floors in output_of_query1\nQuery2: \"get_information(relation='Floors', head_entity='output_of_query1')\"\nStep3: Find the entity whose Floors is more than 14\nQuery3: \"get_information(relation='Floors', tail_entity>'14')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what name is just previous to surasak tansurat on the list?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Surasak Tansurat\nQuery1: \"get_information(relation='Name', tail_entity='Surasak Tansurat')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which south american country placed after irina vashentseva?": "None",
    "the verb \"liekta\" comes after the verb ______ in the list.": "None",
    "how many tv shows has natalia oreiro starred in?": "None",
    "which role did victor buono play in surfside 6?": "## Target type: {role}\n## Query:\nStep1: Find the entity named Victor Buono\nQuery1: \"get_information(relation='Role', tail_entity='Victor Buono')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity titled Surfside 6\nQuery3: \"get_information(relation='Title', tail_entity='Surfside 6')\"\nStep4: Find the role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "what was the name of the girl on sixth sense played by mischa barton?": "## Target type: {name of the girl}\n## Query:\nStep1: Find the entity named Mischa Barton\nQuery1: \"get_information(relation='Role', tail_entity='Mischa Barton')\"\nStep2: Find the Role of output_of_query1\nQuery2: \"get_information(relation='Role', head_entity='output_of_query1')\"\nStep3: Find the entity named Sixth Sense\nQuery3: \"get_information(relation='Title', tail_entity='Sixth Sense')\"\nStep4: Find the Role of output_of_query3\nQuery4: \"get_information(relation='Role', head_entity='output_of_query3')\"",
    "which boat was laid down on the same day as ha-202?": "None",
    "what was the only captain sunk by hms pelican?": "None",
    "what was the name of the ship that was built after the jule in this yard?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Jule\nQuery1: \"get_information(relation='Name', tail_entity='Jule')\"\nStep2: Find the yard no. of output_of_query1\nQuery2: \"get_information(relation='Yard no.', head_entity='output_of_query1')\"\nStep3: Find the entity that has the same yard no. as output_of_query2 and is built after output_of_query1\nQuery3: \"get_information(relation='Yard no.', tail_entity>'output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many ships were from the united kingdom that were attacked by hans-rudolf rosing": "None",
    "how many people have more than 50 goals?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Goals\nQuery1: \"get_information(relation='Goals')\"\nStep2: Find the entity whose Goals is larger than 50\nQuery2: \"get_information(relation='Goals', tail_entity>'50')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the number of goals for ks?": "## Target type: {number of goals}\n## Query:\nStep1: Find the entity named KS\nQuery1: \"get_information(relation='Team', tail_entity='KS')\"\nStep2: Find the goals for output_of_query1\nQuery2: \"get_information(relation='Goals For', head_entity='output_of_query1')\"",
    "which film won the most awards?": "None",
    "what is the difference in points scored between erwan nigon and dirk heidolf?": "## Target type: {'Points'}\n## Query:\nStep1: Find the entity named Erwan Nigon\nQuery1: \"get_information(relation='Rider', tail_entity='Erwan Nigon')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Find the entity named Dirk Heidolf\nQuery3: \"get_information(relation='Rider', tail_entity='Dirk Heidolf')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Points', head_entity='output_of_query3')\"\nStep5: Calculate the difference of output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who had more points takaji mori or junji kawano?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Takaji Mori\nQuery1: \"get_information(relation='Player', tail_entity='Takaji Mori')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Junji Kawano\nQuery3: \"get_information(relation='Player', tail_entity='Junji Kawano')\"\nStep4: Find the points of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the points of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "how many times is executive producer listed as the role in this chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Executive Producer\nQuery1: \"get_information(relation='Role', tail_entity='Executive Producer')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the difference in gross capacity between the ignalina-1 and the chernobyl-6?": "## Target type: {difference in gross capacity}\n## Query:\nStep1: Find the entity named Ignalina-1\nQuery1: \"get_information(relation='Location', tail_entity='Ignalina-1')\"\nStep2: Find the gross capacity of output_of_query1\nQuery2: \"get_information(relation='Gross Capacity (MWe)', head_entity='output_of_query1')\"\nStep3: Find the entity named Chernobyl-6\nQuery3: \"get_information(relation='Location', tail_entity='Chernobyl-6')\"\nStep4: Find the gross capacity of output_of_query3\nQuery4: \"get_information(relation='Gross Capacity (MWe)', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "which unesco goodwill ambassador is most known for the promotion of the chernobyl program?": "## Target type: {Name}\n## Query:\nStep1: Find the entity whose promotion includes the Chernobyl program\nQuery1: \"get_information(relation='Projects and activities they support', tail_entity='Chernobyl program')\"\nStep2: Find the entity that is most known for output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the difference in tonnes between the malabar class and the ut507 class?": "None",
    "which other people are in class c besides rose washington?": "## Target type: {people}\n## Query:\nStep1: Find the entity named Rose Washington\nQuery1: \"get_information(relation='Name', tail_entity='Rose Washington')\"\nStep2: Find the Class of output_of_query1\nQuery2: \"get_information(relation='Class', head_entity='output_of_query1')\"\nStep3: Find the entities with the same Class as output_of_query2\nQuery3: \"get_information(relation='Class', tail_entity='output_of_query2', key='Class', value='C', key_type='object')\"\nStep4: Calculate the set difference between output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "how many games did they play against the chicago cardinals?": "None",
    "how many goals did dejan damjanovic have in the 2011 season?": "None",
    "who won the highest amount of rugby matches between new zealand and wales for the last 100 years?": "## Target type: {winner}\n## Query:\nStep1: Find the entity named New Zealand\nQuery1: \"get_information(relation='Victor', tail_entity='New Zealand')\"\nStep2: Find the entity named Wales\nQuery2: \"get_information(relation='Victor', tail_entity='Wales')\"\nStep3: Find the row_number of the last 100 years\nQuery3: \"get_information(relation='row_number', tail_entity>='1' and tail_entity<='100')\"\nStep4: Find the winner of output_of_query3\nQuery4: \"get_information(relation='Victor', head_entity='output_of_query3')\"",
    "which game had more in attendance, cardiff city or reading?": "## Target type: {game}\n## Query:\nStep1: Find the game with the relation of Attendance where Opponent is Cardiff City\nQuery1: \"get_information(relation='Opponent', tail_entity='Cardiff City')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the game with the relation of Attendance where Opponent is Reading\nQuery3: \"get_information(relation='Opponent', tail_entity='Reading')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Compare the attendance of output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4')\"",
    "which team did not win the match with 75,338 spectators": "## Target type: {'Team #2'}\n## Query:\nStep1: Find the team that did not win the match with 75,338 spectators\nQuery1: \"get_information(relation='Spectators', tail_entity='75,338')\"\nStep2: Find the team #1 of output_of_query1\nQuery2: \"get_information(relation='Team #1', head_entity='output_of_query1')\"\nStep3: Find the team #2 of output_of_query1\nQuery3: \"get_information(relation='Team #2', head_entity='output_of_query1')\"\nStep4: Find the set difference between team #1 and team #2\nQuery4: \"set_difference(set1='output_of_query2', set2='output_of_query3')\"",
    "how many rounds had more than 20,000 spectators in attendance?": "## Target type: {number of rounds}\n## Query:\nStep1: Find the rounds with Attendance more than 20,000\nQuery1: \"get_information(relation='Attendance', tail_entity>'20000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many people attended the harlequins rl vs hull game?": "## Target type: {number of people}\n## Query:\nStep1: Find the game between Harlequins RL and Hull\nQuery1: \"get_information(relation='Home Team', tail_entity='Harlequins RL', head_entity='Hull') OR get_information(relation='Away Team', tail_entity='Hull', head_entity='Harlequins RL')\"\nStep2: Get the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "how many points did new zealand score than wales in the 2012 autumn international match?": "None",
    "what team had the most ch. wins during season 8?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Ch.Wins\nQuery1: \"get_information(relation='Ch.Wins')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Ch.Wins\nQuery3: \"get_information(relation='Ch.Wins', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "what was the next game listed after the world group ii rounds?": "None",
    "what is listed first in the pinyin column?": "## Target type: {string}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Pinyin value of output_of_query3\nQuery4: \"get_information(relation='Pinyin', head_entity='output_of_query3')\"",
    "which locomotive comes next in the list after the shoshone?": "None",
    "what is the genre of the last title on this chart?": "## Target type: {genre}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the genre of output_of_query3\nQuery4: \"get_information(relation='Genre(s)', head_entity='output_of_query3')\"",
    "what is the next product listed after egonet?": "## Target type: {product}\n## Query:\nStep1: Find the entity named Egonet\nQuery1: \"get_information(relation='Product', tail_entity='Egonet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the product of output_of_query4\nQuery5: \"get_information(relation='Product', head_entity='output_of_query4')\"",
    "which team recorded a higher average attendance in the japanese football league in 2001, jatco fc or ykk fc?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Jatco FC\nQuery1: \"get_information(relation='Team', tail_entity='Jatco FC')\"\nStep2: Find the average attendance of output_of_query1\nQuery2: \"get_information(relation='Average', head_entity='output_of_query1')\"\nStep3: Find the entity named YKK FC\nQuery3: \"get_information(relation='Team', tail_entity='YKK FC')\"\nStep4: Find the average attendance of output_of_query3\nQuery4: \"get_information(relation='Average', head_entity='output_of_query3')\"\nStep5: Find the team with higher average attendance\nQuery5: \"if output_of_query2 > output_of_query4 then output_of_query1 else output_of_query3\"",
    "what film was released before \"devakanya?\"": "None",
    "which was released earlier, deigo to hanasu or utabito?": "## Target type: {'Release'}\n## Query:\nStep1: Find the entity named \"Deigo to Hanasu\"\nQuery1: \"get_information(relation='Title', tail_entity='Deigo to Hanasu')\"\nStep2: Find the Release of output_of_query1\nQuery2: \"get_information(relation='Release', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Utabito\"\nQuery3: \"get_information(relation='Title', tail_entity='Utabito')\"\nStep4: Find the Release of output_of_query3\nQuery4: \"get_information(relation='Release', head_entity='output_of_query3')\"\nStep5: Compare the Release dates of output_of_query2 and output_of_query4\nQuery5: \"if output_of_query2 < output_of_query4: output_of_query2 else: output_of_query4\"",
    "which network had the all-time top number of viewers?": "None",
    "comparing 1971 and 1972, which year has the most won matches by osborne?": "None",
    "how many chips have a flash size of at least 3k?": "## Target type: {number of chips}\n## Query:\nStep1: Find the chips with the relation of Flash size\nQuery1: \"get_information(relation='Flash size')\"\nStep2: Find the chips with a Flash size of at least 3k\nQuery2: \"get_information(relation='Flash size', tail_entity>='3k')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which name was after trainer 1?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Trainer 1\nQuery1: \"get_information(relation='Name', tail_entity='Trainer 1')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what name is listed after spider?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Spider\nQuery1: \"get_information(relation='Name', tail_entity='Spider')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many total medals did colombia win?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity named Colombia\nQuery1: \"get_information(relation='Nation', tail_entity='Colombia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the total number of gold medals won by jamaica?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity that is Jamaica\nQuery1: \"get_information(relation='Nation', tail_entity='Jamaica')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "what is the total numbers of medals won by ecuador?": "## Target type: {total numbers of medals}\n## Query:\nStep1: Find the entity named Ecuador\nQuery1: \"get_information(relation='Nation', tail_entity='Ecuador')\"\nStep2: Find the total numbers of medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the number of symbol zn?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Zn\nQuery1: \"get_information(relation='symbol', tail_entity='Zn')\"\nStep2: Find the number of output_of_query1\nQuery2: \"get_information(relation='number', head_entity='output_of_query1')\"",
    "what is the only input/output format for allegrograph?": "## Target type: {input/output format}\n## Query:\nStep1: Find the entity named Allegrograph\nQuery1: \"get_information(relation='Product', tail_entity='Allegrograph')\"\nStep2: Find the input formats of output_of_query1\nQuery2: \"get_information(relation='Input Format', head_entity='output_of_query1')\"\nStep3: Find the output formats of output_of_query1\nQuery3: \"get_information(relation='Output Format', head_entity='output_of_query1')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"",
    "which nations did not win any silver medals?": "## Target type: {nation}\n## Query:\nStep1: Find the entity that has Silver = 0\nQuery1: \"get_information(relation='Silver', tail_entity='0')\"\nStep2: Get the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "which nations won only bronze medals?": "None",
    "what is the total number of names?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of properties on the chart?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Property\nQuery1: \"get_information(relation='Property')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of locomotives made during this time?": "None",
    "watt was one of two swimmers from australia. who was the other?": "None",
    "which swimmer was previous to brazil's contestant?": "## Target type: {swimmer}\n## Query:\nStep1: Find the entity with the nationality of Brazil\nQuery1: \"get_information(relation='Nationality', tail_entity='Brazil')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the swimmer of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "the year the last intermediate ship was built.": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation Type as intermediate\nQuery1: \"get_information(relation='Type', tail_entity='intermediate')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Built year of output_of_query4\nQuery5: \"get_information(relation='Built', head_entity='output_of_query4')\"",
    "what is the number of times the lions have placed 5th or better in the regular season?": "None",
    "what is the total number of catchers whose surname begins with d?": "None",
    "what is the number of the states in the holy roman empire that begin with the letter u?": "None",
    "what is the total number of markers that start with the letter b?": "None",
    "what team has the most winners?": "None",
    "list the top 5 teams within highest total.": "## Target type: {list of teams}\n## Query:\nStep1: Find the top 5 rows based on the total\nQuery1: \"get_information(relation='row_number', tail_entity<='5')\"\nStep2: Get the teams of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "is the metropolitan building or the lumber exchange building taller?": "## Target type: {building}\n## Query:\nStep1: Find the entity named Metropolitan Building\nQuery1: \"get_information(relation='Name', tail_entity='Metropolitan Building')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height ft (m)', head_entity='output_of_query1')\"\nStep3: Find the entity named Lumber Exchange Building\nQuery3: \"get_information(relation='Name', tail_entity='Lumber Exchange Building')\"\nStep4: Find the height of output_of_query3\nQuery4: \"get_information(relation='Height ft (m)', head_entity='output_of_query3')\"\nStep5: Compare the heights of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "who lived longer, van vechten or variacoes?": "## Target type: {'Lifetime'}\n## Query:\nStep1: Find the entity named Van Vechten\nQuery1: \"get_information(relation='Name', tail_entity='Van Vechten')\"\nStep2: Find the Lifetime of output_of_query1\nQuery2: \"get_information(relation='Lifetime', head_entity='output_of_query1')\"\nStep3: Find the entity named Variacoes\nQuery3: \"get_information(relation='Name', tail_entity='Variacoes')\"\nStep4: Find the Lifetime of output_of_query3\nQuery4: \"get_information(relation='Lifetime', head_entity='output_of_query3')\"\nStep5: Find the difference of Lifetime between output_of_query2 and output_of_query4\nQuery5: \"subtract(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the name of the laetare medalist listed before edward preuss?": "None",
    "peter maes and hein vanhaezebrouck are both a part of which division?": "## Target type: {division}\n## Query:\nStep1: Find the entity named Peter Maes\nQuery1: \"get_information(relation='Name', tail_entity='Peter Maes')\"\nStep2: Find the division of output_of_query1\nQuery2: \"get_information(relation='Division', head_entity='output_of_query1')\"\nStep3: Find the entity named Hein Vanhaezebrouck\nQuery3: \"get_information(relation='Name', tail_entity='Hein Vanhaezebrouck')\"\nStep4: Find the division of output_of_query3\nQuery4: \"get_information(relation='Division', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many times has ricky landell held the wsl title?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ricky Landell\nQuery1: \"get_information(relation='Wrestler', tail_entity='Ricky Landell')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named WSL title\nQuery3: \"get_information(relation='Title', tail_entity='WSL title')\"\nStep4: Find the times of output_of_query3\nQuery4: \"get_information(relation='Times', head_entity='output_of_query3')\"",
    "how many wins did confey have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Confey\nQuery1: \"get_information(relation='Team', tail_entity='Confey')\"\nStep2: Find the wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"",
    "how many times was korzeniowski disqualified from a competition?": "None",
    "how many fights did mocho cota win after 1983?": "None",
    "how many times has gran cochisse been a winner?": "None",
    "in what year did atletico artexico finish on top of their division?": "None",
    "which opponent did the comets win more matches against: the delhi wizards or the karnataka lions?": "## Target type: {opponent}\n## Query:\nStep1: Find the opponents named Delhi Wizards\nQuery1: \"get_information(relation='Opposition', tail_entity='Delhi Wizards')\"\nStep2: Find the matches won against output_of_query1\nQuery2: \"get_information(relation='Won', head_entity='output_of_query1')\"\nStep3: Find the opponents named Karnataka Lions\nQuery3: \"get_information(relation='Opposition', tail_entity='Karnataka Lions')\"\nStep4: Find the matches won against output_of_query3\nQuery4: \"get_information(relation='Won', head_entity='output_of_query3')\"\nStep5: Compare the matches won between output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "how many express ships?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Type as \"express\"\nQuery1: \"get_information(relation='Type', tail_entity='express')\"\nStep2: Calculate the count of the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many services other than the heer had members awarded the knight's cross of the iron cross?": "None",
    "what was the total number of marathons in japan that lorraine moller competed in?": "None",
    "what are the total number of times dolph lundgren starred in a title according to this list?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Dolph Lundgren\nQuery1: \"get_information(relation='Notes', tail_entity='Dolph Lundgren')\"\nStep2: Find the total number of times Dolph Lundgren starred in a title\nQuery2: \"count(set='output_of_query1')\"",
    "how many more total goals does leandro de almeida has than zsombor kerekes?": "## Target type: {number of more total goals}\n## Query:\nStep1: Find the entity named Leandro de Almeida\nQuery1: \"get_information(relation='Name', tail_entity='Leandro de Almeida')\"\nStep2: Find the total goals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Zsombor Kerekes\nQuery3: \"get_information(relation='Name', tail_entity='Zsombor Kerekes')\"\nStep4: Find the total goals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "tell me the number of times marcel rocque was lead?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Marcel Rocque\nQuery1: \"get_information(relation='Lead', tail_entity='Marcel Rocque')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country is top ranking?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what country ranks the best in most categories?": "None",
    "who is the top ranked nation?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Rank\nQuery3: \"get_information(relation='Rank', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "between eta zeta and eta alpha, who has been active for the longest?": "## Target type: {chapter}\n## Query:\nStep1: Find the entity named Eta Zeta\nQuery1: \"get_information(relation='Alumni Chapters and Clubs', tail_entity='Eta Zeta')\"\nStep2: Find the entity named Eta Alpha\nQuery2: \"get_information(relation='Alumni Chapters and Clubs', tail_entity='Eta Alpha')\"\nStep3: Find the Years Active of output_of_query1\nQuery3: \"get_information(relation='Years Active', head_entity='output_of_query1')\"\nStep4: Find the Years Active of output_of_query2\nQuery4: \"get_information(relation='Years Active', head_entity='output_of_query2')\"\nStep5: Compare the Years Active of output_of_query3 and output_of_query4, and get the chapter with the longer Years Active\nQuery5: \"if(output_of_query3 > output_of_query4, output_of_query1, output_of_query2)\"",
    "which captain served the least amount of time?": "None",
    "what builder comes before ss&iw?": "## Target type: {builder}\n## Query:\nStep1: Find the entity named SS&IW\nQuery1: \"get_information(relation='Builder', tail_entity='SS&IW')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Builder of output_of_query4\nQuery5: \"get_information(relation='Builder', head_entity='output_of_query4')\"",
    "how many ships were built after ardent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ardent\nQuery1: \"get_information(relation='Name', tail_entity='Ardent')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is larger than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the name of the previous ship built before the caprice in this yard?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Caprice\nQuery1: \"get_information(relation='Name', tail_entity='Caprice')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many episodes did this actress involve herself in three moons over milford?": "None",
    "how many skiers represented norway in the men's 15 kilometre classical?": "## Target type: {number}\n## Query:\nStep1: Find the skiers who represented Norway\nQuery1: \"get_information(relation='Country', tail_entity='Norway')\"\nStep2: Find the men's 15 kilometre classical skiers of output_of_query1\nQuery2: \"get_information(relation='Event', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many innings and matches does richard pyrah have all together?": "## Target type: {'Innings', 'Matches'}\n## Query:\nStep1: Find the entity named Richard Pyrah\nQuery1: \"get_information(relation='Player', tail_entity='Richard Pyrah')\"\nStep2: Find the innings of output_of_query1\nQuery2: \"get_information(relation='Innings', head_entity='output_of_query1')\"\nStep3: Find the matches of output_of_query1\nQuery3: \"get_information(relation='Matches', head_entity='output_of_query1')\"\nStep4: Calculate the total of innings and matches\nQuery4: \"add(value1='output_of_query2', value2='output_of_query3')\"",
    "what is the other year bob won the rex hartley medal beside 1954": "None",
    "the top elevation measured for this station is 2591m": "## Target type: {station}\n## Query:\nStep1: Find the entity with the relation of El. (m)\nQuery1: \"get_information(relation='El. (m)', tail_entity='2591')\"\nStep2: Find the station of output_of_query1\nQuery2: \"get_information(relation='Station', head_entity='output_of_query1')\"",
    "what is the greatest consecutive amount of releases in lp format?": "None",
    "how many total medals did argentina win?": "## Target type: {number of total medals}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='Nation', tail_entity='Argentina')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the number of silver medals awarded to argentina?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Argentina\nQuery1: \"get_information(relation='Nation', tail_entity='Argentina')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "which country has more medals, colombia or venezuela?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Colombia\nQuery1: \"get_information(relation='Nation', tail_entity='Colombia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Venezuela\nQuery3: \"get_information(relation='Nation', tail_entity='Venezuela')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the total medals of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(x='output_of_query2', operator='greater_than', y='output_of_query4')\"\nStep6: Find the country which has more medals\nQuery6: \"if(set='output_of_query5', then='Colombia', else='Venezuela')\"",
    "what is the total amount of usl pdl leagues?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of League as USL PDL League\nQuery1: \"get_information(relation='League', tail_entity='USL PDL League')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many clubs at most don't have leagues?": "None",
    "against which opponent were there the most people in attendance?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity with the max Attendance\nQuery3: \"get_information(relation='Attendance', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponent', head_entity='output_of_query3')\"",
    "what game had the most fans in attendance?": "None",
    "what is the last country listed on this chart?": "## Target type: {country}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Selected Latin American countries of output_of_query3\nQuery4: \"get_information(relation='Selected Latin American countries', head_entity='output_of_query3')\"",
    "for which television show was jeff daniels nominated for both an emmy and golden globe award?": "None",
    "how many titles include \"jeff daniels\" as their episode title?": "None",
    "what was the only tv show this actor was nominated for a daytime emmy award for?": "## Target type: {tv show}\n## Query:\nStep1: Find the entity named Daytime Emmy Award\nQuery1: \"get_information(relation='Award', tail_entity='Daytime Emmy Award')\"\nStep2: Find the tv show that this actor was nominated for output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what is the name of the last album released by natalia lesz?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "in which year was jeff daniels nominated for both the satellite award for best actor in a tv series drama and for a screen actors guild award for outstanding performance by a male actor in a drama series?": "None",
    "what driver finished before tristan gommendy?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Tristan Gommendy\nQuery1: \"get_information(relation='Driver', tail_entity='Tristan Gommendy')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "who finished before nick heidfeld?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Nick Heidfeld\nQuery1: \"get_information(relation='Driver', tail_entity='Nick Heidfeld')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "how many consecutive years did biff jones work at nebraska?": "## Target type: {consecutive years}\n## Query:\nStep1: Find the entity named Biff Jones\nQuery1: \"get_information(relation='Name', tail_entity='Biff Jones')\"\nStep2: Find the Years at Nebraska of output_of_query1\nQuery2: \"get_information(relation='Years at Nebraska', head_entity='output_of_query1')\"\nStep3: Calculate the consecutive years of output_of_query2\nQuery3: \"consecutive_years(set='output_of_query2')\"",
    "how many color commentators jack whitaker had in 1969?": "None",
    "what was the outcome after the october 8 game in phoenix?": "## Target type: {'Outcome'}\n## Query:\nStep1: Find the entity with the relation of Date is October 8 in Phoenix\nQuery1: \"get_information(relation='Date', tail_entity='October 8', key='Venue', value='Phoenix')\"\nStep2: Find the Outcome of output_of_query1\nQuery2: \"get_information(relation='Outcome', head_entity='output_of_query1')\"",
    "the gators won the game on september 25, 2010. who won the previous game?": "None",
    "which building held the record before the current holder?": "None",
    "how many teams had at most an attendance of 1,000?": "None",
    "how many wrestlers have at least 2 number of reigns?": "## Target type: {number of wrestlers}\n## Query:\nStep1: Find the wrestlers with Number of reigns at least 2\nQuery1: \"get_information(relation='No. of reigns', tail_entity>='2')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "keiji had how many number of reigns?": "## Target type: {number of reigns}\n## Query:\nStep1: Find the entity named Keiji\nQuery1: \"get_information(relation='Wrestler', tail_entity='Keiji')\"\nStep2: Find the number of reigns of output_of_query1\nQuery2: \"get_information(relation='No. of reigns', head_entity='output_of_query1')\"",
    "between super dragon, scott lost and paul london - who had the highest number of reigns and defences?": "None",
    "how many submarines were sunk?": "## Target type: {number}\n## Query:\nStep1: Find the entities with  the Fate of 'sunk'\nQuery1: \"get_information(relation='Fate', tail_entity='sunk')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of games played at bronco stadium?": "None",
    "what type of aircraft has the longest listed service record?": "None",
    "nations that had 10 or more medals each": "## Target type: {nation}\n## Query:\nStep1: Find the entities whose Total is greater than or equal to 10\nQuery1: \"get_information(relation='Total', tail_entity>='10')\"\nStep2: Get the entity related to the output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the highest number of goals scored by senijad ibri&#269;i&#263; in a season?": "None",
    "how many international goals did juan g\u00f3mez gonz\u00e1lez score against yugoslavia?": "None",
    "how long did cap anson play?": "None",
    "baranov has played from 2004 to the present. what is his nationality?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity named Baranov\nQuery1: \"get_information(relation='Name', tail_entity='Baranov')\"\nStep2: Find the nationality of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"",
    "how many points did saudi arabia score in 2000?": "None",
    "what was the number of points won by great britain?": "## Target type: {number of points}\n## Query:\nStep1: Find the entity named Great Britain\nQuery1: \"get_information(relation='Team', tail_entity='Great Britain')\"\nStep2: Find the points won by output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"",
    "how many from china placed in top 10?": "None",
    "what was the total number of winners from club ballyhale shamrocks?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Ballyhale Shamrocks\nQuery1: \"get_information(relation='Club', tail_entity='Ballyhale Shamrocks')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players scored during the 1983 ofc championship competition?": "None",
    "what number of names had 0 at the cfu club championship?": "## Target type: {number}\n## Query:\nStep1: Find the entity with relation of CFU Club Championship is 0\nQuery1: \"get_information(relation='CFU Club Championship', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which nation/nations won more medals than chile?": "None",
    "nation to earn the same number of silver medals as uruguay": "None",
    "what is the next whitworth size (in) below 1/8?": "None",
    "the shows with at most 1 cameo": "None",
    "what is the total number of films shoko goto appeared in 2005?": "None",
    "how many films were made by 20th century fox studios?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Studio is 20th Century Fox\nQuery1: \"get_information(relation='Studio', tail_entity='20th Century Fox')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films did shoko goto appear in 2004?": "None",
    "what number of films were made in telugu?": "## Target type: {number}\n## Query:\nStep1: Find the films made in Telugu\nQuery1: \"get_information(relation='Language', tail_entity='Telugu')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the role listed after cameo appearance?": "None",
    "how many films are in telugu?": "## Target type: {number of films}\n## Query:\nStep1: Find the films with the language Telugu\nQuery1: \"get_information(relation='Language', tail_entity='Telugu')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many films has neha appeared in?": "None",
    "which artist came in last place?": "## Target type: {'Artist'}\n## Query:\nStep1: Find the entity with the relation of Place\nQuery1: \"get_information(relation='Place')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Place\nQuery3: \"get_information(relation='Place', tail_entity='output_of_query2')\"\nStep4: Find the Artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "what was the first sailor moon episode to have an english air date in october, 1995?": "None",
    "what was the first ship to be launched in 1929?": "## Target type: {'Ship'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Ship of output_of_query3\nQuery4: \"get_information(relation='Ship', head_entity='output_of_query3')\"",
    "what ship has the most letters in it's name?": "None",
    "what is the most wins?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity with the relation of Won\nQuery1: \"get_information(relation='Won')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max number of wins\nQuery3: \"get_information(relation='Won', tail_entity='output_of_query2')\"",
    "how many total championships does spain have?": "## Target type: {number of championships}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Country', tail_entity='Spain')\"\nStep2: Find the total championships of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "what is the total number of competitions representing barcelona, spain?": "None",
    "which was held in spain, the european championships or european indoor championships?": "None",
    "what is the number of competitions held in cuba?": "None",
    "who is the only champion to reign for more than 10 years?": "None",
    "who is the last wrestler to hold the title?": "## Target type: {'Wrestler'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Wrestler of output_of_query3\nQuery4: \"get_information(relation='Wrestler', head_entity='output_of_query3')\"",
    "what wrestler held the title the longest?": "## Target type: {wrestler}\n## Query:\nStep1: Find the Wrestlers\nQuery1: \"get_information(relation='Wrestlers')\"\nStep2: Find the entity that held the title the longest.\nQuery2: \"get_information(relation='Days\\nheld', tail_entity>='longest')\"\nStep3: Find the wrestler of output_of_query2\nQuery3: \"get_information(relation='Wrestlers', head_entity='output_of_query2')\"",
    "how many gold medals did brazil win before 2000?": "None",
    "how many winners are from brazil?": "## Target type: {number of winners}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Location', tail_entity='Brazil')\"\nStep2: Find the winners from output_of_query1\nQuery2: \"get_information(relation='Winner', tail_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the first riding?": "None",
    "what is the name of the trainer of the first place horse?": "None",
    "what was madhurima's biggest year in terms of number of roles?": "None",
    "tell me a year that did not have anything listed in the \"role\" spot.": "None",
    "in how many games were than more than 80,000 people attending": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Attendance\nQuery1: \"get_information(relation='Attendance')\"\nStep2: Find the output_of_query1 larger than 80,000\nQuery2: \"get_information(relation='Attendance', tail_entity>'80000')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many games were attended by more than 1500 people?": "None",
    "what was the first tamil-language film in 1943?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the fastest time in the competition?": "## Target type: {'Time'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"",
    "which chinese athlete had the fastest time?": "None",
    "which team was faster: germany or russia?": "## Target type: {team}\n## Query:\nStep1: Find the entity that Country is Germany\nQuery1: \"get_information(relation='Country', tail_entity='Germany')\"\nStep2: Find the Total time of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity that Country is Russia\nQuery3: \"get_information(relation='Country', tail_entity='Russia')\"\nStep4: Find the Total time of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Compare the Total time of output_of_query2 and output_of_query4\nQuery5: \"Calculator.compare(output_of_query2, output_of_query4)\"",
    "who was the fastest, iceland or finland?": "## Target type: {'Nationality'}\n## Query:\nStep1: Find the entity with the nationality of Iceland\nQuery1: \"get_information(relation='Nationality', tail_entity='Iceland')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity with the nationality of Finland\nQuery3: \"get_information(relation='Nationality', tail_entity='Finland')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the time of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='>')\"\nStep6: If output_of_query5 is True, the fastest entity is output_of_query1, otherwise output_of_query3.",
    "out of all their times, which one was fastest?": "## Target type: {'Time'}\n## Query:\nStep1: Find all the times\nQuery1: \"get_information(relation='Time')\"\nStep2: Find the fastest time among output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the time with the fastest time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"",
    "what was the title of the episode shown before \"unpaid debts\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the episode \"Unpaid Debts\"\nQuery1: \"get_information(relation='Title', tail_entity='Unpaid Debts')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "in which party did the minister belong that held the longest term in office?": "## Target type: {party}\n## Query:\nStep1: Find the entity that held the longest term in office\nQuery1: \"get_information(relation='row_number', tail_entity='longest')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "the arrow was ordered on november 11, 1971. what was the previous ship?": "None",
    "was the total number of students testing the greatest in 2008 or 2013?": "None",
    "which order was the next order after l33?": "## Target type: {Order}\n## Query:\nStep1: Find the entity that Order is L33\nQuery1: \"get_information(relation='Order', tail_entity='L33')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Order of output_of_query4\nQuery5: \"get_information(relation='Order', head_entity='output_of_query4')\"",
    "what is the total amount on medals awarded?": "None",
    "how many years was 0.01 valied at 6,000?": "None",
    "how many performance indicators are there for standard 3 for grades 3-5?": "None",
    "what year was the only year where the majority was 4?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Majority is 4\nQuery1: \"get_information(relation='Majority', tail_entity='4')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "which political party has the lead in this election, democrat or republican?": "## Target type: {political party}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the percentage of output_of_query3\nQuery4: \"get_information(relation='Andrew Cuomo (D)', head_entity='output_of_query3')\"\nStep5: Find the percentage of Rob Astorino (R)\nQuery5: \"get_information(relation='Rob Astorino (R)', head_entity='output_of_query3')\"\nStep6: Find the political party with the higher percentage\nQuery6: \"if 'output_of_query4'>'output_of_query5' then 'Democrat' else 'Republican'\"",
    "as of october 25, 2005, how many voters are either democratic or republican?": "None",
    "besides lawrence cannon, which other members are under the conservative political party?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Lawrence Cannon\nQuery1: \"get_information(relation='Name', tail_entity='Lawrence Cannon')\"\nStep2: Find the entity named Conservative\nQuery2: \"get_information(relation='Political party', tail_entity='Conservative')\"\nStep3: Get the set difference between output_of_query2 and output_of_query1\nQuery3: \"set_difference(set1='output_of_query2', set2='output_of_query1')\"",
    "which party had a seat in their party taken by sean dunne?": "None",
    "how many days did ultimo gladiador and ultimo vampiro hold the title?": "## Target type: {number of days}\n## Query:\nStep1: Find the entity named Ultimo Gladiador\nQuery1: \"get_information(relation='Wrestlers', tail_entity='Ultimo Gladiador')\"\nStep2: Find the entity named Ultimo Vampiro\nQuery2: \"get_information(relation='Wrestlers', tail_entity='Ultimo Vampiro')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Find the Days held of output_of_query1\nQuery5: \"get_information(relation='Days held', head_entity='output_of_query1')\"\nStep6: Find the Days held of output_of_query2\nQuery6: \"get_information(relation='Days held', head_entity='output_of_query2')\"",
    "against which opponent was there the greatest attendance?": "None",
    "which country built the most ships according to this cart?": "None",
    "in the chart is the am general hmmwv listed before the maxi-ambulance?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named AM General HMMWV\nQuery1: \"get_information(relation='Model', tail_entity='AM General HMMWV')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Maxi-Ambulance\nQuery3: \"get_information(relation='Model', tail_entity='Maxi-Ambulance')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if the output_of_query2 is less than output_of_query4\nQuery5: \"output_of_query2 < output_of_query4\"",
    "which album ranked higher in the us, merry clayton or keep your eye on the sparrow?": "None",
    "does \"change\" rank higher than \"standards\" on the u.s. billboard 200 chart?": "None",
    "what opponent is listed in the top of the table?": "## Target type: {opponent}\n## Query:\nStep1: Find the game on the top of the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "who is pictured on top of the list?": "None",
    "aside from oskar staudinger what was the name of the other captain of the u-boat loast on may 5?": "None",
    "how many known champions have their been for the open?": "None",
    "name one nation that did not earn a bronze medal.": "None",
    "how many games during this period did the phillies not win?": "None",
    "how many games had more than 18,000 people?": "None",
    "how many people lived in predeal in 2011?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Predeal\nQuery1: \"get_information(relation='Name', tail_entity='Predeal')\"\nStep2: Find the population in 2011 of output_of_query1\nQuery2: \"get_information(relation='Population (2011 census)', head_entity='output_of_query1')\"",
    "who scored higher, argo ader for the quickstep or lauri pedaja for the paso doble?": "## Target type: {dancer}\n## Query:\nStep1: Find the entity named Argo Ader\nQuery1: \"get_information(relation='Best dancer(s)', tail_entity='Argo Ader')\"\nStep2: Find the best score of output_of_query1 for the dance Quickstep\nQuery2: \"get_information(relation='Best score', head_entity='output_of_query1')\"\nStep3: Find the entity named Lauri Pedaja\nQuery3: \"get_information(relation='Best dancer(s)', tail_entity='Lauri Pedaja')\"\nStep4: Find the best score of output_of_query3 for the dance Paso Doble\nQuery4: \"get_information(relation='Best score', head_entity='output_of_query3')\"\nStep5: Compare the scores of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "who finished directly after thugwane?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Thugwane\nQuery1: \"get_information(relation='Athlete', tail_entity='Thugwane')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "who has won the league the most?": "## Target type: {team}\n## Query:\nStep1: Find the entity that has won the league the most\nQuery1: \"get_information(relation='Winner', tail_entity>='most')\"\nStep2: Find the Winner of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "how long or what minute in the game was the first goal scored?": "None",
    "of the third division, how many were in section3?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Division is \"Kolmonen (Third Division)\"\nQuery1: \"get_information(relation='Division', tail_entity='Kolmonen (Third Division)')\"\nStep2: Find the entity with the relation of Section is \"Section3\"\nQuery2: \"get_information(relation='Section', tail_entity='Section3')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "list each of the high schools which joined in the year 1976.": "## Target type: {high school}\n## Query:\nStep1: Find the entity that Joined Year is 1976\nQuery1: \"get_information(relation='Join Year', tail_entity='1976')\"\nStep2: Get the high school of output_of_query1\nQuery2: \"get_information(relation='High School', head_entity='output_of_query1')\"",
    "before usc became national champion in 2010, which school was previous chamption?": "None",
    "what is the first fence listed in the chart?": "## Target type: {'Fence'}\n## Query:\nStep1: Find the row_number of the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Fence of output_of_query3\nQuery4: \"get_information(relation='Fence', head_entity='output_of_query3')\"",
    "which plant is listed first?": "## Target type: {plant name}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Plant name of output_of_query3\nQuery4: \"get_information(relation='Plant name', head_entity='output_of_query3')\"",
    "what was the number of finalist?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Finalist\nQuery1: \"get_information(relation='Finalist')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many winners were there before bruno victoria lost?": "## Target type: {number of winners}\n## Query:\nStep1: Find the entity named Bruno Victoria\nQuery1: \"get_information(relation='Loser', tail_entity='Bruno Victoria')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities that have a smaller row_number than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the next launch date after 04/28/91?": "None",
    "which year had more venues, 2007 or 2012?": "## Target type: {year}\n## Query:\nStep1: Find the number of venues in 2007\nQuery1: \"get_information(relation='Year', tail_entity='2007')\"\nStep2: Find the number of venues in 2012\nQuery2: \"get_information(relation='Year', tail_entity='2012')\"\nStep3: Compare the number of venues in output_of_query1 and output_of_query2\nQuery3: \"compare(set1='output_of_query1', set2='output_of_query2')\"",
    "which club had 27 point and a goal difference of +1?": "## Target type: {club}\n## Query:\nStep1: Find the club with Points 27\nQuery1: \"get_information(relation='Points', tail_entity='27')\"\nStep2: Find the club with Goal Difference +1\nQuery2: \"get_information(relation='Goal Difference', tail_entity='+1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "who had the least aggregate wins?": "## Target type: {club}\n## Query:\nStep1: Find all the entities that have the relation of Aggregate\nQuery1: \"get_information(relation='Aggregate')\"\nStep2: Get the wins of output_of_query1\nQuery2: \"get_information(relation='Aggregate', head_entity='output_of_query1')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min Wins\nQuery4: \"get_information(relation='Aggregate', tail_entity='output_of_query3')\"\nStep5: Find the club of output_of_query4\nQuery5: \"get_information(relation='Club', head_entity='output_of_query4')\"",
    "how many senators represent natrona county?": "None",
    "how many senators are from baton rouge?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Baton Rouge\nQuery1: \"get_information(relation='District Office', tail_entity='Baton Rouge')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many females live in cuttack?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Cuttack\nQuery1: \"get_information(relation='District', tail_entity='Cuttack')\"\nStep2: Find the Females in output_of_query1\nQuery2: \"get_information(relation='Females', head_entity='output_of_query1')\"",
    "the complete collection has 96 episodes, but the christmas specials only has how many episodes?": "## Target type: {number of episodes}\n## Query:\nStep1: Find the entity with the relation of DVD Title\nQuery1: \"get_information(relation='DVD Title')\"\nStep2: Find the entity that has 96 episodes\nQuery2: \"get_information(relation='No. of Ep.', tail_entity='96')\"\nStep3: Find the number of episodes of output_of_query2\nQuery3: \"get_information(relation='No. of Ep.', head_entity='output_of_query2')\"\nStep4: Find the entity that has Christmas specials\nQuery4: \"get_information(relation='DVD Title', tail_entity='Christmas specials')\"\nStep5: Find the number of episodes of output_of_query4\nQuery5: \"get_information(relation='No. of Ep.', head_entity='output_of_query4')\"",
    "how many are or were journalists?": "None",
    "how many deputy judges of the permanent court of international justice had their post abolished?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Reason for termination as \"Post abolished\"\nQuery1: \"get_information(relation='Reason for termination', tail_entity='Post abolished')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of deputy judges that were post abolished?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Reason for termination as \"Post abolished\"\nQuery1: \"get_information(relation='Reason for termination', tail_entity='Post abolished')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which competitor from united states had the longest time?": "## Target type: {name}\n## Query:\nStep1: Find the entity with Nationality is United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Find the times of output_of_query1\nQuery2: \"get_information(relation='Time (hand)', head_entity='output_of_query1')\"\nStep3: Find the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with max time\nQuery4: \"get_information(relation='Time (hand)', tail_entity='output_of_query3')\"\nStep5: Find the name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "did diego cuenca or eduardo piccinini perform better?": "None",
    "in puerto villarroel, which language is spoken more, quechua or spanish?": "None",
    "how many consecutive terms did thomas martin hold his seat?": "## Target type: {number of terms}\n## Query:\nStep1: Find the entity named Thomas E. Martin\nQuery1: \"get_information(relation='Winner', tail_entity='Thomas E. Martin')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the consecutive terms by calculating the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who finished earlier, hindoocraft or spokane?": "## Target type: {'Horse'}\n## Query:\nStep1: Find the entity named Hindoocraft\nQuery1: \"get_information(relation='Horse', tail_entity='Hindoocraft')\"\nStep2: Find the entity named Spokane\nQuery2: \"get_information(relation='Horse', tail_entity='Spokane')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_number of output_of_query1 and output_of_query2\nQuery5: \"compare(row_number1='output_of_query3', row_number2='output_of_query4')\"",
    "what wrestler is listed first ?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Wrestlers of output_of_query3\nQuery4: \"get_information(relation='Wrestlers', head_entity='output_of_query3')\"",
    "which wrestler has held the title for the most days?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity that Days held is maximized\nQuery1: \"get_information(relation='Days\\nheld', tail_entity>='max')\"\nStep2: Find the wrestler of output_of_query1\nQuery2: \"get_information(relation='Wrestlers', head_entity='output_of_query1')\"",
    "name the game site with the highest number of attendance.": "None",
    "what role did this actor play after he starred in the movie dadagiri?": "None",
    "which year did he play the role of mac harper and also pat trammell?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Mac Harper\nQuery1: \"get_information(relation='Role', tail_entity='Mac Harper')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named Pat Trammell\nQuery3: \"get_information(relation='Role', tail_entity='Pat Trammell')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what film did malberg star in after his role in love that lives?": "None",
    "what movie did sunil kumar desai star in before marma?": "None",
    "after the salt lake city, which ship was the next to be launched?": "## Target type: {ship}\n## Query:\nStep1: Find the entity named Salt Lake City\nQuery1: \"get_information(relation='Ship', tail_entity='Salt Lake City')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the ship of output_of_query4\nQuery5: \"get_information(relation='Ship', head_entity='output_of_query4')\"",
    "last year not to make the open cup": "None",
    "how many consecutive years did the seattle sounders not qualify for the open cup?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Seattle Sounders\nQuery1: \"get_information(relation='League', tail_entity='Seattle Sounders')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the entity that Open Cup is \"Did not qualify\"\nQuery4: \"get_information(relation='Open Cup', tail_entity='Did not qualify')\"\nStep5: Find the Year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what is the only year that the seattle sounders qualified for the open cup?": "None",
    "what racer finished with the same time as the fastest norwegian skater?": "None",
    "who had a faster time, katharina stiberg or ivana ninkovic?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Katharina Stiberg\nQuery1: \"get_information(relation='Name', tail_entity='Katharina Stiberg')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the entity named Ivana Ninkovic\nQuery3: \"get_information(relation='Name', tail_entity='Ivana Ninkovic')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the time of output_of_query2 and output_of_query4, return the name of the entity with the lower time.\nQuery5: \"calculator(operation='min', operand1='output_of_query2', operand2='output_of_query4')\"",
    "what is the next title listed after sacra propediem?": "## Target type: {'Title (Latin)'}\n## Query:\nStep1: Find the entity named Sacra Propediem\nQuery1: \"get_information(relation='Title (Latin)', tail_entity='Sacra Propediem')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title (Latin) of output_of_query4\nQuery5: \"get_information(relation='Title (Latin)', head_entity='output_of_query4')\"",
    "what is the name of the next player after mark walsh?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Mark Walsh\nQuery1: \"get_information(relation='Player', tail_entity='Mark Walsh')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "who were the top 3 finishers in the 2005 belgian grand prix?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity with relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity='output_of_query1')\"\nStep3: Find the entities whose row_number is less than or equal to 3\nQuery3: \"get_information(relation='row_number', tail_entity<='3')\"\nStep4: Find the Driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "how many consecutive games did spokane play in january?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Visitor or Home is Spokane\nQuery1: \"get_information(relation='Visitor', tail_entity='Spokane')\"\nStep2: Find the entity that Month is January\nQuery2: \"get_information(relation='Month', tail_entity='January')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many games did the senators play in january?": "None",
    "what song reached the highest position on the french charts?": "None",
    "on what date did the home team score zero points against their opponent?": "## Target type: {date}\n## Query:\nStep1: Find the entity where the Home team scored zero points against their opponent\nQuery1: \"get_information(relation='Score', tail_entity='0-0')\"\nStep2: Get the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "what two episodes was adam the highest seller?": "None",
    "what was the only episode without a highest seller?": "None",
    "of all the countries that have them, which country has the least champions": "None",
    "which month had an average high of 89.0 degrees and an average low of 56.0 degrees?": "None",
    "which month had an average high of 21.8 degrees and a record low of -1.1?": "None",
    "how many times has natalia lesz made the usa billboard hot dance club play list?": "None",
    "after 18.9 what network had the next highest number of viewers over all?": "None",
    "when was a boat launched immediately before ha-206?": "None",
    "who has presented the most seasons?": "## Target type: {main presenter}\n## Query:\nStep1: Find the entity that is the Main Presenter\nQuery1: \"get_information(relation='Main Presenter')\"\nStep2: Find the main presenter who appeared the most times\nQuery2: \"get_information(relation='Main Presenter', tail_entity>='most')\"",
    "how many points did arnaud demare receive?": "## Target type: {points}\n## Query:\nStep1: Find the entity named Arnaud Demare\nQuery1: \"get_information(relation='Cyclist', tail_entity='Arnaud Demare')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='UCI World Tour Points', head_entity='output_of_query1')\"",
    "what is the first name ranked?": "## Target type: {first name}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the first name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which party has won the most?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Winning Party\nQuery1: \"get_information(relation='Winning Party')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"get_information(relation='Winning Party', tail_entity>='most')\"",
    "which party won the most number of time?": "None",
    "how many total clubs are listed?": "None",
    "what is the name of the first club on this chart?": "## Target type: {'Club'}\n## Query:\nStep1: Find the club with row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Club of output_of_query1\nQuery2: \"get_information(relation='Club', head_entity='output_of_query1')\"",
    "what is next after ardelinda?": "## Target type: {character}\n## Query:\nStep1: Find the entity named Ardelinda\nQuery1: \"get_information(relation='Title', tail_entity='Ardelinda')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what track was next after \"all i got\"?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named \"All I Got\"\nQuery1: \"get_information(relation='Title', tail_entity='All I Got')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what challenge came next after \"jungle falls\"?": "## Target type: {challenge}\n## Query:\nStep1: Find the entity named \"Jungle Falls\"\nQuery1: \"get_information(relation='Name of Trial', tail_entity='Jungle Falls')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the challenge of output_of_query4\nQuery5: \"get_information(relation='Name of Trial', head_entity='output_of_query4')\"",
    "which materials have a refractive index above 2.6?": "None",
    "what is the radio with the least about of mhz?": "None",
    "what is the last show listed?": "## Target type: {'Show'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Show of output_of_query3\nQuery4: \"get_information(relation='Show', head_entity='output_of_query3')\"",
    "which team finished last in the 1998 marlboro grand prix of miami?": "None",
    "what is the difference in percentage between whites in the 2000 population and whites in the 2005 population?": "None",
    "how many clubs have more than -10pts?": "None",
    "which rider came in first with 25 points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity with 25 points\nQuery1: \"get_information(relation='Points', tail_entity='25')\"\nStep2: Find the Pos of the output_of_query1\nQuery2: \"get_information(relation='Pos', head_entity='output_of_query1')\"\nStep3: Find the entity with Pos of output_of_query2\nQuery3: \"get_information(relation='Pos', tail_entity='output_of_query2')\"\nStep4: Find the Rider of output_of_query3\nQuery4: \"get_information(relation='Rider', head_entity='output_of_query3')\"",
    "what team did the phillies play after august 7?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the entity with the relation of Date and value greater than August 7\nQuery1: \"get_information(relation='Date', tail_entity>'August 7')\"\nStep2: Find the Opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "how many different opponents were played after august 4?": "None",
    "who played brazil previous to the game on june 30th?": "## Target type: {opposition}\n## Query:\nStep1: Find the entity named \"Brazil\"\nQuery1: \"get_information(relation='Opposition', tail_entity='Brazil')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opposition of output_of_query4\nQuery5: \"get_information(relation='Opposition', head_entity='output_of_query4')\"",
    "how many games did the 1987 chicago cubs play in august?": "None",
    "number of games in which the starzz scored at most 59 points": "None",
    "what is the number of high rebounds kenyon martin scored in april of this season?": "None",
    "what was the difference between the two teams' scores in the 2006 ohio state vs. army game?": "None",
    "against which opponent did scotland have no scorers?": "None",
    "how many times did kansas state not score at all against kansas from 1902-1968?": "None",
    "when did bruno victoria lose his first game?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity with the relation of Loser being Bruno Victoria\nQuery1: \"get_information(relation='Loser', tail_entity='Bruno Victoria')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with row_number smaller or equal to output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<='output_of_query2')\"\nStep4: Get the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "on which date was the match with the smallest number of rounds?": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Round\nQuery1: \"get_information(relation='Round')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Rounds\nQuery3: \"get_information(relation='Round', tail_entity='output_of_query2')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "only opponent to defeat mocho cota in 1994": "None",
    "which michael w smith album had the highest ranking on the us chart?": "None",
    "what was the only team to place 5th called?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of Position in table is 5th\nQuery1: \"get_information(relation='Position in table', tail_entity='5th')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what team placed next after sweden?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Sweden\nQuery1: \"get_information(relation='Team', tail_entity='Sweden')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "who scored better in the 1995 fifa world cup denmark or the united states?": "None",
    "which track is longer, \"money\" or \"die 4\"?": "## Target type: {track}\n## Query:\nStep1: Find the entity named Money\nQuery1: \"get_information(relation='Title', tail_entity='Money')\"\nStep2: Find the Length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity named Die 4\nQuery3: \"get_information(relation='Title', tail_entity='Die 4')\"\nStep4: Find the Length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Find the longer track between output_of_query2 and output_of_query4\nQuery5: \"if(set1='output_of_query2', set2='output_of_query4')\"",
    "how many stamp sets were released in the year 1975?": "None",
    "what are the airdates for episode 1 and 2?": "None",
    "what number of bronze medals did iran receive?": "## Target type: {number of bronze medals}\n## Query:\nStep1: Find the entity named Iran\nQuery1: \"get_information(relation='Nation', tail_entity='Iran')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the number of bronze medals of output_of_query1\nQuery3: \"get_information(relation='Bronze', head_entity='output_of_query1')\"",
    "what was the number of silver medals won by pakistan?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Pakistan\nQuery1: \"get_information(relation='Nation', tail_entity='Pakistan')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "what was the number of silver medals won by ukraine?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Ukraine\nQuery1: \"get_information(relation='Nation', tail_entity='Ukraine')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "who had the greater score in 2012, stanford or usc?": "## Target type: {score}\n## Query:\nStep1: Find the entity that has the relation of Year as 2012\nQuery1: \"get_information(relation='Year', tail_entity='2012')\"\nStep2: Find the score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity named Stanford\nQuery3: \"get_information(relation='Runner-Up', tail_entity='Stanford')\"\nStep4: Find the score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Find the entity named USC\nQuery5: \"get_information(relation='Host or site', tail_entity='USC')\"\nStep6: Find the score of output_of_query5\nQuery6: \"get_information(relation='Score', head_entity='output_of_query5')\"\nStep7: Compare output_of_query2 and output_of_query4, check if output_of_query2 is greater\nQuery7: \"compare(output_of_query2, output_of_query4)\"\nStep8: Compare output_of_query2 and output_of_query6, check if output_of_query2 is greater\nQuery8:",
    "how many times has 'stayin' alive' been recognized as one of the rolling stone's \"500 greatest songs of all time\"?": "None",
    "how many songs had the word \"love\" in the title?": "None",
    "what was the game next after birmingham city on november 6th?": "None",
    "what is the date of the game after december 22?": "## Target type: {date}\n## Query:\nStep1: Find the entity that Date is December 22\nQuery1: \"get_information(relation='Date', tail_entity='December 22')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', head_entity='output_of_query4')\"",
    "how many riders used a motorcycle manufactured by honda?": "## Target type: {number}\n## Query:\nStep1: Find all the manufacturers\nQuery1: \"get_information(relation='Manufacturer')\"\nStep2: Find the entity that Manufacturer is Honda\nQuery2: \"get_information(relation='Manufacturer', tail_entity='Honda')\"\nStep3: Find the riders whose motorcycle is output_of_query2\nQuery3: \"get_information(relation='Rider', head_entity='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times was the conference not held in the us?": "None",
    "name the episode that ha the same average as number 5.": "None",
    "which of the 9 episodes in series 1 of mongrels had the most celebrity guests?": "None",
    "which broadcaster hosted 3 titles but they had only 1 episode?": "None",
    "group a or group b in 2013-2014 uefa europa leauge": "None",
    "how many countries earned at lest one bronze medal?": "None",
    "is dean winstanley listed above or below kyle anderson?": "## Target type: {'above' or 'below'}\n## Query:\nStep1: Find the entity named Kyle Anderson\nQuery1: \"get_information(relation='Player', tail_entity='Kyle Anderson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Dean Winstanley\nQuery3: \"get_information(relation='Player', tail_entity='Dean Winstanley')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query4 and output_of_query2\nQuery5: \"compare('output_of_query4', 'output_of_query2')\"",
    "how many countries scored no gold medals at this event?": "## Target type: {number}\n## Query:\nStep1: Find the countries with no gold medals\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long of a period of time came between the last two games?": "None",
    "the final race finishing place was not 1st but what other place?": "None",
    "how many seats does the independent party hold?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity named Independent\nQuery1: \"get_information(relation='Party', tail_entity='Independent')\"\nStep2: Find the seats of output_of_query1\nQuery2: \"get_information(relation='Seats', head_entity='output_of_query1')\"",
    "how many seats did the independent party get?": "## Target type: {number of seats}\n## Query:\nStep1: Find the entity with the Party 'Independent'\nQuery1: \"get_information(relation='Party', tail_entity='Independent')\"\nStep2: Get the Seats of output_of_query1\nQuery2: \"get_information(relation='Seats', head_entity='output_of_query1')\"",
    "what is the total number of candidates?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of democrats on this list?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Party and value of Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many candidates were elected in 1990?": "## Target type: {number of candidates}\n## Query:\nStep1: Find the entity with the relation of Year of election is 1990\nQuery1: \"get_information(relation='Year of election', tail_entity='1990')\"\nStep2: Find the candidates elected in output_of_query1\nQuery2: \"get_information(relation='Candidates elected', head_entity='output_of_query1')\"",
    "how many independent candidates were on the ballot for alderman in 1919?": "None",
    "which beetle had the largest amount released?": "None",
    "poland and south africa combined for how many total medals?": "None",
    "what was this team's next opponent after facing hawthorn on may 22 of this season?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity named Hawthorn\nQuery1: \"get_information(relation='Opponent', tail_entity='Hawthorn')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "what is the number of games that depaul won during this season?": "None",
    "how many rebounds were there by all miami heat players?": "## Target type: {number of rebounds}\n## Query:\nStep1: Find the entity that Team is Miami Heat\nQuery1: \"get_information(relation='Team', tail_entity='Miami Heat')\"\nStep2: Find the rebounds of output_of_query1\nQuery2: \"get_information(relation='Rebounds', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many players tied for last place with a total of 30 rebounds?": "## Target type: {'number of players'}\n## Query:\nStep1: Find the entity with the relation of Rebounds = 30\nQuery1: \"get_information(relation='Rebounds', tail_entity='30')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total points did the south florida bulls score in 2002, 2003, and 2009?": "None",
    "which game at most has the most high rebounds?": "## Target type: {'Game'}\n## Query:\nStep1: Find the entity with the relation of High rebounds\nQuery1: \"get_information(relation='High rebounds')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max high rebounds\nQuery3: \"get_information(relation='High rebounds', tail_entity='output_of_query2')\"\nStep4: Find the game of output_of_query3\nQuery4: \"get_information(relation='Game', head_entity='output_of_query3')\"",
    "what is the total number of cultivars listed on the table?": "## Target type: {number of cultivars}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of competitions": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "when was the first game that kansas state won by double digits?": "None",
    "how many states were listed as democratic?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Party as Democratic\nQuery1: \"get_information(relation='Party', tail_entity='Democratic')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "total number of states with elections in 2002.": "## Target type: {number of states}\n## Query:\nStep1: Find the entity named 2002\nQuery1: \"get_information(relation='Year of Election', tail_entity='2002')\"\nStep2: Find the states of output_of_query1\nQuery2: \"get_information(relation='State', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the total amount of competitions participated in?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total amount of ties in this competition?": "None",
    "what is the total number of opponents?": "## Target type: {number of opponents}\n## Query:\nStep1: Find the unique opponents\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what album did the toadies' song mister love appear?": "None",
    "which songs are produced by pillo jamel or juju.": "## Target type: {song}\n## Query:\nStep1: Find the entity with the relation of Producer(s) as Pillo Jamel\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Pillo Jamel')\"\nStep2: Find the entity with the relation of Producer(s) as Juju\nQuery2: \"get_information(relation='Producer(s)', tail_entity='Juju')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the songs of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which team ranked after germany while qualifying?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Germany\nQuery1: \"get_information(relation='Team', tail_entity='Germany')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "which country was the round above germany?": "None",
    "which country is before rank 20": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Rank\nQuery1: \"get_information(relation='Rank')\"\nStep2: Find the entity ranked 20\nQuery2: \"get_information(relation='Rank', tail_entity='20')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_number is output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Find the country of output_of_query5\nQuery6: \"get_information(relation='Country/Territory', head_entity='output_of_query5')\"",
    "which nation was not in the top 10 iran or germany?": "None",
    "in which country did thierry tulasne win 2 consecutive titles in 1985": "None",
    "when did steve corino win his first wsl title?": "None",
    "what was the only season where kevin martin was the skip?": "None",
    "which tournament has the same score outcome as the bergamo tournament?": "None",
    "the biggest worldwide opening since 2002 is held by what movie?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity with the relation of Opening Weekend (three day)\nQuery1: \"get_information(relation='Opening Weekend (three day)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Opening Weekend\nQuery3: \"get_information(relation='Opening Weekend (three day)', tail_entity='output_of_query2')\"\nStep4: Find the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "how many songs are not performed by vitas on the album smile! ?": "None",
    "which album was released later, beautiful, or j'adore?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Beautiful\nQuery1: \"get_information(relation='English Title', tail_entity='Beautiful')\"\nStep2: Find the release date of output_of_query1\nQuery2: \"get_information(relation='Release date', head_entity='output_of_query1')\"\nStep3: Find the entity named J'adore\nQuery3: \"get_information(relation='English Title', tail_entity='J'adore')\"\nStep4: Find the release date of output_of_query3\nQuery4: \"get_information(relation='Release date', head_entity='output_of_query3')\"\nStep5: Compare the release dates of output_of_query2 and output_of_query4\nQuery5: \"compare_dates(date1='output_of_query2', date2='output_of_query4')\"",
    "how many songs were released featuring the notorious b.i.g in 1997?": "None",
    "which album came after hammer and tongs for this group?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Hammer and Tongs\nQuery1: \"get_information(relation='Album', tail_entity='Hammer and Tongs')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "\"the sagas of...\" contains this number of songs?": "None",
    "what was the race time in 2004?": "## Target type: {'Race Time'}\n## Query:\nStep1: Find the entity with the relation Year and value 2004\nQuery1: \"get_information(relation='Year', value='2004')\"\nStep2: Find the Race Time of output_of_query1\nQuery2: \"get_information(relation='Race Time', head_entity='output_of_query1')\"",
    "in which race did nathan brown receive his victory during 2013?": "## Target type: {Race Name}\n## Query:\nStep1: Find the entity named Nathan Brown\nQuery1: \"get_information(relation='Winner', tail_entity='Nathan Brown')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Race Name of output_of_query3\nQuery4: \"get_information(relation='Race Name', head_entity='output_of_query3')\"",
    "colombia has the highest graduate enrollment at 15,760. what school has the next highest?": "None",
    "how many summer olympics has yelena slesarenko participated in?": "None",
    "what are the number of times taito is listed as the manufacturer?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Taito with the relation Manufacturer\nQuery1: \"get_information(relation='Manufacturer', tail_entity='Taito')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which country won the second-highest number of silver medals?": "None",
    "how many states were represented in the seats?": "None",
    "who has won more medals? shaun white or kelly clark?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity named Shaun White\nQuery1: \"get_information(relation='Athlete', tail_entity='Shaun White')\"\nStep2: Find the medals count of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Kelly Clark\nQuery3: \"get_information(relation='Athlete', tail_entity='Kelly Clark')\"\nStep4: Find the medals count of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Get the comparison of medals count between output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4')\"",
    "who has won more championships, serena williams or lisa raymond?": "None",
    "who has more silver medals: karine ruby or shaun white?": "## Target type: {athlete}\n## Query:\nStep1: Find the athlete named Karine Ruby\nQuery1: \"get_information(relation='Athlete', tail_entity='Karine Ruby')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the athlete named Shaun White\nQuery3: \"get_information(relation='Athlete', tail_entity='Shaun White')\"\nStep4: Find the silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Compare the silver medals of output_of_query2 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query2', set2='output_of_query4', comparison_operator='greater')\"",
    "what is the only song q-tip performs?": "None",
    "is \"dem boyz\" or \"felonies\" have the featured guest p. diddy?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named \"Dem Boyz\"\nQuery1: \"get_information(relation='Title', tail_entity='Dem Boyz')\"\nStep2: Find the Featured guest(s) of output_of_query1\nQuery2: \"get_information(relation='Featured guest(s)', head_entity='output_of_query1')\"\nStep3: Find the entity named \"Felonies\"\nQuery3: \"get_information(relation='Title', tail_entity='Felonies')\"\nStep4: Find the Featured guest(s) of output_of_query3\nQuery4: \"get_information(relation='Featured guest(s)', head_entity='output_of_query3')\"\nStep5: Check if \"P. Diddy\" is in output_of_query2 or output_of_query4\nQuery5: \"P. Diddy in (output_of_query2, output_of_query4)\"",
    "sir john a. macdonald and pierre trudeau both held what job in canada?": "None",
    "john \"snooks\" kelly and jerry york occupied which position at boston college?": "None",
    "jarno trulli was not french but what nationality?": "None",
    "who was john nielsen co-driver for team lister in 2004?": "None",
    "at most 8 were scored on what date": "## Target type: {date}\n## Query:\nStep1: Find the entity with the relation of Score\nQuery1: \"get_information(relation='Score')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max Score\nQuery3: \"get_information(relation='Score', tail_entity='output_of_query2')\"\nStep4: Get the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which was the only team in the atlantic division in the 1993-1994 season to acquire less points than the philadelphia flyers?": "None",
    "what was the number of wins the philadelphia flyers had?": "None",
    "what were the total number of goals scored by the 1973-74 nhl west champion philadelphia flyers?": "None",
    "give the number of attendance for the philadelphia flyers in the 1973-74 year?": "## Target type: {attendance}\n## Query:\nStep1: Find the entity named Philadelphia Flyers\nQuery1: \"get_information(relation='Home', tail_entity='Philadelphia Flyers')\"\nStep2: Find the record of output_of_query1\nQuery2: \"get_information(relation='Record', head_entity='output_of_query1')\"\nStep3: Find the year 1973-74 in output_of_query2\nQuery3: \"get_information(relation='Record', tail_entity='output_of_query2')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"",
    "which team was the philadelphia soul's next opponent after playing the chicago rush?": "None",
    "in the 1975 stanley cup playoffs, which team scored the most in a single series against the buffalo sabres?": "None",
    "how many players were inducted as players of the philadelphia phillies?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Philadelphia Phillies\nQuery1: \"get_information(relation='Team Inducted As', tail_entity='Philadelphia Phillies')\"\nStep2: Count the number of players in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "from which nationality did the islanders draft the most players?": "## Target type: {nationality}\n## Query:\nStep1: Find the entity with relation of Nationality\nQuery1: \"get_information(relation='Nationality')\"\nStep2: Find the nationality that appears the most in the output_of_query1\nQuery2: \"get_information(relation='Nationality', tail_entity>='most')\"\nStep3: Find the players drafted by Islanders with the nationality of output_of_query2\nQuery3: \"get_information(relation='Nationality', head_entity='output_of_query2')\"",
    "were there more tier fours than tier fives?": "## Target type: {boolean}\n## Query:\nStep1: Find the entities with the relation of Tier and value of '4'\nQuery1: \"get_information(relation='Tier', tail_entity='4')\"\nStep2: Find the entities with the relation of Tier and value of '5'\nQuery2: \"get_information(relation='Tier', tail_entity='5')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the counts of output_of_query3 and output_of_query4\nQuery5: \"output_of_query3 > output_of_query4\"",
    "how many kants have coordinates over 10.0 degrees south and over 18.0 degrees east?": "None",
    "which track was longer in length,\"turn me up\" or \"make me feel\"?": "## Target type: {track}\n## Query:\nStep1: Find the track named \"Turn Me Up\"\nQuery1: \"get_information(relation='Title', tail_entity='Turn Me Up')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the track named \"Make Me Feel\"\nQuery3: \"get_information(relation='Title', tail_entity='Make Me Feel')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Compare the length of output_of_query2 and output_of_query4\nQuery5: \"if length(output_of_query2) > length(output_of_query4) then output_of_query2 else output_of_query4\"",
    "how many tournaments began before aug 15th": "None",
    "how many tournaments were attended by the same number of people as uel on the 19th of august?": "None",
    "which school has participated the longest number of years?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Years participated\nQuery1: \"get_information(relation='Years participated')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Years participated\nQuery3: \"get_information(relation='Years participated', tail_entity='output_of_query2')\"\nStep4: Find the school of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many schools have had at least 3 share titles?": "## Target type: {number of schools}\n## Query:\nStep1: Find the schools with at least 3 shared titles\nQuery1: \"get_information(relation='Shared Titles', tail_entity>='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which artist is listed next after charles grafly?": "## Target type: {artist}\n## Query:\nStep1: Find the entity named Charles Grafly\nQuery1: \"get_information(relation='Artist', tail_entity='Charles Grafly')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Artist of output_of_query4\nQuery5: \"get_information(relation='Artist', head_entity='output_of_query4')\"",
    "what player is next on the list after erika lawler?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Erika Lawler\nQuery1: \"get_information(relation='Name', tail_entity='Erika Lawler')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which player is listed next after jan ingman?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Jan Ingman\nQuery1: \"get_information(relation='Player', tail_entity='Jan Ingman')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "paul wellens won stage 13. who won the next stage?": "None",
    "who came in last place in the race, alex barron or gil de ferran?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Alex Barron\nQuery1: \"get_information(relation='Driver', tail_entity='Alex Barron')\"\nStep2: Find the entity named Gil de Ferran\nQuery2: \"get_information(relation='Driver', tail_entity='Gil de Ferran')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Compare the row_numbers of output_of_query3 and output_of_query4\nQuery5: \"if(row_number(output_of_query3) > row_number(output_of_query4), output_of_query3, output_of_query4)\"",
    "what team won the maggie dixon classic after losing it the year before?": "None",
    "which driver had the least number of laps?": "## Target type: {driver}\n## Query:\nStep1: Find the entity with the relation of Laps\nQuery1: \"get_information(relation='Laps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Laps\nQuery3: \"get_information(relation='Laps', tail_entity='output_of_query2')\"\nStep4: Find the driver of output_of_query3\nQuery4: \"get_information(relation='Driver', head_entity='output_of_query3')\"",
    "which album was the least acclaimed but did reach the billboard 200?": "None",
    "canada finished in 1:45.53. tell me the country in the previous slot.": "None",
    "who finished after will power?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Will Power\nQuery1: \"get_information(relation='Driver', tail_entity='Will Power')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "what country finished after the netherlands?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Netherlands\nQuery1: \"get_information(relation='Country', tail_entity='Netherlands')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "only one driver was retired due to a fire, who was that driver?": "## Target type: {driver}\n## Query:\nStep1: Find the driver whose Time/Retired contains the word \"fire\"\nQuery1: \"get_information(relation='Time/Retired', tail_entity='fire')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "how many times did yusuf win?": "None",
    "how many times did scribe win?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Scribe\nQuery1: \"get_information(relation='Winner', tail_entity='Scribe')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times did philip singoei win?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Philip Singoei\nQuery1: \"get_information(relation='Men's winner', tail_entity='Philip Singoei')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had more votes in marin county, feinstein or seymour?": "## Target type: {'feinstein', 'seymour'}\n## Query:\nStep1: Find the entity that is Marin County\nQuery1: \"get_information(relation='County', tail_entity='Marin county')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity named Feinstein\nQuery3: \"get_information(relation='Feinstein', tail_entity='output_of_query2')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Find the entity named Seymour\nQuery5: \"get_information(relation='Seymour', tail_entity='output_of_query2')\"\nStep6: Find the votes of output_of_query5\nQuery6: \"get_information(relation='Votes', head_entity='output_of_query5')\"\nStep7: Check which one has more votes between output_of_query4 and output_of_query6\nQuery7: \"if output_of_query4 > output_of_query6: return 'feinstein' else: return 'seymour'\"",
    "which competitor received the saem score as sandra haynie?": "None",
    "how many in favor votes did rutgers eagleton give in march 2014?": "## Target type: {number of in favor votes}\n## Query:\nStep1: Find the row_number for the month of March 2014\nQuery1: \"get_information(relation='Month', tail_entity='March 2014')\"\nStep2: Find the in favor votes for output_of_query1\nQuery2: \"get_information(relation='Favor', head_entity='output_of_query1')\"",
    "how many more challenges were there in 2014-2015 than in 2006-2007?": "None",
    "what was the first public middle school established in hawaii?": "None",
    "which yacht launched first: cougar ii or aurora?": "## Target type: {yacht}\n## Query:\nStep1: Find the entity named Cougar II\nQuery1: \"get_information(relation='Yacht', tail_entity='Cougar II')\"\nStep2: Find the launch year of output_of_query1\nQuery2: \"get_information(relation='Launch year', head_entity='output_of_query1')\"\nStep3: Find the entity named Aurora\nQuery3: \"get_information(relation='Yacht', tail_entity='Aurora')\"\nStep4: Find the launch year of output_of_query3\nQuery4: \"get_information(relation='Launch year', head_entity='output_of_query3')\"\nStep5: Compare the launch year of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 < output_of_query4)\"\nStep6: If the condition in output_of_query5 is true, return the output_of_query2, otherwise return the output_of_query4.",
    "what was the last public middle school founded in hawaii?": "## Target type: {'School Name'}\n## Query:\nStep1: Find the entities with the relation of Establishment\nQuery1: \"get_information(relation='Establishment')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Establishment\nQuery3: \"get_information(relation='Establishment', tail_entity='output_of_query2')\"\nStep4: Get the School Name of output_of_query3\nQuery4: \"get_information(relation='School Name', head_entity='output_of_query3')\"",
    "how many consecutive australian open's did esna boyd robertson win?": "None",
    "what is the total amount of american players that have won the western open since 2007?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Country is America\nQuery1: \"get_information(relation='Country', tail_entity='America')\"\nStep2: Find the entity with the relation of Year is greater than 2007\nQuery2: \"get_information(relation='Year', tail_entity>'2007')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many more medals did india earn compared to pakistan?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is India\nQuery1: \"get_information(relation='Nation', tail_entity='India')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity that is Pakistan\nQuery3: \"get_information(relation='Nation', tail_entity='Pakistan')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the total number of medals that india won in the asian youth games?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named India\nQuery1: \"get_information(relation='Nation', tail_entity='India')\"\nStep2: Find the total number of medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "in what sport did india win the most silver medals?": "None",
    "which nation has more gold medals, kuwait or india?": "None",
    "how many schools have more than one title?": "## Target type: {number of schools}\n## Query:\nStep1: Find the entities with the relation of Titles that have a value greater than 1\nQuery1: \"get_information(relation='Titles', tail_entity>'1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many schools are only charter?": "None",
    "what is the total number of title?": "## Target type: {number of titles}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total number of positions in the 125cc classification?": "## Target type: {number of positions}\n## Query:\nStep1: Find the entity with the relation of Pos\nQuery1: \"get_information(relation='Pos')\"\nStep2: Get the set of output_of_query1 that is not empty\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the number of countries listed in the table": "## Target type: {number of countries}\n## Query:\nStep1: Find all the nations in the table\nQuery1: \"get_information(relation='Nation')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many songs were produced by chaos?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity named Chaos\nQuery1: \"get_information(relation='Producer(s)', tail_entity='Chaos')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which county is featured the most on the chart?": "## Target type: {county}\n## Query:\nStep1: Find the entities in County\nQuery1: \"get_information(relation='County')\"\nStep2: Get the count of each entity in output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity that appears the most\nQuery3: \"get_information(relation='County', tail_entity>='most')\"",
    "which school has the largest enrollment?": "## Target type: {school}\n## Query:\nStep1: Find the enrollment of each school\nQuery1: \"get_information(relation='Enrollment (2010-11 & 2011\u201312)')\"\nStep2: Find the max enrollment\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the school with the max enrollment\nQuery3: \"get_information(relation='Enrollment (2010-11 & 2011\u201312)', tail_entity='output_of_query2')\"\nStep4: Get the school name of output_of_query3\nQuery4: \"get_information(relation='School', head_entity='output_of_query3')\"",
    "how many attacks were of the same type as that which occurred on december 13, 1985?": "None",
    "how many teams played on february 14th, 1976?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity with the relation of Date is 14 February 1976\nQuery1: \"get_information(relation='Date', tail_entity='14 February 1976')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name the two kingdoms whose monarchs have the longest and second longest reign.": "None",
    "which monarchs reined for more than 50 years?": "None",
    "which rider names canada as his/her hometown?": "None",
    "what were the number of medals iran earned?": "## Target type: {'Total'}\n## Query:\nStep1: Find the entity that is Iran\nQuery1: \"get_information(relation='Nation', tail_entity='Iran')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "number of gold medals earned by kazakhstan, uzbekistan, and thailand": "None",
    "what is the difference between the total amount of medals won by qatar and indonesia?": "None",
    "how many more gold medals has nepal won than pakistan?": "None",
    "what was the next album after swing 48?": "## Target type: {album}\n## Query:\nStep1: Find the entity that is Swing 48\nQuery1: \"get_information(relation='Title', tail_entity='Swing 48')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what was her peak ranking in the us for the single \"it wasn't god who made honky tonk angles\"?": "None",
    "which song came next to \"ain't no sunshine?\"": "## Target type: {Title}\n## Query:\nStep1: Find the song titled \"Ain't No Sunshine\"\nQuery1: \"get_information(relation='Title', tail_entity='Ain't No Sunshine')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what is the name of the first song title on this chart?": "## Target type: {'Song title'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Song title of output_of_query3\nQuery4: \"get_information(relation='Song title', head_entity='output_of_query3')\"",
    "what is the name of the first song listed on this chart?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of row_number as 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the Song of output_of_query1\nQuery2: \"get_information(relation='Song', head_entity='output_of_query1')\"",
    "which country won first place (gold medal)?": "None",
    "which nation ranked first in gold medals?": "None",
    "what are the number of times an artist earned first place?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Place is '1st'\nQuery1: \"get_information(relation='Place', tail_entity='1st')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many different men held the wsl title before horshu won his first wsl title?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Horshu\nQuery1: \"get_information(relation='Wrestler', tail_entity='Horshu')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_numbers that are smaller than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Count the distinct row_numbers from output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who was the driver for the t-bird that finished first?": "None",
    "which candidate for alderman in 1919 had the longest last name?": "None",
    "what is the difference in attendance between the first two games in september?": "None",
    "who placed first in the 2008 canadian grand prix?": "## Target type: {driver}\n## Query:\nStep1: Find the entity where row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the driver of output_of_query1\nQuery2: \"get_information(relation='Driver', head_entity='output_of_query1')\"",
    "which skier earned first place on 15 march 2006 in the 2006 alpine skiing world cup?": "## Target type: {skier}\n## Query:\nStep1: Find the entity that Date is 15 March 2006\nQuery1: \"get_information(relation='Date', tail_entity='15 March 2006')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Winner of output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"",
    "what is the number of tournaments in which jim mcmanus was the partner?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jim McManus\nQuery1: \"get_information(relation='Partner', tail_entity='Jim McManus')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what other partner did he have besides john newcombe?": "None",
    "what is the total of games where the opponent scored no points?": "## Target type: {number of games}\n## Query:\nStep1: Find the games where the opponent scored no points\nQuery1:  \"get_information(relation='Result', tail_entity='0')\"\nStep2: Count the number of games in output_of_query1\nQuery2:  \"count(set='output_of_query1')\"",
    "what lake has the next highest elevation after lac des dix?": "None",
    "how much taller is the mountain peak of mount williamson than that of mount keith?": "## Target type: {height}\n## Query:\nStep1: Find the mountain peak named Mount Williamson\nQuery1: \"get_information(relation='Mountain Peak', tail_entity='Mount Williamson')\"\nStep2: Find the elevation of output_of_query1\nQuery2: \"get_information(relation='Elevation', head_entity='output_of_query1')\"\nStep3: Find the mountain peak named Mount Keith\nQuery3: \"get_information(relation='Mountain Peak', tail_entity='Mount Keith')\"\nStep4: Find the elevation of output_of_query3\nQuery4: \"get_information(relation='Elevation', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calc_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "there was a fifth place tie in 1967, what was the next year to have a fifth place tie?": "None",
    "which rider from the uk the least amount of total points?": "## Target type: {rider}\n## Query:\nStep1: Find the entity that represents UK\nQuery1: \"get_information(relation='Nation', tail_entity='UK')\"\nStep2: Find the entity with the relation of Total Points\nQuery2: \"get_information(relation='Total Points')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min Total Points\nQuery4: \"get_information(relation='Total Points', tail_entity='output_of_query3')\"\nStep5: Find the rider of output_of_query4\nQuery5: \"get_information(relation='Rider', head_entity='output_of_query4')\"",
    "when is the next wikimania 2014?": "None",
    "what tournament is listed next to april 15th?": "None",
    "when is the next date after the first one on the top?": "None",
    "what are the number of times tour of qatar is listed as the race?": "None",
    "what are the number of times romania is listed as an opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Romania\nQuery1: \"get_information(relation='Opponent', tail_entity='Romania')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was the first unit built according to this chart?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Year built of output_of_query3\nQuery4: \"get_information(relation='Year built', head_entity='output_of_query3')\"",
    "which school was established first?": "## Target type: {school name}\n## Query:\nStep1: Find the entity with the relation of Establishment\nQuery1: \"get_information(relation='Establishment')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Establishment\nQuery3: \"get_information(relation='Establishment', tail_entity='output_of_query2')\"\nStep4: Find the school name of output_of_query3\nQuery4: \"get_information(relation='School Name', head_entity='output_of_query3')\"",
    "how many consecutive times did france place?": "None",
    "how many skiers finished at least under the 39 minute mark?": "None",
    "to whom did brock lesnar lose his first fight?": "None",
    "who was the only person that scheider lost against?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the entity that Result is a loss\nQuery1: \"get_information(relation='Result', tail_entity='Loss')\"\nStep2: Find the Opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "naval lost to vitoria de setubal. who lost the previous game?": "None",
    "which wrestler lasted the least amount of time in part two of battle royal?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the wrestler of output_of_query3\nQuery4: \"get_information(relation='Wrestler', head_entity='output_of_query3')\"",
    "other than kyle anderson, who else lost in 2014?": "None",
    "how many swimmers swam at least a 1:59.99 race?": "None",
    "which song came before grand groove on the album?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Grand Groove\nQuery1: \"get_information(relation='Title', tail_entity='Grand Groove')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "was there an election in 1980 or 1982?": "None",
    "_____ and _______ both played 16 games.": "## Target type: {player}\n## Query:\nStep1: Find the entity that played 16 games\nQuery1: \"get_information(relation='Games Played', tail_entity='16')\"\nStep2: Get the intersection of output_of_query1 and output_of_query1\nQuery2: \"set_intersection(set1='output_of_query1', set2='output_of_query1')\"",
    "which performer was listed at least 3 times in both the producer column and the performer column?": "None",
    "total number of performers other than o.credle:": "None",
    "who was the top performer from russia?": "None",
    "what is the total number of assemblers supporting small genomes type technologies?": "None",
    "tell me the number of temples with kochi prefecture.": "## Target type: {number}\n## Query:\nStep1: Find the entity that Prefecture is Kochi Prefecture\nQuery1: \"get_information(relation='Prefecture', tail_entity='Kochi Prefecture')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which group had over 130 members but only 6 caucusing members?": "## Target type: {group}\n## Query:\nStep1: Find the entity with the relation of Members and Members over 130\nQuery1: \"get_information(relation='Members', tail_entity>'130')\"\nStep2: Find the entity with the relation of Caucusing and Caucusing members equals 6\nQuery2: \"get_information(relation='Caucusing', tail_entity='6')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Group of output_of_query3\nQuery4: \"get_information(relation='Group', head_entity='output_of_query3')\"",
    "what group has under 40 members but at least 2 caucusing?": "## Target type: {group}\n## Query:\nStep1: Find the entity that Members is less than 40\nQuery1: \"get_information(relation='Members', tail_entity<'40')\"\nStep2: Find the entity that has at least 2 caucusing\nQuery2: \"get_information(relation='Caucusing', tail_entity>='2')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the entity that Group is output_of_query3\nQuery4: \"get_information(relation='Group', head_entity='output_of_query3')\"",
    "what tournament was nancy lopez's first lpga tour win?": "None",
    "how many were in attendance for the september 5th game?": "## Target type: {number of attendees}\n## Query:\nStep1: Find the entity with the relation of Date being September 5th\nQuery1: \"get_information(relation='Date', tail_entity='September 5')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what was the difference in attendance between the july 7th game and the july 8th game?": "## Target type: {attendance difference}\n## Query:\nStep1: Find the entity with the relation of Date is July 7th\nQuery1: \"get_information(relation='Date', tail_entity='July 7')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date is July 8th\nQuery3: \"get_information(relation='Date', tail_entity='July 8')\"\nStep4: Find the attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Calculate the attendance difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "how many total standards are there for type b plugs?": "## Target type: {number of standards}\n## Query:\nStep1: Find the entity named Type B\nQuery1: \"get_information(relation='IEC World Plugs Type1', tail_entity='Type B')\"\nStep2: Find the standards of output_of_query1\nQuery2: \"get_information(relation='Standard', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what song is the shortest?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Length\nQuery3: \"get_information(relation='Length', tail_entity='output_of_query2')\"\nStep4: Find the title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "what was the shortest song?": "None",
    "which player has the highest number of career home runs?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of HR\nQuery1: \"get_information(relation='HR')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max HR\nQuery3: \"get_information(relation='HR', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what competition was on 9 may 2006?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the entity named May 9, 2006\nQuery1: \"get_information(relation='Date', tail_entity='May 9, 2006')\"\nStep2: Get the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "larry perkins and what other driver is under the team perkins engineering?": "None",
    "last finnish national park to be established": "None",
    "how many are owned by the national park service?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Owner\nQuery1: \"get_information(relation='Owner')\"\nStep2: Find the owner as the National Park Service from output_of_query1\nQuery2: \"get_information(relation='Owner', tail_entity='National Park Service')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many of finland's national parks were established after the year 2000?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Region as Finland Proper\nQuery1: \"get_information(relation='Region', tail_entity='Finland Proper')\"\nStep2: Find the entities with the relation of Established that are greater than 2000\nQuery2: \"get_information(relation='Established', tail_entity>'2000')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which of finland's national parks has the least number of yearly visitors?": "None",
    "how many songs did joni mitchell perform?": "None",
    "what were the number of times san marino was an opponent?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named San Marino\nQuery1: \"get_information(relation='Opponent', tail_entity='San Marino')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times is the united states in the rankings?": "## Target type: {number}\n## Query:\nStep1: Find the row_number of the United States\nQuery1: \"get_information(relation='Country', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name a state listed at least 4 times.": "None",
    "is the usa on the chart more or less than 7 times?": "## Target type: {comparison}\n## Query:\nStep1: Find the entity named USA\nQuery1: \"get_information(relation='Country', tail_entity='USA')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Check if the output_of_query2 is more or less than 7 times\nQuery3: \"compare(set='output_of_query2', operator='<', value=7)\"",
    "how many total wins did the team have in 1948": "None",
    "name the first competition ever played by brazil.": "None",
    "what tournament was played before rimini on august 2002?": "None",
    "when was mandy patinkin nominated for the saturn award for best supporting actor?": "None",
    "what are the number of sites national amusements have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named National Amusements\nQuery1: \"get_information(relation='Circuit', tail_entity='National Amusements')\"\nStep2: Find the number of sites of output_of_query1\nQuery2: \"get_information(relation='Sites', head_entity='output_of_query1')\"",
    "the race on march 5 took place in miami, florida. where did the next race take place?": "None",
    "did august 3rd and august 4th have the same saves as august 11?": "None",
    "how many games have a max player limit of at least 3?": "## Target type: {number}\n## Query:\nStep1: Find the games with a max player limit of at least 3\nQuery1: \"get_information(relation='Max. Players', tail_entity>='3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of members in the 20 metre club?": "## Target type: {number of members}\n## Query:\nStep1: Find the entity in the 20 metre club\nQuery1: \"get_information(relation='Distance', tail_entity>='20')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many creatures are on page 40?": "None",
    "in which country did thierry tulasne win his last singles title?": "None",
    "which is the only year with promotion playoffs and promoted": "None",
    "who was the slowest driver to finish the race?": "None",
    "how many times did tomlinson appear in the olympic games?": "None",
    "who was the top pitcher drafted?": "None",
    "after what year were austevoll mayors affiliated with political parties?": "None",
    "after the duke of barcelos, what was the next dukedom to be created?": "None",
    "what was the top attendance of the 1981's games?": "None",
    "which team had the largest goal difference?": "None",
    "which of the teams had the top number of capacity?": "None",
    "longest throw": "None",
    "what year did the bulldogs make the greatest number of tries": "None",
    "how many wins did the 1987 syracuse football team have?": "None",
    "what was the first outcome listed on this chart?": "## Target type: {'Outcome'}\n## Query:\nStep1: Find the first row_number\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Outcome of output_of_query1\nQuery2: \"get_information(relation='Outcome', head_entity='output_of_query1')\"",
    "how many times has this actor only been nominated for an award?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result is Nominated\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "did john lee win before lord hugh seymour?": "None",
    "what is the difference in years of granville bantock's work compared to pete dohert?": "## Target type: {difference in years}\n## Query:\nStep1: Find the row_number of Granville Bantock's work\nQuery1: \"get_information(relation='Composer', tail_entity='Granville Bantock')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep3: Find the row_number of Pete Doherty's work\nQuery3: \"get_information(relation='Composer', tail_entity='Pete Doherty')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"\nStep5: Calculate the difference in years between output_of_query2 and output_of_query4\nQuery5: \"year_difference(year1='output_of_query2', year2='output_of_query4')\"",
    "what is the difference in years in service of the taymyr and the arktika?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Taymyr\nQuery1: \"get_information(relation='Ship Name', tail_entity='Taymyr')\"\nStep2: Find the In Service year of output_of_query1\nQuery2: \"get_information(relation='In Service', head_entity='output_of_query1')\"\nStep3: Find the entity named Arktika\nQuery3: \"get_information(relation='Ship Name', tail_entity='Arktika')\"\nStep4: Find the In Service year of output_of_query3\nQuery4: \"get_information(relation='In Service', head_entity='output_of_query3')\"\nStep5: Calculate the difference in years between output_of_query2 and output_of_query4\nQuery5: \"year_diff(year1='output_of_query2', year2='output_of_query4')\"",
    "how many sacks did this player have in his first five seasons?": "## Target type: {number of sacks}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the first five entities of output_of_query1\nQuery2: \"get_information(relation='row_number', tail_entity<=5)\"\nStep3: Find the sacks of output_of_query2\nQuery3: \"get_information(relation='Sacks', head_entity='output_of_query2')\"\nStep4: Calculate the sum of output_of_query3\nQuery4: \"sum(set='output_of_query3')\"",
    "did james hunt finish the race after mark donohue?": "## Target type: {Yes/No}\n## Query:\nStep1: Find the entity named Mark Donohue\nQuery1: \"get_information(relation='Driver', tail_entity='Mark Donohue')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named James Hunt\nQuery3: \"get_information(relation='Driver', tail_entity='James Hunt')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if output_of_query4 is greater than output_of_query2\nQuery5: \"compare(output_of_query4, output_of_query2)\"",
    "number of races not finished": "## Target type: {number}\n## Query:\nStep1: Find the races where the Position is not defined (not finished)\nQuery1: \"get_information(relation='Position', tail_entity='not defined')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of men who did not finish?": "None",
    "how many awards has he been nominated for and not won?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Result as \"Nominated\"\nQuery1: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep2: Find the entity that has the relation of Result as \"Won\"\nQuery2: \"get_information(relation='Result', tail_entity='Won')\"\nStep3: Get the set difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many awards total are listed?": "None",
    "what were the total number of times filmfare awards can be seen listed on this chart as the award ceremony?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that is \"Filmfare Awards\"\nQuery1: \"get_information(relation='Award Ceremony', tail_entity='Filmfare Awards')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was the peak 2 peak gondola inaugurated before the vanoise express?": "## Target type: {inauguration}\n## Query:\nStep1: Find the entity named Peak 2 Peak Gondola\nQuery1: \"get_information(relation='Tramway', tail_entity='Peak 2 Peak Gondola')\"\nStep2: Find the Year of inauguration of output_of_query1\nQuery2: \"get_information(relation='Year of inauguration', head_entity='output_of_query1')\"\nStep3: Find the entity named Vanoise Express\nQuery3: \"get_information(relation='Tramway', tail_entity='Vanoise Express')\"\nStep4: Find the Year of inauguration of output_of_query3\nQuery4: \"get_information(relation='Year of inauguration', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is smaller than output_of_query4\nQuery5: \"output_of_query2 < output_of_query4\"",
    "how many times did v. venkatasubha reddiar serve in the assembly?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named V. Venkatasubha Reddiar\nQuery1: \"get_information(relation='Name of M.L.A.', tail_entity='V. Venkatasubha Reddiar')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which discontinued product was introduced the same year as crest whitestrips 3d vivid?": "None",
    "what title appears before \"the self-preservation society\"?": "## Target type: {title}\n## Query:\nStep1: Find the entity named The Self-Preservation Society\nQuery1: \"get_information(relation='Title', tail_entity='The Self-Preservation Society')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how long did wang guangmei live before she was married to liu shaoqui?": "## Target type: {duration}\n## Query:\nStep1: Find the entity named Wang Guangmei\nQuery1: \"get_information(relation='Name', tail_entity='Wang Guangmei')\"\nStep2: Find the birth date of output_of_query1\nQuery2: \"get_information(relation='Birth date', head_entity='output_of_query1')\"\nStep3: Find the entity named Liu Shaoqi\nQuery3: \"get_information(relation='President', tail_entity='Liu Shaoqi')\"\nStep4: Find the marriage date of output_of_query3\nQuery4: \"get_information(relation='Marriage date', head_entity='output_of_query3')\"\nStep5: Calculate the duration between output_of_query2 and output_of_query4\nQuery5: \"calculate_duration(start_date='output_of_query2', end_date='output_of_query4')\"",
    "number of opponents faced?": "## Target type: {number}\n## Query:\nStep1: Find the opponents faced\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who had the best time ostrava or berlin?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Location(Ostrava)\nQuery1: \"get_information(relation='Location', tail_entity='Ostrava')\"\nStep2: Find the entity with the relation of Location(Berlin)\nQuery2: \"get_information(relation='Location', tail_entity='Berlin')\"\nStep3: Find the entity with the relation of Best of output_of_query1\nQuery3: \"get_information(relation='Best', head_entity='output_of_query1')\"\nStep4: Find the entity with the relation of Best of output_of_query2\nQuery4: \"get_information(relation='Best', head_entity='output_of_query2')\"\nStep5: Compare the time between output_of_query3 and output_of_query4\nQuery5: \"compare(output_of_query3, output_of_query4)\"",
    "how much better is susan sloan's time, than adriana pereira's?": "None",
    "who had the best time?": "None",
    "how many athletes had a better result than tatyana bocharova?": "None",
    "before the 2000 olympic games what was johanna's fastest 200m time?": "None",
    "what publication is listed before play magazine?": "## Target type: {publication}\n## Query:\nStep1: Find the entity named Play Magazine\nQuery1: \"get_information(relation='Publication', tail_entity='Play Magazine')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Publication of output_of_query4\nQuery5: \"get_information(relation='Publication', head_entity='output_of_query4')\"",
    "what is listed before juk faat wan in the first column?": "None",
    "no flight other than what flight was canceled?": "## Target type: {flight}\n## Query:\nStep1: Find the entity that Result is Canceled\nQuery1: \"get_information(relation='Result', tail_entity='Canceled')\"\nStep2: Find all the row_number\nQuery2: \"get_information(relation='row_number')\"\nStep3: Get the negation of output_of_query2\nQuery3: \"set_negation(set='output_of_query2')\"\nStep4: Get the intersection of output_of_query1 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query3')\"",
    "what was the first opera composed in the 1900s?": "None",
    "which was the only diocese established before 1900?": "## Target type: {Diocese}\n## Query:\nStep1: Find all the Diocese entities\nQuery1: \"get_information(relation='Type', tail_entity='Diocese')\"\nStep2: Find all the Established entities before 1900\nQuery2: \"get_information(relation='Established', value<='1900')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "the first state formed?": "None",
    "how many seasons in tier 4?": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Tier\nQuery1: \"get_information(relation='Tier')\"\nStep2: Find the set with value of '4' in output_of_query1\nQuery2: \"get_information(relation='Tier', tail_entity='4')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "jow many seasons with the number of division 4": "## Target type: {number of seasons}\n## Query:\nStep1: Find the entity with the relation of Division 4\nQuery1: \"get_information(relation='Division', tail_entity='Division 4')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which season was the only season the team placed in tier 4?": "## Target type: {season}\n## Query:\nStep1: Find the entity that Tier is 4\nQuery1: \"get_information(relation='Tier', tail_entity='4')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "how long did spokane take to finish the race?": "## Target type: {'Time / behind'}\n## Query:\nStep1: Find the entity named Spokane\nQuery1: \"get_information(relation='Horse', tail_entity='Spokane')\"\nStep2: Find the Time / behind of output_of_query1\nQuery2: \"get_information(relation='Time / behind', head_entity='output_of_query1')\"",
    "how long did it take peter matheka mutuku to complete the event?": "## Target type: {time}\n## Query:\nStep1: Find the entity named Peter Matheka Mutuku\nQuery1: \"get_information(relation='Athlete', tail_entity='Peter Matheka Mutuku')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"",
    "what song is listed below of \"life is a carnival\"?": "None",
    "which name had a higher number? smith or johnson?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Smith\nQuery1: \"get_information(relation='Name', tail_entity='Smith')\"\nStep2: Find the Number of output_of_query1\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"\nStep3: Find the entity named Johnson\nQuery3: \"get_information(relation='Name', tail_entity='Johnson')\"\nStep4: Find the Number of output_of_query3\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"\nStep5: Compare the Number of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "who had pole position the most times?": "## Target type: {'Pole Position'}\n## Query:\nStep1: Find the entity whose relation is Pole Position and appears the most times.\nQuery1: \"get_information(relation='Pole Position', tail_entity>='most')\"\nStep2: Find the Pole Position of output_of_query1.\nQuery2: \"get_information(relation='Pole Position', head_entity='output_of_query1')\"",
    "where was the only 64th position held?": "## Target type: {venue}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the relation of Position equals to 64th\nQuery2: \"get_information(relation='Position', tail_entity='64th')\"\nStep3: Find the venue of output_of_query2\nQuery3: \"get_information(relation='Venue', head_entity='output_of_query2')\"",
    "who did the most pole position what is his or her name": "## Target type: {'Pole Position'}\n## Query:\nStep1: Find the entity in Pole Position that appears the most.\nQuery1: \"get_information(relation='Pole Position', tail_entity>='most')\"\nStep2: Find the Pole Position of output_of_query1.\nQuery2: \"get_information(relation='Pole Position', head_entity='output_of_query1')\"",
    "what was the average number in attendance against portland lumberjax on january 9, 2009?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Portland Lumberjax\nQuery1: \"get_information(relation='Opponent', tail_entity='Portland Lumberjax')\"\nStep2: Find the entity with the relation of Date is January 9, 2009\nQuery2: \"get_information(relation='Date', tail_entity='January 9, 2009')\"\nStep3: Find the attendance of output_of_query2\nQuery3: \"get_information(relation='Attendance', head_entity='output_of_query2')\"\nStep4: Calculate the average of output_of_query3\nQuery4: \"average(set='output_of_query3')\"",
    "who resigned earlier, james p. pope or h. w. whillock?": "None",
    "who are the top 3 drivers from the united states?": "None",
    "how many consecutive games did enfield and leyton orient play in the first round proper?": "None",
    "in how many games did cardiff city f.c. score at least 3 goals?": "None",
    "what nfl team had the last pick?": "## Target type: {NFL team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the NFL Team of output_of_query3\nQuery4: \"get_information(relation='NFL Team', head_entity='output_of_query3')\"",
    "what was the only year the team was relegated?": "None",
    "how many silver medals did india win in shooting?": "## Target type: {number}\n## Query:\nStep1: Find the entity that the Medal is Silver\nQuery1: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep2: Find the entity that the Sport is Shooting\nQuery2: \"get_information(relation='Sport', tail_entity='Shooting')\"\nStep3: Find the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many times were the 110 m hurdles recorded in the notes?": "## Target type: {number}\n## Query:\nStep1: Find the occurrence of \"110 m hurdles\" in the Notes\nQuery1: \"get_information(relation='Notes', tail_entity='110 m hurdles')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which city is home to the greatest number of historic sites, existing or demolished?": "None",
    "what was the average qualifying score for the u.s. championships?": "None",
    "how many gold medals did the us and jamaica win combined?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named US\nQuery1: \"get_information(relation='Nation', tail_entity='US')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Find the entity named Jamaica\nQuery3: \"get_information(relation='Nation', tail_entity='Jamaica')\"\nStep4: Find the gold medals of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep5: Add the gold medals of output_of_query2 and output_of_query4\nQuery5: \"add(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the number of desktop processors released in the year 1990?": "None",
    "how many processors have an integrated monochrome display?": "None",
    "what is the average number of models that have usb 2.0?": "None",
    "how many total orbit pairs are there?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were more than 15 minutes?": "## Target type: {number of games}\n## Query:\nStep1: Find the games with Min more than 15\nQuery1: \"get_information(relation='Min', tail_entity>'15')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who finished on top of the apertura 2008 standings.": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Place (Posici\u00f3n) that is '1.'\nQuery1: \"get_information(relation='Place (Posici\u00f3n)', tail_entity='1.')\"\nStep2: Get the team of output_of_query1\nQuery2: \"get_information(relation='Team (Equipo)', head_entity='output_of_query1')\"",
    "how many total points did askia jones score at the araneta coliseum?": "None",
    "which team has won more, swansea city or west ham united?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Swansea City\nQuery1: \"get_information(relation='Team', tail_entity='Swansea City')\"\nStep2: Find the entity named West Ham United\nQuery2: \"get_information(relation='Team', tail_entity='West Ham United')\"\nStep3: Find the number of times Swansea City has won\nQuery3: \"get_information(relation='Winners', head_entity='output_of_query1')\"\nStep4: Find the number of times West Ham United has won\nQuery4: \"get_information(relation='Winners', head_entity='output_of_query2')\"\nStep5: Find the team with more wins\nQuery5: \"if(set1='output_of_query3', operator='>', set2='output_of_query4', then='output_of_query1', else='output_of_query2')\"",
    "what was the number of wins kansas state had in manhattan?": "None",
    "what is the difference in the total points for the club biarritz olympique and su agen?": "None",
    "which songwriters are credited with the least songs?": "None",
    "which coach held his position for the most years?": "None",
    "who was the longest head coach?": "None",
    "which coach had the most years as a coach?": "None",
    "how long did colin clarke coach the puerto rico islanders?": "None",
    "what was the total number of years hal baird coached?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Hal Baird\nQuery1: \"get_information(relation='Coach', tail_entity='Hal Baird')\"\nStep2: Find the total number of years of output_of_query1\nQuery2: \"get_information(relation='Years', head_entity='output_of_query1')\"",
    "which coach served previous to ardis smith?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Ardis Smith\nQuery1: \"get_information(relation='Coach', tail_entity='Ardis Smith')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "how many plants manufacture items for ford?": "None",
    "what was the number of cars built by american car company?": "None",
    "how many times is hesketh-ford listed as the constructor?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Hesketh-Ford\nQuery1: \"get_information(relation='Constructor', tail_entity='Hesketh-Ford')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in what week did the kansas city chiefs go into overtime in their 1997 season?": "None",
    "in 2007, how many games did the nebraska football team play after falling from the national rankings?": "None",
    "did dallas or ottawa win the december 9, 1993 game?": "## Target type: {winning team}\n## Query:\nStep1: Find the entity that is Dallas\nQuery1: \"get_information(relation='Winning Team', tail_entity='Dallas')\"\nStep2: Find the entity that is Ottawa\nQuery2: \"get_information(relation='Winning Team', tail_entity='Ottawa')\"\nStep3: Find the entity that is December 9, 1993\nQuery3: \"get_information(relation='Date', tail_entity='December 9, 1993')\"\nStep4: Find the Winning Team of output_of_query3\nQuery4: \"get_information(relation='Winning Team', head_entity='output_of_query3')\"",
    "which was the only team that the comets did not win a match against?": "None",
    "how many total wins did the flash engineering team have?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Flash Engineering Team\nQuery1: \"get_information(relation='Winning Team', tail_entity='Flash Engineering Team')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many yachts are on the list total?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in alphabetical order, what is the last municipality?": "None",
    "which of the boats listed is the fastest?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Speed\nQuery1: \"get_information(relation='Speed')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Speed\nQuery3: \"get_information(relation='Speed', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who was drafted first, tom anderson or tom sundberg?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Tom Anderson\nQuery1: \"get_information(relation='Player', tail_entity='Tom Anderson')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Tom Sundberg\nQuery3: \"get_information(relation='Player', tail_entity='Tom Sundberg')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the output_of_query2 and output_of_query4 to find the player who was drafted first\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', comparison='min')\"",
    "was chuck bednarik or frank tripucka the first draft pick?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Chuck Bednarik\nQuery1: \"get_information(relation='Player', tail_entity='Chuck Bednarik')\"\nStep2: Find the entity named Frank Tripucka\nQuery2: \"get_information(relation='Player', tail_entity='Frank Tripucka')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the row_number of output_of_query2\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep5: Check if output_of_query3 is smaller than output_of_query4\nQuery5: \"output_of_query3 < output_of_query4\"",
    "where is the last plant on the list located?": "None",
    "how many golfers made at least $40,000?": "None",
    "how many players had a transfer fee of at least 9 million euros?": "## Target type: {number}\n## Query:\nStep1: Find the players with a transfer fee of at least 9 million euros\nQuery1: \"get_information(relation='Transfer fee (\u20ac million)', tail_entity>='9')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how long was the marathon for camilla benjaminsson?": "None",
    "how long did felix loch take to complete the men's luge?": "## Target type: {Time (s)}\n## Query:\nStep1: Find the entity named Felix Loch\nQuery1: \"get_information(relation='Athlete(s)', tail_entity='Felix Loch')\"\nStep2: Find the Time (s) of the entity in output_of_query1\nQuery2: \"get_information(relation='Time (s)', head_entity='output_of_query1')\"",
    "what was the last year that fk austria wien won the austrian supercup?": "None",
    "who was in the final for 1975, finland or united kingdom?": "## Target type: {country}\n## Query:\nStep1: Find the entity in the final for 1975\nQuery1: \"get_information(relation='Final', head_entity='1975')\"\nStep2: Check if Finland is in output_of_query1\nQuery2: \"check_membership(set='output_of_query1', element='Finland')\"\nStep3: Check if United Kingdom is in output_of_query1\nQuery3: \"check_membership(set='output_of_query1', element='United Kingdom')\"",
    "what was the number of labour councillors in 1964?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 1964\nQuery1: \"get_information(relation='Year', tail_entity='1964')\"\nStep2: Find the Labour councillors of output_of_query1\nQuery2: \"get_information(relation='Labour councillors', head_entity='output_of_query1')\"",
    "in which year were the least amount of jamaicans granted british citizenship?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Numer of Jamaicans granted British citizenship\nQuery1: \"get_information(relation='Numer of Jamaicans granted British citizenship')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Numer of Jamaicans granted British citizenship\nQuery3: \"get_information(relation='Numer of Jamaicans granted British citizenship', tail_entity='output_of_query2')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "how many jamaicans were granted british citizenship in 1998?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the Year of 1998\nQuery1: \"get_information(relation='Year', tail_entity='1998')\"\nStep2: Find the Numer of Jamaicans granted British citizenship of output_of_query1\nQuery2: \"get_information(relation='Numer of Jamaicans granted British citizenship', head_entity='output_of_query1')\"",
    "the only year with 10 conservative councillors was when?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity that Conservative councillors is 10\nQuery1: \"get_information(relation='Conservative councillors', tail_entity='10')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many athletes finished race 1?": "None",
    "what are the number of points bernie scored in hurdles?": "None",
    "how many teen choice awards was scrubs nominate for from 2004 to 2007?": "None",
    "how many awards was warren beatty nominated for?": "None",
    "how many of ahsan's films won at least 1 award?": "None",
    "how many total assists per game did 2013 eurobasket have?": "## Target type: {assists per game}\n## Query:\nStep1: Find the tournament named 2013 Eurobasket\nQuery1: \"get_information(relation='Tournament', tail_entity='2013 Eurobasket')\"\nStep2: Find the assists per game of output_of_query1\nQuery2: \"get_information(relation='Assists per game', head_entity='output_of_query1')\"",
    "what was florent's average number of assists per game during the 2006 fiba world championship?": "## Target type: {average number of assists per game}\n## Query:\nStep1: Find the entity that Tournament is 2006 FIBA World Championship\nQuery1: \"get_information(relation='Tournament', tail_entity='2006 FIBA World Championship')\"\nStep2: Find the average number of assists per game of output_of_query1\nQuery2: \"get_information(relation='Assists per game', head_entity='output_of_query1')\"",
    "what is the number of laps dan clarke completed?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Dan Clarke\nQuery1: \"get_information(relation='Driver', tail_entity='Dan Clarke')\"\nStep2: Find the number of laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "what is the least amount of laps completed?": "None",
    "what is the number of laps completed by neel jani?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Neel Jani\nQuery1: \"get_information(relation='Driver', tail_entity='Neel Jani')\"\nStep2: Find the number of laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "what is the total number of laps performed by rider imre toth?": "## Target type: {number of laps}\n## Query:\nStep1: Find the entity named Imre Toth\nQuery1: \"get_information(relation='Rider', tail_entity='Imre Toth')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "how many battles resulted between 3,000 and 4,200 estimated americans killed?": "None",
    "how many of the original ethnic communities were french?": "None",
    "how many films used the kannada language?": "## Target type: {number of films}\n## Query:\nStep1: Find the films that used the Kannada language\nQuery1: \"get_information(relation='LANGUAGE', tail_entity='Kannada')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of films where the language was hindi?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Language as Hindi\nQuery1: \"get_information(relation='Language', tail_entity='Hindi')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "number of times to finish the races running.": "None",
    "which locomotive builder built a locomotive after 1888 and built the locomotive as a 2ft gauge locomotive?": "None",
    "what livery is listed previous to blackpool tramway green and cream?": "None",
    "which locomotive has an earlier date, the peeler or the raven?": "None",
    "what locomotive is just previous to bl29?": "## Target type: {locomotive}\n## Query:\nStep1: Find the entity named BL29\nQuery1: \"get_information(relation='Locomotive', tail_entity='BL29')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the locomotive of output_of_query4\nQuery5: \"get_information(relation='Locomotive', head_entity='output_of_query4')\"",
    "shawn gifford was pick number 25, who was picked next?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Shawn Gifford\nQuery1: \"get_information(relation='Player', tail_entity='Shawn Gifford')\"\nStep2: Find the Pick # of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with Pick # as output_of_query3\nQuery4: \"get_information(relation='Pick #', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "who was the pick chosen after paul fanning?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Paul Fanning\nQuery1: \"get_information(relation='Player', tail_entity='Paul Fanning')\"\nStep2: Find the pick number of output_of_query1\nQuery2: \"get_information(relation='Pick #', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with Pick # output_of_query3\nQuery4: \"get_information(relation='Pick #', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "what was the last movie that kajal aggarwal won an award for?": "None",
    "what film was her last film in hindi?": "## Target type: {'Film'}\n## Query:\nStep1: Find the entity with the relation of Language as Hindi\nQuery1: \"get_information(relation='Language', tail_entity='Hindi')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Film of output_of_query4\nQuery5: \"get_information(relation='Film', head_entity='output_of_query4')\"",
    "besides heroes, which 1977 film also featured sally field?": "None",
    "who was the previous player signed before troy nolan?": "None",
    "was the wang xin ranked above or below qiu lianhai?": "## Target type: {'Rank'}\n## Query:\nStep1: Find the entity named Wang Xin\nQuery1: \"get_information(relation='Athlete', tail_entity='Wang Xin')\"\nStep2: Find the Rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named Qiu Lianhai\nQuery3: \"get_information(relation='Athlete', tail_entity='Qiu Lianhai')\"\nStep4: Find the Rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Check the order of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "who was the only woman ranked in the top 50 representatives?": "None",
    "what single ranked top on the us cashbox?": "None",
    "what was the last award to be won by this show?": "## Target type: {'Category'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Category of output_of_query3\nQuery4: \"get_information(relation='Category', head_entity='output_of_query3')\"",
    "what are number of friendly competitions that took place in which the score was 4-1?": "## Target type: {number}\n## Query:\nStep1: Find the competitions with the score 4-1\nQuery1: \"get_information(relation='Score', tail_entity='4\u20131')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which wood is above gamlingay wood and below buff wood?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Gamlingay Wood\nQuery1: \"get_information(relation='Name', tail_entity='Gamlingay Wood')\"\nStep2: Find the entity named Buff Wood\nQuery2: \"get_information(relation='Name', tail_entity='Buff Wood')\"\nStep3: Find the row_number of output_of_query1\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep4: Find the previous_row of output_of_query3\nQuery4: \"previous_row(set='output_of_query3')\"\nStep5: Find the row_number is output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Find the Name of output_of_query5\nQuery6: \"get_information(relation='Name', head_entity='output_of_query5')\"",
    "the capacity of a timberline lodge lift is at most how many rides per hour?": "## Target type: {number of rides per hour}\n## Query:\nStep1: Find the lift named Timberline Lodge\nQuery1: \"get_information(relation='Lift Name', tail_entity='Timberline Lodge')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity (rides/hr)', head_entity='output_of_query1')\"",
    "how many weeks was timber on the list?": "## Target type: {number of weeks}\n## Query:\nStep1: Find the entity named Timber\nQuery1: \"get_information(relation='Song title', tail_entity='Timber')\"\nStep2: Find the weeks of output_of_query1\nQuery2: \"get_information(relation='Week', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which timberline lodge lift other than the magic mile express has a slope of 20% or greater?": "None",
    "how many locomotives were operated by ews?": "## Target type: {number of locomotives}\n## Query:\nStep1: Find the entity that Operator is EWS\nQuery1: \"get_information(relation='Operator', tail_entity='EWS')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "head coach, jon roberts, had his team from where?": "## Target type: {Location}\n## Query:\nStep1: Find the entity named Jon Roberts\nQuery1: \"get_information(relation='Head Coach', tail_entity='Jon Roberts')\"\nStep2: Find the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "how long was david dowd head coach?": "None",
    "what is the name of the next coach after hank crisp?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Hank Crisp\nQuery1: \"get_information(relation='Coach', tail_entity='Hank Crisp')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Coach of output_of_query4\nQuery5: \"get_information(relation='Coach', head_entity='output_of_query4')\"",
    "who was coach after b.l. noojin?": "None",
    "what category was the last nomination?": "None",
    "did sweden or spain win first?": "## Target type: {country}\n## Query:\nStep1: Find the entity in Winner\nQuery1: \"get_information(relation='Winner')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the winner of first row_number\nQuery3: \"get_information(relation='Winner', tail_entity='1')\"\nStep4: Find the country of output_of_query3\nQuery4: \"country(set='output_of_query3')\"",
    "which submarine had the most tonnage?": "## Target type: {submarine}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the relation of Tonnage (GRT)\nQuery2: \"get_information(relation='Tonnage (GRT)')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the row with max Tonnage\nQuery4: \"get_information(relation='Tonnage (GRT)', tail_entity='output_of_query3')\"\nStep5: Get the entity with max Tonnage\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which boat was the only one to be sunk by a typhoon?": "None",
    "what is the number of open source products available?": "None",
    "how many channels had more shows listed than star plus?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Star Plus\nQuery1: \"get_information(relation='Channel', tail_entity='Star Plus')\"\nStep2: Find the number of shows listed for output_of_query1\nQuery2: \"get_information(relation='Show', head_entity='output_of_query1')\"\nStep3: Find the channels that have more shows listed than output_of_query2\nQuery3: \"get_information(relation='Show', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the last year in which kelsey grammer won an award for outstanding voice performance for a role on the simpsons?": "None",
    "who was the last finisher from the us?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named US\nQuery1: \"get_information(relation='Nationality', tail_entity='US')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the max row_number\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the row with max row_number \nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who was the last japanese player to finish?": "None",
    "how many times did david oliver finish first in the 110m hurdles after 2008?": "None",
    "how many times was roger federer a runner-up?": "None",
    "what was the difference between korzeniowski's performance at the 1996 olympic games and the 2000 olympic games in the 20 km walk?": "None",
    "other than 50 cent: bulletproof, what game was released in 2005?": "## Target type: {game title}\n## Query:\nStep1: Find the entity named 50 cent: bulletproof\nQuery1: \"get_information(relation='Title', tail_entity='50 cent: bulletproof')\"\nStep2: Find the release date of output_of_query1\nQuery2: \"get_information(relation='Release date', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Release date that equals 2005\nQuery3: \"get_information(relation='Release date', tail_entity='2005')\"\nStep4: Get the difference of output_of_query3 and output_of_query2\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query2')\"",
    "how many live births are in 2002?": "## Target type: {number of live births}\n## Query:\nStep1: Find the entity named 2002\nQuery1: \"get_information(relation=':', tail_entity='2002')\"\nStep2: Find the Live births of output_of_query1\nQuery2: \"get_information(relation='Live births', head_entity='output_of_query1')\"",
    "how many times has japan won gold?": "None",
    "how many gold did u.s.a win": "None",
    "on what date did ken hill achieve his win?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity named Ken Hill\nQuery1: \"get_information(relation='Win', tail_entity='Ken Hill')\"\nStep2: Find the Date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "who has the same nationality as juno stover-irwin?": "None",
    "wang zhen and wang hao were both from which country?": "## Target type: {country}\n## Query:\nStep1: Find the entity named Wang Zhen\nQuery1: \"get_information(relation='Athlete', tail_entity='Wang Zhen')\"\nStep2: Find the country of output_of_query1\nQuery2: \"get_information(relation='Nationality', head_entity='output_of_query1')\"\nStep3: Find the entity named Wang Hao\nQuery3: \"get_information(relation='Athlete', tail_entity='Wang Hao')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nationality', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what are the total number of times eddie harris is listed as the artist?": "None",
    "how many times is jan scott listed under celebrity/ies taking part?": "None",
    "how many times is temagami listedon the list?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Temagami\nQuery1: \"get_information(relation='Town', tail_entity='Temagami')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is total number of places held by diego dominguez?": "None",
    "what was the only award in 1994?": "## Target type: {'Award'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with Year as 1994\nQuery2: \"get_information(relation='Year', tail_entity='1994')\"\nStep3: Find the Award of output_of_query2\nQuery3: \"get_information(relation='Award', head_entity='output_of_query2')\"",
    "how many awards has dev won after 2012?": "None",
    "what was the next locomotive to be withdrawn after locomotive 4106": "None",
    "what is the first creature (other planes) after page 40?": "None",
    "how many times has germany won bronze?": "None",
    "how many sites have both a biological and geological interest?": "None",
    "what match did australia ii score the same point as liberty?": "None",
    "mark ferrandino, frank ferri, joe fitzpatrick and ed flanagan were each what profession?": "None",
    "aaron hughes and steven davis both transferred from what team?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Aaron Hughes\nQuery1: \"get_information(relation='Name', tail_entity='Aaron Hughes')\"\nStep2: Find the entity named Steven Davis\nQuery2: \"get_information(relation='Name', tail_entity='Steven Davis')\"\nStep3: Find the transfer team of output_of_query1\nQuery3: \"get_information(relation='From', head_entity='output_of_query1')\"\nStep4: Find the transfer team of output_of_query2\nQuery4: \"get_information(relation='From', head_entity='output_of_query2')\"\nStep5: Get the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"",
    "what is the total amount of processors that have both an integrated color display and an enhanced keyboard?": "None",
    "which coach was the first to coach before all others?": "None",
    "which coach listed started first?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named W. Harold Browne\nQuery1: \"get_information(relation='Name', tail_entity='W. Harold Browne')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "andy huges and adrian whitbread both tranfered on which date?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Andy Hughes\nQuery1: \"get_information(relation='Name', tail_entity='Andy Hughes')\"\nStep2: Find the date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"\nStep3: Find the entity named Adrian Whitbread\nQuery3: \"get_information(relation='Name', tail_entity='Adrian Whitbread')\"\nStep4: Find the date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what first name is just previous to kempf?": "None",
    "what was the next movie zhao dan starred in after crossroads?": "## Target type: {English Title}\n## Query:\nStep1: Find the entity named Crossroads\nQuery1: \"get_information(relation='English Title', tail_entity='Crossroads')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the English Title of output_of_query4\nQuery5: \"get_information(relation='English Title', head_entity='output_of_query4')\"",
    "what movie is the only romance sunil kumar desai starred in?": "## Target type: {'Film Title'}\n## Query:\nStep1: Find all the entities with the relation of Genre is \"A romance\"\nQuery1: \"get_information(relation='Genre', tail_entity='A romance')\"\nStep2: Find the entities that include Sunil Kumar Desai in the Cast\nQuery2: \"get_information(relation='Cast', tail_entity='Sunil Kumar Desai')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "what is the total number of times hair has been a wager?": "## Target type: {number}\n## Query:\nStep1: Find the relation of Wager with Hair\nQuery1: \"get_information(relation='Wager', tail_entity='Hair')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only nation with more total medals than belgium?": "None",
    "how many canadian swimmers were there?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nationality to Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of players have canada listed as their nationality?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity that Nationality is Canada\nQuery1: \"get_information(relation='Nationality', tail_entity='Canada')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "at which world indoor championships did peter widen achieve a higher position: 1989 or 1991?": "None",
    "which location has more total km, kelsterbach or stadion?": "None",
    "what is the capacity of central vitebsk and neman combined?": "None",
    "name one that is not in the tikamgarh district.": "None",
    "list each of the cities who have more than 1,000,000 in population from the state/territory of punjab.": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of State/Territory and the value of Punjab\nQuery1: \"get_information(relation='State/Territory', tail_entity='Punjab')\"\nStep2: Find the entity with the relation of Population (2011) and the value larger than 1,000,000\nQuery2: \"get_information(relation='Population (2011)', tail_entity>'1000000')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which tournament rewarded the most money for first prize?": "## Target type: {Tournament}\n## Query:\nStep1: Find the entity with the relation of 1st prize ($)\nQuery1: \"get_information(relation='1st prize ($)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max prize\nQuery3: \"get_information(relation='1st prize ($)', tail_entity='output_of_query2')\"\nStep4: Find the tournament of output_of_query3\nQuery4: \"get_information(relation='Tournament', head_entity='output_of_query3')\"",
    "what was the total prize money earned by contestants?": "None",
    "what is the number of prize money for the 14 may 2002 tournament?": "None",
    "who won the most money?": "## Target type: {Player}\n## Query:\nStep1: Find the entity with the relation of Money ($)\nQuery1: \"get_information(relation='Money ($)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Money\nQuery3: \"get_information(relation='Money ($)', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "what is the difference between live births and deaths in 1995?": "None",
    "how many are listed as \"all\" technologies?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Technologies is \"all\"\nQuery1: \"get_information(relation='Technologies', tail_entity='all')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "whic network is the only one also known as \"cellcard\"?": "## Target type: {network}\n## Query:\nStep1: Find the entity that is also known as \"cellcard\"\nQuery1: \"get_information(relation='Notes', tail_entity='cellcard')\"\nStep2: Find the network of output_of_query1\nQuery2: \"get_information(relation='Network', head_entity='output_of_query1')\"",
    "how many platforms did american mcgee's grimm run on?": "## Target type: {number}\n## Query:\nStep1: Find the entity named American McGee's Grimm\nQuery1: \"get_information(relation='Title', tail_entity='American McGee's Grimm')\"\nStep2: Find the platforms of output_of_query1\nQuery2: \"get_information(relation='Platforms', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of points scored against the opponents for september?": "None",
    "how many actors were nominated but didn't win?": "## Target type: {number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the actors who were nominated\nQuery2: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep3: Find the actors who won\nQuery3: \"get_information(relation='Result', tail_entity='Won')\"\nStep4: Get the set difference between output_of_query2 and output_of_query3\nQuery4: \"set_difference(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "name one person in office that was not under the george v monarch.": "None",
    "how many total dukedoms are in portugal?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Portugal\nQuery1: \"get_information(relation='Surname', tail_entity='Portugal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that has a relation of Title and row_number\nQuery3: \"get_information(relation='Title:row_number')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many tons of displacement does type b have?": "## Target type: {tons of displacement}\n## Query:\nStep1: Find the entity named Type B kaib\u014dkan\nQuery1: \"get_information(relation='Name', tail_entity='Type B kaib\u014dkan')\"\nStep2: Find the displacement of output_of_query1\nQuery2: \"get_information(relation='Displacement', head_entity='output_of_query1')\"",
    "what nationality is on top of french navy?": "None",
    "what is france and germany's deficit combined?": "None",
    "in france the premeire was on september 23, 2013 what was the other country that did as well?": "None",
    "which record is faster, 50km race walk or marathon": "## Target type: {record}\n## Query:\nStep1: Find the record of 50km race walk\nQuery1: \"get_information(relation='Event', tail_entity='50km race walk')\"\nStep2: Find the record of marathon\nQuery2: \"get_information(relation='Event', tail_entity='marathon')\"\nStep3: Find the performance of output_of_query1\nQuery3: \"get_information(relation='Performance', head_entity='output_of_query1')\"\nStep4: Find the performance of output_of_query2\nQuery4: \"get_information(relation='Performance', head_entity='output_of_query2')\"\nStep5: Compare the performance of output_of_query3 and output_of_query4\nQuery5: \"compare(value1='output_of_query3', value2='output_of_query4')\"",
    "how long did it take this competitor to finish the 4x400 meter relay at universiade in 2005?": "None",
    "what was the average number of years served by a coach?": "None",
    "which country finished below the united states?": "## Target type: {country}\n## Query:\nStep1: Find the entity named United States\nQuery1: \"get_information(relation='Team', tail_entity='United States')\"\nStep2: Find the place of output_of_query1\nQuery2: \"get_information(relation='Place', head_entity='output_of_query1')\"\nStep3: Find the entity whose place is larger than output_of_query2\nQuery3: \"get_information(relation='Place', tail_entity>'output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many matches are wins?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Result\nQuery1: \"get_information(relation='Result')\"\nStep2: Find the wins in output_of_query1\nQuery2: \"get_information(relation='Result', tail_entity='W')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many years was sk sturm graz winner?": "None",
    "name the only medalist to receive a medal in the men's javelin throw": "## Target type: {name}\n## Query:\nStep1: Find the entity named Men's javelin throw\nQuery1: \"get_information(relation='Event', tail_entity='Men's javelin throw')\"\nStep2: Find the medalist of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "by how many chart positions higher did \"revolving door\" peak in the uk compared to the peak position of \"drowning\" in the uk?": "None",
    "what was the lowest position ramon gonzalez came in?": "None",
    "how many victories are listed?": "None",
    "what is the total number of texan victories?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Victor as 'T'\nQuery1: \"get_information(relation='Victor', tail_entity='T')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of countries that had no gold medals?": "## Target type: {number}\n## Query:\nStep1: Find the entity that has the relation of Gold equal to 0\nQuery1: \"get_information(relation='Gold', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many days in august of 1993 did pearl jam perform in canada?": "None",
    "in what year previous to 2003 was the \"symposium on computational gemoetry\" held?": "None",
    "what is the number of films she did in 2010?": "## Target type: {number of films}\n## Query:\nStep1: Find the entity that Year is 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities that have the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many gaming consoles in total were nfl blitz released for?": "None",
    "how many assemblies have their been?": "## Target type: {number of assemblies}\n## Query:\nStep1: Find the unique values of Pondicherry Assembly\nQuery1: \"get_information(relation='Pondicherry Assembly')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the number of the enrollment in 1967?": "## Target type: {enrollment number}\n## Query:\nStep1: Find the row_number of 1967\nQuery1: \"get_information(relation='Rugby\\nSince', tail_entity='1967')\"\nStep2: Find the enrollment of output_of_query1\nQuery2: \"get_information(relation='Enrollment', head_entity='output_of_query1')\"",
    "which match was earlier, psycho clown vs super crazy or psycho clown vs x-fly?": "## Target type: {match}\n## Query:\nStep1: Find the entity named Psycho Clown\nQuery1: \"get_information(relation='Winner', tail_entity='Psycho Clown')\"\nStep2: Find the match against Super Crazy of output_of_query1\nQuery2: \"get_information(relation='Loser', head_entity='output_of_query1')\"\nStep3: Find the date of output_of_query2\nQuery3: \"get_information(relation='Date', tail_entity='output_of_query2')\"\n\nStep4: Find the entity named Psycho Clown\nQuery4: \"get_information(relation='Winner', tail_entity='Psycho Clown')\"\nStep5: Find the match against X-Fly of output_of_query4\nQuery5: \"get_information(relation='Loser', head_entity='output_of_query4')\"\nStep6: Find the date of output_of_query5\nQuery6: \"get_information(relation='Date', tail_entity='output_of_query5')\"\n\nStep7: Compare the dates\nQuery7: \"compare_dates(date1='output_of_query3', date2='output_of_query6')\"",
    "who was the top finisher for germany?": "None",
    "who was the top finisher from poland?": "None",
    "who was the top finisher that drove a cooper-climax?": "None",
    "how many miles long was the dingwall canal?": "## Target type: {length}\n## Query:\nStep1: Find the entity named Dingwall Canal\nQuery1: \"get_information(relation='Canal', tail_entity='Dingwall Canal')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length (miles)', head_entity='output_of_query1')\"",
    "how long did it take warren davadilla to complete the 1998 marlboro centennial tour?": "## Target type: {time}\n## Query:\nStep1: Find the entity that the Name is Marlboro Centennial Tour and the Year is 1998\nQuery1: \"get_information(relation='Name', tail_entity='Marlboro Centennial Tour', key='Year', value='1998')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that the row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"",
    "what was the length, in years, of leslie combs' term?": "None",
    "how long was the distance for the race at walt disney world speedway, florida?": "## Target type: {distance}\n## Query:\nStep1: Find the entity named Walt Disney World Speedway, Florida\nQuery1: \"get_information(relation='Location', tail_entity='Walt Disney World Speedway, Florida')\"\nStep2: Find the distance of output_of_query1\nQuery2: \"get_information(relation='Distance', head_entity='output_of_query1')\"",
    "how long has ballidon dale been notified in years": "None",
    "how long was georgetown's longest winning streak?": "None",
    "previous to july 6, 2004 what is the highest prize money?": "None",
    "who was the first player whose transfer fee exceeded 8 million euros?": "None",
    "who was the only player to be transferred for a fee of 24,000,000?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with a fee of 24,000,000\nQuery1: \"get_information(relation='Fee', tail_entity='24,000,000')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "how many boats costed less than \u00a320m to build?": "None",
    "which had less episodes, the price to pay or dark tales?": "## Target type: {TV series}\n## Query:\nStep1: Find the entity with relation of Number of episodes and English title\nQuery1: \"get_information(relation='Number of episodes')\"\nStep2: Find the entity named The Price to Pay\nQuery2: \"get_information(relation='English title', tail_entity='The Price to Pay')\"\nStep3: Find the number of episodes of output_of_query2\nQuery3: \"get_information(relation='Number of episodes', head_entity='output_of_query2')\"\nStep4: Find the entity named Dark Tales\nQuery4: \"get_information(relation='English title', tail_entity='Dark Tales')\"\nStep5: Find the number of episodes of output_of_query4\nQuery5: \"get_information(relation='Number of episodes', head_entity='output_of_query4')\"\nStep6: Perform a comparison between output_of_query3 and output_of_query5\nQuery6: \"compare(value1='output_of_query3', value2='output_of_query5', operator='<')\"",
    "what is the other fee listed, besides free?": "None",
    "which two institutions joined the same year as clarke university?": "None",
    "how many participants have a time between 2:30 and 2:40?": "None",
    "did brazil score more goals against the soviet union or portugal in 1982?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Opposition', head_entity='Brazil')\"\nStep2: Find the entity named Soviet Union\nQuery2: \"get_information(relation='Opposition', head_entity='Soviet Union')\"\nStep3: Find the entity named Portugal\nQuery3: \"get_information(relation='Opposition', head_entity='Portugal')\"\nStep4: Find the goal scorers of Brazil against Soviet Union\nQuery4: \"get_information(relation='Brazil scorers', head_entity='output_of_query2')\"\nStep5: Find the goal scorers of Brazil against Portugal\nQuery5: \"get_information(relation='Brazil scorers', head_entity='output_of_query3')\"\nStep6: Calculate the number of goals of output_of_query4\nQuery6: \"count(set='output_of_query4')\"\nStep7: Calculate the number of goals of output_of_query5\nQuery7: \"count(set='output_of_query5')\"\nStep8: Compare the number of goals between output_of_query6 and output_of_query7\nQuery8: \"output_of_query6 > output_of_query7\"",
    "who was the last coach to only have 1 loss?": "None",
    "which head coach had the most losses?": "None",
    "how many operas on this list has at least 3 acts?": "None",
    "which opera has at least 5 acts?": "None",
    "between 1972 and 2013, how many withdraws did togo have?": "None",
    "how many senators resigned in 1976?": "None",
    "how long after 1999 was there a relegated movement?": "None",
    "qatargas ii started up the same year as what indonesian plant?": "None",
    "what is the total of all dics listed in the table?": "None",
    "what is the total of matches on the chart": "## Target type: {total number}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "at least how many aircrafts were forced to land": "None",
    "how many world record holders were from greece?": "None",
    "when was the last appearance in the greek league?": "## Target type: {'Season'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Season of output_of_query3\nQuery4: \"get_information(relation='Season', head_entity='output_of_query3')\"",
    "what was the top team according to position in table called?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity whose Position in table is 'top'\nQuery1: \"get_information(relation='Position in table', tail_entity='top')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "how many competitions did kazakhstan compete in?": "None",
    "how many wins does gina carano have in mma": "None",
    "which victim was missing the longest?": "None",
    "who was the last american to win men's individual?": "None",
    "who was the last european woman to win the eindhoven marathon?": "None",
    "who was the oldest member of the american 2010 olympic women's hockey roster?": "None",
    "how many medals did france and cuba win?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity that is France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the entity that is Cuba\nQuery2: \"get_information(relation='Nation', tail_entity='Cuba')\"\nStep3: Find the total medals of output_of_query1\nQuery3: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep4: Find the total medals of output_of_query2\nQuery4: \"get_information(relation='Total', head_entity='output_of_query2')\"\nStep5: Calculate the sum of output_of_query3 and output_of_query4\nQuery5: \"add(value1='output_of_query3', value2='output_of_query4')\"",
    "which series was held for 3 consecutive years?": "None",
    "how many years did pee-wee's playhouse run on television?": "None",
    "who won after jan in week 9?": "None",
    "which genre was used the most?": "## Target type: {genre}\n## Query:\nStep1: Find the entity with the relation of Genre\nQuery1: \"get_information(relation='Genre')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most(set='output_of_query1')\" \nStep3: Find the genre of output_of_query2\nQuery3: \"get_information(relation='Genre', head_entity='output_of_query2')\"",
    "which ship had the highest estimated cost to build?": "## Target type: {ship}\n## Query:\nStep1: Find the entity that has the relation of Est. building cost\nQuery1: \"get_information(relation='Est. building cost')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Est. building cost\nQuery3: \"get_information(relation='Est. building cost', tail_entity='output_of_query2')\"\nStep4: Find the ship of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which film was the first to be directed by sridhar?": "## Target type: {'Film'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the minimum row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with the minimum row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "how many films were directed in the year 1961 by sridhar?": "None",
    "how many films were directed by sridhar after the year 1961?": "None",
    "which track was composed by jacques brel and gaby wagenheim?": "None",
    "how many times did leonardo maia have the fastest lap?": "None",
    "how many total operas were performed at the dresden?": "None",
    "what is the number of operas from the oper genre?": "None",
    "in which city did the most operettas premiere?": "None",
    "who was the first place finisher at the december 2, 2005 games in lake louise?": "## Target type: {'Winner'}\n## Query:\nStep1: Find the game on December 2, 2005\nQuery1: \"get_information(relation='Date', tail_entity='December 2, 2005')\"\nStep2: Find the winner of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "what countries did not win bronze?": "## Target type: {countries}\n## Query:\nStep1: Find the entity whose won bronze is 0\nQuery1: \"get_information(relation='Bronze', tail_entity='0')\"\nStep2: Find the nations of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "who is the top team?": "## Target type: {'Team'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "in which olympic games did arasay thondike not finish in the top 20?": "None",
    "does arasay thondike have more/less than 4 1st place tournament finishes?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Arasay Thondike\nQuery1: \"get_information(relation='Name', tail_entity='Arasay Thondike')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Tournament finishes of output_of_query2\nQuery3: \"get_information(relation='1st place', tail_entity='output_of_query2')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Check if the count of output_of_query4 is more than 4\nQuery5: \"if_greater_than(value='output_of_query4', threshold='4')\"",
    "was russia's url open for more years than singapore's url?": "## Target type: {'URL'}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Country', tail_entity='Russia')\"\nStep2: Find the URL of output_of_query1\nQuery2: \"get_information(relation='URL', head_entity='output_of_query1')\"\nStep3: Find the entity named Singapore\nQuery3: \"get_information(relation='Country', tail_entity='Singapore')\"\nStep4: Find the URL of output_of_query3\nQuery4: \"get_information(relation='URL', head_entity='output_of_query3')\"\nStep5: Find the opening date of output_of_query2\nQuery5: \"get_information(relation='Opening date', tail_entity='output_of_query2')\"\nStep6: Find the opening date of output_of_query4\nQuery6: \"get_information(relation='Opening date', tail_entity='output_of_query4')\"\nStep7: Calculate the year difference between output_of_query5 and output_of_query6\nQuery7: \"year_difference(year1='output_of_query5', year2='output_of_query6')\"",
    "which event occurred first the st. paul open or the charlotte open?": "## Target type: {event}\n## Query:\nStep1: Find the entity named St. Paul Open\nQuery1: \"get_information(relation='Event', tail_entity='St. Paul Open')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Charlotte Open\nQuery3: \"get_information(relation='Event', tail_entity='Charlotte Open')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row number of output_of_query2 and output_of_query4\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4')\"",
    "how many pump types have no typical use listed?": "None",
    "at least how many types are there?": "## Target type: {number}\n## Query:\nStep1: Find all the types\nQuery1: \"get_information(relation='Type')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what other types of brakes are listed on this chart besides vacuum?": "None",
    "how many names do not have a description?": "None",
    "how long was the canadair sabre in service?": "None",
    "how long did tigerair fly into chiang mai?": "None",
    "what was the first year that there were no titles released on vinyl?": "None",
    "what was the first release title from coh?": "## Target type: {'Release title'}\n## Query:\nStep1: Find the entity named CoH\nQuery1: \"get_information(relation='Artist', tail_entity='CoH')\"\nStep2: Find all the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min row_number of output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Release title of output_of_query4\nQuery5: \"get_information(relation='Release title', head_entity='output_of_query4')\"",
    "what was the first title to be released?": "## Target type: {'Title'}\n## Query:\nStep1: Find the row_number of the first appearance\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what is the difference in medal count between the us and france?": "## Target type: {number}\n## Query:\nStep1: Find the entity named US\nQuery1: \"get_information(relation='Nation', tail_entity='US')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named France\nQuery3: \"get_information(relation='Nation', tail_entity='France')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what is the difference in total medals between the us and poland?": "## Target type: {difference in total medals}\n## Query:\nStep1: Find the entity named US\nQuery1: \"get_information(relation='Nation', tail_entity='US')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Poland\nQuery3: \"get_information(relation='Nation', tail_entity='Poland')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what was the total points that canada earned together?": "None",
    "the difference in years from 1882 to 1889": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named 1882\nQuery1: \"get_information(relation='Established', tail_entity='1882')\"\nStep2: Find the entity named 1889\nQuery2: \"get_information(relation='Established', tail_entity='1889')\"\nStep3: Calculate the difference of output_of_query1 and output_of_query2\nQuery3: \"subtract(output_of_query2, output_of_query1)\"",
    "what composition was written in the same year as \"rain coming\"?": "None",
    "how many consecutive wins did nd have before the tie against army?": "None",
    "what is the last creature (other planes) for page 41?": "None",
    "does the malaysia open super series pay more or less than french super series?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity named Malaysia Open Super Series\nQuery1: \"get_information(relation='Official title', tail_entity='Malaysia Open Super Series')\"\nStep2: Find the prize money of output_of_query1\nQuery2: \"get_information(relation='Prize money USD', head_entity='output_of_query1')\"\nStep3: Find the entity named French Super Series\nQuery3: \"get_information(relation='Official title', tail_entity='French Super Series')\"\nStep4: Find the prize money of output_of_query3\nQuery4: \"get_information(relation='Prize money USD', head_entity='output_of_query3')\"\nStep5: Compare the prize money of output_of_query2 and output_of_query4\nQuery5: \"compare(output_of_query2, output_of_query4)\"",
    "did he win more at the australian open or indian wells?": "## Target type: {Tournament}\n## Query:\nStep1: Find the entity named Australian Open\nQuery1: \"get_information(relation='Name', tail_entity='Australian Open')\"\nStep2: Find the Career Win-Loss of output_of_query1\nQuery2: \"get_information(relation='Career\\nWin-Loss', head_entity='output_of_query1')\"\nStep3: Find the entity named Indian Wells\nQuery3: \"get_information(relation='Name', tail_entity='Indian Wells')\"\nStep4: Find the Career Win-Loss of output_of_query3\nQuery4: \"get_information(relation='Career\\nWin-Loss', head_entity='output_of_query3')\"\nStep5: Compare the Career Win-Loss of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the difference in weight between the 060-ea and the challenger?": "None",
    "what was the number of silver metals given for weightlifting?": "## Target type: {number}\n## Query:\nStep1: Find the entity in Medal that is 'Silver'\nQuery1: \"get_information(relation='Medal', tail_entity='Silver')\"\nStep2: Find the entity in Sport that is 'Weightlifting'\nQuery2: \"get_information(relation='Sport', tail_entity='Weightlifting')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what party has the least councillors served in 1961?": "None",
    "who is the most high-grossing director of 1965?": "## Target type: {director name}\n## Query:\nStep1: Find the entity with the relation of Gross\nQuery1: \"get_information(relation='Gross')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Gross\nQuery3: \"get_information(relation='Gross', tail_entity='output_of_query2')\"\nStep4: Find the director of output_of_query3\nQuery4: \"get_information(relation='Director', head_entity='output_of_query3')\"",
    "who was arrested on jan 7,1956?": "## Target type: {defendant}\n## Query:\nStep1: Find the entity named January 7, 1956\nQuery1: \"get_information(relation='Arrested', tail_entity='January 7, 1956')\"\nStep2: Find the defendant of output_of_query1\nQuery2: \"get_information(relation='Defendant', head_entity='output_of_query1')\"",
    "has she been in more films in telugu or hindi?": "## Target type: {language}\n## Query:\nStep1: Find the entity named Maria\nQuery1: \"get_information(relation='Role', tail_entity='Maria')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the language of output_of_query4\nQuery5: \"get_information(relation='Language', head_entity='output_of_query4')\"",
    "how many movies did c.v. sridhar direct between 1960 to 1970?": "None",
    "what is the number of films jaya has made per year since her debut?": "None",
    "how many articles were published in the 6th volume?": "## Target type: {number of articles}\n## Query:\nStep1: Find the entity with the relation of Volume equals to 6\nQuery1: \"get_information(relation='Volume', tail_entity='6')\"\nStep2: Find the Articles of output_of_query1\nQuery2: \"get_information(relation='Articles', head_entity='output_of_query1')\"",
    "how many total issues are there in volume 9?": "None",
    "what is the total number of tracks on 2005 best of benassi bros. featuring dhany?": "None",
    "what is the total number of tracks on the benassi bros. greatest hits album?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Benassi Bros.\nQuery1: \"get_information(relation='Artist', tail_entity='Benassi Bros.')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the total number of tracks on the Benassi Bros. greatest hits album\nQuery3: \"count(set='output_of_query2')\"",
    "how many total different people have born the glad for samoa at the olympics?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Flag bearer\nQuery1: \"get_information(relation='Flag bearer')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the two that are substantially intact are ch\u00e2teau de montreuil-bellay and which other one?": "None",
    "are their any other airports that are type \"military/public\" besides eagle farm airport?": "None",
    "how many u.s. open wins does fiji have?": "## Target type: {number of wins}\n## Query:\nStep1: Find the entity named Fiji\nQuery1: \"get_information(relation='Country', tail_entity='Fiji')\"\nStep2: Find the U.S. Open wins of output_of_query1\nQuery2: \"get_information(relation='U.S. Open', head_entity='output_of_query1')\"",
    "who was the only associate justice appointed in 2010?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Year appointed as 2010\nQuery1: \"get_information(relation='Year appointed', tail_entity='2010')\"\nStep2: Find the entity with the relation of Rank as Associate Justice\nQuery2: \"get_information(relation='Rank', tail_entity='Associate Justice')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "anna zagorska recieved 2nd place, what was her time?": "None",
    "after winning week 5, alisa and lysandra had how many winning weeks": "## Target type: {number of winning weeks}\n## Query:\nStep1: Find the entity named Alisa and Lysandra\nQuery1: \"get_information(relation='3rd Couple', tail_entity='Alisa and Lysandra')\"\nStep2: Find the week of output_of_query1\nQuery2: \"get_information(relation='Week', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the week of output_of_query3\nQuery4: \"get_information(relation='Week', tail_entity='output_of_query3')\"\nStep5: Find the Winning Couple of output_of_query3\nQuery5: \"get_information(relation='Winning Couple', tail_entity='output_of_query3')\"\nStep6: Find the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which country is listed the most under the silver column?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Split output_of_query1 by newline '\\n'\nQuery2: \"split(string='output_of_query1', delimiter='\\n')\"\nStep3: Find the most frequent country in output_of_query2\nQuery3: \"mode(set='output_of_query2')\"",
    "what is listed under the movements column of the last season?": "## Target type: {movements}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the movements of output_of_query3\nQuery4: \"get_information(relation='Movements', head_entity='output_of_query3')\"",
    "how many titles have only one artist?": "None",
    "other than march 3, name a game where huistra scored.": "None",
    "name a ship from the united states and one from norway.": "None",
    "what was the overall record of teams at home?": "None",
    "what is the number of the rank of the team on october 7?": "## Target type: {Rank#}\n## Query:\nStep1: Find the entity that Date is October 7\nQuery1: \"get_information(relation='Date', tail_entity='October 7')\"\nStep2: Find the rank number of output_of_query1\nQuery2: \"get_information(relation='Rank#', head_entity='output_of_query1')\"",
    "how long has fc shakhtyor salihorsk been playing in europe?": "None",
    "how many airports are listed?": "## Target type: {number of airports}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of acts does il giustino have?": "None",
    "what is the total number of awards the lion king has won?": "None",
    "does der liebeswalzer or man\u00f6verkinder contain more acts?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Der Liebeswalzer\nQuery1: \"get_information(relation='Title', tail_entity='Der Liebeswalzer')\"\nStep2: Find the entity named Man\u00f6verkinder\nQuery2: \"get_information(relation='Title', tail_entity='Man\u00f6verkinder')\"\nStep3: Find the number of acts of output_of_query1\nQuery3: \"get_information(relation='Sub\u00addivisions', head_entity='output_of_query1')\"\nStep4: Find the number of acts of output_of_query2\nQuery4: \"get_information(relation='Sub\u00addivisions', head_entity='output_of_query2')\"\nStep5: Compare the number of acts of output_of_query3 and output_of_query4\nQuery5: \"set_comparison(set1='output_of_query3', set2='output_of_query4')\"",
    "what work was written after henry hadley had seen an oscar wilde play?": "None",
    "did they play austria wein before or after jeunesse esch?": "## Target type: {relationship}\n## Query:\nStep1: Find the entity named Austria Wein\nQuery1: \"get_information(relation='Opponent', tail_entity='Austria Wein')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity named Jeunesse Esch\nQuery3: \"get_information(relation='Opponent', tail_entity='Jeunesse Esch')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"if_else((output_of_query2 < output_of_query4), 'before', 'after')\"",
    "which lake is smaller in area km\u00b2? albigna lake or oeschinen lake?": "None",
    "other than mecklenburg which county has the largest population?": "None",
    "name the election that only had 9,046 votes.": "## Target type: {election}\n## Query:\nStep1: Find the entity whose Number of votes is 9,046\nQuery1: \"get_information(relation='Number of votes', tail_entity='9,046')\"\nStep2: Find the election of output_of_query1\nQuery2: \"get_information(relation='Election', head_entity='output_of_query1')\"",
    "who received the least amount of votes?": "## Target type: {Candidate}\n## Query:\nStep1: Find the entity with the relation of Votes\nQuery1: \"get_information(relation='Votes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Votes\nQuery3: \"get_information(relation='Votes', tail_entity='output_of_query2')\"\nStep4: Find the candidate of output_of_query3\nQuery4: \"get_information(relation='Candidate', head_entity='output_of_query3')\"",
    "how many teams did the comets win 2 matches against?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that won 2 matches\nQuery1: \"get_information(relation='Won', tail_entity='2')\"\nStep2: Find the entity that the Comets won against in output_of_query1\nQuery2: \"get_information(relation='Opposition', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the last school to join the genesee county b league?": "None",
    "list each code not associated to a year.": "None",
    "the television show \"the two ronnies\" ran for a total of how many seasons?": "None",
    "what was the highest position achieved in 2003?": "None",
    "what is the most amount of people that can attend a deportivo saprissa game in ricardo saprissa?": "## Target type: {capacity}\n## Query:\nStep1: Find the entity named Ricardo Saprissa\nQuery1: \"get_information(relation='Stadium', tail_entity='Ricardo Saprissa')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"",
    "what was the last round held in the 2011 season?": "None",
    "what is the number of times queen's was runner-up in men's?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Queen's\nQuery1: \"get_information(relation='Men's runner-up', tail_entity='Queen's')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is thierry tulasne number of clay court titles?": "## Target type: {number of clay court titles}\n## Query:\nStep1: Find the entity named Thierry Tulasne\nQuery1: \"get_information(relation='Opponent in the final', tail_entity='Thierry Tulasne')\"\nStep2: Find the number of clay court titles of output_of_query1\nQuery2: \"get_information(relation='No.', head_entity='output_of_query1')\"",
    "who won the medal after thomas e. murray in 1952?": "None",
    "what was the first song that this producer helped write?": "## Target type: {'Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which composer is listed below pete doherty?": "## Target type: {composer}\n## Query:\nStep1: Find the entity named Pete Doherty\nQuery1: \"get_information(relation='Composer', tail_entity='Pete Doherty')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the composer of output_of_query4\nQuery5: \"get_information(relation='Composer', head_entity='output_of_query4')\"",
    "how many games did the austrians win in the 1990s?": "None",
    "how many consecutive televised performances by kerry ellis did brian may appear on?": "None",
    "who was the only official guest on july 16-18?": "None",
    "which artist got the same number of jury votes as kasia nova?": "None",
    "which team had the highest number of losses?": "None",
    "which team had the least amount on losses?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Lost\nQuery1: \"get_information(relation='Lost')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min losses\nQuery3: \"get_information(relation='Lost', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which team has the most losses?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Losses\nQuery1: \"get_information(relation='Losses')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Losses\nQuery3: \"get_information(relation='Losses', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "how many gold did netherlands": "## Target type: {number}\n## Query:\nStep1: Find the entity named Netherlands\nQuery1: \"get_information(relation='Nation', tail_entity='Netherlands')\"\nStep2: Find the Gold of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "how long was the teams longest losing streak?": "None",
    "what is the longest consecutive streak of wins for the green bay packers during the 1978 season?": "## Target type: {number of wins}\n## Query:\nStep1: Find the row_number with the relation of Result where the value starts with 'W' (indicating a win)\nQuery1: \"get_information(relation='Result', tail_entity='W')\"\nStep2: Find the consecutive streak of wins in output_of_query1\nQuery2: \"consecutive_streak(set='output_of_query1')\"\nStep3: Find the max streak of wins in output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "how many total awards does cherry jones have?": "None",
    "how many awards did whitney win that were above gold for her album whitney?": "None",
    "what was the number of awards won by prema katha?": "None",
    "what is the number of channels she has appeared on?": "None",
    "which tv show did this actress star in the most episodes?": "## Target type: {Title}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "how many canal 9 shows has this actress been on?": "## Target type: {number of shows}\n## Query:\nStep1: Find the entity named Valeria Garc\u00eda M\u00e9ndez de Salerno\nQuery1: \"get_information(relation='Role', tail_entity='Valeria Garc\u00eda M\u00e9ndez de Salerno')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Channel of output_of_query2\nQuery3: \"get_information(relation='Channel', head_entity='output_of_query2')\"\nStep4: Find the row_number that the Channel is Canal 9\nQuery4: \"get_information(relation='Channel', tail_entity='Canal 9')\"\nStep5: Get the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "of the ten games in which rowaihi scored goals for the saudi team, how many were won by a margin of 3 or more?": "None",
    "which model weighs the most?": "None",
    "which model is the only model to have the lowest caliber?": "None",
    "how many players were from waterford?": "## Target type: {number}\n## Query:\nStep1: Find the entity that County is Waterford\nQuery1: \"get_information(relation='County', tail_entity='Waterford')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the only player to set a record while playing for the chicago bulls": "## Target type: {'Player'}\n## Query:\nStep1: Find the entity whose team is Chicago Bulls\nQuery1: \"get_information(relation='Team', tail_entity='Chicago Bulls')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "in how many places were the records made?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose relation is Place\nQuery1: \"get_information(relation='Place')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which nation has set the record the most times?": "None",
    "how many consecutive records has stacy dragila held": "None",
    "the clean & jerk in the games record and the clean & jerk in the asian record was held by who?": "None",
    "angel fuentes and gilbert wilson were both from which residence?": "## Target type: {residence}\n## Query:\nStep1: Find the entity named Angel Fuentes\nQuery1: \"get_information(relation='Name', tail_entity='Angel Fuentes')\"\nStep2: Find the residence of output_of_query1\nQuery2: \"get_information(relation='Residence', head_entity='output_of_query1')\"\nStep3: Find the entity named Gilbert Wilson\nQuery3: \"get_information(relation='Name', tail_entity='Gilbert Wilson')\"\nStep4: Find the residence of output_of_query3\nQuery4: \"get_information(relation='Residence', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "1967 and 1985 both had what color plates?": "None",
    "in what year was the only baseplate with a white background issued?": "None",
    "which year had the most stamps issued?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Qty. Issued\nQuery1: \"get_information(relation='Qty. Issued')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Qty. Issued\nQuery3: \"get_information(relation='Qty. Issued', tail_entity='output_of_query2')\"\nStep4: Find the Stamp issue date of output_of_query3\nQuery4: \"get_information(relation='Stamp issue date', head_entity='output_of_query3')\"\nStep5: Extract the year from output_of_query4\nQuery5: \"year(output_of_query4)\"",
    "what year was the last license plate issued?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the First issued year of output_of_query3\nQuery4: \"get_information(relation='First issued', head_entity='output_of_query3')\"",
    "which of the existing omnibus (1 or 2) would have the most pages?": "## Target type: {'omnibus'}\n## Query:\nStep1: Find the entity named Omnibus 1\nQuery1: \"get_information(relation='Title', tail_entity='Omnibus 1')\"\nStep2: Find the pages of output_of_query1\nQuery2: \"get_information(relation='Pages', head_entity='output_of_query1')\"\nStep3: Find the entity named Omnibus 2\nQuery3: \"get_information(relation='Title', tail_entity='Omnibus 2')\"\nStep4: Find the pages of output_of_query3\nQuery4: \"get_information(relation='Pages', head_entity='output_of_query3')\"\nStep5: Compare the pages of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many shows had more episodes than dark tales?": "## Target type: {number of shows}\n## Query:\nStep1: Find the entity named \"Dark Tales\"\nQuery1: \"get_information(relation='English title (Chinese title)', tail_entity='Dark Tales')\"\nStep2: Find the number of episodes of output_of_query1\nQuery2: \"get_information(relation='Number of episodes', head_entity='output_of_query1')\"\nStep3: Find the shows that have more episodes than output_of_query2\nQuery3: \"get_information(relation='Number of episodes', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many books did not include \"bulldog drummond\" in the title?": "None",
    "which opponents scored no goals?": "None",
    "which team picked directly after the detroit lions chose gary steele?": "## Target type: {NFL team}\n## Query:\nStep1: Find the entity named Detroit Lions\nQuery1: \"get_information(relation='NFL Team', tail_entity='Detroit Lions')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the NFL Team of output_of_query4\nQuery5: \"get_information(relation='NFL Team', head_entity='output_of_query4')\"",
    "compare the dates for historic and transitional coles creek, which lower yazoo date is earlier?": "None",
    "which is the only creek to be 1 mile in length?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Length\nQuery1: \"get_information(relation='Length', tail_entity='1 mile')\"\nStep2: Get the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the location after tainan?": "## Target type: {location}\n## Query:\nStep1: Find the entity named Tainan\nQuery1: \"get_information(relation='Location', tail_entity='Tainan')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Location of output_of_query4\nQuery5: \"get_information(relation='Location', head_entity='output_of_query4')\"",
    "in what year was the last chicago comicon to take place in chicago?": "## Target type: {year}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Dates of output_of_query3\nQuery4: \"get_information(relation='Dates', head_entity='output_of_query3')\"\nStep5: Extract the year from output_of_query4\nQuery5: \"extract_year(date='output_of_query4')\"",
    "how long has neha been acting?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity with the relation of Role as Neha\nQuery1: \"get_information(relation='Role', tail_entity='Neha')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Get the current year\nQuery3: \"current_year()\"\nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(set1='output_of_query2', set2='output_of_query3')\"",
    "how long is the longest duration of follow-up?": "None",
    "how long os the longest track on the album?": "## Target type: {'Length'}\n## Query:\nStep1: Find all the Lengths\nQuery1: \"get_information(relation='Length')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "how long was it between losing streak almbum and gnv fla in years.": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Losing Streak album\nQuery1: \"get_information(relation='Album', tail_entity='Losing Streak')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named GNV FLA album\nQuery3: \"get_information(relation='Album', tail_entity='GNV FLA')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4 in years\nQuery5: \"year_difference(year1='output_of_query2', year2='output_of_query4')\"",
    "what year was clayton's first album?": "None",
    "how many runner-ups at most are listed?": "## Target type: {number}\n## Query:\nStep1: Find all the entities that have the outcome of \"Runner-up\"\nQuery1: \"get_information(relation='Outcome', tail_entity='Runner-up')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which nation came before spain?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "the nation before mexico in the table": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Mexico\nQuery1: \"get_information(relation='Nation', tail_entity='Mexico')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what nation came after spain?": "## Target type: {nation}\n## Query:\nStep1: Find the entity named Spain\nQuery1: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the nation of output_of_query4\nQuery5: \"get_information(relation='Nation', head_entity='output_of_query4')\"",
    "what was the total attendance for the game against texas?": "## Target type: {total attendance}\n## Query:\nStep1: Find the entity named Texas\nQuery1: \"get_information(relation='Opponent#', tail_entity='Texas')\"\nStep2: Find the attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what college had the most first team all americans in 2011?": "None",
    "what ethnicity is next under belorussian on the chart?": "## Target type: {ethnicity}\n## Query:\nStep1: Find the entity named Belorussian\nQuery1: \"get_information(relation='Ethnicity', tail_entity='Belorussian')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Ethnicity of output_of_query4\nQuery5: \"get_information(relation='Ethnicity', head_entity='output_of_query4')\"",
    "what years were the 5th and 10 vidhan sabha?": "None",
    "tell me the number of pillow pals reintroduced in 1999.": "None",
    "four ot picks in round four were shawn gifford, ryan donelly and andrew carter. who was the other pick?": "None",
    "what is the top speed of the class 08": "None",
    "what is the difference in speed for the gmt-class and the te-class?": "## Target type: {difference in speed}\n## Query:\nStep1: Find the entity named GMT-class\nQuery1: \"get_information(relation='Name', tail_entity='GMT-class')\"\nStep2: Find the speed of output_of_query1\nQuery2: \"get_information(relation='Speed', head_entity='output_of_query1')\"\nStep3: Find the entity named TE-class\nQuery3: \"get_information(relation='Name', tail_entity='TE-class')\"\nStep4: Find the speed of output_of_query3\nQuery4: \"get_information(relation='Speed', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who was the jockey of the only horse with a starting price of below 20/1?": "None",
    "how much greater is the height of cable over ground measurement for the peak 2 peak gondola when compared with that of the vanoise express?": "## Target type: {difference in measurement}\n## Query:\nStep1: Find the entity named Vanoise Express\nQuery1: \"get_information(relation='Tramway', tail_entity='Vanoise Express')\"\nStep2: Find the height of cable over ground for output_of_query1\nQuery2: \"get_information(relation='Height of cable over ground', head_entity='output_of_query1')\"\nStep3: Find the entity named Peak 2 Peak Gondola\nQuery3: \"get_information(relation='Tramway', tail_entity='Peak 2 Peak Gondola')\"\nStep4: Find the height of cable over ground for output_of_query3\nQuery4: \"get_information(relation='Height of cable over ground', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query4 and output_of_query2\nQuery5: \"calculate_difference(value1='output_of_query4', value2='output_of_query2')\"",
    "did she win as an outstanding actress in a daytime drama series more than she lost?": "None",
    "which athlete from poland had the lowest time?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the Nationality of Poland\nQuery1: \"get_information(relation='Nationality', tail_entity='Poland')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min Time\nQuery4: \"get_information(relation='Time', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "where did mckoy compete before finland?": "None",
    "what was the total number of swimmers in the race?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is the race\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the total number of swimmers in the race\nQuery2: \"count(set='output_of_query1')\"",
    "how many swimmers swam faster than 1:03.59?": "None",
    "how many mexican swimmers ranked in the top 10?": "None",
    "which mayor(s), if any, resigned from the mayoralty in 1933?": "None",
    "was johnny williamson or dick mcgowen the coach in 1952?": "## Target type: {coach}\n## Query:\nStep1: Find the entity named Johnny Williamson\nQuery1: \"get_information(relation='Coach', tail_entity='Johnny Williamson')\"\nStep2: Find the Tenure of output_of_query1\nQuery2: \"get_information(relation='Tenure', head_entity='output_of_query1')\"\nStep3: Find the entity named Dick McGowen\nQuery3: \"get_information(relation='Coach', tail_entity='Dick McGowen')\"\nStep4: Find the Tenure of output_of_query3\nQuery4: \"get_information(relation='Tenure', head_entity='output_of_query3')\"\nStep5: Check if 1952 exists between output_of_query2 and output_of_query4\nQuery5: \"1952 in range(start='output_of_query2', end='output_of_query4')\"",
    "what is the name of the bell with the most diameter?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity that is 'Diameter'\nQuery1: \"get_information(relation='Diameter')\"\nStep2: Find the max diameter of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max diameter\nQuery3: \"get_information(relation='Diameter', tail_entity='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the least core diameter (in)?": "## Target type: {core diameter}\n## Query:\nStep1: Find the entity with the relation of Core diameter (in)\nQuery1: \"get_information(relation='Core diameter (in)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"",
    "the first time barr scored in a fifa world cup qualifier, who was the opponent?": "None",
    "what year scored the most nominations?": "None",
    "how many players are australian?": "None",
    "how many players were from notre dame?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Notre Dame\nQuery1: \"get_information(relation='School', tail_entity='Notre Dame')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which team or teams had five winners total?": "None",
    "what country has the most start records?": "None",
    "which year was joan rivers nominated for a tony award and what was the nominated work?": "None",
    "what is the difference between rank 5 and rank 11 transfer fee": "## Target type: {'Transfer fee'}\n## Query:\nStep1: Find the entity with the relation of Rank being 5\nQuery1: \"get_information(relation='Rank', tail_entity='5')\"\nStep2: Find the Transfer fee of output_of_query1\nQuery2: \"get_information(relation='Transfer fee', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Rank being 11\nQuery3: \"get_information(relation='Rank', tail_entity='11')\"\nStep4: Find the Transfer fee of output_of_query3\nQuery4: \"get_information(relation='Transfer fee', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(a='output_of_query2', b='output_of_query4')\"",
    "where have they played more often, palau track and field stadium or the yap sports complex?": "## Target type: {venue}\n## Query:\nStep1: Find all the Opponents\nQuery1: \"get_information(relation='Opponents')\"\nStep2: Find the count of occurrences for Palau Track and Field Stadium\nQuery2: \"count(set='output_of_query1', key='Palau Track and Field Stadium')\"\nStep3: Find the count of occurrences for Yap Sports Complex\nQuery3: \"count(set='output_of_query1', key='Yap Sports Complex')\"\nStep4: Execute the Calculator function to compare the counts and get the venue that was played more often:\nQuery4: \"compare(set1='output_of_query2', set2='output_of_query3', operator='greater')\"",
    "when was the first game played in houston, tx?": "None",
    "when was the first neutral site game to be won by tampa bay?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity named Tampa Bay\nQuery1: \"get_information(relation='Winning Team', tail_entity='Tampa Bay')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row with the min row_number that the Winning Team is Tampa Bay\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Date of output_of_query3\nQuery4: \"get_information(relation='Date', head_entity='output_of_query3')\"",
    "which standard was published first?": "## Target type: {'ISO/IEC Standard'}\n## Query:\nStep1: Find all ISO/IEC Standards\nQuery1: \"get_information(relation='ISO/IEC Standard')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the ISO/IEC Standard with the min row_number\nQuery3: \"get_information(relation='ISO/IEC Standard', tail_entity='output_of_query2')\"",
    "what was the name of the first album released?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "what was the date of the first vinyl lp release?": "None",
    "did robby gordon place above or beloy bobby rahal?": "## Target type: {'Pos'}\n## Query:\nStep1: Find the entity named Robby Gordon\nQuery1: \"get_information(relation='Driver', tail_entity='Robby Gordon')\"\nStep2: Find the Pos of output_of_query1\nQuery2: \"get_information(relation='Pos', head_entity='output_of_query1')\"\nStep3: Find the entity named Bobby Rahal\nQuery3: \"get_information(relation='Driver', tail_entity='Bobby Rahal')\"\nStep4: Find the Pos of output_of_query3\nQuery4: \"get_information(relation='Pos', head_entity='output_of_query3')\"\nStep5: Check if output_of_query2 is below output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "who came in next after james hunt?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named James Hunt\nQuery1: \"get_information(relation='Driver', tail_entity='James Hunt')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "which jockey is on top in age": "## Target type: {jockey}\n## Query:\nStep1: Find the entity with the relation of Age\nQuery1: \"get_information(relation='Age')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Age\nQuery3: \"get_information(relation='Age', tail_entity='output_of_query2')\"\nStep4: Find the Jockey of output_of_query3\nQuery4: \"get_information(relation='Jockey', head_entity='output_of_query3')\"",
    "which prison is designed to hold more prisoners. kosh or erebuni?": "## Target type: {prison}\n## Query:\nStep1: Find the entity named Kosh\nQuery1: \"get_information(relation='Name', tail_entity='Kosh')\"\nStep2: Find the number of prisoners designed for output_of_query1\nQuery2: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query1')\"\nStep3: Find the entity named Erebuni\nQuery3: \"get_information(relation='Name', tail_entity='Erebuni')\"\nStep4: Find the number of prisoners designed for output_of_query3\nQuery4: \"get_information(relation='# of prisoners designed for', head_entity='output_of_query3')\"\nStep5: Compare the number of prisoners designed for output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many cyclist do not have -1 laps down?": "## Target type: {number}\n## Query:\nStep1: Find all the cyclist entities\nQuery1: \"get_information(relation='Cyclist')\"\nStep2: Find all the Laps down entities that have the value of -1\nQuery2: \"get_information(relation='Laps down', tail_entity='-1')\"\nStep3: Get the negation of output_of_query2\nQuery3: \"set_negation(set='output_of_query2', universe='output_of_query1')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which tv series has the longest running time?": "None",
    "georgia was the opponent for how many consecutive days?": "## Target type: {number of consecutive days}\n## Query:\nStep1: Find the opponent named Georgia\nQuery1: \"get_information(relation='Opponent', tail_entity='Georgia')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity=output_of_query3)\"\nStep5: Calculate the consecutive days between output_of_query2 and output_of_query4\nQuery5: \"count(set='output_of_query4') + 1\"",
    "what opponent was competed against the most often?": "## Target type: {opponent}\n## Query:\nStep1: Find all the opponent\nQuery1: \"get_information(relation='Opponent')\"\nStep2: Find the opponent that appears the most\nQuery2: \"mode(set='output_of_query1')\"",
    "what is the greatest number of consecutive wins that the bears had against any opponent?": "None",
    "the name at the last of the list": "## Target type: {name}\n## Query:\nStep1: Find the row_number \nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Name on the Register of output_of_query3\nQuery4: \"get_information(relation='Name on the Register', head_entity='output_of_query3')\"",
    "how many riders earned at lease 20 points?": "None",
    "how many prions were identified in 2012?": "## Target type: {number}\n## Query:\nStep1: Find the entity with relation Year Identified is 2012\nQuery1: \"get_information(relation='Year Identified', tail_entity='2012')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of pics from the big east in the first two rounds?": "None",
    "how many prions have been characterized?": "## Target type: {number of prions}\n## Query:\nStep1: Find the entities with the relation of Prion State\nQuery1: \"get_information(relation='Prion State')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what number of times was the venue manny ramjohn stadium?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Venue is Manny Ramjohn Stadium\nQuery1: \"get_information(relation='Venue', tail_entity='Manny Ramjohn Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "compare draws, which had the least amount of points?": "None",
    "which consecutive years had the same number of seats available?": "None",
    "what circuit is after symmons plains raceway?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Circuit named \"Symmons Plains Raceway\"\nQuery1: \"get_information(relation='Circuit', tail_entity='Symmons Plains Raceway')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Circuit of output_of_query4\nQuery5: \"get_information(relation='Circuit', head_entity='output_of_query4')\"",
    "what is the total number of matches played by brazilians for melbourne?": "None",
    "what is the total number of games that started at 7:00?": "## Target type: {number of games}\n## Query:\nStep1: Find the games that started at 7:00\nQuery1: \"get_information(relation='Time', tail_entity='7:00')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games were not scheduled for 1:00 pm?": "None",
    "how many album entries are there?": "None",
    "who hosted the most consecutive years?": "## Target type: {'Host / Location'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Host / Location of output_of_query3\nQuery4: \"get_information(relation='Host / Location', head_entity='output_of_query3')\"",
    "how many consecutive times was david nedohin the skip?": "None",
    "in what year did \u00e1d\u00e1m szalai make his next international goal after 2010?": "None",
    "which country has the lowest 2012 gdp at ppp in 2012?": "None",
    "how many players had nicknames starting with the letter w": "None",
    "who did the nationals play after the all-star game?": "None",
    "who won the most nwa southern tag team championships (mid-america version)?": "None",
    "which is the first jockey on the chart": "## Target type: {jockey}\n## Query:\nStep1: Find all the row_number on the chart\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Jockey of output_of_query3\nQuery4: \"get_information(relation='Jockey', head_entity='output_of_query3')\"",
    "how many annie awards were won before 2009?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Year is 2009\nQuery1: \"get_information(relation='Year', tail_entity='2009')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities that have a row_number smaller than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Find the entities that Award is Annie Award\nQuery4: \"get_information(relation='Award', tail_entity='Annie Award')\"\nStep5: Get the intersection of output_of_query3 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query3', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "how many awards did chicago win in 1997?": "None",
    "other than kurt busch, name a driver who won a race in april.": "None",
    "how many gold medals did italy, belgium and ireland have altogether.": "None",
    "how many years after 1996 did they have another song?": "None",
    "how many years was the cesail mine connected?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Cesail mine\nQuery1: \"get_information(relation='Name', tail_entity='Cesail mine')\"\nStep2: Find the years when output_of_query1 was connected\nQuery2: \"get_information(relation='Years connected', head_entity='output_of_query1')\"\nStep3: Calculate the difference in years of output_of_query2\nQuery3: \"calculate_years(set='output_of_query2')\"",
    "what venue was the first olympic games held in 1984?": "## Target type: {venue}\n## Query:\nStep1: Find the row_number of Olympic Games held in 1984\nQuery1: \"get_information(relation='Year', tail_entity='1984')\"\nStep2: Find the venue of output_of_query1\nQuery2: \"get_information(relation='Venue', head_entity='output_of_query1')\"",
    "what was the last year where tijuana was a venue?": "None",
    "which jockey is before tm jones": "None",
    "how many total rounds did she fight in?": "None",
    "who was the top scorer in evening gown?": "None",
    "how many teams did not win any gold medals in this event?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams that won gold medals\nQuery1: \"get_information(relation='Gold', tail_entity>'0')\"\nStep2: Get the negation of output_of_query1\nQuery2: \"set_negation(set='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "which team had the most medals without a gold medal?": "None",
    "how many temples are in takamatsu?": "## Target type: {number}\n## Query:\nStep1: Find all the City/Town/Village entities\nQuery1: \"get_information(relation='City/Town/Village')\"\nStep2: Find the entity named Takamatsu\nQuery2: \"get_information(relation='City/Town/Village', tail_entity='Takamatsu')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the difference between germany and spains total medals?": "None",
    "number of men's winners with a finish time under 46:58": "None",
    "name of athlete who came in first in heat 1 of the women's 200 metres": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of row_number is 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the athlete of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "which driver won after ponsiano lwakataka?": "## Target type: {'Driver'}\n## Query:\nStep1: Find the entity named Ponsiano Lwakataka\nQuery1: \"get_information(relation='Driver', tail_entity='Ponsiano Lwakataka')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "how many winning oldsmobile vehicles made the list?": "## Target type: {number of vehicles}\n## Query:\nStep1: Find the vehicles with the Make Oldsmobile\nQuery1: \"get_information(relation='Make', tail_entity='Oldsmobile')\"\nStep2: Find the winners of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what was the year in which no event was held?": "None",
    "who was the only opponent to allow no points in a game?": "## Target type: {opponent}\n## Query:\nStep1: Find the entity that Result is \"W 0\u20130\"\nQuery1: \"get_information(relation='Result', tail_entity='W 0\u20130')\"\nStep2: Find the opponent of output_of_query1\nQuery2: \"get_information(relation='Opponent', head_entity='output_of_query1')\"",
    "what is the difference between the player with the most experience and the least amount of experience?": "None",
    "what car achieved the highest qual?": "## Target type: {car}\n## Query:\nStep1: Find the entity that achieved the highest Qual\nQuery1: \"get_information(relation='Qual', tail_entity>='highest')\"\nStep2: Find the car of output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"",
    "what is the company with the highest revenue in the automotive industry?": "## Target type: {company}\n## Query:\nStep1: Find the entities in the automotive industry\nQuery1: \"get_information(relation='Industry', tail_entity='Automotive')\"\nStep2: Find the Revenue of output_of_query1\nQuery2: \"get_information(relation='Revenue (USD billions)', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max Revenue\nQuery4: \"get_information(relation='Revenue (USD billions)', tail_entity='output_of_query3')\"\nStep5: Find the company of output_of_query4\nQuery5: \"get_information(relation='Company', head_entity='output_of_query4')\"",
    "how many times was durrant a scorer between 1992 and 1993?": "None",
    "what is the name of the person who won most favorite actress the year before dian sastrowardoyo won?": "None",
    "which mayor was for the least time period as mayor position?": "None",
    "how many mayors of anglet town served for longer than the previous mayor?": "None",
    "who is the first person on the list to play less than 20 minutes?": "None",
    "how many times did jeff gordon win the award?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jeff Gordon\nQuery1: \"get_information(relation='Driver', tail_entity='Jeff Gordon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "largest victory": "None",
    "in the 2008 rally new zealand, which driver was faster, solberg or gardemeister?": "None",
    "who had the fastest lap at the german grand prix?": "## Target type: {'Fastest Lap'}\n## Query:\nStep1: Find the entity named German Grand Prix\nQuery1: \"get_information(relation='Grand Prix', tail_entity='German Grand Prix')\"\nStep2: Find the Fastest Lap of output_of_query1\nQuery2: \"get_information(relation='Fastest Lap', head_entity='output_of_query1')\"",
    "what is the number of members that served in the royal canadian air force?": "None",
    "which french competitor won the largest amount of medals in the 2000 summer olympics?": "None",
    "did the olympic trials or the american cup have more events?": "## Target type: {event}\n## Query:\nStep1: Find the events of Olympic Trials\nQuery1: \"get_information(relation='Competition', tail_entity='Olympic Trials')\"\nStep2: Find the events of American Cup\nQuery2: \"get_information(relation='Competition', tail_entity='American Cup')\"\nStep3: Get the count of output_of_query1\nQuery3: \"count(set='output_of_query1')\"\nStep4: Get the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"comparison(set1='output_of_query3', set2='output_of_query4')\"",
    "was he nominated more than he actually won?": "## Target type: {yes/no}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity with the relation of Result\nQuery2: \"get_information(relation='Result')\"\nStep3: Get the count of output_of_query2 where the value is \"Nominated\"\nQuery3: \"count(set='output_of_query2', key='Result', value='Nominated')\"\nStep4: Get the count of output_of_query2 where the value is \"Won\"\nQuery4: \"count(set='output_of_query2', key='Result', value='Won')\"\nStep5: Compare the count of output_of_query3 and output_of_query4\nQuery5: \"compare(count1='output_of_query3', count2='output_of_query4')\"",
    "how many cars are based on the plymouth and blackburn tramcars?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes', tail_entity='Plymouth and Blackburn tramcars')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many utility vehicle models are classified as a light utility vehicle?": "None",
    "what is the name of the last seat?": "## Target type: {'Seat'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Seat of output_of_query3\nQuery4: \"get_information(relation='Seat', head_entity='output_of_query3')\"",
    "do the ages of 50 to 59 have a higher catholic percentage than the ages of 45 to 49?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that ages is 50 to 59\nQuery1: \"get_information(relation='Ages attained (years)', tail_entity='50 to 59')\"\nStep2: Find the catholic percentage of output_of_query1\nQuery2: \"get_information(relation='Catholic', head_entity='output_of_query1')\"\nStep3: Find the entity that ages is 45 to 49\nQuery3: \"get_information(relation='Ages attained (years)', tail_entity='45 to 49')\"\nStep4: Find the catholic percentage of output_of_query3\nQuery4: \"get_information(relation='Catholic', head_entity='output_of_query3')\"\nStep5: Calculate whether the catholic percentage of output_of_query1 is higher than output_of_query3\nQuery5: \"compare(value1='output_of_query2', operator='>', value2='output_of_query4')\"",
    "how many gold medals does belgium, france, and turkey have total?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Belgium\nQuery1: \"get_information(relation='Nation', tail_entity='Belgium')\"\nStep2: Find the entity named France\nQuery2: \"get_information(relation='Nation', tail_entity='France')\"\nStep3: Find the entity named Turkey\nQuery3: \"get_information(relation='Nation', tail_entity='Turkey')\"\nStep4: Find the gold medals of output_of_query1\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep5: Find the gold medals of output_of_query2\nQuery5: \"get_information(relation='Gold', head_entity='output_of_query2')\"\nStep6: Find the gold medals of output_of_query3\nQuery6: \"get_information(relation='Gold', head_entity='output_of_query3')\"\nStep7: Get the sum of output_of_query4, output_of_query5, and output_of_query6\nQuery7: \"addition(num1='output_of_query4', num2='output_of_query5', num3='output_of_query6')\"",
    "the first five implied probabilities of elias gamma coding.": "None",
    "which skiier placed above anna jochemsen, bu below mariya papulova": "None",
    "what is the number of mayors with the first name of john?": "None",
    "which driver is listed after pat o'connor?": "## Target type: {driver}\n## Query:\nStep1: Find the entity named Pat O'Connor\nQuery1: \"get_information(relation='Driver', tail_entity='Pat OConnor')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Driver of output_of_query4\nQuery5: \"get_information(relation='Driver', head_entity='output_of_query4')\"",
    "who was the next winner after azovmash in 2004?": "None",
    "what was the last year where connors won?": "None",
    "who was the top ranked competitor in the race?": "## Target type: {'Athlete'}\n## Query:\nStep1: Find the entity with the relation Rank and Rank value is 1.\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Athlete of output_of_query1\nQuery2: \"get_information(relation='Athlete', head_entity='output_of_query1')\"",
    "los angeles and what other city had about 19,000 passenger combined": "None",
    "what was the difference in score on january 2 1922?": "## Target type: {score difference}\n## Query:\nStep1: Find the entity with the relation of Date of \"January 2, 1922\"\nQuery1: \"get_information(relation='Date', tail_entity='January 2, 1922')\"\nStep2: Find the entity with the relation of Result of output_of_query1\nQuery2: \"get_information(relation='Result F-A', head_entity='output_of_query1')\"\nStep3: Calculate the difference in score of output_of_query2\nQuery3: \"Calculator(operation='-', operand1='score_part1', operand2='score_part2', set='output_of_query2')\"",
    "was the nickname of four corners the kangaroos or the redlegs?": "## Target type: {'Nickname'}\n## Query:\nStep1: Find the entity named Four Corners\nQuery1: \"get_information(relation='Club', tail_entity='Four Corners')\"\nStep2: Get the Nickname of output_of_query1\nQuery2: \"get_information(relation='Nickname', head_entity='output_of_query1')\"",
    "pg andersson and toni gardemeister were both driving what type of car?": "## Target type: {car}\n## Query:\nStep1: Find the entity named PG Andersson\nQuery1: \"get_information(relation='Driver', tail_entity='PG Andersson')\"\nStep2: Find the car of output_of_query1\nQuery2: \"get_information(relation='Car', head_entity='output_of_query1')\"\nStep3: Find the entity named Toni Gardemeister\nQuery3: \"get_information(relation='Driver', tail_entity='Toni Gardemeister')\"\nStep4: Find the car of output_of_query3\nQuery4: \"get_information(relation='Car', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "how many racers drive trucks that are the same model as brian rose?": "None",
    "which is the first latin name on the chart": "## Target type: {latin name}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the latin name of output_of_query3\nQuery4: \"get_information(relation='Latin name', head_entity='output_of_query3')\"",
    "what is the last year steve grissom had at least one win?": "None",
    "chipper adams and justin beyendeza have how mnay wins?": "None",
    "what was the top rated episode of this show?": "## Target type: {Episode title}\n## Query:\nStep1: Find the entity with the relation of Ratings\nQuery1: \"get_information(relation='Ratings')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max ratings\nQuery3: \"get_information(relation='Ratings', tail_entity='output_of_query2')\"\nStep4: Find the Episode title of output_of_query3\nQuery4: \"get_information(relation='Episode title', head_entity='output_of_query3')\"",
    "how many wins came out of ohio state?": "None",
    "how many groups are listed in the year 1948?": "None",
    "how many competitors did not start the preliminaries?": "None",
    "which player has canadian nationality and attended langley hornets?": "## Target type: {player}\n## Query:\nStep1: Find the entity with Nationality as Canadian\nQuery1: \"get_information(relation='Nationality', tail_entity='Canadian')\"\nStep2: Find the entity that attended Langley Hornets\nQuery2: \"get_information(relation='College/Junior/Club Team (League)', tail_entity='Langley Hornets')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who is the only player who had their number retired by the nhl for all teams?": "## Target type: {player}\n## Query:\nStep1: Find the entity named NHL\nQuery1: \"get_information(relation='Org', tail_entity='NHL')\"\nStep2: Find the entity with the relation of No. Retired\nQuery2: \"get_information(relation='No. Retired', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Player\nQuery3: \"get_information(relation='Player', head_entity='output_of_query2')\"\nStep4: Find the set of unique output_of_query3\nQuery4: \"set_unique(set='output_of_query3')\"",
    "which canadian was involved in hockey, other than wayne gretzky?": "None",
    "what is the first sensor size in the table?": "None",
    "david dallas won in 2010. what was the name of the album that won the next year?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity in Year that is 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "what was the country previous to belgium on the table?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Country is Belgium\nQuery1: \"get_information(relation='Country', tail_entity='Belgium')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Country of output_of_query4\nQuery5: \"get_information(relation='Country', head_entity='output_of_query4')\"",
    "which player had the same result as mark robins?": "None",
    "what are the number of times anwil wloclawek is listed as the runner-up?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Anwil Wloclawek\nQuery1: \"get_information(relation='Runner-up', tail_entity='Anwil Wloclawek')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "in which season did gunter thiebaut score the most goals?": "None",
    "what was the number of combined tackles in 2010?": "## Target type: {number of combined tackles}\n## Query:\nStep1: Find the entity for the year 2010\nQuery1: \"get_information(relation='Year', tail_entity='2010')\"\nStep2: Find the combined tackles of output_of_query1\nQuery2: \"get_information(relation='Combined Tackles', head_entity='output_of_query1')\"",
    "how many mayors of airan were in office for over a decade?": "None",
    "who has a larger amount of championships as a plk medalist?": "None",
    "who was the only australian in the top five in the semifinals?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Nationality as Australia\nQuery1: \"get_information(relation='Nationality', tail_entity='Australia')\"\nStep2: Find the entity with the relation of Rank as 1 to 5\nQuery2: \"get_information(relation='Rank', tail_entity<=5)\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the number of players who weight over 200 pounds?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity with the relation of Weight (lbs.)\nQuery1: \"get_information(relation='Weight (lbs.)')\"\nStep2: Find the players whose weight is over 200 pounds\nQuery2: \"get_information(relation='Weight (lbs.)', tail_entity>'200')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many consecutive players weigh less than 200 lbs?": "None",
    "which player weighed the least?": "None",
    "how many people live in the bold civil parish?": "## Target type: {population}\n## Query:\nStep1: Find the civil parish named Bold\nQuery1: \"get_information(relation='Name', tail_entity='Bold')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"",
    "in this contest, which team was the top contender?": "## Target type: {'Home team'}\n## Query:\nStep1: Find the row_number of 7\nQuery1: \"get_information(relation='row_number', tail_entity='7')\"\nStep2: Find the home team of output_of_query1\nQuery2: \"get_information(relation='Home team', head_entity='output_of_query1')\"",
    "how long did the last place swimmer take to swim the 100 meter butterfly?": "None",
    "how many years was the gross domestic product above 6,000?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Gross Domestic Product is above 6,000\nQuery1: \"get_information(relation='Gross Domestic Product', tail_entity>'6000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "one year, he had 10 assisted tackles. how many did he have the previous year?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Assisted Tackles\nQuery1: \"get_information(relation='Assisted Tackles', tail_entity='10')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Assisted Tackles of output_of_query4\nQuery5: \"get_information(relation='Assisted Tackles', head_entity='output_of_query4')\"",
    "which team is the most attended team?": "None",
    "what brand comes next after opiren?": "## Target type: {brand}\n## Query:\nStep1: Find the entity named Opiren\nQuery1: \"get_information(relation='Brand', tail_entity='Opiren')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number equal to output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Brand of output_of_query4\nQuery5: \"get_information(relation='Brand', head_entity='output_of_query4')\"",
    "how many teams have kits manufactured by samurai?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity that Kit manufacturer is Samurai\nQuery1: \"get_information(relation='Kit manufacturer', tail_entity='Samurai')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams share a common kit manufacturer?": "## Target type: {number}\n## Query:\nStep1: Find the kit manufacturers of all teams\nQuery1: \"get_information(relation='Kit manufacturer')\"\nStep2: Find the count of unique kit manufacturers\nQuery2: \"count(set='output_of_query1')\"",
    "of those teams with kit manufactured by nike, which has a stadium with the most capacity?": "## Target type: {team}\n## Query:\nStep1: Find the teams with kit manufactured by Nike\nQuery1: \"get_information(relation='Kit manufacturer', tail_entity='Nike')\"\nStep2: Find the stadium of output_of_query1\nQuery2: \"get_information(relation='Stadium', head_entity='output_of_query1')\"\nStep3: Find the max capacity among output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Get the team with the max capacity stadium\nQuery4: \"get_information(relation='Stadium', tail_entity='output_of_query3')\"\nStep5: Get the team name of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many awards has elizabeth dawn received, in total, for her work in the entertainment industry?": "None",
    "what title is listed next in the table after autumn beds?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity named Autumn Beds\nQuery1: \"get_information(relation='Title', tail_entity='Autumn Beds')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what is the name of the country that had the most international tourism arrivals in 2010?": "None",
    "what country had the most players loaned in?": "## Target type: {country}\n## Query:\nStep1: Find all the entities with the relation of From\nQuery1: \"get_information(relation='From')\"\nStep2: Get the count of each entity and group by the country\nQuery2: \"group_by(set='output_of_query1', key='Country', operation='count')\"\nStep3: Find the country with the most players loaned in\nQuery3: \"max(set='output_of_query2')\"",
    "how many competitors from venezuela qualified for the final?": "## Target type: {number of competitors}\n## Query:\nStep1: Find the entity named Venezuela\nQuery1: \"get_information(relation='Country', tail_entity='Venezuela')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number and Note is not 'Q'\nQuery3: \"get_information(relation='Note', tail_entity!='Q', row_number='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "does any whitworth size have the same core diameter as the number drill 26?": "None",
    "when did pier ruggero piccio's term start?": "## Target type: {'Term start'}\n## Query:\nStep1: Find the entity named Pier Ruggero Piccio\nQuery1: \"get_information(relation='Name', tail_entity='Pier Ruggero Piccio')\"\nStep2: Find the Term start of output_of_query1\nQuery2: \"get_information(relation='Term start', head_entity='output_of_query1')\"",
    "what year had the next highest percentage for roma after 2011?": "None",
    "what country had at most four fourth place winnings?": "## Target type: {country}\n## Query:\nStep1: Find the entity in Fourth place that appears at most four times.\nQuery1: \"get_information(relation='Fourth place', tail_entity>='at most 4')\"\nStep2: Find the Fourth place of output_of_query1\nQuery2: \"get_information(relation='Fourth place', head_entity='output_of_query1')\"\nStep3: Get the set of countries in output_of_query2\nQuery3: \"set(output='output_of_query2')\"\nStep4: Calculate the count of each country in output_of_query3\nQuery4: \"count_by_value(set='output_of_query3')\" \nStep5: Find the country with the maximum count from output_of_query4\nQuery5: \"max(set='output_of_query4')\"",
    "how many athletes represented sweden?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Country is Sweden\nQuery1: \"get_information(relation='Country', tail_entity='Sweden')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which female athlete has been the flag bearer for georgia in the olympics twice?": "None",
    "which men's alpine skiing event had the most icelandic competitors?": "## Target type: {'Event'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with the max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Event of output_of_query3\nQuery4: \"get_information(relation='Event', head_entity='output_of_query3')\"",
    "what is the series number of the piece called \"chopin's last composition\"?": "## Target type: {'Series number'}\n## Query:\nStep1: Find the entity that is called \"Chopin's Last Composition\"\nQuery1: \"get_information(relation='Notes', tail_entity='Chopin's Last Composition')\"\nStep2: Find the series number of output_of_query1\nQuery2: \"get_information(relation='Series number', head_entity='output_of_query1')\"",
    "who entered before robert roode?": "## Target type: {wrestler}\n## Query:\nStep1: Find the entity named Robert Roode\nQuery1: \"get_information(relation='Wrestler', tail_entity='Robert Roode')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the wrestler of output_of_query4\nQuery5: \"get_information(relation='Wrestler', head_entity='output_of_query4')\"",
    "how many defensive (df) players are there on the national team?": "## Target type: {number}\n## Query:\nStep1: Find all the players on the national team.\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entities where the position is DF\nQuery2: \"get_information(relation='pos.', tail_entity='DF')\"\nStep3: Get the count of the output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the total number of passes this player has defended?": "None",
    "who was the last opponent this team faced in the 2010 afc asian cup?": "None",
    "after goi, what was the next temple?": "None",
    "name the team that finished directly after josiah ng's.": "## Target type: {team}\n## Query:\nStep1: Find the entity named Josiah Ng\nQuery1: \"get_information(relation='Cyclists', tail_entity='Josiah Ng')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity named Team of output_of_query4\nQuery5: \"get_information(relation='Team', head_entity='output_of_query4')\"",
    "how many consecutive years did he score more than 2 goals?": "None",
    "how many languages has he been in that are in the telugu language?": "## Target type: {number of languages}\n## Query:\nStep1: Find the entity that Language is Telugu\nQuery1: \"get_information(relation='Language', tail_entity='Telugu')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what is the last honors/award title listed on this chart?": "## Target type: {'Honour/Award Title'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Honour/Award Title of output_of_query3\nQuery4: \"get_information(relation='Honour/Award Title', head_entity='output_of_query3')\"",
    "what is the name of the title after number 9?": "## Target type: {title}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the entity that is after number 9\nQuery2: \"get_information(relation='row_number', tail_entity='9')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Find the next_row of output_of_query3\nQuery4: \"next_row(set='output_of_query3')\"\nStep5: Get the entity with the row_number of output_of_query4\nQuery5: \"get_information(relation='row_number', tail_entity='output_of_query4')\"\nStep6: Get the Title of output_of_query5\nQuery6: \"get_information(relation='Title', head_entity='output_of_query5')\"",
    "which were the only two longest running shows to open in july?": "None",
    "the first opened station": "None",
    "what was the only season that skeid won gold?": "## Target type: {'Season'}\n## Query:\nStep1: Find the entity named Skeid\nQuery1: \"get_information(relation='Gold', tail_entity='Skeid')\"\nStep2: Find the season of output_of_query1\nQuery2: \"get_information(relation='Season', head_entity='output_of_query1')\"",
    "which person has led the conference the most?": "None",
    "which school had the least wins in the conference?": "None",
    "what was the only conference to have an attendance over 1,000?": "None",
    "which wikimania conference has the least number of attendees?": "## Target type: {conference}\n## Query:\nStep1: Find the entity with the relation of Conference\nQuery1: \"get_information(relation='Conference')\"\nStep2: Find the entity with the relation of attendance that has the min value\nQuery2: \"get_information(relation='attendance', tail_entity<='min')\"\nStep3: Find the conference of output_of_query2\nQuery3: \"get_information(relation='Conference', head_entity='output_of_query2')\"",
    "how many r'n'b stations are broadcasted by mxr yorkshire?": "None",
    "how many high jumpers had a result of 2.19?": "## Target type: {number of high jumpers}\n## Query:\nStep1: Find the entity with relation Result equals 2.19\nQuery1: \"get_information(relation='Result', tail_entity='2.19')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is the only high jumper to have a result of 2.05?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the result of 2.05\nQuery1: \"get_information(relation='Result', tail_entity='2.05')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "what is the total number of years andorra competed?": "None",
    "how many consecutive year did the grand total value grow in iran?": "None",
    "what is the total agricultural value in 2008/09?": "None",
    "who was the next consecutive woman to be executed after lynda lyon block?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Lynda Lyon Block\nQuery1: \"get_information(relation='Name', tail_entity='Lynda Lyon Block')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many chevrolets were in the top 10?": "## Target type: {number of chevrolets}\n## Query:\nStep1: Find the entities in the top 10\nQuery1: \"get_information(relation='row_number', tail_entity<=10)\"\nStep2: Find the entities with the relation of Make as Chevrolet\nQuery2: \"get_information(relation='Make', tail_entity='Chevrolet')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many chevrolets finished in the top ten?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Make as Chevrolet\nQuery1: \"get_information(relation='Make', tail_entity='Chevrolet')\"\nStep2: Find the entities with the relation of Pos. in the top ten\nQuery2: \"get_information(relation='Pos.', tail_entity<='10')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the number of athletes to finish race one in the giant slalom?": "None",
    "which municipality has the most spanish speakers?": "None",
    "how many consecutive games were goals were against san marino?": "## Target type: {number}\n## Query:\nStep1: Find the entity named San Marino\nQuery1: \"get_information(relation='Opponent', tail_entity='San Marino')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Goal of output_of_query4\nQuery5: \"get_information(relation='Goal', head_entity='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which country has the highest per capita (usd) for 2017?": "None",
    "which nation won the most silver medals mexico or spain?": "## Target type: {nation}\n## Query:\nStep1: Find the nation named Mexico\nQuery1: \"get_information(relation='Nation', tail_entity='Mexico')\"\nStep2: Find the Silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"\nStep3: Find the nation named Spain\nQuery3: \"get_information(relation='Nation', tail_entity='Spain')\"\nStep4: Find the Silver medals of output_of_query3\nQuery4: \"get_information(relation='Silver', head_entity='output_of_query3')\"\nStep5: Compare the Silver medals of output_of_query2 and output_of_query4\nQuery5: \"set_max(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Find the nation of output_of_query5\nQuery6: \"get_information(relation='Nation', head_entity='output_of_query5')\"",
    "what number of members were inducted before 2009?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Year before 2009\nQuery1: \"get_information(relation='Year', tail_entity<'2009')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many populations at most have any notes?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"any notes\"\nQuery1: \"get_information(relation='Name', tail_entity='any notes')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population (2005)', head_entity='output_of_query1')\"\nStep3: Find the max population from output_of_query2\nQuery3: \"max(set='output_of_query2')\"",
    "how many kingdoms are listed?": "## Target type: {number of kingdoms}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which year was the most pos.": "None",
    "how many zogby international polls took place in the month of august?": "None",
    "mel berry scored the same amount of points as which other english competitor?": "None",
    "which train has the least top speed?": "None",
    "how many runs are there?": "## Target type: {number of runs}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which train has the least speed?": "## Target type: {train}\n## Query:\nStep1: Find the train with the relation of Max Speed\nQuery1: \"get_information(relation='Max Speed (km/h)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the train with the min Speed\nQuery3: \"get_information(relation='Max Speed (km/h)', tail_entity='output_of_query2')\"",
    "there are the same number of centers as what other position on the team?": "None",
    "who spent the most years in the nba?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation 'Years in NBA'\nQuery1: \"get_information(relation='Years in NBA')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Years in NBA\nQuery3: \"get_information(relation='Years in NBA', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which party had only one leader and only a three year office term?": "None",
    "what was the last competition in which a position of \"2nd\" was achieved?": "None",
    "how many games were played in olympic stadium and had attendance over 12,000?": "None",
    "how many companies had over $1,000,000 profit?": "None",
    "how many total players were transferred to sun pegasus?": "## Target type: {number of players}\n## Query:\nStep1: Find the entity named Sun Pegasus\nQuery1: \"get_information(relation='Transferred to', tail_entity='Sun Pegasus')\"\nStep2: Find the total players transferred to output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which conference has a win percentage that is above the atlantic coast conference?": "## Target type: {conference}\n## Query:\nStep1: Find the entity that is Atlantic Coast Conference\nQuery1: \"get_information(relation='Conference', tail_entity='Atlantic Coast Conference')\"\nStep2: Find the win percentage of output_of_query1\nQuery2: \"get_information(relation='Win %', head_entity='output_of_query1')\"\nStep3: Find the entity whose win percentage is larger than output_of_query2\nQuery3: \"get_information(relation='Win %', tail_entity>'output_of_query2')\"\nStep4: Find the conference of output_of_query3\nQuery4: \"get_information(relation='Conference', head_entity='output_of_query3')\"",
    "which network has the most satellite stations?": "## Target type: {'Network'}\n## Query:\nStep1: Find all the entities with the relation of Network\nQuery1: \"get_information(relation='Network')\"\nStep2: Find the entity that appears the most in output_of_query1\nQuery2: \"most(set='output_of_query1')\"\n\n  or\n\nStep2: Find the entity that has the most occurrences in output_of_query1\nQuery2: \"most_occurrences(set='output_of_query1')\"",
    "what year is at the very top?": "None",
    "which team was the only one to have triple digit wins?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Wins\nQuery1: \"get_information(relation='Wins')\"\nStep2: Find the triple digit wins in output_of_query1\nQuery2: \"get_information(relation='Wins', tail_entity>'99')\"\nStep3: Find the team of output_of_query2\nQuery3: \"get_information(relation='Team', head_entity='output_of_query2')\"",
    "how many vertical wavy lines are there in the onsen symbol?": "None",
    "who is the only title to get 4:26?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that Time is 4:26\nQuery1: \"get_information(relation='Time', tail_entity='4:26')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Title of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"",
    "which has the earlier release date, \"till the day\" or \"2nd amendment\"?": "## Target type: {release date}\n## Query:\nStep1: Find the entity with the relation of Single/EP being \"Till the Day\"\nQuery1: \"get_information(relation='Single/EP', tail_entity='Till the Day')\"\nStep2: Find the release date of output_of_query1\nQuery2: \"get_information(relation='Release date', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Single/EP being \"2nd Amendment\"\nQuery3: \"get_information(relation='Single/EP', tail_entity='2nd Amendment')\"\nStep4: Find the release date of output_of_query3\nQuery4: \"get_information(relation='Release date', head_entity='output_of_query3')\"\nStep5: Compare the release dates of output_of_query2 and output_of_query4\nQuery5: \"compare(date1='output_of_query2', date2='output_of_query4')\"",
    "what type of competition was played the least?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the entity that Competition is played the least\nQuery1: \"get_information(relation='Competition', tail_entity>='least')\"\nStep2: Find the Competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "which round had the most miles?": "None",
    "who received more points, alex debon or toni elias?": "None",
    "how many kw was the radio in davao?": "## Target type: {power}\n## Query:\nStep1: Find the entity that has branding as \"DXSS 97.9 Davao\"\nQuery1: \"get_information(relation='Branding', tail_entity='DXSS 97.9 Davao')\"\nStep2: Find the power of output_of_query1\nQuery2: \"get_information(relation='Power (kW)', head_entity='output_of_query1')\"",
    "which province in andalusia has the largest population?": "## Target type: {province}\n## Query:\nStep1: Find the entity that is Andalusia\nQuery1: \"get_information(relation='Province', tail_entity='Andalusia')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Find the province with the maximum population\nQuery3: \"get_information(relation='Population', tail_entity>='max')\"\nStep4: Find the province with the largest population\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "who is the tallest player on the chart?": "## Target type: {player}\n## Query:\nStep1: Find the player with the tallest height\nQuery1: \"get_information(relation='Height', tail_entity>='tallest')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who is the tallest player on the team?": "## Target type: {name}\n## Query:\nStep1: Find the tallest height in the team\nQuery1: \"get_information(relation='Height', tail_entity>='tallest')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of row_number being output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who is the tallest all-time player?": "None",
    "tallest player on the team": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Height\nQuery1: \"get_information(relation='Height')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Height\nQuery3: \"get_information(relation='Height', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who is the tallest player born in july?": "None",
    "how many of these monarchs died before the age of 65?": "None",
    "how many women were above the age of 45 when executed?": "None",
    "what tournament has 5-5 as it's \"w-l\" record?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity with the relation of W-L with value 5-5\nQuery1: \"get_information(relation='W\u2013L', tail_entity='5\u20135')\"\nStep2: Find the tournament of output_of_query1\nQuery2: \"get_information(relation='Tournament', head_entity='output_of_query1')\"",
    "besides 1997, which year was the team also relegated?": "None",
    "how many athletes did china have in the top 10 ranks?": "None",
    "name each of tv azteca's network names.": "## Target type: {network names}\n## Query:\nStep1: Find the entity named TV Azteca\nQuery1: \"get_information(relation='Owner', tail_entity='TV Azteca')\"\nStep2: Find all the network names of output_of_query1\nQuery2: \"get_information(relation='Network name', head_entity='output_of_query1')\"",
    "who was the mayor before jordan?": "None",
    "how many conservative party mayors were elected after peder kalve?": "## Target type: {number of conservative party mayors}\n## Query:\nStep1: Find the entity named Peder Kalve\nQuery1: \"get_information(relation='Name', tail_entity='Peder Kalve')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the mayors after output_of_query2 with the political party of Conservative Party\nQuery3: \"get_information(relation='Political Party', tail_entity='Conservative Party', key='row_number', value>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "who has the most number of affiliates?": "None",
    "is the e code less than 1950?": "None",
    "how many creatures are included before page 42?": "None",
    "how many 1 seeds are there?": "## Target type: {number of 1 seeds}\n## Query:\nStep1: Find the entity with the relation of Seed equal to 1\nQuery1: \"get_information(relation='Seed', tail_entity='1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams had more pyramids than the atlas perp squad?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entity named Atlas Perp Squad\nQuery1: \"get_information(relation='Team', tail_entity='Atlas Perp Squad')\"\nStep2: Find the pyramids score of output_of_query1\nQuery2: \"get_information(relation='Pyramids', head_entity='output_of_query1')\"\nStep3: Find the teams with higher pyramids score than output_of_query2\nQuery3: \"get_information(relation='Pyramids', tail_entity>'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the total of location?": "None",
    "how many total locations are still in use as a post office?": "None",
    "which year was his best jump?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Notes\nQuery1: \"get_information(relation='Notes')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Notes\nQuery3: \"get_information(relation='Notes', tail_entity='output_of_query2')\"\nStep4: Find the Year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "what was the last opponent played in 1950?": "## Target type: {opponent}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the opponent of output_of_query3\nQuery4: \"get_information(relation='Opponents', head_entity='output_of_query3')",
    "how many times did japan place in the top 2?": "None",
    "what are the number of matches that happened in japan?": "None",
    "japan finished below how many countries?": "## Target type: {number of countries}\n## Query:\nStep1: Find the entity named Japan\nQuery1: \"get_information(relation='Nation', tail_entity='Japan')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entities with lower row_number than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity<'output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "which year's were the most japanese titles produced?": "None",
    "when did ed sheeran get his first number one of the year?": "None",
    "how many landmarks do not have multiple stories?": "None",
    "how many games did they play in october 1921?": "None",
    "what is the average number of \"goals for\" of the top 5 teams?": "None",
    "how many west teams did final opponent arizona state play?": "None",
    "what was the only year keene won class aa?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Keene\nQuery1: \"get_information(relation='Class AA', tail_entity='Keene')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number as output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the School Year of output_of_query3\nQuery4: \"get_information(relation='School Year', head_entity='output_of_query3')\"",
    "which year did western division had the larger win": "None",
    "which year was the last time broxburn athletic topped the east region south division tables?": "None",
    "what's the difference in year dissolved between abingdon abbey and bardsey abbey?": "None",
    "wong chin hung was transferred to his new team on what date?": "## Target type: {'Date'}\n## Query:\nStep1: Find the entity named Wong Chin Hung\nQuery1: \"get_information(relation='Player', tail_entity='Wong Chin Hung')\"\nStep2: Find the transfer date of output_of_query1\nQuery2: \"get_information(relation='Date', head_entity='output_of_query1')\"",
    "other new replacement chosen in april 2009 besides kij meesrisuk": "None",
    "what is the total of points on the chart": "None",
    "which name is listed after alan smith?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Alan Smith\nQuery1: \"get_information(relation='Name', tail_entity='Alan Smith')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many are in the palakkad district?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Palakkad\nQuery1: \"get_information(relation='District', tail_entity='Palakkad')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of films that ishaan dev has given music to?": "None",
    "how many electorates does jatara have?": "## Target type: {number of electorates}\n## Query:\nStep1: Find the entity named Jatara\nQuery1: \"get_information(relation='Name', tail_entity='Jatara')\"\nStep2: Find the number of electorates of output_of_query1\nQuery2: \"get_information(relation='Number of electorates (2009)', head_entity='output_of_query1')\"",
    "what is the difference in the capacity between penydarren park and hand stadium?": "## Target type: {difference in capacity}\n## Query:\nStep1: Find the entity named Penydarren Park\nQuery1: \"get_information(relation='Stadium', tail_entity='Penydarren Park')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity named Hand Stadium\nQuery3: \"get_information(relation='Stadium', tail_entity='Hand Stadium')\"\nStep4: Find the capacity of output_of_query3\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(a='output_of_query2', b='output_of_query4')\"",
    "does david farrington park have a larger capacity than porritt stadium?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named David Farrington Park\nQuery1: \"get_information(relation='Stadium', tail_entity='David Farrington Park')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity named Porritt Stadium\nQuery3: \"get_information(relation='Stadium', tail_entity='Porritt Stadium')\"\nStep4: Find the capacity of output_of_query3\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query3')\"\nStep5: Compare the capacity of output_of_query2 and output_of_query4\nQuery5: \"output_of_query2 > output_of_query4\"",
    "who has the most votes?": "None",
    "which part got the greatest number of votes?": "None",
    "which party got the most votes?": "## Target type: {party}\n## Query:\nStep1: Find the entity that % is the maximum\nQuery1: \"get_information(relation='%', tail_entity>='maximum')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "which party got the least number of votes?": "None",
    "which party received the most votes?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Votes\nQuery1: \"get_information(relation='Votes')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Votes\nQuery3: \"get_information(relation='Votes', tail_entity='output_of_query2')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "which candidate had the least amount of votes?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity with the relation of Votes\nQuery1: \"get_information(relation='Votes')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min votes\nQuery3: \"get_information(relation='Votes', tail_entity='output_of_query2')\"\nStep4: Find the candidate of output_of_query3\nQuery4: \"get_information(relation='Candidate', head_entity='output_of_query3')\"",
    "does cerritos or la palma rank higher?": "## Target type: {ranking}\n## Query:\nStep1: Find the entity named Cerritos\nQuery1: \"get_information(relation='City', tail_entity='Cerritos')\"\nStep2: Find the rank of output_of_query1\nQuery2: \"get_information(relation='Rank', head_entity='output_of_query1')\"\nStep3: Find the entity named La Palma\nQuery3: \"get_information(relation='City', tail_entity='La Palma')\"\nStep4: Find the rank of output_of_query3\nQuery4: \"get_information(relation='Rank', head_entity='output_of_query3')\"\nStep5: Compare the rank value of output_of_query2 and output_of_query4\nQuery5: \"set_relationship(set1='output_of_query2', set2='output_of_query4')\"",
    "did tomber rank higher than l'etranger on the french charts?": "None",
    "what home team had at least 4000 people in attendance?": "## Target type: {home team}\n## Query:\nStep1: Find the entity that has at least 4000 people in Attendance\nQuery1: \"get_information(relation='Attendance', tail_entity>='4000')\"\nStep2: Find the Home Team of output_of_query1\nQuery2: \"get_information(relation='Home Team', head_entity='output_of_query1')\"",
    "how many counties are smaller than 10,000 km2?": "## Target type: {number}\n## Query:\nStep1: Find the counties with Area (km2) smaller than 10,000\nQuery1: \"get_information(relation='Area (km2)', tail_entity<'10000')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "is the higashiyama line longer than the meiko line?": "## Target type: {binary: Yes/No}\n## Query:\nStep1: Find the entity named Higashiyama Line\nQuery1: \"get_information(relation='Name', tail_entity='Higashiyama Line')\"\nStep2: Find the Length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity named Meiko Line\nQuery3: \"get_information(relation='Name', tail_entity='Meiko Line')\"\nStep4: Find the Length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Check if the Length of output_of_query2 is greater than the Length of output_of_query4\nQuery5: \"compare_greater(value1='output_of_query2', value2='output_of_query4')\"",
    "which bridge is longer, old youngs bay bridge or ellsworth street bridge?": "## Target type: {bridge}\n## Query:\nStep1: Find the entity named Old Youngs Bay Bridge\nQuery1: \"get_information(relation='Bridge name', tail_entity='Old Youngs Bay Bridge')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Total length', head_entity='output_of_query1')\"\nStep3: Find the entity named Ellsworth Street Bridge\nQuery3: \"get_information(relation='Bridge name', tail_entity='Ellsworth Street Bridge')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Total length', head_entity='output_of_query3')\"\nStep5: Compare the length of output_of_query2 and output_of_query4\nQuery5: \"Compare(set1='output_of_query2', set2='output_of_query4')\"",
    "how many games did zico end up scoring in during this season?": "None",
    "which airport had more passengers handled than the united kingdom?": "## Target type: {airport}\n## Query:\nStep1: Find the entity that is the United Kingdom\nQuery1: \"get_information(relation='Airport', tail_entity='United Kingdom')\"\nStep2: Find the passengers handled of output_of_query1\nQuery2: \"get_information(relation='Passengers handled', head_entity='output_of_query1')\"\nStep3: Find the entities whose passengers handled is larger than output_of_query2\nQuery3: \"get_information(relation='Passengers handled', tail_entity>'output_of_query2')\"\nStep4: Find the airport of output_of_query3\nQuery4: \"get_information(relation='Airport', head_entity='output_of_query3')\"",
    "which language has madhurima spoken more often in films: malayalam or telugu?": "## Target type: {language}\n## Query:\nStep1: Find the entity named Madhurima\nQuery1: \"get_information(relation='Role', tail_entity='Madhurima')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Language of output_of_query4\nQuery5: \"get_information(relation='Language', head_entity='output_of_query4')\"",
    "which player has the highest win percentage?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Win %\nQuery1: \"get_information(relation='Win %')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Win %\nQuery3: \"get_information(relation='Win %', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which one has the most images": "None",
    "how many times did duke place first?": "None",
    "how many times has brazil been in first place?": "None",
    "how many volts can the flyback handle at most?": "## Target type: {volts}\n## Query:\nStep1: Find the entity that is Flyback\nQuery1: \"get_information(relation='Type', tail_entity='Flyback')\"\nStep2: Find the input range of output_of_query1\nQuery2: \"get_information(relation='Input range', head_entity='output_of_query1')\"\nStep3: Extract the maximum value from output_of_query2\nQuery3: \"extract_max_value(set='output_of_query2')\"",
    "how many times did anna ustinova come in 3rd?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Anna Ustinova\nQuery1: \"get_information(relation='Name', tail_entity='Anna Ustinova')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity that comes in 3rd\nQuery3: \"get_information(relation='Position', tail_entity='3rd')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "which county covers the most area?": "None",
    "how many students are enrolled at harvard university according to this chart?": "## Target type: {number of students}\n## Query:\nStep1: Find the entity that is Harvard University\nQuery1: \"get_information(relation='Institution', tail_entity='Harvard University')\"\nStep2: Find the Total enrollment of output_of_query1\nQuery2: \"get_information(relation='Total enrollment', head_entity='output_of_query1')\"",
    "what is the total number of the listed nba players that went on to become a coach?": "None",
    "how many destinations were still available after the year 2010?": "None",
    "the number of times david oliver placed 1st in 100m hurdles between the years 2006-2013.": "## Target type: {number}\n## Query:\nStep1: Find the entity named David Oliver\nQuery1: \"get_information(relation='Name', tail_entity='David Oliver')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_numbers that are between 2006 and 2013\nQuery3: \"get_information(relation='row_number', tail_entity>='2006' and tail_entity<='2013')\"\nStep4: Find the positions of output_of_query3 that are 1st\nQuery4: \"get_information(relation='Position', tail_entity='output_of_query3' and head_entity='1st')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "how many times has maryland won the acc women's basketball tournament?": "None",
    "all of these landmarks have at least how many stories?": "## Target type: {number of stories}\n## Query:\nStep1: Find the entity with the relation of Description\nQuery1: \"get_information(relation='Description')\"\nStep2: Split the Description of output_of_query1 by semicolon\nQuery2: \"split(string='output_of_query1', delimiter=';')\"\nStep3: Find the number of stories in each string of output_of_query2\nQuery3: \"extract_number(string='output_of_query2')\"\nStep4: Find the max number of stories from output_of_query3\nQuery4: \"max(set='output_of_query3')\"",
    "which division comes after divisi\u00f3n de honor?": "None",
    "name an experiment that occurred after 1995 but before 2000.": "None",
    "what race had the same location as tour d'egypte?": "None",
    "what is the total number of votes for amador?": "## Target type: {total number of votes}\n## Query:\nStep1: Find the entity named Amador\nQuery1: \"get_information(relation='County', tail_entity='Amador')\"\nStep2: Find the Total of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "how many votes were counted as invalid or blank votes?": "None",
    "name one county that only received 1,935 votes total.": "## Target type: {county}\n## Query:\nStep1: Find the entity that Total is 1,935\nQuery1: \"get_information(relation='Total', tail_entity='1,935')\"\nStep2: Find the county of output_of_query1\nQuery2: \"get_information(relation='County', head_entity='output_of_query1')\"",
    "who won the next round after mats linden won the first round at mantorp park?": "None",
    "which race was held in january, la tropicale amissa bongo or boucle du coton?": "## Target type: {race name}\n## Query:\nStep1: Find the race names that were held in January\nQuery1: \"get_information(relation='Date', tail_entity='January')\"\nStep2: Find the race name of output_of_query1\nQuery2: \"get_information(relation='Race Name', head_entity='output_of_query1')\"\nStep3: Check if 'La Tropicale Amissa Bongo' is in output_of_query2\nQuery3: \"is_in(set='output_of_query2', entity='La Tropicale Amissa Bongo')\"\nStep4: Check if 'Boucle du Coton' is in output_of_query2\nQuery4: \"is_in(set='output_of_query2', entity='Boucle du Coton')\"",
    "what is the airport name at the top of the list?": "None",
    "between the topped ranked airport, netherlands - amsterdam, & spain - palma de mallorca, what is the difference in the amount of passengers handled?": "None",
    "who completed run 1 in the least amount of time?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Run 1\nQuery1: \"get_information(relation='Run 1')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Run 1\nQuery3: \"get_information(relation='Run 1', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "which race in 1880 took the least amount of time to finish?": "None",
    "who took the least time to complete egot?": "None",
    "after the united states, what country won the most gold medals.": "None",
    "how many finals did shelfield athletic win?": "## Target type: {number of finals}\n## Query:\nStep1: Find the entity named Shelfield Athletic\nQuery1: \"get_information(relation='Winners', tail_entity='Shelfield Athletic')\"\nStep2: Find the number of finals that output_of_query1 won\nQuery2: \"count(set='output_of_query1')\"",
    "what is the total number of reactors that will be operational until 2024 or later?": "None",
    "when will the last reactor at leningrad be closed?": "None",
    "how many representatives have the last name gurung?": "None",
    "how many goals did hinnigan score throughout this season?": "None",
    "who was the first democrat to win an election?": "None",
    "total appearances by masakatsu miyamoto?": "None",
    "miracle man and kanjyuro matsuyama both won the title in which japanese city?": "## Target type: {japanese city}\n## Query:\nStep1: Find the entity named Miracle Man\nQuery1: \"get_information(relation='Wrestlers', tail_entity='Miracle Man')\"\nStep2: Find the japanese city of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"\nStep3: Find the entity named Kanjyuro Matsuyama\nQuery3: \"get_information(relation='Wrestlers', tail_entity='Kanjyuro Matsuyama')\"\nStep4: Find the japanese city of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "is german above or below russia in the number of people who speak that language?": "## Target type: {'German', 'Russia'}\n## Query:\nStep1: Find the language Russian\nQuery1: \"get_information(relation='Language', tail_entity='Russian')\"\nStep2: Find the number of people who speak Russian\nQuery2: \"get_information(relation='Number', head_entity='output_of_query1')\"\nStep3: Find the language German\nQuery3: \"get_information(relation='Language', tail_entity='German')\"\nStep4: Find the number of people who speak German\nQuery4: \"get_information(relation='Number', head_entity='output_of_query3')\"\nStep5: Check if the number of people who speak German is above or below the number of people who speak Russian\nQuery5: \"compare(value1='output_of_query4', operator='<', value2='output_of_query2')\"",
    "what was the name of the competition where the top position was earned?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the entity with the relation of Position and value of '1st'\nQuery1: \"get_information(relation='Position', tail_entity='1st')\"\nStep2: Find the competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "name a station that shows sports but is not televisa.": "## Target type: {station}\n## Query:\nStep1: Find the entity that Programming type is 'sports'\nQuery1: \"get_information(relation='Programming type', tail_entity='sports')\"\nStep2: Find the entity that Owner is 'Televisa'\nQuery2: \"get_information(relation='Owner', tail_entity='Televisa')\"\nStep3: Find the set difference of output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find a station from output_of_query3\nQuery4: \"get_information(relation='Network name', head_entity='output_of_query3')\"",
    "were more air on tv or video?": "## Target type: {'Type'}\n## Query:\nStep1: Find the entity with the relation of Type\nQuery1: \"get_information(relation='Type')\"\nStep2: Calculate the count of Type 'Video'\nQuery2: \"count(set='output_of_query1', value='Video')\"\nStep3: Calculate the count of Type 'TV'\nQuery3: \"count(set='output_of_query1', value='TV')\"\nStep4: Compare the counts from output_of_query2 and output_of_query3\nQuery4: \"compare(count1='output_of_query2', count2='output_of_query3')\"",
    "how many boats were scuttled off the goto islands?": "## Target type: {number of boats}\n## Query:\nStep1: Find the entity with the relation of Fate containing \"grounded at\" and \"goto islands\"\nQuery1: \"get_information(relation='Fate', tail_entity='Goto Islands')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the first city brian and roger played in?": "None",
    "in what years did ramon gonzalez come in first place?": "None",
    "if all the teams were placed in order of number of wins to least number of wins, who would be in last place?": "None",
    "the academy of the sacred heart is from the same city as what other home that was dedicated to veterans and soldiers?": "None",
    "which landmark was built del e., webb construction company and was also designed to resemble an enlisted aviator badge?": "None",
    "based on sales figures, what auryn album is the most popular?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity with relation 'Album'\nQuery1: \"get_information(relation='Album')\"\nStep2: Find the entity with the highest Chart positions\nQuery2: \"get_information(relation='Chart positions', tail_entity>='highest')\"\nStep3: Find the Album of output_of_query2\nQuery3: \"get_information(relation='Album', head_entity='output_of_query2')\"",
    "which album is the best performing on the us charts?": "None",
    "which province has the most legal districts?": "## Target type: {province}\n## Query:\nStep1: Find the entity with the relation of Legal districts\nQuery1: \"get_information(relation='Legal districts')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Legal districts\nQuery3: \"get_information(relation='Legal districts', tail_entity='output_of_query2')\"\nStep4: Find the Province of output_of_query3\nQuery4: \"get_information(relation='Province', head_entity='output_of_query3')\"",
    "besides tikamgarth, what is the other district?": "None",
    "what is the name of the district listed after thrissur?": "None",
    "which headquarter has the same district name but has a density of 202?": "None",
    "which opponent comes before usc?": "None",
    "besides merthyr town, which other team had the highest number of capacity?": "None",
    "smolenski-1 is operational until december 2022, but smolensk-2 is only operational until what month and year?": "## Target type: {month and year}\n## Query:\nStep1: Find the entity named Smolensk-2\nQuery1: \"get_information(relation='Location', tail_entity='Smolensk-2')\"\nStep2: Find the Status of output_of_query1\nQuery2: \"get_information(relation='Status', head_entity='output_of_query1')\"\nStep3: Split the output_of_query2 into month and year\nQuery3: \"split_date(date='output_of_query2')\"",
    "what was the soviet ship that did not sink on 11 may 1944?": "## Target type: {ship name}\n## Query:\nStep1: Find the entity that Fate is not 'Sunk'\nQuery1: \"get_information(relation='Fate', tail_entity>'Sunk')\"\nStep2: Find the entity that Nationality is 'Soviet Union'\nQuery2: \"get_information(relation='Nationality', tail_entity='Soviet Union')\"\nStep3: Find the entity that Date is '11 May 1944'\nQuery3: \"get_information(relation='Date', tail_entity='11 May 1944')\"\nStep4: Find the intersection of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2', set3='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what other boat was completed on the same day as ha-201?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named HA-201\nQuery1: \"get_information(relation='Name', tail_entity='HA-201')\"\nStep2: Find the completion date of output_of_query1\nQuery2: \"get_information(relation='Completed', head_entity='output_of_query1')\"\nStep3: Find the entities with the completion date of output_of_query2\nQuery3: \"get_information(relation='Completed', tail_entity='output_of_query2')\"\nStep4: Exclude output_of_query1 from output_of_query3\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "who won the most consecutive crystal bicycles?": "None",
    "what is the number of marathons that silva ran in the united states?": "None",
    "what team has cc sabathia played for?": "## Target type: {team}\n## Query:\nStep1: Find the entity named CC Sabathia\nQuery1: \"get_information(relation='Player', tail_entity='CC Sabathia')\"\nStep2: Find the teams CC Sabathia has played for\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "what competition is lorenzo's top position in?": "None",
    "what was the total number of medals won by portugal?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Portugal\nQuery1: \"get_information(relation='Nation', tail_entity='Portugal')\"\nStep2: Find the total number of medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "previous to barhampur, what is the name of the constituency associated with the asom gana parishad listed?": "None",
    "who has more electorates, khargapur or niwari?": "## Target type: {electorate}\n## Query:\nStep1: Find the entity named Khargapur\nQuery1: \"get_information(relation='Name', tail_entity='Khargapur')\"\nStep2: Find the electorates of output_of_query1\nQuery2: \"get_information(relation='Number of electorates (2009)', head_entity='output_of_query1')\"\nStep3: Find the entity named Niwari\nQuery3: \"get_information(relation='Name', tail_entity='Niwari')\"\nStep4: Find the electorates of output_of_query3\nQuery4: \"get_information(relation='Number of electorates (2009)', head_entity='output_of_query3')\"\nStep5: Compare the integer value of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "what film was done next after 'once a cop'?": "## Target type: {film}\n## Query:\nStep1: Find the entity named 'Once a Cop'\nQuery1: \"get_information(relation='Title', tail_entity='Once a Cop')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many votes were not attributed to the australian labor party?": "None",
    "in the 1996 forum, which candidate had the least votes?": "None",
    "last team to finish in second place": "## Target type: {team}\n## Query:\nStep1: Find the entity in the relation Second place that appears the most recent.\nQuery1: \"get_information(relation='Second place', tail_entity>='most recent')\"\nStep2: Find the Second place of output_of_query1.\nQuery2: \"get_information(relation='Second place', head_entity='output_of_query1')\"",
    "how many total points did the sabres score in this run of games?": "None",
    "how many more votes did athens receive than stockholm in round 1?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity named Athens\nQuery1: \"get_information(relation='City', tail_entity='Athens')\"\nStep2: Find the votes of output_of_query1 in Round 1\nQuery2: \"get_information(relation='Round 1', head_entity='output_of_query1')\"\nStep3: Find the entity named Stockholm\nQuery3: \"get_information(relation='City', tail_entity='Stockholm')\"\nStep4: Find the votes of output_of_query3 in Round 1\nQuery4: \"get_information(relation='Round 1', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate(set1='output_of_query2', set2='output_of_query4', operation='subtract')\"",
    "how many times has this athlete not finished in a competition?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that has the relation of \"Position\" and is not equal to any finished position (ex: \"1st\", \"2nd\", etc.)\nQuery1: \"get_information(relation='Position', tail_entity='not_finished')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the first year of the australian open?": "## Target type: {year}\n## Query:\nStep1: Find the entity that is Australian Open\nQuery1: \"get_information(relation='Australian Open')\"\nStep2: Get the first output_of_query1\nQuery2: \"first(set='output_of_query1')\"\nStep3: Find the year of output_of_query2\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2')\"",
    "what is the average in the ages": "## Target type: {average age}\n## Query:\nStep1: Find all the Age\nQuery1: \"get_information(relation='Age')\"\nStep2: Calculate the average of output_of_query1\nQuery2: \"average(set='output_of_query1')\"",
    "what team had the most number of runs by margin?": "None",
    "which team won the most runs?": "None",
    "which race occurred before the sfp 250?": "## Target type: {race title}\n## Query:\nStep1: Find the entity named SFP 250\nQuery1: \"get_information(relation='Race Title', tail_entity='SFP 250')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Race Title of output_of_query4\nQuery5: \"get_information(relation='Race Title', head_entity='output_of_query4')\"",
    "where was the last race listing frank kimmel held?": "None",
    "herat has a population of 1,182,000, can you list their languages": "## Target type: {language}\n## Query:\nStep1: Find the entity named Herat\nQuery1: \"get_information(relation='Province', tail_entity='Herat')\"\nStep2: Find the languages of output_of_query1\nQuery2: \"get_information(relation='Language', head_entity='output_of_query1')\"",
    "which language did only .42% of people in the imperial census of 1897 speak in the p&#322;ock governorate?": "## Target type: {Language}\n## Query:\nStep1: Find the entity in the Imperial Census of 1897 with the relation of percentage (%)\nQuery1: \"get_information(relation='percentage (%)', tail_entity='.42%')\"\nStep2: Find the Language of output_of_query1\nQuery2: \"get_information(relation='Language', head_entity='output_of_query1')\"",
    "which language did the most people in the imperial census of 1897 speak in the p&#322;ock governorate?": "None",
    "how many goals did brazil score in the 1950 world cup?": "None",
    "which typ has the most capacity?": "## Target type: {Typ}\n## Query:\nStep1: Find the entity with the relation of Capacity\nQuery1: \"get_information(relation='Capacity')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Capacity\nQuery3: \"get_information(relation='Capacity', tail_entity='output_of_query2')\"\nStep4: Find the Typ of output_of_query3\nQuery4: \"get_information(relation='Typ', head_entity='output_of_query3')\"",
    "how many times did wu tao come in less than 3rd position?": "None",
    "how many times did luis jesus finish before 3rd place?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Luis Jesus\nQuery1: \"get_information(relation='Name', tail_entity='Luis Jesus')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the row_number that is less than 3\nQuery3: \"get_information(relation='row_number', tail_entity<'3')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what was the difference between the number of laps alex figge completed and the number of laps that will power completed?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Alex Figge\nQuery1: \"get_information(relation='Driver', tail_entity='Alex Figge')\"\nStep2: Find the number of laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity named Will Power\nQuery3: \"get_information(relation='Driver', tail_entity='Will Power')\"\nStep4: Find the number of laps completed by output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "who was canadian, van amstel or valiquette?": "None",
    "tell me the number of racers from the uk.": "None",
    "did great britain have more or less drivers than the united states?": "None",
    "the percent of toyotas in the top ten.": "None",
    "what is the total amount of times porsche is a constructor?": "None",
    "the green bay packers after miami dolphins chose which player?": "None",
    "which location has the most km?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of km\nQuery1: \"get_information(relation='km')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity that has the max km\nQuery3: \"get_information(relation='km', tail_entity='output_of_query2')\"\nStep4: Find the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "how many roles other than remastering engineer has gene paul had on hit records?": "None",
    "how many points did the brazilian football team auto get in 1926?": "None",
    "what track came after \"our time\"?": "## Target type: {track}\n## Query:\nStep1: Find the entity whose Title is \"Our Time\"\nQuery1: \"get_information(relation='Title', tail_entity='Our Time')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "on what album did the single \"old habits die hard\" appear?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity named \"Old Habits Die Hard\"\nQuery1: \"get_information(relation='Single', tail_entity='Old Habits Die Hard')\"\nStep2: Find the album of output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"",
    "how many times did colin eglin serve as party leader?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Colin Eglin\nQuery1: \"get_information(relation='Party Leader(s)', tail_entity='Colin Eglin')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of post for 3rd finished": "## Target type: {number of post}\n## Query:\nStep1: Find the entity with the relation of Finished is '3rd'\nQuery1: \"get_information(relation='Finished', tail_entity='3rd')\"\nStep2: Find the number of post of output_of_query1\nQuery2: \"get_information(relation='Post', head_entity='output_of_query1')\"",
    "how many parties had more than 50 seats in the third duma?": "None",
    "how many times were they in tier 3?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Level that is Tier 3\nQuery1: \"get_information(relation='Level', tail_entity='Tier 3')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total points were scored by players averaging over 4 assists per game>": "## Target type: {number of total points}\n## Query:\nStep1: Find the players who averaged over 4 assists per game\nQuery1: \"get_information(relation='Assists Per Game', tail_entity>='4')\"\nStep2: Find the points of output_of_query1\nQuery2: \"get_information(relation='Points', head_entity='output_of_query1')\"\nStep3: Calculate the total points of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "which player weighed the most on the letter winners roster?": "## Target type: {player}\n## Query:\nStep1: Find the entity in Weight that is the maximum value\nQuery1: \"get_information(relation='Weight', tail_entity>='maximum')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who had more steals than any other player?": "None",
    "what is the number of games that the vancouver canucks have won up to this point?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Vancouver Canucks\nQuery1: \"get_information(relation='Team', tail_entity='Vancouver Canucks')\"\nStep2: Find the wins of output_of_query1\nQuery2: \"get_information(relation='Wins', head_entity='output_of_query1')\"",
    "how many total episodes of nash bridges between 1997 and 2000?": "None",
    "who finished directly above ryabova?": "None",
    "who finished after melania corradini?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Melania Corradini\nQuery1: \"get_information(relation='Name', tail_entity='Melania Corradini')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "between missouri and iowa state who won the most games?": "## Target type: {'Winning team'}\n## Query:\nStep1: Find the entity with the relation of Series\nQuery1: \"get_information(relation='Series')\"\nStep2: Find the row with Winning team contains Missouri\nQuery2: \"get_information(relation='Winning team', head_entity='Missouri')\"\nStep3: Find the row with Winning team contains Iowa State\nQuery3: \"get_information(relation='Winning team', head_entity='Iowa State')\"\nStep4: Calculate the count of output_of_query2\nQuery4: \"count(set='output_of_query2')\"\nStep5: Calculate the count of output_of_query3\nQuery5: \"count(set='output_of_query3')\"\nStep6: Compare counts of output_of_query4 and output_of_query5\nQuery6: \"if output_of_query4 > output_of_query5 then Missouri else Iowa State\"",
    "who did ohio state play before indiana on october 23?": "## Target type: {'Opponent'}\n## Query:\nStep1: Find the entity that Ohio State played on October 23\nQuery1: \"get_information(relation='Date', tail_entity='October 23')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Opponent of output_of_query4\nQuery5: \"get_information(relation='Opponent', head_entity='output_of_query4')\"",
    "how many games did the philadelphia soul lose after the bye week?": "None",
    "which teams were played before the bye week?": "None",
    "which year saw the greatest final point total in the women's tournament finals?": "None",
    "what women's team won the last competition?": "None",
    "which municipality has the largest number of spanish speakers?": "None",
    "who received more votes, duncan hunter or alan keyes?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity named Duncan Hunter\nQuery1: \"get_information(relation='Candidate', tail_entity='Duncan Hunter')\"\nStep2: Find the votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Find the entity named Alan Keyes\nQuery3: \"get_information(relation='Candidate', tail_entity='Alan Keyes')\"\nStep4: Find the votes of output_of_query3\nQuery4: \"get_information(relation='Votes', head_entity='output_of_query3')\"\nStep5: Compare the votes of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 > output_of_query4, 'output_of_query1', 'output_of_query3')\"",
    "who was named first team all american as the top goalkeeper in 1988?": "None",
    "who one the first match up in 2005?": "## Target type: {team}\n## Query:\nStep1: Find the entity whose Year is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity whose row_number is output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the Derby winner of output_of_query3\nQuery4: \"get_information(relation='Derby winner', head_entity='output_of_query3')\"",
    "last year to make over 1000000": "None",
    "are there less than 10,000 people in richland?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Richland\nQuery1: \"get_information(relation='County', tail_entity='Richland')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population', head_entity='output_of_query1')\"\nStep3: Compare the output_of_query2 with 10,000\nQuery3: \"output_of_query2 < 10,000\"",
    "which communities have at least 100 people?": "## Target type: {community}\n## Query:\nStep1: Find the communities with population at least 100\nQuery1: \"get_information(relation='Population', tail_entity>='100')\"\nStep2: Get the communities of output_of_query1\nQuery2: \"get_information(relation='Community', head_entity='output_of_query1')\"",
    "how many people live in the built up area of zhengzhou?": "## Target type: {number of people}\n## Query:\nStep1: Find the entity named Zhengzhou\nQuery1: \"get_information(relation='City', tail_entity='Zhengzhou')\"\nStep2: Find the built-up area of output_of_query1\nQuery2: \"get_information(relation='Built-up Area', head_entity='output_of_query1')\"",
    "ironi ashkelon has no runners-up, but how many runners-up does team hapoel holon have?": "## Target type: {number of runners-up}\n## Query:\nStep1: Find the entity named Ironi Ashkelon\nQuery1: \"get_information(relation='Team', tail_entity='Ironi Ashkelon')\"\nStep2: Find the runners-up of output_of_query1\nQuery2: \"get_information(relation='Runners-up', head_entity='output_of_query1')\"\nStep3: Find the entity named Hapoel Holon\nQuery3: \"get_information(relation='Team', tail_entity='Hapoel Holon')\"\nStep4: Find the runners-up of output_of_query3\nQuery4: \"get_information(relation='Runners-up', head_entity='output_of_query3')\"",
    "how many landmarks are in the hannover square historic district?": "None",
    "which representative was the earliest to take office?": "None",
    "how many times were michelin tyres used?": "None",
    "who had the leading amount of goals kicked in 2004?": "None",
    "louis chaillot won a gold medal for cycling and a silver medal for what sport?": "## Target type: {sport}\n## Query:\nStep1: Find the entity named Louis Chaillot\nQuery1: \"get_information(relation='Name', tail_entity='Louis Chaillot')\"\nStep2: Find the sport that Louis Chaillot won a gold medal in\nQuery2: \"get_information(relation='Sport', head_entity='output_of_query1')\"\nStep3: Find the entity named Maurice Perrin\nQuery3: \"get_information(relation='Name', tail_entity='Maurice Perrin')\"\nStep4: Find the sport that Maurice Perrin won a silver medal in\nQuery4: \"get_information(relation='Sport', head_entity='output_of_query3')\"",
    "what where the only two submarines that where only damaged?": "## Target type: {submarine name}\n## Query:\nStep1: Find the entities that have the relation of Fate with \"Damaged\"\nQuery1: \"get_information(relation='Fate', tail_entity='Damaged')\"\nStep2: Find the entities that have the relation of Fate with \"Sunk\"\nQuery2: \"get_information(relation='Fate', tail_entity='Sunk')\"\nStep3: Find the set difference between output_of_query1 and output_of_query2\nQuery3: \"set_difference(set1='output_of_query1', set2='output_of_query2')\"",
    "what was the name of the only ship that did not sink?": "None",
    "what is the total number of schools that were demolished?": "## Target type: {number}\n## Query:\nStep1: Find the schools with the relation of Building Status as \"Demolished\"\nQuery1: \"get_information(relation='Building Status', tail_entity='Demolished')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the next transfer after silvestre varela?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Silvestre Varela\nQuery1: \"get_information(relation='Name', tail_entity='Silvestre Varela')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "in the 2006 alpine skiing world cup, anja parson finished after which other two competitors on 22 october 2005?": "None",
    "what is the top population served on the chart": "## Target type: {'Population served'}\n## Query:\nStep1: Find the entity that is the top population served on the chart\nQuery1: \"get_information(relation='Population served', tail_entity>='top')\"",
    "last opponent that the utah starzz defeated in the season": "None",
    "did adrienne power or kim wall have a faster time?": "## Target type: {'Time'}\n## Query:\nStep1: Find the athlete named Adrienne Power\nQuery1: \"get_information(relation='Athlete', tail_entity='Adrienne Power')\"\nStep2: Find the time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Find the athlete named Kim Wall\nQuery3: \"get_information(relation='Athlete', tail_entity='Kim Wall')\"\nStep4: Find the time of output_of_query3\nQuery4: \"get_information(relation='Time', head_entity='output_of_query3')\"\nStep5: Compare the time of output_of_query2 and output_of_query4 to find the faster time\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4', operator='>')\"\n",
    "how does brazil rank in average receipts per visitor in 2009?": "## Target type: {ranking}\n## Query:\nStep1: Find the entity named Brazil\nQuery1: \"get_information(relation='Selected Latin American countries', tail_entity='Brazil')\"\nStep2: Find the ranking of Average receipt per visitor in 2009 for output_of_query1\nQuery2: \"get_information(relation='Average receipt per visitor 2009 (USD/turista)', head_entity='output_of_query1')\"",
    "how many losses did the tram incur?": "None",
    "did st albans score more goals against ruislip manor or the tufnell spartans?": "None",
    "which city has the least area": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Area km2\nQuery1: \"get_information(relation='Area km2')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Area km2\nQuery3: \"get_information(relation='Area km2', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Official Name of output_of_query3\nQuery4: \"get_information(relation='Official Name', head_entity='output_of_query3')\"",
    "what is the last city/county and population served and web site": "None",
    "what is the last location?": "## Target type: {'Location'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "what is the number of stories directed by jim ryan?": "None",
    "what city is the largest by surface area?": "## Target type: {'City'}\n## Query:\nStep1: Find the entity with the relation of Surface (km\u00b2)\nQuery1: \"get_information(relation='Surface (km\u00b2)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Surface area\nQuery3: \"get_information(relation='Surface (km\u00b2)', tail_entity='output_of_query2')\"\nStep4: Find the City of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "which province has the largest density in square miles?": "None",
    "how many more passengers flew to los angeles than to saskatoon from manzanillo airport in 2013?": "## Target type: {number of passengers}\n## Query:\nStep1: Find the entity named Los Angeles\nQuery1: \"get_information(relation='City', tail_entity='Los Angeles')\"\nStep2: Find the Passengers of output_of_query1\nQuery2: \"get_information(relation='Passengers', head_entity='output_of_query1')\"\nStep3: Find the entity named Saskatoon\nQuery3: \"get_information(relation='City', tail_entity='Saskatoon')\"\nStep4: Find the Passengers of output_of_query3\nQuery4: \"get_information(relation='Passengers', head_entity='output_of_query3')\"\nStep5: Find the entity named Manzanillo Airport\nQuery5: \"get_information(relation='Airport', tail_entity='Manzanillo Airport')\"\nStep6: Find the Passengers of output_of_query5 in 2013\nQuery6: \"get_information(relation='Passengers', tail_entity='output_of_query5', key='Year', value='2013')\"\nStep7: Calculate the difference between output_of_query2 and output_of_query4\nQuery7: \"subtract(value1='output_of_query2', value2='output_of_query4')\"",
    "which games did they not score under 30 points?": "None",
    "which clubs did not score more than 50 points?": "## Target type: {club}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Find the points that are less than or equal to 50\nQuery2: \"get_information(relation='Points', tail_entity<='50')\"\nStep3: Find the Club of output_of_query2\nQuery3: \"get_information(relation='Club', head_entity='output_of_query2')\"",
    "how many times did a can-i-bus album reach the top 10 on the us charts?": "None",
    "in what year did vinnie dombroski win his outstanding rock/pop vocalist award?": "None",
    "what was the difference, in years, between the year when damon bailey won the award and the year he was drafted by the pacers?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named Damon Bailey\nQuery1: \"get_information(relation='Player', tail_entity='Damon Bailey')\"\nStep2: Find the year when Damon Bailey won the award\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the year when Damon Bailey was drafted by the pacers\nQuery3: \"get_information(relation='NBA/ABA draft', head_entity='output_of_query1')\"\nStep4: Calculate the difference between output_of_query2 and output_of_query3\nQuery4: \"calculate_difference(year1='output_of_query2', year2='output_of_query3')\"",
    "the number of type, how many are light vehicle": "None",
    "how many times was chicago listed as a city?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Chicago\nQuery1: \"get_information(relation='City', tail_entity='Chicago')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times is detroit listed as a destination?": "None",
    "how many more seasons was marty brill head coach compared to tom conley?": "None",
    "which coach had greater than 700 total wins?": "## Target type: {coach}\n## Query:\nStep1: Find the entity that has Wins greater than 700\nQuery1: \"get_information(relation='Wins', tail_entity>'700')\"\nStep2: Find the Coach of output_of_query1\nQuery2: \"get_information(relation='Coach', head_entity='output_of_query1')\"",
    "which coach has the least number of total games on their record?": "None",
    "what team had the worst win/tie/loss record?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of W\nQuery1: \"get_information(relation='W')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min W\nQuery3: \"get_information(relation='W', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of T\nQuery4: \"get_information(relation='T')\"\nStep5: Get the min output_of_query4\nQuery5: \"min(set='output_of_query4')\" \nStep6: Find the entity with the min T\nQuery6: \"get_information(relation='T', tail_entity='output_of_query5')\"\nStep7: Find the entity with the relation of L\nQuery7: \"get_information(relation='L')\"\nStep8: Get the max output_of_query7\nQuery8: \"max(set='output_of_query7')\" \nStep9: Find the entity with the max L\nQuery9: \"get_information(relation='L', tail_entity='output_of_query8')\"\nStep10: Get the union of output_of_query3, output_of_query",
    "which is the smallest prison on the list?": "## Target type: {Name of prison}\n## Query:\nStep1: Find the entity with relation of # of prisoners designed for\nQuery1: \"get_information(relation='# of prisoners designed for')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min prisoners designed for\nQuery3: \"get_information(relation='# of prisoners designed for', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "what is the only location with an output of 1?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of Output (MW AC) equal to 1\nQuery1: \"get_information(relation='Output (MW AC)', tail_entity='1')\"\nStep2: Find the location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"",
    "at most part, how many emission standards are equal to or less than 1.1?": "## Target type: {number of emission standards}\n## Query:\nStep1: Find the emission standards that are equal to or less than 1.1\nQuery1: \"get_information(relation='Emission Standard', tail_entity<='1.1')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the total available grid capacity in megawatts in the year 2003?": "None",
    "how much longer has the north carolina wolfpack been around compared to the tar heels?": "## Target type: {time}\n## Query:\nStep1: Find the entity named North Carolina State\nQuery1: \"get_information(relation='Institution', tail_entity='North Carolina State')\"\nStep2: Find the Rugby Since of output_of_query1\nQuery2: \"get_information(relation='Rugby Since', head_entity='output_of_query1')\"\nStep3: Find the entity named Tar Heels\nQuery3: \"get_information(relation='Nickname', tail_entity='Tar Heels')\"\nStep4: Find the Rugby Since of output_of_query3\nQuery4: \"get_information(relation='Rugby Since', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"difference(set1='output_of_query2', set2='output_of_query4')\"",
    "which competition was played earliest?": "## Target type: {competition}\n## Query:\nStep1: Find the entity named Date that appears earliest.\nQuery1: \"get_information(relation='Date', tail_entity>='earliest')\"\nStep2: Find the Competition of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"",
    "which boat builder is the most popular?": "None",
    "what was the highest score achieved by rhein fire?": "None",
    "how many parties had the same leader in office twice?": "## Target type: {number}\n## Query:\nStep1: Find the parties that had the same leader in office twice\nQuery1: \"get_information(relation='Leader', tail_entity='same')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the number of party list votes won in 1961?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Election year is 1961\nQuery1: \"get_information(relation='Election year', tail_entity='1961')\"\nStep2: Find the number of party list votes of output_of_query1\nQuery2: \"get_information(relation='# of party list votes', head_entity='output_of_query1')\"",
    "how many oil and gas industries made the top 10 in ranking of revenue list?": "## Target type: {number}\n## Query:\nStep1: Find the industries in the top 10 of the revenue list\nQuery1: \"get_information(relation='Ranking', tail_entity<='10')\"\nStep2: Find the industries that are oil and gas\nQuery2: \"get_information(relation='Industry', tail_entity='Oil and gas')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "in which years did civallero only have one achievement?": "None",
    "what are the number of times broadzilla won the outstanding hard rock/metal artist/group award?": "None",
    "who is the frist country to have a 1st runner-up of 2": "## Target type: {country}\n## Query:\nStep1: Find the entity that has a 1st Runner-up of 2\nQuery1: \"get_information(relation='1st Runner-up', tail_entity='2')\"\nStep2: Find the country/territory of output_of_query1\nQuery2: \"get_information(relation='Country/Territory', head_entity='output_of_query1')\"",
    "how many coaches have coached from america?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Nationality being United States\nQuery1: \"get_information(relation='Nationality', tail_entity='United States')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who won the season in the north before ec bayreuth did in 2002-03?": "## Target type: {team}\n## Query:\nStep1: Find the entity named EC Bayreuth\nQuery1: \"get_information(relation='North', tail_entity='EC Bayreuth', key='Season', value='2002-03')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number that is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Season of output_of_query4\nQuery5: \"get_information(relation='Season', head_entity='output_of_query4')\"\nStep6: Find the team who won the season in the North in output_of_query5\nQuery6: \"get_information(relation='North', key='Season', value='output_of_query5')\"",
    "was harold earthman more or less than 79 years of age?": "## Target type: {'Age'}\n## Query:\nStep1: Find the entity named Harold Earthman\nQuery1: \"get_information(relation='Representative', tail_entity='Harold Earthman')\"\nStep2: Find the Age of output_of_query1\nQuery2: \"get_information(relation='Age', head_entity='output_of_query1')\"\nStep3: Find the age of 79 years\nQuery3: \"get_information(relation='Age', tail_entity='79 years')\"\nStep4: Check if the output_of_query2 is less than output_of_query3\nQuery4: \"is_less(input1='output_of_query2', input2='output_of_query3')\"",
    "which came first: \"that girl\" or \"miss you\"?": "None",
    "which came first, the judge's choice or birth year song?": "None",
    "what was the most points scored by cardiff city?": "None",
    "what was the next team to score two points after aylesbury united?": "None",
    "how many points did leicester city score?": "None",
    "which progressive party member took office after a liberal?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Party as Liberal\nQuery1: \"get_information(relation='Party', tail_entity='Liberal')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the entity Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what was their position the year after the year they withdrew due to rebel attacks?": "None",
    "when was peter little's last day in office?": "None",
    "which company had the most revenue?": "## Target type: {'Name of concern'}\n## Query:\nStep1: Find the entity with the relation of Revenue\nQuery1: \"get_information(relation='Revenue')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Revenue\nQuery3: \"get_information(relation='Revenue', tail_entity='output_of_query2')\"\nStep4: Find the Name of concern of output_of_query3\nQuery4: \"get_information(relation='Name of concern', head_entity='output_of_query3')\"",
    "which county had the most number of wins?": "None",
    "what was the largest gf in team history in the arab nations cup?": "None",
    "who was the top competitor at the december 9, 2005 games in aspen?": "## Target type: {competitor}\n## Query:\nStep1: Find the game on December 9, 2005\nQuery1: \"get_information(relation='Date', tail_entity='December 9, 2005')\"\nStep2: Find the competitor on the top of output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"",
    "how many teen choice awards has he been nominated for?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity with the relation of Award\nQuery1: \"get_information(relation='Award')\"\nStep2: Find the Teen Choice Awards of output_of_query1\nQuery2: \"get_information(relation='Award', tail_entity='Teen Choice Awards')\"\nStep3: Find the entity with the relation of Result that is Nominated\nQuery3: \"get_information(relation='Result', tail_entity='Nominated')\"\nStep4: Get the intersection of output_of_query2 and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Calculate the count of output_of_query4\nQuery5: \"count(set='output_of_query4')\"",
    "what was the name of m.l.a. previous to the current one?": "None",
    "is ludvika ffl a d3 or a d2?": "None",
    "how many games were replays?": "## Target type: {number}\n## Query:\nStep1: Find the games with the relation of Tie no is \"Replay\"\nQuery1: \"get_information(relation='Tie no', tail_entity='Replay')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which county did mccain have the least amount of votes?": "## Target type: {county}\n## Query:\nStep1: Find the entity with the relation of McCain#\nQuery1: \"get_information(relation='McCain#')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min McCain#\nQuery3: \"get_information(relation='McCain#', tail_entity='output_of_query2')\"\nStep4: Find the county of output_of_query3\nQuery4: \"get_information(relation='County', head_entity='output_of_query3')\"",
    "who has more votes in butler county, obama or mccain?": "## Target type: {candidate}\n## Query:\nStep1: Find the entity named Butler County\nQuery1: \"get_information(relation='County', tail_entity='Butler County')\"\nStep2: Find the Obama's votes of output_of_query1\nQuery2: \"get_information(relation='Obama#', head_entity='output_of_query1')\"\nStep3: Find the McCain's votes of output_of_query1\nQuery3: \"get_information(relation='McCain#', head_entity='output_of_query1')\"\nStep4: Compare the votes of Obama and McCain\nQuery4: \"if(set1=output_of_query2, set2=output_of_query3, operator='greater')\"",
    "how many voters did mccain have in boone county?": "## Target type: {number of voters}\n## Query:\nStep1: Find the entity that County is Boone County\nQuery1: \"get_information(relation='County', tail_entity='Boone County')\"\nStep2: Get the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the voters of McCain with the row_number of output_of_query3\nQuery4: \"get_information(relation='McCain#', head_entity='output_of_query3')\"",
    "which party obtained the largest percentage of votes in the 1996 forum?": "## Target type: {party}\n## Query:\nStep1: Find the entity with the relation of Percentage\nQuery1: \"get_information(relation='Percentage')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Percentage\nQuery3: \"get_information(relation='Percentage', tail_entity='output_of_query2')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"",
    "how many candidates did not have a percentage in the september 8th poll?": "None",
    "how many teams had a manner of departure due to there contract being terminated?": "## Target type: {number of teams}\n## Query:\nStep1: Find the teams with the manner of departure as \"Contract terminated\"\nQuery1: \"get_information(relation='Manner of departure', tail_entity='Contract terminated')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many players were signed in march?": "None",
    "how many tracks featured sandy?": "## Target type: {number of tracks}\n## Query:\nStep1: Find the entity that is Sandy\nQuery1: \"get_information(relation='Featuring', tail_entity='Sandy')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of tracks featuring 2pac?": "## Target type: {number}\n## Query:\nStep1: Find the entity named 2Pac (2pac)\nQuery1: \"get_information(relation='Guest Performers', tail_entity='2Pac')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many games did they play in february?": "None",
    "how many home games did texas tech win in 1993?": "None",
    "how many attendees were present at the february 11 match against huddersfield town?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of H/A being A\nQuery1: \"get_information(relation='H/A', tail_entity='A')\"\nStep2: Find the entity with the relation of Date being February 11\nQuery2: \"get_information(relation='Date', tail_entity='February 11')\"\nStep3: Find the attendance of the output_of_query2\nQuery3: \"get_information(relation='Attendance', head_entity='output_of_query2')\"",
    "who is the first major league hitter to hit two grand slams in one game?": "None",
    "who was the only winner of the ukrainian basketball super league to win winner once?": "None",
    "how many times is the word republican on the list?": "None",
    "which driver and co-driver finished at 3:59 but with 8 points?": "None",
    "which airline has the highest license #": "None",
    "what is the total number of guests listed on episode two?": "None",
    "what is the total amount of guests in episode 1-01?": "None",
    "the last team to win the west?": "None",
    "how many different players scored for the san jose earthquakes during their 1979 home opener against the timbers?": "None",
    "in which year did coy have the most combined tackles?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Coy\nQuery1: \"get_information(relation='row_number', tail_entity='Coy')\"\nStep2: Find the Combined Tackles of output_of_query1\nQuery2: \"get_information(relation='Combined Tackles', head_entity='output_of_query1')\"\nStep3: Find the max Combined Tackles\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the entity with the max Combined Tackles\nQuery4: \"get_information(relation='Combined Tackles', tail_entity='output_of_query3')\"\nStep5: Find the year of output_of_query4\nQuery5: \"get_information(relation='Year', head_entity='output_of_query4')\"",
    "who were the top ranked countries in medal rank?": "None",
    "which of these countries is ranked first?": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Rank equals 1\nQuery1: \"get_information(relation='Rank', tail_entity='1')\"\nStep2: Find the Nation of output_of_query1\nQuery2: \"get_information(relation='Nation', head_entity='output_of_query1')\"",
    "what is the number of star jalsa entertainment awards that this actor has received?": "None",
    "name a player that got no points.": "None",
    "which country has the most third place winnings?": "None",
    "what was the combined total of nicky english and mark corrigan?": "None",
    "david oliver made his debut in 2006 by placing 5th in what competition?": "## Target type: {Competition}\n## Query:\nStep1: Find the entity named David Oliver\nQuery1: \"get_information(relation='Notes', tail_entity='David Oliver')\"\nStep2: Find the debut year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity with relation of Position, row_number and Year that match output_of_query2\nQuery3: \"get_information(relation='Year', tail_entity='output_of_query2', key='Position', value='5th')\"\nStep4: Get the competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "what was the total number of times that terry butcher was the player of the year?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Terry Butcher\nQuery1: \"get_information(relation='Name', tail_entity='Terry Butcher')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Position of output_of_query4\nQuery5: \"get_information(relation='Position', head_entity='output_of_query4')\"\nStep6: Find the Player of the Year count in output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who was the next player besides charles frederick that received the most yards in 2007?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Charles Frederick\nQuery1: \"get_information(relation='Player', tail_entity='Charles Frederick')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "which song has the most downloads?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity with the relation of Total Downloads\nQuery1: \"get_information(relation='Total Downloads')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max downloads\nQuery3: \"get_information(relation='Total Downloads', tail_entity='output_of_query2')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "which lyricist has the largest amount of tracks?": "## Target type: {lyricist}\n## Query:\nStep1: Find the entity with the relation of Lyrics\nQuery1: \"get_information(relation='Lyrics')\"\nStep2: Find the counts of output_of_query1 for each unique value\nQuery2: \"count_by_value(set='output_of_query1')\"\nStep3: Find the max count from output_of_query2\nQuery3: \"max(set='output_of_query2')\"\nStep4: Find the lyricist with the max count\nQuery4: \"get_information(relation='Lyrics', tail_entity='output_of_query3')\"",
    "which poll source has the largest sample size?": "None",
    "what poll source had the largest sample size?": "## Target type: {poll source}\n## Query:\nStep1: Find the entity with the relation of Sample size\nQuery1: \"get_information(relation='Sample size')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Sample size\nQuery3: \"get_information(relation='Sample size', tail_entity='output_of_query2')\"\nStep4: Find the poll source of output_of_query3\nQuery4: \"get_information(relation='Poll source', head_entity='output_of_query3')\"",
    "which make was used the least?": "None",
    "which poll source has the larger sample size, chicago sun-times or chicago tribune?": "None",
    "which countries had more gold medals than kazakhstan?": "None",
    "what is the total number of contested polls (c)?": "None",
    "how many different poll companies are represented?": "## Target type: {number}\n## Query:\nStep1: Find all the poll companies\nQuery1: \"get_information(relation='Poll company')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "name a city not listed in the top 10?": "None",
    "what destination is at the top of the list?": "None",
    "which division placed more than aficio 1a and 3a?": "## Target type: {division}\n## Query:\nStep1: Find the entity named Aficio 1a\nQuery1: \"get_information(relation='Division', tail_entity='Aficio 1a')\"\nStep2: Find the entity named 3a\nQuery2: \"get_information(relation='Division', tail_entity='3a')\"\nStep3: Find the entities whose place is more than output_of_query1 and output_of_query2\nQuery3: \"get_information(relation='Place', tail_entity>'output_of_query1', tail_entity>'output_of_query2')\"\nStep4: Get the division of output_of_query3\nQuery4: \"get_information(relation='Division', head_entity='output_of_query3')\"",
    "how many more golds did russia have than germany?": "## Target type: {number of golds}\n## Query:\nStep1: Find the entity named Russia\nQuery1: \"get_information(relation='Nation', tail_entity='Russia')\"\nStep2: Find the entity named Germany\nQuery2: \"get_information(relation='Nation', tail_entity='Germany')\"\nStep3: Find the gold medals of output_of_query1\nQuery3: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep4: Find the gold medals of output_of_query2\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query2')\"\nStep5: Calculate the difference of output_of_query3 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query3', value2='output_of_query4')\"",
    "how many named midfielders did the 1983 team have?": "None",
    "what player has one fa cup and one fl trophy?": "## Target type: {player}\n## Query:\nStep1: Find the entity that has one FA Cup\nQuery1: \"get_information(relation='FA Cup', tail_entity='1')\"\nStep2: Find the entity that has one FL Trophy\nQuery2: \"get_information(relation='FL Trophy', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"",
    "how many toyotas were there in the top 10 finishes?": "## Target type: {number of toyotas}\n## Query:\nStep1: Find the entity that has a Make of Toyota in the top 10 finishes.\nQuery1: \"get_information(relation='Make', tail_entity='Toyota')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "the position in the 2000-01 league year was not 6th but what position?": "None",
    "in how many seasons did david nedohin play?": "None",
    "how many seats in the belgian parliament are reserved for the electoral district of luxembourg?": "None",
    "what style was the chateau de brissac rebuilt in after it was damaged during the french wars of religion?": "None",
    "what is the total number of counties listed?": "## Target type: {number of counties}\n## Query:\nStep1: Find all the row_numbers\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the greatest number of gold medals won by a single athlete?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity with the relation of Gold\nQuery1: \"get_information(relation='Gold')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Gold\nQuery3: \"get_information(relation='Gold', tail_entity='output_of_query2')\"\nStep4: Find the number of Gold of output_of_query3\nQuery4: \"get_information(relation='Gold', head_entity='output_of_query3')\"",
    "how many trains originate from mangalore central?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Mangalore Central\nQuery1: \"get_information(relation='Origin', tail_entity='Mangalore Central')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what peter widen's is the highest finish in all indoor championships?": "None",
    "which race, other than texas motor speedway, did tony stewart finish the fastest?": "None",
    "which artist earned the least number of points?": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the artist of output_of_query3\nQuery4: \"get_information(relation='Artist', head_entity='output_of_query3')\"",
    "name a country that only had one of each kind of medal.": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of Silver equals 1\nQuery1: \"get_information(relation='Silver', tail_entity='1')\"\nStep2: Find the entity with the relation of Gold equals 1\nQuery2: \"get_information(relation='Gold', tail_entity='1')\"\nStep3: Find the entity with the relation of Bronze equals 1\nQuery3: \"get_information(relation='Bronze', tail_entity='1')\"\nStep4: Get the intersection of output_of_query1, output_of_query2, and output_of_query3\nQuery4: \"set_intersection(set1='output_of_query1', set2='output_of_query2', set3='output_of_query3')\"",
    "an nbr award and a nyfcc award were both given to this actor for his role in what film?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Award being \"NBR Award\"\nQuery1: \"get_information(relation='Award', tail_entity='NBR Award')\"\nStep2: Find the film of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Award being \"NYFCC Award\"\nQuery3: \"get_information(relation='Award', tail_entity='NYFCC Award')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Title', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what movie directed this year by angela evers hughey was made in the same country as the next best thing?": "None",
    "what director has credit for directing the most films?": "## Target type: {director}\n## Query:\nStep1: Find the director with the most films\nQuery1: \"get_information(relation='Director', tail_entity>='most')\"\nStep2: Find the films directed by output_of_query1\nQuery2: \"get_information(relation='Director', head_entity='output_of_query1')\"",
    "what was the fastest car?": "## Target type: {'Car'}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Find the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Get the Car of output_of_query3\nQuery4: \"get_information(relation='Car', head_entity='output_of_query3')\"",
    "how many counties have at least one silver medal?": "None",
    "has anyone won miss pokhara consecutively?": "## Target type: {yes/no}\n## Query:\nStep1: Find the entity with the relation of Placement in Miss Pokhara\nQuery1: \"get_information(relation='Placement in Miss Pokhara')\"\nStep2: Check if any of the output_of_query1 has the same value as \"Winner\"\nQuery2: \"exist(set='output_of_query1', value='Winner')\"",
    "what was the greatest difference between goals scored by serbia and its opponent?": "None",
    "what is the total number of members whose term expires in 1989?": "None",
    "who is the most recent representative of maryland's 3rd congressional district?": "## Target type: {Name}\n## Query:\nStep1: Find the entity named Maryland's 3rd congressional district\nQuery1: \"get_information(relation='Name', tail_entity='Maryland's 3rd congressional district')\"\nStep2: Find the entity with the relation of Took office\nQuery2: \"get_information(relation='Took office')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\" \nStep4: Get the entity with the max Took office\nQuery4: \"get_information(relation='Took office', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many mayors were either fisherman or farmers?": "## Target type: {number of mayors}\n## Query:\nStep1: Find the mayors who were fishermen\nQuery1: \"get_information(relation='Occupation', tail_entity='fisherman')\"\nStep2: Find the mayors who were farmers\nQuery2: \"get_information(relation='Occupation', tail_entity='farmer')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "other than the 1950s how many greek league finishes were there?": "None",
    "previous to 1977 how many greek leagues were champion?": "None",
    "who won bronze before valeranga in 1960-61?": "None",
    "which intersecting road goes to the same place as the intersecting road at kilometer 3 in this county?": "None",
    "what junction is the furthest from mahanayim junction?": "None",
    "prior to over the rainbow, how many previous television appearances did kerry ellis have?": "None",
    "the least number of total appearances": "## Target type: {'Total Apps'}\n## Query:\nStep1: Find the entity with the relation of Total Apps\nQuery1: \"get_information(relation='Total Apps')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Total Apps\nQuery3: \"get_information(relation='Total Apps', tail_entity='output_of_query2')\"",
    "which state has the most member schools?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Institution\nQuery1: \"get_information(relation='Institution')\"\nStep2: Find the state of output_of_query1\nQuery2: \"get_information(relation='State', head_entity='output_of_query1')\"\nStep3: Find the entity in State that appears the most\nQuery3: \"get_information(relation='State', tail_entity>='most')\"\nStep4: Get the state of output_of_query3\nQuery4: \"get_information(relation='State', head_entity='output_of_query3')\"",
    "what was the color of the last line on this chart?": "## Target type: {'Color & Icon'}\n## Query:\nStep1: Find the entity with relation 'row_number'\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Color & Icon of output_of_query3\nQuery4: \"get_information(relation='Color & Icon', head_entity='output_of_query3')\"",
    "which party has the most membership?": "## Target type: {'Party'}\n## Query:\nStep1: Find the entities with the relation of Party\nQuery1: \"get_information(relation='Party')\"\nStep2: Find the entity that appears the most in the output_of_query1\nQuery2: \"get_information(relation='Party', tail_entity>='most')\"",
    "in total, how many times has stanford won the national championship?": "None",
    "which team won only two bronze medals?": "None",
    "list the competitions that have the same relay as world championships from athens, greece.": "None",
    "which is bigger, yate town's stadium or hand stadium?": "None",
    "this first district representative lives in devil's tower.": "## Target type: {residence}\n## Query:\nStep1: Find the entity that is Devil's Tower\nQuery1: \"get_information(relation='Residence', tail_entity='Devil's Tower')\"\nStep2: Find the representative that lives in output_of_query1\nQuery2: \"get_information(relation='Representative', head_entity='output_of_query1')\"",
    "when was antonio horvath kiss last elected?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Antonio Horvath Kiss\nQuery1: \"get_information(relation='Name', tail_entity='Antonio Horvath Kiss')\"\nStep2: Find the Last elected of output_of_query1\nQuery2: \"get_information(relation='Last elected', head_entity='output_of_query1')\"",
    "in what year was galen r. clagett first elected into the western maryland delegation?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Galen R. Clagett\nQuery1: \"get_information(relation='Delegate', tail_entity='Galen R. Clagett')\"\nStep2: Find the First Elected year of output_of_query1\nQuery2: \"get_information(relation='First Elected', head_entity='output_of_query1')\"",
    "what was this players average ranking between 2001 and 2006?": "None",
    "what is the first type and standard on the chart": "None",
    "how many cities are represented in the intersecting highway category?": "None",
    "how many years consecutive featured the 20 km event?": "## Target type: {number of years}\n## Query:\nStep1: Find the entity named 20 km\nQuery1: \"get_information(relation='Event', tail_entity='20 km')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the number of consecutive years featured the 20 km event\nQuery3: \"count(set='output_of_query2')\"",
    "how many countries other than hungary participate?": "None",
    "what is the next cartoon directed by robert mckimson after le quiet squad?": "## Target type: {Title}\n## Query:\nStep1: Find the entity named Le Quiet Squad\nQuery1: \"get_information(relation='Title', tail_entity='Le Quiet Squad')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "what film did damon executive produce that starred kevin costner and joan allen?": "None",
    "how many municipalities exist in the province of cadiz?": "None",
    "which island is listed before the town/village of argir?": "None",
    "how many total medals did belarus win?": "## Target type: {total medals}\n## Query:\nStep1: Find the entity named Belarus\nQuery1: \"get_information(relation='Nation', tail_entity='Belarus')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"",
    "which nation had as many silver medals as mexico and turkey combined?": "None",
    "how many consecutive companies had no notes listed?": "None",
    "how many artist scored zero marks in color?": "## Target type: {number}\n## Query:\nStep1: Find all the artists with the relation of Color as 0\nQuery1: \"get_information(relation='Color', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "at most, what is spain's win percentage against another country.": "None",
    "what is the only city to start with the letter r?": "## Target type: {'City/Municipality'}\n## Query:\nStep1: Find all the entities in the City/Municipality relation\nQuery1: \"get_information(relation='City/Municipality')\"\nStep2: Find the entities that start with the letter 'R'\nQuery2: \"find_starting_letter(set='output_of_query1', letter='R')\"\nStep3: Find the entity that appears only once in output_of_query2\nQuery3: \"find_single_occurrence(set='output_of_query2')\"",
    "how many people were sent home?": "None",
    "what is the total number of ghostbusters videogames created?": "None",
    "did dalian shide ever lose again after winning on february 6,2003?": "None",
    "what is the total amount of gold awards that france won?": "## Target type: {total amount}\n## Query:\nStep1: Find the entity that is France\nQuery1: \"get_information(relation='Nation', tail_entity='France')\"\nStep2: Find the Gold awards of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"\nStep3: Calculate the total amount of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "how many academy awards have been won posthumously?": "None",
    "what was the next team to end after the london lions?": "None",
    "who was the first death in the republican party?": "## Target type: {representative}\n## Query:\nStep1: Find the entity with the relation of Party as Republican\nQuery1: \"get_information(relation='Party', tail_entity='Republican')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Representative of output_of_query4\nQuery5: \"get_information(relation='Representative', head_entity='output_of_query4')\"",
    "what is the number of films in this category that came from france during this year?": "None",
    "which has a limiting magnitude higher than coast visible, chara array or coast infrared?": "None",
    "which is the other nation with the second highest sliver medal": "## Target type: {nation}\n## Query:\nStep1: Find the entity with the relation of Silver\nQuery1: \"get_information(relation='Silver')\"\nStep2: Get the second highest output_of_query1\nQuery2: \"nth_highest(set='output_of_query1', n=2)\"\nStep3: Find the entity with the Silver equal to output_of_query2\nQuery3: \"get_information(relation='Silver', tail_entity='output_of_query2')\"\nStep4: Find the nation of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what is the number of galaxies in the pisces constellation?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Constellation is Pisces\nQuery1: \"get_information(relation='Constellation', tail_entity='Pisces')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "did mitsuo kamata have more than 40 total points?": "None",
    "who are the only players listed that played in 2011?": "## Target type: {player}\n## Query:\nStep1: Find the entities with Year as 2011\nQuery1: \"get_information(relation='Year', tail_entity='2011')\"\nStep2: Find the Players of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "does pulaski county have more cities beginning with the letter \"a\" than montgomery county?": "None",
    "how many winners were born after 1972?": "None",
    "what was the only grand slam where fabrice santoro reached as far as a quarterfinal?": "None",
    "name all the counties with an area larger than kilifi.": "None",
    "what is the largest city in rizal in terms of area?": "## Target type: {City/Municipality}\n## Query:\nStep1: Find the largest area in Rizal\nQuery1: \"get_information(relation='Area (km\u00b2)', tail_entity>='largest')\"\nStep2: Find the City/Municipality associated with the output_of_query1\nQuery2: \"get_information(relation='City/Municipality', head_entity='output_of_query1')\"",
    "which is the only subdivision to have a greater area than argyll and bute?": "None",
    "does cd or ef have a larger separation?": "None",
    "how long was it between the two consecutive arsenal games?": "None",
    "how many awards did this actor receive for his role in challenge?": "## Target type: {number of awards}\n## Query:\nStep1: Find the entity that Film is Challenge\nQuery1: \"get_information(relation='Film', tail_entity='Challenge')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the same row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many different analouges does capital yorkshire have avaiable": "None",
    "is wembley stadium or att stadium larger?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named Wembley Stadium\nQuery1: \"get_information(relation='Stadium', tail_entity='Wembley Stadium')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the entity named ATT Stadium\nQuery3: \"get_information(relation='Stadium', tail_entity='ATT Stadium')\"\nStep4: Find the capacity of output_of_query3\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query3')\"\nStep5: Compare the capacity of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='>')\"\n\nNote: The comparison operator \">\" can be changed based on the specific schema and the definition of \"larger\" in this context.",
    "which convention had the top attendance figure in it's first known year?": "## Target type: {convention name}\n## Query:\nStep1: Find the entity with the relation of Earliest attendance figure known\nQuery1: \"get_information(relation='Earliest attendance figure known')\"\nStep2: Find the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max attendance figure in its first known year\nQuery3: \"get_information(relation='Earliest attendance figure known', tail_entity='output_of_query2')\"\nStep4: Find the convention name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which county had the most voters for a candidate other than bush or kerry?": "None",
    "did romney earn more or less votes than obama did in alameda county?": "## Target type: {votes}\n## Query:\nStep1: Find the entity named Alameda County\nQuery1: \"get_information(relation='County', tail_entity='Alameda County')\"\nStep2: Find the votes of Romney in output_of_query1\nQuery2: \"get_information(relation='Romney', head_entity='output_of_query1')\"\nStep3: Find the votes of Obama in output_of_query1\nQuery3: \"get_information(relation='Obama', head_entity='output_of_query1')\"\nStep4: Compare the votes of Romney and Obama\nQuery4: \"compare(value1='output_of_query2', value2='output_of_query3')\"",
    "how long did it take number 71 to retire?": "None",
    "how many places list no zip code in either the lower or upper zip code?": "None",
    "which place has the lowest, lower zip code?": "None",
    "what symbol comes before symbol co?": "None",
    "player transferred immediately before mauro rafael da silva": "None",
    "nejat konuk and dervi&#351; ero&#287;lu are from which party?": "## Target type: {party}\n## Query:\nStep1: Find the entity named Nejat Konuk\nQuery1: \"get_information(relation='Name', tail_entity='Nejat Konuk')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"\nStep3: Find the entity named Dervi\u015f Ero\u011flu\nQuery3: \"get_information(relation='Name', tail_entity='Dervi\u015f Ero\u011flu')\"\nStep4: Find the party of output_of_query3\nQuery4: \"get_information(relation='Party', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "ebessan and pero won in what year?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Ebessan\nQuery1: \"get_information(relation='Wrestlers', tail_entity='Ebessan')\"\nStep2: Find the entity named Pero\nQuery2: \"get_information(relation='Wrestlers', tail_entity='Pero')\"\nStep3: Get the union of output_of_query1 and output_of_query2\nQuery3: \"set_union(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Find the Date of output_of_query4\nQuery5: \"get_information(relation='Date', tail_entity='output_of_query4')\"\nStep6: Extract the year from output_of_query5\nQuery6: \"extract_year(date='output_of_query5')\"",
    "as of october 25, 2005, how many active voters does the democratic party have?": "## Target type: {number of active voters}\n## Query:\nStep1: Find the entity named Democratic Party\nQuery1: \"get_information(relation='Party', tail_entity='Democratic Party')\"\nStep2: Find the active voters of output_of_query1\nQuery2: \"get_information(relation='Active Voters', head_entity='output_of_query1')\"",
    "what is the difference between the population of ovada and the population of serravalle scrivia?": "None",
    "pune or surat had a 2001 population on 2,538,473?": "## Target type: {city}\n## Query:\nStep1: Find the entity named Pune\nQuery1: \"get_information(relation='City', tail_entity='Pune')\"\nStep2: Find the population in 2001 of output_of_query1\nQuery2: \"get_information(relation='Population (2001)', head_entity='output_of_query1')\"\nStep3: Find the entity named Surat\nQuery3: \"get_information(relation='City', tail_entity='Surat')\"\nStep4: Find the population in 2001 of output_of_query3\nQuery4: \"get_information(relation='Population (2001)', head_entity='output_of_query3')\"\nStep5: Check if the population of Pune or Surat is 2,538,473 in 2001\nQuery5: \"any(set=['output_of_query2', 'output_of_query4'], condition='value==2538473')\"",
    "what is the total population for yanglin?": "## Target type: {population}\n## Query:\nStep1: Find the entity named Yanglin\nQuery1: \"get_information(relation='Name', tail_entity='Yanglin')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population (2005)', head_entity='output_of_query1')\"",
    "which has the largest number of screens?": "## Target type: {circuit}\n## Query:\nStep1: Find the entity with the relation of Screens\nQuery1: \"get_information(relation='Screens')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Screens\nQuery3: \"get_information(relation='Screens', tail_entity='output_of_query2')\"\nStep4: Find the Circuit of output_of_query3\nQuery4: \"get_information(relation='Circuit', head_entity='output_of_query3')\"",
    "which teams were the last to qualify?": "None",
    "which game had more in attendance, 11/28 or 12/08?": "None",
    "in what year did he have the most international goals?": "None",
    "which team was the first team to score six goals?": "None",
    "what iast is listed before the o?": "None",
    "the yudachi was sunk on november 13,1942. which ship shared the same fate that year?": "None",
    "which country has the same amount of adherents as jerusalem?": "None",
    "what is the difference between the area of san cristobal and puerto plata?": "## Target type: {number}\n## Query:\nStep1: Find the entity named San Cristobal\nQuery1: \"get_information(relation='Capital', tail_entity='San Cristobal')\"\nStep2: Find the area of output_of_query1\nQuery2: \"get_information(relation='Area (km\u00b2)', head_entity='output_of_query1')\"\nStep3: Find the entity named Puerto Plata\nQuery3: \"get_information(relation='Capital', tail_entity='Puerto Plata')\"\nStep4: Find the area of output_of_query3\nQuery4: \"get_information(relation='Area (km\u00b2)', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtract(output_of_query2, output_of_query4))\"",
    "what sport is listed first?": "## Target type: {sport}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the sport of output_of_query3\nQuery4: \"get_information(relation='Sport', head_entity='output_of_query3')\"",
    "which year was he nominated for \"cheers: the motion picture.\"": "## Target type: {year}\n## Query:\nStep1: Find the entity where the Episode is \"Cheers: The Motion Picture\"\nQuery1: \"get_information(relation='Episode', tail_entity='Cheers: The Motion Picture')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "were there any constituency votes in the first election year?": "None",
    "how many draws are on the chart": "## Target type: {number}\n## Query:\nStep1: Find the rows with the relation of Result where value is \"Draw\"\nQuery1: \"get_information(relation='Result', value='Draw')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what game of the year came after myst in 1994?": "## Target type: {Game of the Year}\n## Query:\nStep1: Find the entity with the relation of Year is 1994\nQuery1: \"get_information(relation='Year', tail_entity='1994')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Game of the Year of output_of_query4\nQuery5: \"get_information(relation='Game of the Year', head_entity='output_of_query4')\"",
    "how many games were produced from 1988 to 1993?": "## Target type: {number of games}\n## Query:\nStep1: Find the row_number of the year 1988\nQuery1: \"get_information(relation='Year', tail_entity='1988')\"\nStep2: Find the row_number of the year 1993\nQuery2: \"get_information(relation='Year', tail_entity='1993')\"\nStep3: Find the games produced between output_of_query1 and output_of_query2\nQuery3: \"get_information(relation='Title', head_entity>='output_of_query1', head_entity<='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "before 2011, how many internationals has the sahrawi national football team won?": "None",
    "what player is listed above freddy eastwood?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Freddy Eastwood\nQuery1: \"get_information(relation='Name', tail_entity='Freddy Eastwood')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "who had the best time driving a ferrari?": "None",
    "which car was driven by the most members?": "None",
    "what is the difference in thrust between the al-7 and al-21?": "None",
    "what was phil lockyer's party?": "## Target type: {'Party'}\n## Query:\nStep1: Find the entity named Phil Lockyer\nQuery1: \"get_information(relation='Name', tail_entity='Phil Lockyer')\"\nStep2: Find the party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "what is the total number of votes submitted for all candidates in los angeles county?": "## Target type: {number of votes}\n## Query:\nStep1: Find the entity for Los Angeles County\nQuery1: \"get_information(relation='County', tail_entity='Los Angeles County')\"\nStep2: Find the total number of votes for output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Calculate the sum of output_of_query2\nQuery3: \"sum(set='output_of_query2')\"",
    "what team had the best gd?": "## Target type: {'Team'}\n## Query:\nStep1: Find the team with the best GD\nQuery1: \"get_information(relation='GD', tail_entity>='best')\"\nStep2: Find the Team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"",
    "who is the previous president to henry cotton?": "## Target type: {Name of President}\n## Query:\nStep1: Find the entity named Henry Cotton\nQuery1: \"get_information(relation='Name of President', tail_entity='Henry Cotton')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of President of output_of_query4\nQuery5: \"get_information(relation='Name of President', head_entity='output_of_query4')\"",
    "how many players transferred to ajax?": "## Target type: {number of players}\r\n## Query:\r\nStep1: Find the entity named Ajax\r\nQuery1: \"get_information(relation='To', tail_entity='Ajax')\"\r\nStep2: Calculate the count of output_of_query1\r\nQuery2: \"count(set='output_of_query1')\"",
    "what is the number of people in attendance on january 30, 1968?": "None",
    "what is the number of attendance for date 2/28/1982": "## Target type: {attendance}\n## Query:\nStep1: Find the entity that has the date of 2/28/1982\nQuery1: \"get_information(relation='Date', tail_entity='2/28/1982')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "list each of dates played at mile high stadium.": "None",
    "which stadium is larger than nanjing olympic stadium?": "None",
    "how many players with an assist did not play the position of mf or fw?": "## Target type: {number}\n## Query:\nStep1: Find players with an assist\nQuery1: \"get_information(relation='Assist', tail_entity>='1')\"\nStep2: Find players who played the position of MF\nQuery2: \"get_information(relation='Position', tail_entity='MF')\"\nStep3: Find players who played the position of FW\nQuery3: \"get_information(relation='Position', tail_entity='FW')\"\nStep4: Get the union of output_of_query2 and output_of_query3\nQuery4: \"set_union(set1='output_of_query2', set2='output_of_query3')\"\nStep5: Get the negation of output_of_query4\nQuery5: \"set_negation(set='output_of_query4')\"\nStep6: Get the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "which country received the least amount of points in the 2008 ogae second chance contest?": "## Target type: {country}\n## Query:\nStep1: Find the entity that Year is 2008 and National final is 'OGAE second chance contest'\nQuery1: \"get_information(relation='Year', tail_entity='2008')\"\nQuery2: \"get_information(relation='National final', tail_entity='OGAE second chance contest')\"\nStep2: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep3: Find the entity with the relation of Points\nQuery4: \"get_information(relation='Points')\"\nStep4: Get the min output_of_query4\nQuery5: \"min(set='output_of_query4')\"\nStep5: Find the entity with the min Points\nQuery6: \"get_information(relation='Points', tail_entity='output_of_query5')\"\nStep6: Find the Country of output_of_query6\nQuery7: \"get_information(relation='Country', head_entity='output_of_query6')\"",
    "what is the difference in the number of people sent home in episode one and two?": "None",
    "what was the last episode with two people sent home?": "None",
    "how many competitions were in budapest, hungary and came in 1st position?": "## Target type: {number of competitions}\n## Query:\nStep1: Find the entity that Venue is Budapest, Hungary\nQuery1: \"get_information(relation='Venue', tail_entity='Budapest, Hungary')\"\nStep2: Find the competitions of output_of_query1\nQuery2: \"get_information(relation='Competition', head_entity='output_of_query1')\"\nStep3: Find the entity that Position is 1st\nQuery3: \"get_information(relation='Position', tail_entity='1st')\"\nStep4: Find the competitions of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"\nStep6: Calculate the count of output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "who elected 17?": "None",
    "who had the shortest tenures as president?": "## Target type: {president}\n## Query:\nStep1: Find all the tenures\nQuery1: \"get_information(relation='Tenure')\"\nStep2: Get the min tenure from output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Find the entity with the min tenure\nQuery3: \"get_information(relation='Tenure', tail_entity='output_of_query2')\"\nStep4: Find the president of output_of_query3\nQuery4: \"get_information(relation='President', head_entity='output_of_query3')\"",
    "name each of the years that taylor jensen was winner.": "## Target type: {year}\n## Query:\nStep1: Find the entity named Taylor Jensen\nQuery1: \"get_information(relation='Winner', tail_entity='Taylor Jensen')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the years corresponding to the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2', key='Year')\"\nStep4: Get the unique output_of_query3\nQuery4: \"unique(set='output_of_query3')\"",
    "what are the number of legs lost by james wade?": "## Target type: {number of legs}\n## Query:\nStep1: Find the entity named James Wade\nQuery1: \"get_information(relation='Player', tail_entity='James Wade')\"\nStep2: Find the number of legs lost by output_of_query1\nQuery2: \"get_information(relation='Legs Lost', head_entity='output_of_query1')\"",
    "what is the number of losses for coach jay mills?": "None",
    "what is the number of dfs?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Pos. being \"DF\"\nQuery1: \"get_information(relation='Pos.', tail_entity='DF')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many total pages from 1970's": "None",
    "who reigned longer, geunchogo or chaekgye?": "None",
    "what was the smallest number of votes before 2003?": "None",
    "is the sample size of siena more or less than the sample size of quinnipiac?": "## Target type: {sample size}\n## Query:\nStep1: Find the entity named Siena\nQuery1: \"get_information(relation='Poll source', tail_entity='Siena')\"\nStep2: Find the sample size of output_of_query1\nQuery2: \"get_information(relation='Sample size', head_entity='output_of_query1')\"\nStep3: Find the entity named Quinnipiac\nQuery3: \"get_information(relation='Poll source', tail_entity='Quinnipiac')\"\nStep4: Find the sample size of output_of_query3\nQuery4: \"get_information(relation='Sample size', head_entity='output_of_query3')\"\nStep5: Compare the sample sizes of output_of_query2 and output_of_query4\nQuery5: \"comparison(set1='output_of_query2', set2='output_of_query4')\"",
    "the only label that shares multiple albums is which?": "None",
    "tell me the number of summer olympics on the list.": "## Target type: {number}\n## Query:\nStep1: Find the entity that Season is Summer\nQuery1: \"get_information(relation='Season', tail_entity='Summer')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what year was prime suspects nominated for the bafta tv award?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Award is BAFTA TV Award\nQuery1: \"get_information(relation='Award', tail_entity='BAFTA TV Award')\"\nStep2: Find the nominated work of output_of_query1\nQuery2: \"get_information(relation='Nominated work', head_entity='output_of_query1')\"\nStep3: Find the entity named Prime Suspects\nQuery3: \"get_information(relation='Nominated work', tail_entity='Prime Suspects')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"",
    "which gang had at least one winner on mtv roadies season 6?": "## Target type: {'Gang'}\n## Query:\nStep1: Find the entity whose Notes contains the word \"winner\"\nQuery1: \"get_information(relation='Notes', value='winner')\"\nStep2: Find the Gang of output_of_query1\nQuery2: \"get_information(relation='Gang', head_entity='output_of_query1')\"",
    "ricky stenhouse, jr. and justin allgaier both won at which track this season?": "## Target type: {track}\n## Query:\nStep1: Find the entity named Ricky Stenhouse, Jr.\nQuery1: \"get_information(relation='Winner', tail_entity='Ricky Stenhouse, Jr.')\"\nStep2: Find the track of output_of_query1\nQuery2: \"get_information(relation='Track', head_entity='output_of_query1')\"\nStep3: Find the entity named Justin Allgaier\nQuery3: \"get_information(relation='Winner', tail_entity='Justin Allgaier')\"\nStep4: Find the track of output_of_query3\nQuery4: \"get_information(relation='Track', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "which category did both warren beatty and jeremy pikser each won together?": "None",
    "which awards ceremony had the same number of viewers as the 18th?": "None",
    "name the largest lake": "## Target type: {name of the lake}\n## Query:\nStep1: Find the entity with the relation of Area in km\u00b2\nQuery1: \"get_information(relation='Area in km\u00b2')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Area in km\u00b2\nQuery3: \"get_information(relation='Area in km\u00b2', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "who achieved a time that was at least faster than 54.20?": "None",
    "which platforms had the most titles released?": "None",
    "how long has it been since the zebra finch diverged from humans?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Zebra Finch\nQuery1: \"get_information(relation='Common Name', tail_entity='Zebra Finch')\"\nStep2: Find the years since divergence from Humans of output_of_query1\nQuery2: \"get_information(relation='Years Since Divergence from Human (mya)', head_entity='output_of_query1')\"",
    "the mercedes championships and sony open in hawaii are located in what state?": "## Target type: {state}\n## Query:\nStep1: Find the entity named Mercedes Championships\nQuery1: \"get_information(relation='Tournament', tail_entity='Mercedes Championships')\"\nStep2: Find the Location of output_of_query1\nQuery2: \"get_information(relation='Location', head_entity='output_of_query1')\"\nStep3: Find the entity named Sony Open in Hawaii\nQuery3: \"get_information(relation='Tournament', tail_entity='Sony Open in Hawaii')\"\nStep4: Find the Location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"\nStep5: Get the union of output_of_query2 and output_of_query4\nQuery5: \"set_union(set1='output_of_query2', set2='output_of_query4')\"",
    "how many total television shows has gauri starred in?": "None",
    "what is the difference between white voters and black voters in 1948?": "None",
    "how many presidents use initials?": "None",
    "which driver had a total time of 1:59:38.4?": "None",
    "how many athletes have a time of 13.29?": "## Target Type: {number of athletes}\n## Query:\nStep1: Find the entity with the relation of Time and value of 13.29\nQuery1: \"get_information(relation='Time', value='13.29')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which american came in in the least amount of time?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Nationality as 'American'\nQuery1: \"get_information(relation='Nationality', tail_entity='American')\"\nStep2: Find the Time of output_of_query1\nQuery2: \"get_information(relation='Time', head_entity='output_of_query1')\"\nStep3: Get the min time of output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Get the entity with the min time\nQuery4: \"get_information(relation='Time', tail_entity='output_of_query3')\"\nStep5: Find the athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "how many performances occurred in the month of june?": "None",
    "after sengoku cannon, which game was released?": "## Target type: {game title}\n## Query:\nStep1: Find the entity named Sengoku Cannon\nQuery1: \"get_information(relation='Title', tail_entity='Sengoku Cannon')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "swat 4 was released in 2005... which game in the series preceded it?": "## Target type: {Title}\n## Query:\nStep1: Find the game with the Year 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "is union college located in tennesse or kentucky?": "None",
    "what is the only conference school located in kentucky?": "## Target type: {Institution}\n## Query:\nStep1: Find the conference school located in Kentucky\nQuery1: \"get_information(relation='Location', tail_entity='Kentucky')\"\nStep2: Find the Institution of output_of_query1\nQuery2: \"get_information(relation='Institution', head_entity='output_of_query1')\"",
    "what is the difference in finishing times for the men's and women's bupa great south run finish for 2013?": "None",
    "what was luis jesus' quickest finish time?": "None",
    "how many prime ministers were born before 1850?": "None",
    "how many presidents were part of the whig party?": "None",
    "how many total laps did alex figge complete?": "## Target type: {total laps}\n## Query:\nStep1: Find the entity named Alex Figge\nQuery1: \"get_information(relation='Driver', tail_entity='Alex Figge')\"\nStep2: Find the total laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"",
    "who had the fastest lap time?": "None",
    "what team were justin wilson and alex tagliani on?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Justin Wilson\nQuery1: \"get_information(relation='Driver', tail_entity='Justin Wilson')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='Team', head_entity='output_of_query1')\"\nStep3: Find the entity named Alex Tagliani\nQuery3: \"get_information(relation='Driver', tail_entity='Alex Tagliani')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which team was ray price on before he started for this team?": "## Target type: {Previous Club}\n## Query:\nStep1: Find the entity named Ray Price\nQuery1: \"get_information(relation='Name', tail_entity='Ray Price')\"\nStep2: Find the previous club of output_of_query1\nQuery2: \"get_information(relation='Previous Club', head_entity='output_of_query1')\"",
    "who was next in total assists after paul parry?": "None",
    "where did japan only score four goals?": "## Target type: {'Competition'}\n## Query:\nStep1: Find the entity that Team is Japan and Goals is 4\nQuery1: \"get_information(relation='Team', tail_entity='Japan')\"\nQuery2: \"get_information(relation='Goals', tail_entity='4')\"\nStep2: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep3: Find the Competition of output_of_query3\nQuery4: \"get_information(relation='Competition', head_entity='output_of_query3')\"",
    "who received the top time for japan?": "None",
    "what was maxi priest's only single in 1992?": "## Target type: {'Song'}\n## Query:\nStep1: Find the entity named Maxi Priest\nQuery1: \"get_information(relation='Song', tail_entity='Maxi Priest')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity whose Year is 1992\nQuery3: \"get_information(relation='Year', tail_entity='1992')\"\nStep4: Find the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "which competition had the highest number of starts and goals?": "None",
    "how many roman catholic dioceses have been established in angola?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Rite as Roman\nQuery1: \"get_information(relation='Rite', tail_entity='Roman')\"\nStep2: Get the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many are enrolled in private/catholic?": "None",
    "what country has the least number of rifles in service?": "## Target type: {country}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Find the country of output_of_query3\nQuery4: \"get_information(relation='Nation', head_entity='output_of_query3')\"",
    "what model revolver had the least number of revolvers produced?": "## Target type: {'Model'}\n## Query:\nStep1: Find the entity with the relation of Production\nQuery1: \"get_information(relation='Production')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Production\nQuery3: \"get_information(relation='Production', tail_entity='output_of_query2')\"\nStep4: Find the Model of output_of_query3\nQuery4: \"get_information(relation='Model', head_entity='output_of_query3')\"",
    "how long after the song was released in france was it released in the united states?": "None",
    "was \"hot love\" released before \"run to me\"?": "## Target type: {yes or no}\n## Query:\nStep1: Find the release date of \"Hot Love\"\nQuery1: \"get_information(relation='Single title', tail_entity='Hot Love')\"\nStep2: Find the release date of \"Run to Me\"\nQuery2: \"get_information(relation='Single title', tail_entity='Run to Me')\"\nStep3: Compare the release dates of output_of_query1 and output_of_query2\nQuery3: \"compare_dates(date1='output_of_query1', date2='output_of_query2')\"\nStep4: Check if the release date of \"Hot Love\" is before the release date of \"Run to Me\"\nQuery4: \"check_condition(condition='output_of_query3', operator='<')\"",
    "how many schools are not charter?": "None",
    "what is the difference in medals between cuba and mexico?": "## Target type: {difference in medals}\n## Query:\nStep1: Find the entity named Cuba\nQuery1: \"get_information(relation='Nation', tail_entity='Cuba')\"\nStep2: Find the entity named Mexico\nQuery2: \"get_information(relation='Nation', tail_entity='Mexico')\"\nStep3: Find the total medals of output_of_query1\nQuery3: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep4: Find the total medals of output_of_query2\nQuery4: \"get_information(relation='Total', head_entity='output_of_query2')\"\nStep5: Calculate the difference between output_of_query3 and output_of_query4\nQuery5: \"subtract(value1='output_of_query3', value2='output_of_query4')\"",
    "what's the difference in years between angela carter's title and anthony browne's?": "## Target type: {difference in years}\n## Query:\nStep1: Find the entity named Angela Carter\nQuery1: \"get_information(relation='Author', tail_entity='Angela Carter')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"\nStep3: Find the entity named Anthony Browne\nQuery3: \"get_information(relation='Author', tail_entity='Anthony Browne')\"\nStep4: Find the year of output_of_query3\nQuery4: \"get_information(relation='Year', head_entity='output_of_query3')\"\nStep5: Calculate the difference in years between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(year1='output_of_query2', year2='output_of_query4')\"",
    "which pinyin is listed last?": "## Target type: {pinyin}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Pinyin of output_of_query3\nQuery4: \"get_information(relation='Pinyin', head_entity='output_of_query3')\"",
    "what is the difference in combined defenses between hiroshi tanahashi and kensuke sasaki?": "## Target type: {difference in combined defenses}\n## Query:\nStep1: Find the entity named Hiroshi Tanahashi\nQuery1: \"get_information(relation='Wrestler', tail_entity='Hiroshi Tanahashi')\"\nStep2: Find the combined defenses of output_of_query1\nQuery2: \"get_information(relation='Combined defenses', head_entity='output_of_query1')\"\nStep3: Find the entity named Kensuke Sasaki\nQuery3: \"get_information(relation='Wrestler', tail_entity='Kensuke Sasaki')\"\nStep4: Find the combined defenses of output_of_query3\nQuery4: \"get_information(relation='Combined defenses', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "which cantonese yale is listed before sek6 lam4?": "## Target type: {Cantonese Yale}\n## Query:\nStep1: Find the entity named Sek Lam\nQuery1: \"get_information(relation='Cantonese Yale', tail_entity='Sek6 Lam4')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Cantonese Yale of output_of_query4\nQuery5: \"get_information(relation='Cantonese Yale', head_entity='output_of_query4')\"",
    "what is the total of articles for this chart": "None",
    "what is the number of polish nationals who hold world records?": "None",
    "how many more medals has slovakia wopn in comparison to germany?": "## Target type: {number of medals}\n## Query:\nStep1: Find the entity named Slovakia\nQuery1: \"get_information(relation='Nation', tail_entity='Slovakia')\"\nStep2: Find the total medals of output_of_query1\nQuery2: \"get_information(relation='Total', head_entity='output_of_query1')\"\nStep3: Find the entity named Germany\nQuery3: \"get_information(relation='Nation', tail_entity='Germany')\"\nStep4: Find the total medals of output_of_query3\nQuery4: \"get_information(relation='Total', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what two locations only provide military flight training school?": "None",
    "which shipyard was used the most?": "None",
    "who was next to be sent home after patrick?": "None",
    "for how long has the roman catholic diocese of luandensis been established in angola?": "None",
    "which runner ran the most?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "what team was the runner run the least number of times?": "## Target type: {team}\n## Query:\nStep1: Find the entity with relation Runners-up\nQuery1: \"get_information(relation='Runners-up')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Runners-up\nQuery3: \"get_information(relation='Runners-up', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who is the faster runner?": "None",
    "name a parish that no parish priest is listed.": "## Target type: {parish}\n## Query:\nStep1: Find the parish with no Parish Priest listed\nQuery1: \"get_information(relation='Parish Priest', tail_entity='n/a')\"\nStep2: Get the Parish of output_of_query1\nQuery2: \"get_information(relation='Parish', head_entity='output_of_query1')\"",
    "how many churches are on the list?": "None",
    "which ships have a propulsion speed below 10 knots?": "None",
    "what is the average total of the transfer fee in million?": "None",
    "what player had the most transfer fee?": "None",
    "which incoming player had the highest transfer fee?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of \"Transfer fee (\u20ac million)\"\nQuery1: \"get_information(relation='Transfer fee (\u20ac million)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max transfer fee\nQuery3: \"get_information(relation='Transfer fee (\u20ac million)', tail_entity='output_of_query2')\"\nStep4: Find the incoming player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "which player paid the most in transfer fees?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Transfer fee\nQuery1: \"get_information(relation='Transfer fee (\u20ac million)')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max transfer fee\nQuery3: \"get_information(relation='Transfer fee (\u20ac million)', tail_entity='output_of_query2')\"\nStep4: Find the player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "is \"not i barbecue\" the 6th or 7th episode in the season?": "## Target type: {episode number}\n## Query:\nStep1: Find the entity with the relation of Title\nQuery1: \"get_information(relation='Title')\"\nStep2: Find the entity named \"not i barbecue\"\nQuery2: \"get_information(relation='Title', tail_entity='not i barbecue')\"\nStep3: Find the row_number of output_of_query2\nQuery3: \"get_information(relation='row_number', head_entity='output_of_query2')\"\nStep4: Check if the episode is the 6th or 7th in the season\nQuery4: \"check_membership(set='[6, 7]', element='output_of_query3')\"",
    "how many athletes from jamaica are represented in the results?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Jamaica\nQuery1: \"get_information(relation='Nationality', tail_entity='Jamaica')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many jamaicans were granted british citizenship after 2005?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is 2005\nQuery1: \"get_information(relation='Year', tail_entity='2005')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the rows with row_number greater than output_of_query2\nQuery3: \"get_information(relation='row_number', tail_entity>'output_of_query2')\"\nStep4: Get the entity with the relation of Numer of Jamaicans granted British citizenship\nQuery4: \"get_information(relation='Numer of Jamaicans granted British citizenship', head_entity='output_of_query3')\"\nStep5: Calculate the sum of output_of_query4\nQuery5: \"sum(set='output_of_query4')\"",
    "name all the boats laid down after may 1945.": "None",
    "what are the total numbers of letters used in the last poetry prize?": "None",
    "what car made the least amount of points?": "## Target type: {car}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the Car of output_of_query3\nQuery4: \"get_information(relation='Car', head_entity='output_of_query3')\"",
    "how sheriffs has suffolk county had in total?": "None",
    "what is the previous winner candidate of dr. nimaben aacharya?": "## Target type: {Winner Candidate}\n## Query:\nStep1: Find the entity named Dr. Nimaben Aacharya\nQuery1: \"get_information(relation='Winner Candidate', tail_entity='Dr. Nimaben Aacharya')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Winner Candidate of output_of_query4\nQuery5: \"get_information(relation='Winner Candidate', head_entity='output_of_query4')\"",
    "our lady of the assumption catholic church started the same year as what church?": "None",
    "what is the least number of days between vacancy and appointment dates?": "None",
    "which team scored higher as the home team, ayr united or morton?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Ayr United\nQuery1: \"get_information(relation='Home Team', tail_entity='Ayr United')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity named Morton\nQuery3: \"get_information(relation='Home Team', tail_entity='Morton')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', head_entity='output_of_query3')\"\nStep5: Compare the Score of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4', operator='greater')\"",
    "what is the only vessel to sink multiple u-boats?": "None",
    "if the number of parishes were equal in each country, how many parishes would each country have?": "None",
    "songs by del the funky homosapien that were within the top 30 rap singles chart (us)": "None",
    "name firehouse's first single to get reach the top 10 of the us top 100?": "None",
    "what is the least fastest aircraft?": "None",
    "how long was the relay at the 1997 world championships that ken harden ran": "None",
    "as of 2013, what is the total number of floor exercise gold medals won by american women at the world championships?": "None",
    "in what year was twilight heroes released?": "## Target type: {'Release'}\n## Query:\nStep1: Find the entity named Twilight Heroes\nQuery1: \"get_information(relation='Name', tail_entity='Twilight Heroes')\"\nStep2: Find the release year of output_of_query1\nQuery2: \"get_information(relation='Release', head_entity='output_of_query1')\"",
    "what year was mick jagger's best of album released?": "## Target type: {'Year'}\n## Query:\nStep1: Find the entity named Mick Jagger\nQuery1: \"get_information(relation='Album', tail_entity='Mick Jagger')\"\nStep2: Find the Year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how was the only player to have a transfer fee of 0.67m?": "None",
    "what is the number of football classes lafayette high school has?": "## Target type: {number of football classes}\n## Query:\nStep1: Find the entity named Lafayette High School\nQuery1: \"get_information(relation='School', tail_entity='Lafayette High School')\"\nStep2: Find the number of football classes of output_of_query1\nQuery2: \"get_information(relation='Football class', head_entity='output_of_query1')\"",
    "what type of sutures are no longer used in the u.k. for human surgery?": "None",
    "which of the labour party candidates had the least number of votes?": "## Target type: {Candidate}\n## Query:\nStep1: Find the entity with the relation of Party as Labour\nQuery1: \"get_information(relation='Party', tail_entity='Labour')\"\nStep2: Get the entity with the relation of Votes of output_of_query1\nQuery2: \"get_information(relation='Votes', head_entity='output_of_query1')\"\nStep3: Get the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Get the entity with the min Votes\nQuery4: \"get_information(relation='Votes', tail_entity='output_of_query3')\"\nStep5: Find the candidate of output_of_query4\nQuery5: \"get_information(relation='Candidate', head_entity='output_of_query4')\"",
    "what title was released previous to \"gotta be the one\"?": "## Target type: {title}\n## Query:\nStep1: Find the entity whose Title is \"Gotta Be the One\"\nQuery1: \"get_information(relation='Title', tail_entity='Gotta Be the One')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Title of output_of_query4\nQuery5: \"get_information(relation='Title', head_entity='output_of_query4')\"",
    "how many different charts did \"run\" make?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"Run\"\nQuery1: \"get_information(relation='Single', tail_entity='Run')\"\nStep2: Find the distinct charts of output_of_query1\nQuery2: \"get_information(relation='Chart', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the away team with the lowest score?": "## Target type: {away team}\n## Query:\nStep1: Find the entity with the relation of Away Team\nQuery1: \"get_information(relation='Away Team')\"\nStep2: Find the entity with the relation of Score\nQuery2: \"get_information(relation='Score')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the min Score\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Find the Away Team of output_of_query4\nQuery5: \"get_information(relation='Away Team', head_entity='output_of_query4')\"",
    "what team is the only one in the oulu settlement for \"t\" teams?": "None",
    "according to the chart, which team is listed to have the first dodge ram?": "None",
    "how many chateau's were constructed in the 13th century?": "None",
    "name a city with more than 400,000 people.": "None",
    "name a country that is \"most free\" and has a rank of lower than (005).": "None",
    "what is the least the starzzs have scored at a home game?": "None",
    "what is the score by bedford in each game at home?": "None",
    "how many finished above frnchitti?": "None",
    "which ferris wheel was completed in 2008 and has the height of 165?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity that Completed in 2008\nQuery1: \"get_information(relation='Completed', tail_entity='2008')\"\nStep2: Find the entity with the Height of 165\nQuery2: \"get_information(relation='Height\\nm (ft)', tail_entity='165')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Get the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "how many sales did the single \"tic tic tac\" have?": "## Target type: {number of sales}\n## Query:\nStep1: Find the entity that Single is \"Tic Tic Tac\"\nQuery1: \"get_information(relation='Single', tail_entity='Tic Tic Tac')\"\nStep2: Find the sales of output_of_query1\nQuery2: \"get_information(relation='Sales', head_entity='output_of_query1')\"",
    "how many consecutive floor exercise gold medals did romanian star andreea raducan win at the world championships?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Andreea Raducan\nQuery1: \"get_information(relation='Gold', tail_entity='Andreea Raducan')\"\nStep2: Find the consecutive row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what is the difference in tom power's number and jon wood's number?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Tom Power\nQuery1: \"get_information(relation='Driver(s)', tail_entity='Tom Power')\"\nStep2: Find the number of output_of_query1\nQuery2: \"get_information(relation='#', head_entity='output_of_query1')\"\nStep3: Find the entity named Jon Wood\nQuery3: \"get_information(relation='Driver(s)', tail_entity='Jon Wood')\"\nStep4: Find the number of output_of_query3\nQuery4: \"get_information(relation='#', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "which 4 countries were scored last, with only 1 bronze medal each?": "None",
    "how many priests were in service between 1845 and 1912?": "None",
    "how many months experienced a daily mean temperature above 10 degrees fahrenheit?": "None",
    "how long was the monthly average temperature 100 degrees or more?": "None",
    "which month had a record high temperature of 100 degrees fahrenheit and also a record low temperature of 19 degrees fahrenheit?": "None",
    "how many months had a record high of over 15.0 degrees?": "None",
    "which month had an average low of 53 degrees and an average high of 63 degrees?": "None",
    "how many months how a record low below 25 degrees?": "None",
    "how many months had a record high of 111 degrees?": "None",
    "which month had the average highest in temperature?": "None",
    "which month had 12.9 as their record high temperature and a negative average high in temperature?": "None",
    "how many months have precipitation above 55 inches?": "None",
    "which month had the record high in temperature?": "None",
    "did john mcenroe score at least 7 points i'm the 1991 game": "## Target type: {boolean}\n## Query:\nStep1: Find the entity named John McEnroe\nQuery1: \"get_information(relation='Winner', tail_entity='John McEnroe')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the Score of output_of_query3\nQuery4: \"get_information(relation='Score', tail_entity='output_of_query3')\"\nStep5: Find the points of output_of_query4\nQuery5: \"Calculator(expression='sum(map(int, output_of_query4.split('\u2013')))', output='points')\"\nStep6: Check if output_of_query5 is greater than or equal to 7\nQuery6: \"output_of_query5 >= 7\"",
    "what is the top result on the chart": "None",
    "according to this list, how many countries sold weapons to iraq?": "None",
    "how many years did boston college win with john kelley as coach?": "None",
    "which manager had consecutive seasons?": "None",
    "ha-201 and ha-202 were both launched on which date?": "## Target type: {date}\n## Query:\nStep1: Find the entity named Ha-201\nQuery1: \"get_information(relation='Name', tail_entity='Ha-201')\"\nStep2: Find the Launched date of output_of_query1\nQuery2: \"get_information(relation='Launched', head_entity='output_of_query1')\"\nStep3: Find the entity named Ha-202\nQuery3: \"get_information(relation='Name', tail_entity='Ha-202')\"\nStep4: Find the Launched date of output_of_query3\nQuery4: \"get_information(relation='Launched', head_entity='output_of_query3')\"\nStep5: Get the intersection of output_of_query2 and output_of_query4\nQuery5: \"set_intersection(set1='output_of_query2', set2='output_of_query4')\"",
    "what is the number of games played against the wakefield trinity wildcats?": "## Target type: {number of games}\n## Query:\nStep1: Find the entity named Wakefield Trinity Wildcats\nQuery1: \"get_information(relation='Opponent', tail_entity='Wakefield Trinity Wildcats')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who is listed first, bragan\u00e7a or \u00e1vila?": "## Target type: {name}\n## Query:\nStep1: Find the entity with the Surname Bragan\u00e7a\nQuery1: \"get_information(relation='Surname', tail_entity='Bragan\u00e7a')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the Surname \u00c1vila\nQuery3: \"get_information(relation='Surname', tail_entity='\u00c1vila')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Check if the row_number of output_of_query1 is smaller than the row_number of output_of_query3\nQuery5: \"if(set1<'output_of_query2', 'Bragan\u00e7a', '\u00c1vila')\"",
    "which town would come first in alphabetical order, of all the towns in the faroe islands?": "## Target type: {town}\n## Query:\nStep1: Find all the towns in the Faroe Islands\nQuery1: \"get_information(relation='Town/Village')\"\nStep2: Sort the output_of_query1 in alphabetical order\nQuery2: \"sort(set='output_of_query1')\"\nStep3: Get the first element of output_of_query2\nQuery3: \"first(set='output_of_query2')\"",
    "the artist with the first letter k": "## Target type: {artist}\n## Query:\nStep1: Find the entity with the relation of Artist\nQuery1: \"get_information(relation='Artist')\"\nStep2: Find the entity whose name starts with the letter 'K'\nQuery2: \"get_information(relation='Artist', tail_entity>='K' and tail_entity<'L')\"\nStep3: Get the first entity of output_of_query2\nQuery3: \"first(set='output_of_query2')\"",
    "how many times was the political rights listed as seven?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation Political Rights is 7\nQuery1: \"get_information(relation='Political Rights', tail_entity='7')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was skrein listed as an artist on a song?": "None",
    "how many times does bruce springsteen perform?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Bruce Springsteen\nQuery1: \"get_information(relation='Performer', tail_entity='Bruce Springsteen')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the next album released after \"the man in the mirror\"?": "None",
    "name one other single that was on the losing streak album besides \"dopeman\".": "None",
    "did kent score more/less than 150 runs against essex?": "## Target type: {comparison result}\n## Query:\nStep1: Find the entity named Kent\nQuery1: \"get_information(relation='Teams', tail_entity='Kent')\"\nStep2: Find the score of Kent in output_of_query1\nQuery2: \"get_information(relation='Teams', head_entity='output_of_query1')\"\nStep3: Find the score of Kent against Essex\nQuery3: \"get_information(relation='Teams', head_entity='Essex')\"\nStep4: Compare the score of output_of_query2 and output_of_query3\nQuery4: \"compare(set1='output_of_query2', set2='output_of_query3')\"",
    "did we score more in the plymouth argyle game or in the reading game?": "None",
    "how many players were born after 1985?": "None",
    "what was the difference between her qualifying scores for balance beam between boston and philadelphia?": "None",
    "which player who is only a forward (f) is the shortest?": "None",
    "how many total forwards are on the team?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Position as 'F'\nQuery1: \"get_information(relation='Position', tail_entity='F')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many teams have ford f-150 as their trucks?": "## Target type: {number of teams}\n## Query:\nStep1: Find the entities with the relation of Truck(s) as 'Ford F-150'\nQuery1: \"get_information(relation='Truck(s)', tail_entity='Ford F-150')\"\nStep2: Get the count of unique teams in output_of_query1\nQuery2: \"count(set='output_of_query1', unique='Team')\"",
    "tell me the only one released in december 2013.": "## Target type: {Title}\n## Query:\nStep1: Find the entity with the relation of Release Date and the value of December 2013\nQuery1: \"get_information(relation='Release Date', value='December 2013')\"\nStep2: Find the entity with the relation of Title for output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "what is the total goals on this chart": "None",
    "where was the site of the only game not played in texas?": "None",
    "how many international tournament games has florent played to date?": "None",
    "how many lyricist credits does he have so far?": "None",
    "how many bishops per adherent in serbia?": "## Target type: {ratio}\n## Query:\nStep1: Find the entity that Jurisdiction is Serbia\nQuery1: \"get_information(relation='Jurisdiction', tail_entity='Serbia')\"\nStep2: Find the Bishops of output_of_query1\nQuery2: \"get_information(relation='Bishops', head_entity='output_of_query1')\"\nStep3: Find the Adherents of output_of_query1\nQuery3: \"get_information(relation='Adherents', head_entity='output_of_query1')\"\nStep4: Calculate the ratio of output_of_query2 to output_of_query3\nQuery4: \"calculate_ratio(numerator='output_of_query2', denominator='output_of_query3')\"",
    "how many victims in becej were children and the elderly?": "None",
    "how many players retired after playing 12 years?": "## Target type: {number of players}\n## Query:\nStep1: Find the players who played for 12 years\nQuery1: \"get_information(relation='Years in NBA', tail_entity='12')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what's the total of wins does the manchester united have?": "None",
    "how many matches did croatia play in the 1998 world cup": "## Target type: {number of matches}\n## Query:\nStep1: Find the entity in Year that is \"1998 World Cup\"\nQuery1: \"get_information(relation='Year', tail_entity='1998 World Cup')\"\nStep2: Find the matches of output_of_query1\nQuery2: \"get_information(relation='Matches', head_entity='output_of_query1')\"",
    "how many times did kelkar play himself?": "None",
    "which david d'or album was the bigger seller - changing heights or in the soul?": "None",
    "what is the top cruise speed listed?": "None",
    "what is the last nation to be ranked?": "None",
    "how many candidates were from halifax?": "## Target type: {number of candidates}\n## Query:\nStep1: Find the entity named Halifax\nQuery1: \"get_information(relation='Residence', tail_entity='Halifax')\"\nStep2: Find the candidates from output_of_query1\nQuery2: \"get_information(relation='Candidate', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many singles competitions have been played in bangkok?": "## Target type: {number of singles competitions}\n## Query:\nStep1: Find the entity named Bangkok\nQuery1: \"get_information(relation='Location', tail_entity='Bangkok')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Bronze of output_of_query4\nQuery5: \"get_information(relation='Bronze', head_entity='output_of_query4')\"\nStep6: Count the number of entities in output_of_query5\nQuery6: \"count(set='output_of_query5')\"",
    "what is the number of times that swecon has taken place in gothenburg?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that Location is Gothenburg\nQuery1: \"get_information(relation='Location', tail_entity='Gothenburg')\"\nStep2: Find the number of times that Swecon has taken place in output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what 1919 brazilian football team won the least points?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Points\nQuery1: \"get_information(relation='Points')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the entity with the min Points\nQuery3: \"get_information(relation='Points', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "who shot the highest single round?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the highest Score\nQuery1: \"get_information(relation='Score', tail_entity>= 'highest')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "who shot the most at 91 m": "## Target type: {name}\n## Query:\nStep1: Find the entity that shot at 91 m\nQuery1: \"get_information(relation='100 yd (91 m)', head_entity='4 doz.')\"\nStep2: Find the max entity of output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Find the entity that shot 91 m\nQuery3: \"get_information(relation='100 yd (91 m)', tail_entity='output_of_query2')\"",
    "after lima, which location has the next highest population?": "None",
    "which kingdom contained the second most villages, next only to godara?": "## Target type: {Name of Kingdom}\n## Query:\nStep1: Find the entity named Godara\nQuery1: \"get_information(relation='Names of districts', tail_entity='Godara')\"\nStep2: Find the No. of villages of output_of_query1\nQuery2: \"get_information(relation='No. of villages', head_entity='output_of_query1')\"\nStep3: Find the entity that is the second most villages\nQuery3: \"get_information(relation='No. of villages', tail_entity>='second most')\"\nStep4: Find the Name of Kingdom of output_of_query3\nQuery4: \"get_information(relation='Name of Kingdom', head_entity='output_of_query3')\"",
    "was the wolf attack on david tobuk predatory or agonistic?": "## Target type: {'Type of attack'}\n## Query:\nStep1: Find the entity named David Tobuk\nQuery1: \"get_information(relation='Victim(s)', tail_entity='David Tobuk')\"\nStep2: Find the Type of attack on output_of_query1\nQuery2: \"get_information(relation='Type of attack', head_entity='output_of_query1')\"",
    "which single by schnell fenster reached the band's highest position on the new zealand peak chart?": "None",
    "who was sunk the most?": "None",
    "how many songs were remixed by garraund?": "## Target type: {number of songs}\n## Query:\nStep1: Find the entity named Garraund\nQuery1: \"get_information(relation='Remixed by', tail_entity='Garraund')\"\nStep2: Find the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what team spent the least amount of time in the administration?": "## Target type: {team}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Club of output_of_query3\nQuery4: \"get_information(relation='Club', head_entity='output_of_query3')\"",
    "which team had the top transfer come in?": "## Target type: {team}\n## Query:\nStep1: Find the max transfer fee\nQuery1: \"get_information(relation='Transfer fee', tail_entity>='max')\"\nStep2: Find the team of output_of_query1\nQuery2: \"get_information(relation='To', head_entity='output_of_query1')\"",
    "how many operations occurred in bosnia?": "None",
    "which 4x400 was faster, 2005 or 2003?": "## Target type: {4x400}\n## Query:\nStep1: Find the entity with the relation of Event containing \"4x400\"\nQuery1: \"get_information(relation='Event', tail_entity='4x400')\"\nStep2: Find the entity with the relation of Year containing \"2005\"\nQuery2: \"get_information(relation='Year', tail_entity='2005')\"\nStep3: Find the entity with the relation of Year containing \"2003\"\nQuery3: \"get_information(relation='Year', tail_entity='2003')\"\nStep4: Find the Notes of output_of_query2\nQuery4: \"get_information(relation='Notes', head_entity='output_of_query2')\"\nStep5: Find the Notes of output_of_query3\nQuery5: \"get_information(relation='Notes', head_entity='output_of_query3')\"\nStep6: Compare the Notes of output_of_query4 and output_of_query5\nQuery6: \"comparison('output_of_query4', 'output_of_query5')\"",
    "which train tested fastes after the mlx01?": "None",
    "which ruler came first, si jun or min?": "None",
    "which king ruled the chinese vassal state chu after the year 329 bc?": "None",
    "what stadium hosted the largest crowd for the brisbane broncos in 2007?": "None",
    "compared to the oval, holm park holds more or less attendees at capacity?": "## Target type: {'more' or 'less'}\n## Query:\nStep1: Find the stadium named The Oval\nQuery1: \"get_information(relation='Stadium', tail_entity='The Oval')\"\nStep2: Find the capacity of output_of_query1\nQuery2: \"get_information(relation='Capacity', head_entity='output_of_query1')\"\nStep3: Find the stadium named Holm Park\nQuery3: \"get_information(relation='Stadium', tail_entity='Holm Park')\"\nStep4: Find the capacity of output_of_query3\nQuery4: \"get_information(relation='Capacity', head_entity='output_of_query3')\"\nStep5: Compare the capacity of output_of_query2 and output_of_query4\nQuery5: \"compare(set1='output_of_query2', set2='output_of_query4')\"",
    "which has the most distance, hattori or kibitsu?": "None",
    "in what city was the outcome \"winner\" the most?": "None",
    "who finished after felix loch?": "## Target type: {'Athlete'}\n## Query:\nStep1: Find the entity named Felix Loch\nQuery1: \"get_information(relation='Athlete', tail_entity='Felix Loch')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Athlete of output_of_query4\nQuery5: \"get_information(relation='Athlete', head_entity='output_of_query4')\"",
    "which cyclist withdrew after breaking his arm in a crash during stage 2?": "## Target type: {cyclist}\n## Query:\nStep1: Find the entity that Reason is \"breaking his arm in a crash during stage 2\"\nQuery1: \"get_information(relation='Reason', tail_entity='breaking his arm in a crash during stage 2')\"\nStep2: Find the Cyclist of output_of_query1\nQuery2: \"get_information(relation='Cyclist', head_entity='output_of_query1')\"",
    "who was the victim of the last wolf attack to occur in california, usa?": "## Target type: {victim}\n## Query:\nStep1: Find the entity named California, USA\nQuery1: \"get_information(relation='Location', tail_entity='California, USA')\"\nStep2: Find the entity with the relation of Victim(s) in output_of_query1\nQuery2: \"get_information(relation='Victim(s)', head_entity='output_of_query1')\"",
    "what is the total of nation in team 1": "## Target type: {nation}\n## Query:\nStep1: Find the entity with relation Team 1\nQuery1: \"get_information(relation='Team 1')\"\nStep2: Find the nation of output_of_query1\nQuery2: \"get_information(relation='Nation', tail_entity='output_of_query1')\"\nStep3: Calculate the total count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "what is the average score of all home team members for all dates?": "None",
    "which nationality is top on the chart": "None",
    "did the spanish player place above or below the japanese player?": "## Target type: {ranking}\n## Query:\nStep1: Find the entity with the Nationality of Spanish\nQuery1: \"get_information(relation='Nationality', tail_entity='Spanish')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the Nationality of Japanese\nQuery3: \"get_information(relation='Nationality', tail_entity='Japanese')\"\nStep4: Find the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', head_entity='output_of_query3')\"\nStep5: Compare the row_number of output_of_query2 and output_of_query4\nQuery5: \"compare(row1='output_of_query2', row2='output_of_query4')\"",
    "she played veronica iturbe montalban in 1995. what was her previous character?": "## Target type: {role}\n## Query:\nStep1: Find the entity that played Veronica Iturbe Montalban\nQuery1: \"get_information(relation='Role', tail_entity='Veronica Iturbe Montalban')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Role of output_of_query4\nQuery5: \"get_information(relation='Role', head_entity='output_of_query4')\"",
    "how many cities have at least 10 barangays": "## Target type: {number}\n## Query:\nStep1: Find the entities with relation No. of Barangays that is greater than or equal to 10\nQuery1: \"get_information(relation='No. of\\nBarangays', tail_entity>='10')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many cities are there in rizal?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation City/Municipality\nQuery1: \"get_information(relation='City/Municipality')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many of the current state regents will be in office until at least 2016?": "## Target type: {number}\n## Query:\nStep1: Find the state regents who will be in office until at least 2016\nQuery1: \"get_information(relation='Term Expires', tail_entity>='2016')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what player was picked directly above calpito?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Calpito\nQuery1: \"get_information(relation='Player', tail_entity='Calpito')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Player of output_of_query4\nQuery5: \"get_information(relation='Player', head_entity='output_of_query4')\"",
    "how many games was their ranking not lower than #5?": "None",
    "where was the last meeting in which kaseorg competed?": "## Target type: {venue}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Venue of output_of_query3\nQuery4: \"get_information(relation='Venue', head_entity='output_of_query3')\"",
    "what is the most points that the barrage have scored at home?": "None",
    "1993, 1996, and 1999 were the only years where which conference was not a part of fcrc?": "None",
    "who has been nominated for the most posthumous academy awards": "None",
    "who won more awards? walt disney or james dean?": "## Target type: {person}\n## Query:\nStep1: Find the entity named Walt Disney\nQuery1: \"get_information(relation='Name', tail_entity='Walt Disney')\"\nStep2: Get the number of awards won by output_of_query1\nQuery2: \"get_information(relation='Winner', head_entity='output_of_query1')\"\nStep3: Find the entity named James Dean\nQuery3: \"get_information(relation='Name', tail_entity='James Dean')\"\nStep4: Get the number of awards won by output_of_query3\nQuery4: \"get_information(relation='Winner', head_entity='output_of_query3')\"\nStep5: Compare the number of awards won by output_of_query1 and output_of_query3\nQuery5: \"if(output_of_query2>output_of_query4, output_of_query1, output_of_query3)\"",
    "the year with the most vote %": "None",
    "whom is listed first - gwong wai or ma ling-yee?": "None",
    "who was the bronze medalist for east germany?": "None",
    "who was the winner before joachim gerard in the paralympic category?": "None",
    "how many electorates are in the chhatarpur district?": "None",
    "what is the number of parties that had more than 3 candidates in their party?": "None",
    "what is the number of times mr. wu has achieved 1st place?": "None",
    "who has earned the most medals?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the Athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "according to this table, which party is japan's oldest political party?": "None",
    "which ethnicity has the fewest number of atheists after the turkish?": "None",
    "how many cities have densities at least above 400?": "## Target type: {number of cities}\n## Query:\nStep1: Find the cities with densities at least above 400\nQuery1: \"get_information(relation='Density', tail_entity>='400')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which actor/actress took the most years to complete egot?": "None",
    "what other movie did he star in the year he starred in street angle?": "None",
    "which episode was titled i want to let her attend school?": "None",
    "from where did 'stayin' alive' receive the most accolades?": "None",
    "which afl captain was also considered the best and fairest during the '04 premiers?": "## Target type: {'Captain'}\n## Query:\nStep1: Find the premiers in the year '04\nQuery1: \"get_information(relation='Year', tail_entity='2004')\"\nStep2: Find the captain of output_of_query1\nQuery2: \"get_information(relation='Captain', head_entity='output_of_query1')\"\nStep3: Find the Best & Fairest of output_of_query1\nQuery3: \"get_information(relation='Best & Fairest', head_entity='output_of_query1')\"",
    "who was next to finish after josh constable in the 2008 telstra men's pro?": "None",
    "how many teams were listed before the mackay sea eagles?": "None",
    "the winner previous to flavio montrucchio.": "## Target type: {winner}\n## Query:\nStep1: Find the entity named Flavio Montrucchio\nQuery1: \"get_information(relation='Winner', tail_entity='Flavio Montrucchio')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Winner of output_of_query4\nQuery5: \"get_information(relation='Winner', head_entity='output_of_query4')\"",
    "at the women's 200 meter individual medley sm10 event at the 2012 summer paralympics, how many people participated in total?": "None",
    "was joe watson or keith allen the general manager of the team?": "None",
    "how many teams competed for medals?": "None",
    "when was the last album of this band recorded?": "None",
    "first album released": "None",
    "in what years did independent/other party have majority control in the south carolina house of representatives?": "None",
    "how many canals are longer than thirty miles?": "None",
    "what is the number of tony awards that 42nd street has won?": "## Target type: {number of Tony Awards}\n## Query:\nStep1: Find the entity named 42nd Street\nQuery1: \"get_information(relation='Title', tail_entity='42nd Street')\"\nStep2: Find the Comment of output_of_query1\nQuery2: \"get_information(relation='Comment', head_entity='output_of_query1')\"\nStep3: Calculate the number of Tony Awards mentioned in output_of_query2\nQuery3: \"calculate_number_of_awards(set='output_of_query2', award_name='Tony Awards')\"",
    "which award has wentworth miller been nominated for the most?": "## Target type: {award}\n## Query:\nStep1: Find the entity named Wentworth Miller\nQuery1: \"get_information(relation='Name', tail_entity='Wentworth Miller')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the Award of output_of_query2\nQuery3: \"get_information(relation='Award', tail_entity='output_of_query2')\"\nStep4: Find the entity with the relation of Award that appears the most\nQuery4: \"get_information(relation='Award', tail_entity>='most')\"\nStep5: Find the Award of output_of_query4\nQuery5: \"get_information(relation='Award', head_entity='output_of_query4')\"",
    "builder that has the most experience": "## Target type: {builder}\n## Query:\nStep1: Find the entity with the relation of Builder\nQuery1: \"get_information(relation='Builder')\"\nStep2: Find the builder that appears the most\nQuery2: \"get_information(relation='Builder', tail_entity>='most')\"\nStep3: Find the builder of output_of_query2\nQuery3: \"get_information(relation='Builder', head_entity='output_of_query2')\"",
    "what was the last winner's album name?": "## Target type: {'Album'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Album of output_of_query3\nQuery4: \"get_information(relation='Album', head_entity='output_of_query3')\"",
    "what is the number of greek ministers of development that were members of the new democracy party?": "None",
    "which year had less votes,1994 or 2009?": "## Target type: {year}\n## Query:\nStep1: Find the entity that Election year is 1994\nQuery1: \"get_information(relation='Election year', tail_entity='1994')\"\nStep2: Find the number of overall seats won of output_of_query1\nQuery2: \"get_information(relation='overall seats won', head_entity='output_of_query1')\"\nStep3: Find the entity that Election year is 2009\nQuery3: \"get_information(relation='Election year', tail_entity='2009')\"\nStep4: Find the number of overall seats won of output_of_query3\nQuery4: \"get_information(relation='overall seats won', head_entity='output_of_query3')\"\nStep5: Compare the values of output_of_query2 and output_of_query4 and return the year with the least votes\nQuery5: \"if(min(set='output_of_query2') < min(set='output_of_query4'), '1994', '2009')\"",
    "tell me the number of votes that szabo got in 1965.": "None",
    "how many runners up were there on july 24, 1967?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date as July 24, 1967\nQuery1: \"get_information(relation='Date', tail_entity='July 24, 1967')\"\nStep2: Count the number of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what is the name of the player for the new york yankees in 1936?": "## Target type: {player}\n## Query:\nStep1: Find the entity named New York Yankees\nQuery1: \"get_information(relation='Team', tail_entity='New York Yankees')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Date and value of 1936\nQuery3: \"get_information(relation='Date', value='1936')\"\nStep4: Find the Player of output_of_query3\nQuery4: \"get_information(relation='Player', head_entity='output_of_query3')\"",
    "who ruled longer, zhao or zhaoxiang?": "## Target type: {ruler}\n## Query:\nStep1: Find the entity named Zhao\nQuery1: \"get_information(relation='Name', tail_entity='Zhao')\"\nStep2: Find the duration of rule for output_of_query1\nQuery2: \"get_information(relation='To', tail_entity='output_of_query1')\"\nStep3: Find the entity named Zhaoxiang\nQuery3: \"get_information(relation='Name', tail_entity='Zhaoxiang')\"\nStep4: Find the duration of rule for output_of_query3\nQuery4: \"get_information(relation='To', tail_entity='output_of_query3')\"\nStep5: Check which duration is longer, output_of_query2 or output_of_query4\nQuery5: \"if output_of_query2 > output_of_query4 then output_of_query1 else output_of_query3\"",
    "which party came in after the liberal and country league with the highest number of votes?": "None",
    "which club entered competition the same year as eltham football club?": "None",
    "when was joe clark first elected?": "## Target type: {year}\n## Query:\nStep1: Find the entity named Joe Clark\nQuery1: \"get_information(relation='Member', tail_entity='Joe Clark')\"\nStep2: Find the First elected of output_of_query1\nQuery2: \"get_information(relation='First elected', head_entity='output_of_query1')\"",
    "name a train that was built after ss&iw 's.": "None",
    "name one other railroad that was under the rf&p system other than alexandria and washington railroad.": "None",
    "other than the saptagiri express, name a train that was destined for tirupati.": "## Target type: {train name}\n## Query:\nStep1: Find the entity that Destination is Tirupati\nQuery1: \"get_information(relation='Destination', tail_entity='Tirupati')\"\nStep2: Find the train name of output_of_query1\nQuery2: \"get_information(relation='Train Name', head_entity='output_of_query1')\"\nStep3: Get set difference between output_of_query2 and 'Saptagiri Express'\nQuery3: \"set_difference(set1='output_of_query2', set2={'Saptagiri Express'})\"\nStep4: Get any one train name from output_of_query3\nQuery4: \"sample(set='output_of_query3')\"",
    "how many countries took home the gold the same year they hosted fiba?": "None",
    "which political party party has had the most mayors of austevoll?": "None",
    "what year was the only time china was the opponent?": "None",
    "what is the number of people in the liberal party?": "## Target type: {number}\n## Query:\nStep1: Find the entities with the relation of Party as Liberal\nQuery1: \"get_information(relation='Party', tail_entity='Liberal')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "at least of 50% of the population is protestant, starting at which age range?": "## Target type: {age range}\n## Query:\nStep1: Find the entity whose population percentage is at least 50% and is Protestant and other Christian\nQuery1: \"get_information(relation='Protestant and other Christian', tail_entity>='50')\"\nStep2: Find the Ages attained (years) of output_of_query1\nQuery2: \"get_information(relation='Ages attained (years)', head_entity='output_of_query1')\"",
    "what was the earliest album?": "## Target type: {'Title'}\n## Query:\nStep1: Find the album with the earliest Year\nQuery1: \"get_information(relation='Year', tail_entity>='earliest')\"\nStep2: Find the Title of output_of_query1\nQuery2: \"get_information(relation='Title', head_entity='output_of_query1')\"",
    "how many comedians made their only appearance on comedy central presents in season 15?": "None",
    "how many total opposition votes were cast after august 2010?": "None",
    "as of october 25, 2005, how many active voters are there?": "None",
    "against what other opponent besides new york titans in 2009 did the colorado mammoth's score 13?": "None",
    "did he score more tds with the los angeles rams or with indianapolis colts?": "## Target type: {team}\n## Query:\nStep1: Find the entity named Los Angeles Rams\nQuery1: \"get_information(relation='Team', tail_entity='Los Angeles Rams')\"\nStep2: Find the entity named Indianapolis Colts\nQuery2: \"get_information(relation='Team', tail_entity='Indianapolis Colts')\"\nStep3: Find the TDs of output_of_query1\nQuery3: \"get_information(relation='TDs', head_entity='output_of_query1')\"\nStep4: Find the TDs of output_of_query2\nQuery4: \"get_information(relation='TDs', head_entity='output_of_query2')\"\nStep5: Compare the TDs of output_of_query3 and output_of_query4\nQuery5: \"compare(output1='output_of_query3', output2='output_of_query4', operator='>')\"\nNote: In compare function, \">\" means greater than",
    "name a country that has finished second at least twice.": "None",
    "how many games did the 201213 austin peay state governors basketball team win?": "None",
    "what was the number of athletes in sherbrooke in 2004?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Sherbrooke in Year 2004\nQuery1: \"get_information(relation='City', tail_entity='Sherbrooke', relation='Year', tail_entity='2004')\"\nStep2: Find the No. of Athletes of output_of_query1\nQuery2: \"get_information(relation='No. of Athletes', head_entity='output_of_query1')\"",
    "how many teams are in the tampere district for \"t\" teams?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of District is Tampere\nQuery1: \"get_information(relation='District', tail_entity='Tampere')\"\nStep2: Count the output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "was tampere the district featured the most?": "None",
    "what is the different in the number of total wins the galaxy has compared to the number chivas has in the derby?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Galaxy has won in the derby\nQuery1: \"get_information(relation='Derby winner', tail_entity='Galaxy')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Find the entity that Chivas has won in the derby\nQuery3: \"get_information(relation='Derby winner', tail_entity='Chivas')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "how many schools were turned into private apartments?": "None",
    "how many singles have a ranking of 1 under ger?": "## Target type: {number of singles}\n## Query:\nStep1: Find the entity that has a relation of Peak chart positions and Year is 2000\nQuery1: \"get_information(relation='Year', tail_entity='2000')\"\nStep2: Find the entity with the relation of Peak chart positions and rank is 1\nQuery2: \"get_information(relation='Peak chart positions', tail_entity='1')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many episodes of sailor moon did not have an english air date?": "None",
    "what was the only year that a 5 km event took place?": "## Target type: {year}\n## Query:\nStep1: Find the entity with the relation of Event as '5 km'\nQuery1: \"get_information(relation='Event', tail_entity='5 km')\"\nStep2: Find the year of output_of_query1\nQuery2: \"get_information(relation='Year', head_entity='output_of_query1')\"",
    "how many bridges are 400 feet long at most?": "None",
    "how long was the big ride?": "None",
    "what is the total prize payout for all 13 series?": "None",
    "which series has the highest prize payout?": "## Target type: {'Official title'}\n## Query:\nStep1: Find the entity that has the highest prize payout\nQuery1: \"get_information(relation='Prize money USD', tail_entity>='highest')\"\nStep2: Find the Official title of output_of_query1\nQuery2: \"get_information(relation='Official title', head_entity='output_of_query1')\"",
    "what is the first entered date?": "## Target type: {'Entered'}\n## Query:\nStep1: Find the row_number that represents the first entered date\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the entered date of output_of_query1\nQuery2: \"get_information(relation='Entered', head_entity='output_of_query1')\"",
    "what is the top album name?": "None",
    "is nashot junction closer to shipon junction or avital junction?": "## Target type: {junction}\n## Query:\nStep1: Find the entity named Nashot Junction\nQuery1: \"get_information(relation='Name', tail_entity='Nashot Junction')\"\nStep2: Find the kilometers of output_of_query1\nQuery2: \"get_information(relation='Kilometers', head_entity='output_of_query1')\"\nStep3: Find the entity named Shipon Junction\nQuery3: \"get_information(relation='Name', tail_entity='Shipon Junction')\"\nStep4: Find the kilometers of output_of_query3\nQuery4: \"get_information(relation='Kilometers', head_entity='output_of_query3')\"\nStep5: Find the entity named Avital Junction\nQuery5: \"get_information(relation='Name', tail_entity='Avital Junction')\"\nStep6: Find the kilometers of output_of_query5\nQuery6: \"get_information(relation='Kilometers', head_entity='output_of_query5')\"\nStep7: Compare the kilometers of output_of_query2 and output_of_query6\nQuery7: \"compare(kilometers1='output_of_query2', kilometers2='output_of_query6')\"",
    "there have been at most how many starters in a breeders cup juvenile field?": "## Target type: {number of starters}\n## Query:\nStep1: Find the max number of starters\nQuery1: \"get_information(relation='Starters')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"",
    "whose horse performed better beverwyck stable's or milton youngs?": "None",
    "which team had the fewest lost games?": "## Target type: {team}\n## Query:\nStep1: Find the entity with the relation of Lost\nQuery1: \"get_information(relation='Lost')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Lost\nQuery3: \"get_information(relation='Lost', tail_entity='output_of_query2')\"\nStep4: Find the team of output_of_query3\nQuery4: \"get_information(relation='Team', head_entity='output_of_query3')\"",
    "which player placed above lawson little?": "None",
    "who finished after sabina veit?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Sabina Veit\nQuery1: \"get_information(relation='Name', tail_entity='Sabina Veit')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "gshp, ground at 10degrees is next to low output temp or high output temp?": "None",
    "which area of england was the last to be featured on the program?": "## Target type: {area}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Area of output_of_query3\nQuery4: \"get_information(relation='Area', head_entity='output_of_query3')\"",
    "how many silver medals did kenya earn?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Kenya\nQuery1: \"get_information(relation='Nation', tail_entity='Kenya')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "how many silver medals were earned by egypt?": "## Target type: {number of silver medals}\n## Query:\nStep1: Find the entity named Egypt\nQuery1: \"get_information(relation='Nation', tail_entity='Egypt')\"\nStep2: Find the silver medals of output_of_query1\nQuery2: \"get_information(relation='Silver', head_entity='output_of_query1')\"",
    "which category has the same total number as election result?": "None",
    "vfb admira wacker modling has the same number of wins as what other team?": "None",
    "what was the number of gold medals won by vietnam during the 2013 competition?": "None",
    "what is the number of inhabitants living in predeal in 2007?": "## Target type: {number of inhabitants}\n## Query:\nStep1: Find the entity named Predeal\nQuery1: \"get_information(relation='Name', tail_entity='Predeal')\"\nStep2: Find the Population (2007 estimation) of output_of_query1\nQuery2: \"get_information(relation='Population (2007 estimation)', head_entity='output_of_query1')\"",
    "how many dates are listed as \"free\"?": "## Target type: {number of dates}\n## Query:\nStep1: Find the entity with the relation of Fee as \"free\"\nQuery1: \"get_information(relation='Fee', tail_entity='free')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who has won the most total snowboarding medals?": "## Target type: {athlete}\n## Query:\nStep1: Find the entity with the relation of Total\nQuery1: \"get_information(relation='Total')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max Total\nQuery3: \"get_information(relation='Total', tail_entity='output_of_query2')\"\nStep4: Find the athlete of output_of_query3\nQuery4: \"get_information(relation='Athlete', head_entity='output_of_query3')\"",
    "what is the difference between the obama# and mccain# in benton county?": "None",
    "what was the total number of fastest laps that peggen andersson completed?": "None",
    "what year built is at the top?": "None",
    "which player was the only one drafted from finland?": "## Target type: {player}\n## Query:\nStep1: Find the entity named Finland\nQuery1: \"get_information(relation='Nationality', tail_entity='Finland')\"\nStep2: Find the player from output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"",
    "which schools have the largest number of shared titles?": "## Target type: {school}\n## Query:\nStep1: Find the entity with the relation of Shared Titles\nQuery1: \"get_information(relation='Shared Titles')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Shared Titles\nQuery3: \"get_information(relation='Shared Titles', tail_entity='output_of_query2')\"\nStep4: Find the school of output_of_query3\nQuery4: \"get_information(relation='School', head_entity='output_of_query3')\"",
    "how long ago was it that don january won?": "None",
    "when was the last super chinese game released?": "## Target type: {'Release'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number\nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Release of output_of_query3\nQuery4: \"get_information(relation='Release', head_entity='output_of_query3')\"",
    "how many were held at hongkou stadium?": "## Target type: {number}\n## Query:\nStep1: Find the entity whose Stadium is Hongkou Stadium\nQuery1: \"get_information(relation='Stadium', tail_entity='Hongkou Stadium')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the name of the register who is on top of the data table": "## Target type: {name on the register}\n## Query:\nStep1: Find the row that is on the top of the data table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the name on the register of output_of_query1\nQuery2: \"get_information(relation='Name on the Register', head_entity='output_of_query1')\"",
    "which party won the top place in the election?": "## Target type: {'Party'}\n## Query:\nStep1: Find the entity in row_number that is top 1\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Find the Party of output_of_query1\nQuery2: \"get_information(relation='Party', head_entity='output_of_query1')\"",
    "name a home city that has at least two teams.": "## Target type: {home city}\n## Query:\nStep1: Find the entities with the relation of Team\nQuery1: \"get_information(relation='Team')\"\nStep2: Find the count of each home city in output_of_query1\nQuery2: \"count(set='output_of_query1', key='Home city')\"\nStep3: Find the home cities that appear at least two times in output_of_query2\nQuery3: \"get_information(relation='Home city', head_entity>='2')\"\nStep4: Get one of the home cities from output_of_query3\nQuery4: \"sample(set='output_of_query3')\"",
    "other than in gloucester city, name a game that was attended by more than 1,000 people.": "None",
    "how many consecutive girls were born?": "None",
    "how many candidates were elected in 1971?": "## Target type: {number of candidates}\n## Query:\nStep1: Find the entity with the relation of Year of election is 1971\nQuery1: \"get_information(relation='Year of election', tail_entity='1971')\"\nStep2: Find the Candidates elected of output_of_query1\nQuery2: \"get_information(relation='Candidates elected', head_entity='output_of_query1')\"",
    "is canada at least on the chart 3 times?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that is Canada\nQuery1: \"get_information(relation='Country', tail_entity='Canada')\"\nStep2: Find the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"\nStep3: Check if output_of_query2 is at least 3 times\nQuery3: \"output_of_query2 >= 3\"",
    "what are the total number of races that took place in fort worth?": "None",
    "at most, how many internationals has the sahrawi national football team won?": "None",
    "what is the only cable car with a 2937 slope length?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of slope length 2937\nQuery1: \"get_information(relation='slope length', tail_entity='2937')\"\nStep2: Find the Name of output_of_query1\nQuery2: \"get_information(relation='Name', head_entity='output_of_query1')\"",
    "is the bronco stadium above or below 150 ft?": "## Target type: {above or below}\n## Query:\nStep1: Find the entity named Bronco Stadium\nQuery1: \"get_information(relation='Name', tail_entity='Bronco Stadium')\"\nStep2: Find the height of output_of_query1\nQuery2: \"get_information(relation='Height', head_entity='output_of_query1')\"\nStep3: Check if the height of output_of_query2 is above or below 150 ft\nQuery3: \"if output_of_query2 > 150: 'above' else: 'below'\"",
    "who is the first person that is being represented?": "## Target type: {contestant}\n## Query:\nStep1: Find the entity that represents others\nQuery1: \"get_information(relation='Represent', tail_entity='1')\"\nStep2: Find the contestant of output_of_query1\nQuery2: \"get_information(relation='Contestant', head_entity='output_of_query1')\"",
    "what is the number of titles in which the surface played on was carpet?": "## Target type: {number of titles}\n## Query:\nStep1: Find the entity that the Surface is Carpet\nQuery1: \"get_information(relation='Surface', tail_entity='Carpet')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Count the number of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "how many cities does tigerair currently fly into?": "None",
    "what is the total number of garratts produced in 1911?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Year as 1911\nQuery1: \"get_information(relation='Year', tail_entity='1911')\"\nStep2: Get the Works no. of output_of_query1\nQuery2: \"get_information(relation='Works no.', head_entity='output_of_query1')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "who had the slowest time in the race?": "## Target type: {Name}\n## Query:\nStep1: Find the entity with the relation of Time\nQuery1: \"get_information(relation='Time')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Get the entity with the max Time\nQuery3: \"get_information(relation='Time', tail_entity='output_of_query2')\"\nStep4: Find the Name of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which location has the least km?": "## Target type: {location}\n## Query:\nStep1: Find the entity with the relation of km\nQuery1: \"get_information(relation='km')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min km\nQuery3: \"get_information(relation='km', tail_entity='output_of_query2')\"\nStep4: Find the location of output_of_query3\nQuery4: \"get_information(relation='Location', head_entity='output_of_query3')\"",
    "in the 2009 singapore open, after paying the prize money to the champion and the runner up - what was the amount left over?": "None",
    "how many of tigerair's destination cities are in china?": "None",
    "how many paralymics had at most 9 medals?": "## Target type: {number}\n## Query:\nStep1: Find the entity that Total is at most 9\nQuery1: \"get_information(relation='Total', tail_entity<='9')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many places have an upper zip code listed?": "## Target type: {number of places}\n## Query:\nStep1: Find the entity with the relation of row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the places with non-empty upper zip code\nQuery2: \"get_information(relation='Upper zip code', tail_entity!='')\"\nStep3: Get the intersection of output_of_query1 and output_of_query2\nQuery3: \"set_intersection(set1='output_of_query1', set2='output_of_query2')\"\nStep4: Calculate the count of output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "what were the total number of license plates that featured the black embossed numbers on it?": "None",
    "find the country of the first speaker whose name is unknown.": "None",
    "which live-action american superhero movie had the largest gross?": "## Target type: {film}\n## Query:\nStep1: Find the entity with the relation of Worldwide Gross\nQuery1: \"get_information(relation='Worldwide Gross')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with the max Gross\nQuery3: \"get_information(relation='Worldwide Gross', tail_entity='output_of_query2')\"\nStep4: Find the film of output_of_query3\nQuery4: \"get_information(relation='Film', head_entity='output_of_query3')\"",
    "who died first: sala burton or harold earthman?": "## Target type: {person}\n## Query:\nStep1: Find the entity named Sala Burton\nQuery1: \"get_information(relation='Representative', tail_entity='Sala Burton')\"\nStep2: Find the Date of death of output_of_query1\nQuery2: \"get_information(relation='Date of death', head_entity='output_of_query1')\"\nStep3: Find the entity named Harold Earthman\nQuery3: \"get_information(relation='Representative', tail_entity='Harold Earthman')\"\nStep4: Find the Date of death of output_of_query3\nQuery4: \"get_information(relation='Date of death', head_entity='output_of_query3')\"\nStep5: Compare the Date of death of output_of_query2 and output_of_query4\nQuery5: \"if(output_of_query2 < output_of_query4, output_of_query1, output_of_query3)\"",
    "in which city did kaseorg attempt but not complete the decathlon?": "None",
    "what city is last in literacy?": "None",
    "who was the last player from england inducted?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of Nationality as England\nQuery1: \"get_information(relation='Nationality', tail_entity='England')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Get the max output_of_query2\nQuery3: \"max(set='output_of_query2')\" \nStep4: Get the entity with the max row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the player of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "which project location has a higher number of arrays, north county or deer park?": "None",
    "how many years did he play where he did not recover a fumble?": "## Target type: {number of years}\n## Query:\nStep1: Find the number of years where he did not recover a fumble\nQuery1: \"get_information(relation='Fumble Recoveries', tail_entity='0')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "can you name a party other than the national unity party?": "None",
    "what is the difference between the number of employees at mundelein elementary school district 75 and fremon school district 79?": "## Target type: {difference}\n## Query:\nStep1: Find the entity named Mundelein Elementary School District 75\nQuery1: \"get_information(relation='Employer', tail_entity='Mundelein Elementary School District 75')\"\nStep2: Find the number of employees of output_of_query1\nQuery2: \"get_information(relation='# of Employees', head_entity='output_of_query1')\"\nStep3: Find the entity named Fremont School District 79\nQuery3: \"get_information(relation='Employer', tail_entity='Fremont School District 79')\"\nStep4: Find the number of employees of output_of_query3\nQuery4: \"get_information(relation='# of Employees', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(value1='output_of_query2', value2='output_of_query4')\"",
    "what are the number of times bangalore is listed as the destination?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity named Bangalore\nQuery1: \"get_information(relation='Destination', tail_entity='Bangalore')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which area is listed above chicago?": "## Target type: {metropolitan area}\n## Query:\nStep1: Find the entity named Chicago\nQuery1: \"get_information(relation='Metropolitan area', tail_entity='Chicago')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the metropolitan area of output_of_query4\nQuery5: \"get_information(relation='Metropolitan area', head_entity='output_of_query4')\"",
    "is the total score for december 26 the same score as january 2?": "## Target type: {boolean}\n## Query:\nStep1: Find the entity that has Date as December 26\nQuery1: \"get_information(relation='Date', tail_entity='December 26')\"\nStep2: Find the Score of output_of_query1\nQuery2: \"get_information(relation='Score', head_entity='output_of_query1')\"\nStep3: Find the entity that has Date as January 2\nQuery3: \"get_information(relation='Date', tail_entity='January 2')\"\nStep4: Check if the Score of output_of_query3 is the same as output_of_query2\nQuery4: \"equals(value1='output_of_query2', value2='output_of_query4')\"",
    "how often was an encyclical sent in january?": "None",
    "what is the average of all 14 interchanges?": "None",
    "which nation heard the most total medals?": "None",
    "who was the performer on the last album released?": "## Target type: {performer}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the row with max row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Performer of output_of_query3\nQuery4: \"get_information(relation='Performer', head_entity='output_of_query3')\"",
    "the column next to artist": "None",
    "what is the most us$ mario an&#269;i&#263; has earned in the atp tour in one year?": "None",
    "what is the previous performer before the cheetah girls?": "## Target type: {performer}\n## Query:\nStep1: Find the entity named The Cheetah Girls\nQuery1: \"get_information(relation='Performer(s)', tail_entity='The Cheetah Girls')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Performer(s) of output_of_query4\nQuery5: \"get_information(relation='Performer(s)', head_entity='output_of_query4')\"",
    "what single title is listed on the french charts after \"who's that lady with my man\"?": "None",
    "does lafayette high school or benton high school have green and grey as their colors?": "None",
    "how many drivers earned no bonus for this race?": "None",
    "what is the month with the lowest average low in haifa?": "None",
    "how many kick off times are past 6:00 p.m.?": "None",
    "how many teams have at least a time of 4:00?": "None",
    "what was the only raced she placed in 33rd?": "None",
    "which of the four regions finished most often in the first round?": "## Target type: {region}\n## Query:\nStep1: Find all the regions\nQuery1: \"get_information(relation='Region')\"\nStep2: Find the count of regions in the first round\nQuery2: \"count(set='output_of_query1', condition=Finished=='First round')\"\nStep3: Find the region with the max count in the first round\nQuery3: \"find_most(set='output_of_query2')\"",
    "how combined defenses does yuji nagata have?": "## Target type: {number of combined defenses}\n## Query:\nStep1: Find the entity named Yuji Nagata\nQuery1: \"get_information(relation='Wrestler', tail_entity='Yuji Nagata')\"\nStep2: Find the combined defenses of output_of_query1\nQuery2: \"get_information(relation='Combined defenses', head_entity='output_of_query1')\"",
    "which is longer, fire or die 4?": "## Target type: {length}\n## Query:\nStep1: Find the entity named Fire\nQuery1: \"get_information(relation='Title', tail_entity='Fire')\"\nStep2: Find the length of output_of_query1\nQuery2: \"get_information(relation='Length', head_entity='output_of_query1')\"\nStep3: Find the entity named Die 4\nQuery3: \"get_information(relation='Title', tail_entity='Die 4')\"\nStep4: Find the length of output_of_query3\nQuery4: \"get_information(relation='Length', head_entity='output_of_query3')\"\nStep5: Compare the lengths of output_of_query2 and output_of_query4\nQuery5: \"compare_length(length1='output_of_query2', length2='output_of_query4')\"",
    "who was the winner immediately before ron ng?": "## Target type: {name}\n## Query:\nStep1: Find the entity named Ron Ng\nQuery1: \"get_information(relation='Name', tail_entity='Ron Ng')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "what is the difference in population between enping and heshan?": "## Target type: {difference in population}\n## Query:\nStep1: Find the entity named Enping\nQuery1: \"get_information(relation='Name', tail_entity='Enping')\"\nStep2: Find the population of output_of_query1\nQuery2: \"get_information(relation='Population (2010 Census)', head_entity='output_of_query1')\"\nStep3: Find the entity named Heshan\nQuery3: \"get_information(relation='Name', tail_entity='Heshan')\"\nStep4: Find the population of output_of_query3\nQuery4: \"get_information(relation='Population (2010 Census)', head_entity='output_of_query3')\"\nStep5: Calculate the absolute difference between output_of_query2 and output_of_query4\nQuery5: \"abs(subtraction='output_of_query2-output_of_query4')\"",
    "other than deesa, name a candidate that won by a margin of over 15,000.": "None",
    "which party finished last in the election?": "None",
    "how many albums has key produced after 2010?": "None",
    "how many albums did david d'or release with the hed arzi label?": "None",
    "how many albums did pearl django release in 1999?": "None",
    "previous to the tippeligaen, what was the league called?": "None",
    "which destination city became available the same year as edinburgh, uk?": "None",
    "how many managers total finished second place?": "None",
    "which month is the most humid?": "None",
    "which month is the best for someone who enjoys the rain?": "None",
    "ravi sandrian and s. raj were both winners from what country?": "None",
    "which city has the smallest area?": "## Target type: {city}\n## Query:\nStep1: Find the entity with the relation of Area (km2)\nQuery1: \"get_information(relation='Area (km2)')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Area\nQuery3: \"get_information(relation='Area (km2)', tail_entity='output_of_query2')\"\nStep4: Find the city of output_of_query3\nQuery4: \"get_information(relation='City', head_entity='output_of_query3')\"",
    "what township has the lowest population?": "## Target type: {township}\n## Query:\nStep1: Find the entity with the relation of Population\nQuery1: \"get_information(relation='Population')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Get the entity with the min Population\nQuery3: \"get_information(relation='Population', tail_entity='output_of_query2')\"\nStep4: Find the township of output_of_query3\nQuery4: \"get_information(relation='Township', head_entity='output_of_query3')\"",
    "other artist to end in the top two on the year-end chart besides psy": "None",
    "what was the most reason given in the notes column?": "None",
    "how many relegations did andrea costa imola undergo?": "## Target type: {number of relegations}\n## Query:\nStep1: Find the entity named Andrea Costa Imola\nQuery1: \"get_information(relation='Team', tail_entity='Andrea Costa Imola')\"\nStep2: Find the relegations of output_of_query1\nQuery2: \"get_information(relation='Relegations', head_entity='output_of_query1')\"",
    "niagara's regional police fleet consists of how many makes of vehicles?": "None",
    "how many more sales did elton john have than lou bega?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Elton John\nQuery1: \"get_information(relation='Artist', tail_entity='Elton John')\"\nStep2: Find the sales of output_of_query1\nQuery2: \"get_information(relation='Sales', head_entity='output_of_query1')\"\nStep3: Find the entity named Lou Bega\nQuery3: \"get_information(relation='Artist', tail_entity='Lou Bega')\"\nStep4: Find the sales of output_of_query3\nQuery4: \"get_information(relation='Sales', head_entity='output_of_query3')\"\nStep5: Calculate the difference between output_of_query2 and output_of_query4\nQuery5: \"calculate_difference(num1='output_of_query2', num2='output_of_query4')\"",
    "how many gold medals does poland have?": "## Target type: {number of gold medals}\n## Query:\nStep1: Find the entity named Poland\nQuery1: \"get_information(relation='Nation', tail_entity='Poland')\"\nStep2: Find the gold medals of output_of_query1\nQuery2: \"get_information(relation='Gold', head_entity='output_of_query1')\"",
    "which bowl game did the university of oregon ducks football team play in during the 1987 season?": "None",
    "in what state that is not texas did smu play in?": "None",
    "there were years where he had 0 goals but was year did he have the most goals?": "None",
    "how many years have no pending results?": "None",
    "who was the first character on abc to be hiv positive?": "## Target type: {'Character name'}\n## Query:\nStep1: Find the entity with the relation of Network is ABC\nQuery1: \"get_information(relation='Network', tail_entity='ABC')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the min output_of_query2\nQuery3: \"min(set='output_of_query2')\" \nStep4: Find the entity with the min row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Character name of output_of_query4\nQuery5: \"get_information(relation='Character name', head_entity='output_of_query4')\"",
    "what is the number of companies presented?": "None",
    "the species with the least height": "None",
    "which pylon is the least tall?": "## Target type: {pylon}\n## Query:\nStep1: Find all the Height values\nQuery1: \"get_information(relation='Height')\"\nStep2: Get the min output_of_query1\nQuery2: \"min(set='output_of_query1')\" \nStep3: Find the entity with the min Height\nQuery3: \"get_information(relation='Height', tail_entity='output_of_query2')\"\nStep4: Find the pylon of output_of_query3\nQuery4: \"get_information(relation='Name', head_entity='output_of_query3')\"",
    "which song came out fist?": "## Target type: {'Song'}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Find the min row_number\nQuery2: \"min(set='output_of_query1')\"\nStep3: Get the row with min row_number \nQuery3: \"get_information(relation='row_number', tail_entity='output_of_query2')\"\nStep4: Get the Song of output_of_query3\nQuery4: \"get_information(relation='Song', head_entity='output_of_query3')\"",
    "which capacitor has the same temperature as the nesccap electric double-layer capacitor?": "None",
    "which element was observed or predicted in 1771 by w.scheele?": "None",
    "what is the total number times panama was the opponent?": "## Target type: {number}\n## Query:\nStep1: Find the entity that is Panama\nQuery1: \"get_information(relation='Opponent', tail_entity='Panama')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who was the only listed candadian from british columbia?": "None",
    "which is the last african nation in the list?": "## Target type: {country}\n## Query:\nStep1: Find all the countries in the list\nQuery1: \"get_information(relation='Country')\"\nStep2: Find the max row_number\nQuery2: \"max(set='output_of_query1')\"\nStep3: Get the entity with max row_number\nQuery3: \"get_information(relation='Country', tail_entity='output_of_query2')\"\nStep4: Get the last African nation of output_of_query3\nQuery4: \"get_information(relation='Country', head_entity='output_of_query3')\"",
    "what material has the top or best thermal conductivity based on the information in the table?": "None",
    "what ethnicity is at the top?": "None",
    "what is the total number of wisconsin badgers on the american roster for women's ice hockey in the 2010 winter olympics?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Wisconsin Badgers in the 2010 Winter Olympics roster\nQuery1: \"get_information(relation='2009\u201310 team', tail_entity='Wisconsin Badgers')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which population had the most people in 1926?": "None",
    "how many attended the 18-apr-68 match?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of Date as 18-apr-68\nQuery1: \"get_information(relation='Date', tail_entity='18-Apr-68')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"",
    "what is the total number of ionizations of iron?": "## Target type: {number}\n## Query:\nStep1: Find the entity named iron\nQuery1: \"get_information(relation='name', tail_entity='iron')\"\nStep2: Find the total number of ionizations of output_of_query1\nQuery2: \"calculator(relation='number', tail_entity='output_of_query1', key='total')\"",
    "what is the total number of compounds that are monoclinic in symmetry?": "## Target type: {number}\n## Query:\nStep1: Find the entity with the relation of symmetry\nQuery1: \"get_information(relation='symmetry')\"\nStep2: Find the entities that have the value \"monoclinic\" in output_of_query1\nQuery2: \"get_information(relation='symmetry', value='monoclinic')\"\nStep3: Calculate the count of output_of_query2\nQuery3: \"count(set='output_of_query2')\"",
    "when did bedford score more, 15 february 2005 or 19 february 2005?": "None",
    "other than ccp bobcats, who has \"basic elements\" over 60?": "## Target type: {team}\n## Query:\nStep1: Find the entity named CCP Bobcats\nQuery1: \"get_information(relation='Team', tail_entity='CCP Bobcats')\"\nStep2: Find the basic elements score of output_of_query1\nQuery2: \"get_information(relation='Basic elements', head_entity='output_of_query1')\"\nStep3: Find the entities with basic elements score over 60\nQuery3: \"get_information(relation='Basic elements', tail_entity>'60')\"\nStep4: Get the set difference of output_of_query3 and output_of_query1\nQuery4: \"set_difference(set1='output_of_query3', set2='output_of_query1')\"",
    "what is the total number of interludes on the list?": "None",
    "what was the total number of delegates?": "## Target type: {number of delegates}\n## Query:\nStep1: Find all the row_number\nQuery1: \"get_information(relation='row_number')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "who the only player who went to georgetown?": "## Target type: {player}\n## Query:\nStep1: Find the entity with the relation of College, which is Georgetown\nQuery1: \"get_information(relation='College', tail_entity='Georgetown')\"\nStep2: Find the player of output_of_query1\nQuery2: \"get_information(relation='Player', head_entity='output_of_query1')\"\nStep3: Find the set difference of output_of_query2 and any other players who went to Georgetown\nQuery3: \"set_difference(set1='output_of_query2', set2='other_players_from_georgetown')\"",
    "how many games did newton score multiple times?": "None",
    "whats after october 29 and what is the result": "None",
    "was there more downloads in may or october?": "## Target type: {'Total Downloads'}\n## Query:\nStep1: Find the entity with the relation of Month as May\nQuery1: \"get_information(relation='Month', tail_entity='May')\"\nStep2: Find the Total Downloads of output_of_query1\nQuery2: \"get_information(relation='Total Downloads', head_entity='output_of_query1')\"\nStep3: Find the entity with the relation of Month as October\nQuery3: \"get_information(relation='Month', tail_entity='October')\"\nStep4: Find the Total Downloads of output_of_query3\nQuery4: \"get_information(relation='Total Downloads', head_entity='output_of_query3')\"\nStep5: Compare the Total Downloads of output_of_query2 and output_of_query4\nQuery5: \"compare(quantity1='output_of_query2', quantity2='output_of_query4', operator='>') == True\"",
    "what is the album listed after hold on, i'm coming?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity that is \"Hold On, I'm Coming\"\nQuery1: \"get_information(relation='Album', tail_entity='Hold On, I\\'m Coming')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the next_row of output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Find the entity with the row_number of output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "which album did she produce before good rain?": "## Target type: {'Album'}\n## Query:\nStep1: Find the entity that Album is \"Good Rain\"\nQuery1: \"get_information(relation='Album', tail_entity='Good Rain')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album of output_of_query4\nQuery5: \"get_information(relation='Album', head_entity='output_of_query4')\"",
    "what was the album released before blood and roses vol 2?": "## Target type: {album}\n## Query:\nStep1: Find the entity that Album/Single is Blood and Roses Vol 2\nQuery1: \"get_information(relation='Album/Single', tail_entity='Blood and Roses Vol 2')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the previous_row of output_of_query2\nQuery3: \"previous_row(set='output_of_query2')\"\nStep4: Find the row_number is output_of_query3\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Find the Album/Single of output_of_query4\nQuery5: \"get_information(relation='Album/Single', head_entity='output_of_query4')\"",
    "who is the top ranked runner of sweden?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity with the relation of Nationality is Sweden\nQuery1: \"get_information(relation='Nationality', tail_entity='Sweden')\"\nStep2: Find the row_number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the top ranked row_number\nQuery3: \"min(set='output_of_query2')\"\nStep4: Find the entity with the top ranked row_number\nQuery4: \"get_information(relation='row_number', tail_entity='output_of_query3')\"\nStep5: Get the Name of output_of_query4\nQuery5: \"get_information(relation='Name', head_entity='output_of_query4')\"",
    "how many times were new zealand the opposing team?": "## Target type: {number}\n## Query:\nStep1: Find the entity named New Zealand\nQuery1: \"get_information(relation='Opposing team', tail_entity='New Zealand')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "how many times was macau the opponent?": "## Target type: {number of times}\n## Query:\nStep1: Find the entity that is Macau\nQuery1: \"get_information(relation='Opponent', tail_entity='Macau')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "the first fbs opponent faced was whom?": "None",
    "what is the top state in the table?": "## Target type: {state}\n## Query:\nStep1: Find the top state in the table\nQuery1: \"get_information(relation='row_number', tail_entity='1')\"\nStep2: Get the state of output_of_query1\nQuery2: \"get_information(relation='State', head_entity='output_of_query1')\"",
    "which state has the top swimsuit amount?": "## Target type: {state}\n## Query:\nStep1: Find the entity with the relation of Swimsuit\nQuery1: \"get_information(relation='Swimsuit')\"\nStep2: Get the max output_of_query1\nQuery2: \"max(set='output_of_query1')\" \nStep3: Find the entity with the max swimsuit amount\nQuery3: \"get_information(relation='Swimsuit', tail_entity='output_of_query2')\"\nStep4: Get the state of output_of_query3\nQuery4: \"get_information(relation='State', head_entity='output_of_query3')\"",
    "which player had the same number of games started as william d. cochran?": "None",
    "who made their league debut earlier, hunt or franze?": "## Target type: {'Name'}\n## Query:\nStep1: Find the entity named Hunt\nQuery1: \"get_information(relation='Name', tail_entity='Hunt')\"\nStep2: Find the Rugby League Debut of output_of_query1\nQuery2: \"get_information(relation='Rugby League Debut', head_entity='output_of_query1')\"\nStep3: Find the entity named Franze\nQuery3: \"get_information(relation='Name', tail_entity='Franze')\"\nStep4: Find the Rugby League Debut of output_of_query3\nQuery4: \"get_information(relation='Rugby League Debut', head_entity='output_of_query3')\"\nStep5: Compare the Rugby League Debut of output_of_query2 and output_of_query4\nQuery5: \"compare(value1='output_of_query2', value2='output_of_query4')\"",
    "name two countries that the england women's rfu have played above thirty games against.": "None",
    "which was the only album to be produced under the kirkelig kulturverksted label?": "## Target type: {album}\n## Query:\nStep1: Find the entity named Kirkelig Kulturverksted\nQuery1: \"get_information(relation='Label', tail_entity='Kirkelig Kulturverksted')\"\nStep2: Find the album produced under output_of_query1\nQuery2: \"get_information(relation='Album', head_entity='output_of_query1')\"",
    "how many consecutive songs were by the album leaf?": "## Target type: {number}\n## Query:\nStep1: Find the entity named \"The Album Leaf\"\nQuery1: \"get_information(relation='Artist', tail_entity='The Album Leaf')\"\nStep2: Find the row number of output_of_query1\nQuery2: \"get_information(relation='row_number', head_entity='output_of_query1')\"\nStep3: Find the consecutive row numbers after output_of_query2\nQuery3: \"next_row(set='output_of_query2')\"\nStep4: Count the number of rows in output_of_query3\nQuery4: \"count(set='output_of_query3')\"",
    "how many themes are presented?": "## Target type: {number}\n## Query:\nStep1: Find all the themes presented\nQuery1: \"get_information(relation='Theme')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "which tournament was attended by more people, ucl on july 13th or supercup on july 17th?": "## Target type: {tournament}\n## Query:\nStep1: Find the entity that UCL on July 13th\nQuery1: \"get_information(relation='Tournament', tail_entity='UCL', key='Date', value='13 Jul')\"\nStep2: Find the Attendance of output_of_query1\nQuery2: \"get_information(relation='Attendance', head_entity='output_of_query1')\"\nStep3: Find the entity that Supercup on July 17th\nQuery3: \"get_information(relation='Tournament', tail_entity='Supercup', key='Date', value='17 Jul')\"\nStep4: Find the Attendance of output_of_query3\nQuery4: \"get_information(relation='Attendance', head_entity='output_of_query3')\"\nStep5: Find the tournament with larger Attendance\nQuery5: \"if(set1>'set2', output_of_query1, output_of_query3)\"",
    "how many fewer laps did carlos pace complete than jochen mass?": "## Target type: {number}\n## Query:\nStep1: Find the entity named Carlos Pace\nQuery1: \"get_information(relation='Driver', tail_entity='Carlos Pace')\"\nStep2: Find the laps completed by output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity named Jochen Mass\nQuery3: \"get_information(relation='Driver', tail_entity='Jochen Mass')\"\nStep4: Find the laps completed by output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Find the difference between output_of_query2 and output_of_query4\nQuery5: \"calculator(operation='subtract', operand1='output_of_query2', operand2='output_of_query4')\"",
    "who perfomed the most number of laps, marco simoncelli or hiroshi aoyama?": "## Target type: {rider}\n## Query:\nStep1: Find the entity named Marco Simoncelli\nQuery1: \"get_information(relation='Rider', tail_entity='Marco Simoncelli')\"\nStep2: Find the laps of output_of_query1\nQuery2: \"get_information(relation='Laps', head_entity='output_of_query1')\"\nStep3: Find the entity named Hiroshi Aoyama\nQuery3: \"get_information(relation='Rider', tail_entity='Hiroshi Aoyama')\"\nStep4: Find the laps of output_of_query3\nQuery4: \"get_information(relation='Laps', head_entity='output_of_query3')\"\nStep5: Compare the laps of output_of_query2 and output_of_query4\nQuery5: \"if(set1='output_of_query2' > set2='output_of_query4', 'output_of_query2', 'output_of_query4')\"",
    "which train number has its destination in kannur?": "## Target type: {Train No.}\n## Query:\nStep1: Find the entity with the relation of Destination is Kannur\nQuery1: \"get_information(relation='Destination', tail_entity='Kannur')\"\nStep2: Get the Train No. of output_of_query1\nQuery2: \"get_information(relation='Train No.', head_entity='output_of_query1')\"",
    "how many wrestlers had a time of 6:47?": "## Target type: {number}\n## Query:\nStep1: Find the wrestlers with a time of 6:47\nQuery1: \"get_information(relation='Time', tail_entity='6:47')\"\nStep2: Calculate the count of output_of_query1\nQuery2: \"count(set='output_of_query1')\"",
    "what was the last game to be attended by fewer than 30,000 people?": "None",
    "hinnigan and purdie were the only scorers against what opponent this team faced in september 1978?": "None",
    "for what title did mr. borgnine receive the most awards?": "## Target type: {'Title'}\n## Query:\nStep1: Find the entity that is Mr. Borgnine\nQuery1: \"get_information(relation='Title', tail_entity='Mr. Borgnine')\"\nStep2: Find the Title that appears most in the output_of_query1\nQuery2: \"get_information(relation='Title', tail_entity>='most')\"\nStep3: Find the Title of output_of_query2\nQuery3: \"get_information(relation='Title', head_entity='output_of_query2')\"",
    "which jockey rode his horse named major hitch?": "## Target type: {Jockey}\n## Query:\nStep1: Find the entity that Name is Major Hitch.\nQuery1: \"get_information(relation='Name', tail_entity='Major Hitch')\"\nStep2: Get the Jockey of output_of_query1\nQuery2: \"get_information(relation='Jockey', head_entity='output_of_query1')\""
}